; OM File Header - Saved 2011/11/09 17:30:47
; (6.050003 :patc (om-make-point 10 60) (om-make-point 0 0) (om-make-point 1280 752) "" 183 0 "2011/10/17 10:55:44" "2011/10/20 19:23:36")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "omif" (quote ((om-load-boxcall (quote bastype) "aux 10" (quote t) (quote nil) (om-make-point 205 420) (om-make-point 16 28) 0 "0" nil) (om-load-boxcall (quote bastype) "aux 9" (quote t) (quote nil) (om-make-point 180 420) (om-make-point 21 30) 0 "0" nil) (om-load-boxcall (quote genfun) "OM=" (quote om=) (quote ((om-load-inputfun (quote input-funbox) "a number" "NUM1" 0) (om-load-inputfun (quote input-funbox) "a number" "NUM2" 0))) (om-make-point 195 451) nil nil nil nil 1) (om-load-boxcall (quote genfun) "OMIF 4" (quote omif) (quote ((om-load-inputfun (quote input-funbox) "IF" "TEST" nil) (om-load-inputfun (quote input-funbox) "THEN" "ACTION" nil) (om-load-inputfun (quote input-funbox) "ELSE" "ELSE" nil))) (om-make-point 206 504) (om-make-point 80 57) nil nil nil 1) (om-load-boxcall (quote bastype) "aux 7" (quote t) (quote nil) (om-make-point 232 467) (om-make-point 31 30) (quote oui) "oui" nil) (om-load-boxcall (quote bastype) "aux 8" (quote t) (quote nil) (om-make-point 270 467) (om-make-point 35 30) (quote non) "non" nil) (om-load-boxcomment "comment" (om-make-point 245 61) (quote "nil sera évalué comme non, et tout le reste (t, nombre, etc.) sera pris comme true") "" (om-make-point 119 350) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 134 22) (quote "if    then   else") "" (om-make-point 267 211) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux 8" (quote t) (quote nil) (om-make-point 333 234) (om-make-point 35 30) (quote non) "non" nil) (om-load-boxcall (quote bastype) "aux 7" (quote t) (quote nil) (om-make-point 295 234) (om-make-point 31 30) (quote oui) "oui" nil) (om-load-boxcall (quote bastype) "aux 5" (quote t) (quote nil) (om-make-point 270 235) (om-make-point 18 30) (quote t) "t" nil) (om-load-boxcall (quote genfun) "OMIF 4" (quote omif) (quote ((om-load-inputfun (quote input-funbox) "IF" "TEST" nil) (om-load-inputfun (quote input-funbox) "THEN" "ACTION" nil) (om-load-inputfun (quote input-funbox) "ELSE" "ELSE" nil))) (om-make-point 269 271) (om-make-point 80 57) nil nil nil 1) (om-load-boxcall (quote lispfun) "OM-BEEP" (quote om-beep) (quote nil) (om-make-point 315 86) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux 6" (quote t) (quote nil) (om-make-point 270 97) (om-make-point 18 30) (quote t) "t" nil) (om-load-boxcall (quote genfun) "OMIF 3" (quote omif) (quote ((om-load-inputfun (quote input-funbox) "IF" "TEST" nil) (om-load-inputfun (quote input-funbox) "THEN" "ACTION" nil))) (om-make-point 269 133) (om-make-point 80 57) nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 75 30) (quote "OM => 45") "" (om-make-point 122 185) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 84 29) (quote "OM => nil") "" (om-make-point 124 320) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 124 235) (om-make-point 27 30) nil "nil" nil) (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 171 235) (om-make-point 28 30) 45 "45" nil) (om-load-boxcall (quote genfun) "OMIF 2" (quote omif) (quote ((om-load-inputfun (quote input-funbox) "IF" "TEST" nil) (om-load-inputfun (quote input-funbox) "THEN" "ACTION" nil))) (om-make-point 121 270) (om-make-point 80 57) nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 75 25) (quote "true ou nil") "" (om-make-point 32 97) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 169 97) (om-make-point 28 30) 45 "45" nil) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 120 97) (om-make-point 18 30) (quote t) "t" nil) (om-load-boxcomment "comment" (om-make-point 237 61) (quote "para visualizar a função da entrada, passar o mouse sobre ela com o cmd clicado.") "" (om-make-point 32 30) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote genfun) "OMIF" (quote omif) (quote ((om-load-inputfun (quote input-funbox) "IF" "TEST" nil) (om-load-inputfun (quote input-funbox) "THEN" "ACTION" nil))) (om-make-point 119 133) (om-make-point 80 57) nil nil nil 1))) (quote ((1 0 2 0 nil 0) (0 0 2 1 nil 0) (2 0 3 0 nil 0) (4 0 3 1 nil 0) (5 0 3 2 nil 0) (10 0 11 0 nil 0) (9 0 11 1 nil 0) (8 0 11 2 nil 0) (13 0 14 0 nil 0) (12 0 14 1 nil 0) (17 0 19 0 nil 0) (18 0 19 1 nil 0) (22 0 24 0 nil 0) (21 0 24 1 nil 0))) nil 6.050003))
