; OM File Header - Saved 2011/11/09 17:30:47
; (6.050003 :patc (om-make-point 226 10) (om-make-point 0 0) (om-make-point 1280 752) "" 183 0 "2011/10/17 10:07:12" "2011/10/23 17:09:25")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "modes" (quote ((om-load-boxcomment "comment" (om-make-point 162 28) (quote "Retorna o objeto mesmo") "" (om-make-point 1180 778) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 323 86) (quote "OM => (#<omgenericfunction om-random 2305F662> #<omgenericfunction om-random 2305F662> #<omgenericfunction om-random 2305F662> #<omgenericfunction om-random 2305F662>)") "" (om-make-point 1179 835) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment 13" (om-make-point 707 19) (quote "-------------------------------------------------------------------------------------------------------------------------") "" (om-make-point 795 730) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux 25" (quote t) (quote nil) (om-make-point 1093 756) (om-make-point 35 30) 100 "100" nil) (om-load-boxcall (quote bastype) "aux 24" (quote t) (quote nil) (om-make-point 1048 757) (om-make-point 21 30) 0 "0" nil) (om-load-boxcall (quote genfun) "OM-RANDOM 4" (quote om-random) (quote ((om-load-inputfun (quote input-funbox) "min" "LOW" 0) (om-load-inputfun (quote input-funbox) "max" "HIGH" 1))) (om-make-point 1041 787) nil nil "o" nil 1) (om-load-boxcall (quote genfun) "X-APPEND 8" (quote x-append) (quote ((om-load-inputfun (quote input-funbox) "first element" "L1?" nil) (om-load-inputfun (quote input-funbox) "second element" "L2?" nil) (om-load-inputfun (quote input-funbox) "additional elements" "LST?" nil) (om-load-inputfun (quote input-funbox) "additional elements" "LST?" nil))) (om-make-point 1004 874) (om-make-point 152 59) nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 498 63) (quote "OM => (#<anonymous interpreted function 200A6062> #<anonymous interpreted function 200A5A32> #<anonymous interpreted function 200A5E52> #<anonymous interpreted function 200A5A4A>)$") "" (om-make-point 894 672) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 195 72) (quote "Retorna a função (o algoritmo que ele utiliza para operar a informação (lisp))") "" (om-make-point 1165 527) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux 23" (quote t) (quote nil) (om-make-point 1086 495) (om-make-point 35 30) 100 "100" nil) (om-load-boxcall (quote bastype) "aux 22" (quote t) (quote nil) (om-make-point 1041 496) (om-make-point 21 30) 0 "0" nil) (om-load-boxcall (quote genfun) "OM-RANDOM 3" (quote om-random) (quote ((om-load-inputfun (quote input-funbox) "min" "LOW" 0) (om-load-inputfun (quote input-funbox) "max" "HIGH" 1))) (om-make-point 1034 526) nil nil "l" nil 1) (om-load-boxcall (quote genfun) "X-APPEND 7" (quote x-append) (quote ((om-load-inputfun (quote input-funbox) "first element" "L1?" nil) (om-load-inputfun (quote input-funbox) "second element" "L2?" nil) (om-load-inputfun (quote input-funbox) "additional elements" "LST?" nil) (om-load-inputfun (quote input-funbox) "additional elements" "LST?" nil))) (om-make-point 997 613) (om-make-point 152 59) nil nil nil 1) (om-load-boxcomment "comment 12" (om-make-point 707 19) (quote "-------------------------------------------------------------------------------------------------------------------------") "" (om-make-point 790 464) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment 11" (om-make-point 196 92) (quote "Para que ele cuspa o mesmo resultado em todas as saídas por uma só vez, passer au mode 1 (shift + clicar sobre o x do objeto locked)") "" (om-make-point 1168 294) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment 10" (om-make-point 146 56) (quote "OM => (94 94 94 94)$OM => (40 40 40 40)$OM => (30 30 30 30)") "" (om-make-point 1012 416) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux 21" (quote t) (quote nil) (om-make-point 1095 241) (om-make-point 35 30) 100 "100" nil) (om-load-boxcall (quote bastype) "aux 20" (quote t) (quote nil) (om-make-point 1050 242) (om-make-point 21 30) 0 "0" nil) (om-load-boxcall (quote genfun) "OM-RANDOM 2" (quote om-random) (quote ((om-load-inputfun (quote input-funbox) "min" "LOW" 0) (om-load-inputfun (quote input-funbox) "max" "HIGH" 1))) (om-make-point 1043 272) nil nil "&" nil 1) (om-load-boxcall (quote genfun) "X-APPEND 6" (quote x-append) (quote ((om-load-inputfun (quote input-funbox) "first element" "L1?" nil) (om-load-inputfun (quote input-funbox) "second element" "L2?" nil) (om-load-inputfun (quote input-funbox) "additional elements" "LST?" nil) (om-load-inputfun (quote input-funbox) "additional elements" "LST?" nil))) (om-make-point 1006 359) (om-make-point 152 59) nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 146 29) (quote "OM => (12 12 12 12)") "" (om-make-point 1007 193) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 188 87) (quote "Para que ele cuspa o mesmo resultado em todas as saídas para sempre, passer au mode locked x (appuyer sur l'objet + 'b')") "" (om-make-point 1166 49) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment 9" (om-make-point 707 19) (quote "-------------------------------------------------------------------------------------------------------------------------") "" (om-make-point 788 212) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux 19" (quote t) (quote nil) (om-make-point 1090 18) (om-make-point 35 30) 100 "100" nil) (om-load-boxcall (quote bastype) "aux 18" (quote t) (quote nil) (om-make-point 1045 19) (om-make-point 21 30) 0 "0" nil) (om-load-boxcall (quote genfun) "OM-RANDOM" (quote om-random) (quote ((om-load-inputfun (quote input-funbox) "min" "LOW" 0) (om-load-inputfun (quote input-funbox) "max" "HIGH" 1))) (om-make-point 1038 49) nil nil "x" nil 1) (om-load-boxcall (quote genfun) "X-APPEND 5" (quote x-append) (quote ((om-load-inputfun (quote input-funbox) "first element" "L1?" nil) (om-load-inputfun (quote input-funbox) "second element" "L2?" nil) (om-load-inputfun (quote input-funbox) "additional elements" "LST?" nil) (om-load-inputfun (quote input-funbox) "additional elements" "LST?" nil))) (om-make-point 1001 136) (om-make-point 152 59) nil nil nil 1) (om-load-boxcomment "comment 8" (om-make-point 101 27) (quote "OM => (4 5)") "" (om-make-point 341 149) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment 7" (om-make-point 101 27) (quote "OM => (4 5)") "" (om-make-point 190 149) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 110 29) (quote "OM => (a b c d)") "" (om-make-point 276 646) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux 17" (quote t) (quote nil) (om-make-point 394 495) (om-make-point 21 30) (quote d) "d" nil) (om-load-boxcall (quote bastype) "aux 16" (quote t) (quote nil) (om-make-point 352 496) (om-make-point 20 30) (quote c) "c" nil) (om-load-boxcall (quote bastype) "aux 15" (quote t) (quote nil) (om-make-point 311 495) (om-make-point 21 30) (quote b) "b" nil) (om-load-boxcall (quote bastype) "aux 14" (quote t) (quote nil) (om-make-point 273 495) (om-make-point 21 30) (quote a) "a" nil) (om-load-boxcall (quote lispfun) "PRINT 4" (quote print) (quote ((om-load-inputfun (quote input-funbox) "SOMETHING" "SOMETHING" nil))) (om-make-point 381 525) nil nil nil nil 1) (om-load-boxcall (quote lispfun) "PRINT 3" (quote print) (quote ((om-load-inputfun (quote input-funbox) "SOMETHING" "SOMETHING" nil))) (om-make-point 340 526) nil nil nil nil 1) (om-load-boxcall (quote lispfun) "PRINT 2" (quote print) (quote ((om-load-inputfun (quote input-funbox) "SOMETHING" "SOMETHING" nil))) (om-make-point 298 525) nil nil nil nil 1) (om-load-boxcall (quote lispfun) "PRINT" (quote print) (quote ((om-load-inputfun (quote input-funbox) "SOMETHING" "SOMETHING" nil))) (om-make-point 260 525) nil nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 153 59) (quote "l'évaluation des objets se fait de la gauche vers la droite.") "" (om-make-point 423 582) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote genfun) "X-APPEND 4" (quote x-append) (quote ((om-load-inputfun (quote input-funbox) "first element" "L1?" nil) (om-load-inputfun (quote input-funbox) "second element" "L2?" nil) (om-load-inputfun (quote input-funbox) "additional elements" "LST?" nil) (om-load-inputfun (quote input-funbox) "additional elements" "LST?" nil))) (om-make-point 257 586) (om-make-point 152 59) nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 119 27) (quote "OM => (4 5 nil)") "" (om-make-point 362 299) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment 6" (om-make-point 101 27) (quote "OM => (4 5)") "" (om-make-point 212 299) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment 5" (om-make-point 707 19) (quote "-------------------------------------------------------------------------------------------------------------------------") "" (om-make-point 48 463) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment 4" (om-make-point 134 27) (quote "OM => (4 (a b c d)) ") "" (om-make-point 375 436) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 154 26) (quote "OM => (4 a b c d)") "" (om-make-point 193 434) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote lispfun) "LIST 3" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 378 393) (om-make-point 69 43) nil nil nil 1) (om-load-boxcall (quote genfun) "X-APPEND 3" (quote x-append) (quote ((om-load-inputfun (quote input-funbox) "first element" "L1?" nil) (om-load-inputfun (quote input-funbox) "second element" "L2?" nil))) (om-make-point 199 377) (om-make-point 105 59) nil nil nil 1) (om-load-boxcall (quote bastype) "aux 13" (quote t) (quote nil) (om-make-point 441 359) (om-make-point 63 30) (list (quote a) (quote b) (quote c) (quote d)) "(a b c d)" nil) (om-load-boxcall (quote bastype) "aux 12" (quote t) (quote nil) (om-make-point 365 357) (om-make-point 21 30) 4 "4" nil) (om-load-boxcall (quote bastype) "aux 11" (quote t) (quote nil) (om-make-point 202 348) (om-make-point 21 30) 4 "4" nil) (om-load-boxcall (quote bastype) "aux 10" (quote t) (quote nil) (om-make-point 264 348) (om-make-point 63 30) (list (quote a) (quote b) (quote c) (quote d)) "(a b c d)" nil) (om-load-boxcomment "comment 3" (om-make-point 707 19) (quote "-------------------------------------------------------------------------------------------------------------------------") "" (om-make-point 49 317) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment 2" (om-make-point 100 68) (quote "ne prend pas en compte la troisième sortie") "" (om-make-point 99 233) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux 9" (quote t) (quote nil) (om-make-point 427 229) (om-make-point 27 30) nil "nil" nil) (om-load-boxcomment "comment" (om-make-point 707 19) (quote "-------------------------------------------------------------------------------------------------------------------------") "" (om-make-point 48 171) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux 8" (quote t) (quote nil) (om-make-point 394 228) (om-make-point 21 30) 5 "5" nil) (om-load-boxcall (quote bastype) "aux 7" (quote t) (quote nil) (om-make-point 364 228) (om-make-point 21 30) 4 "4" nil) (om-load-boxcall (quote lispfun) "LIST 2" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 380 259) (om-make-point 69 43) nil nil nil 1) (om-load-boxcall (quote bastype) "aux 6" (quote t) (quote nil) (om-make-point 204 214) (om-make-point 21 30) 4 "4" nil) (om-load-boxcall (quote bastype) "aux 5" (quote t) (quote nil) (om-make-point 240 213) (om-make-point 21 30) 5 "5" nil) (om-load-boxcall (quote genfun) "X-APPEND 2" (quote x-append) (quote ((om-load-inputfun (quote input-funbox) "first element" "L1?" nil) (om-load-inputfun (quote input-funbox) "second element" "L2?" nil) (om-load-inputfun (quote input-funbox) "additional elements" "LST?" nil))) (om-make-point 201 243) (om-make-point 105 59) nil nil nil 1) (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 397 79) (om-make-point 21 30) 5 "5" nil) (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 367 79) (om-make-point 21 30) 4 "4" nil) (om-load-boxcomment "comment" (om-make-point 261 103) (quote "selectionner l'objet, appuyer sur alt et sur la flèche à droite pour créer des entrées, pour les enlever, la même chose avec la flèche gauche ou selectionner l'objet et appuyer sur > ou <") "" (om-make-point 429 66) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote lispfun) "LIST" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 383 109) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 249 64) (om-make-point 21 30) 5 "5" nil) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 213 65) (om-make-point 21 30) 4 "4" nil) (om-load-boxcomment "comment" (om-make-point 100 60) (quote "constructeur de listes") "" (om-make-point 106 113) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote genfun) "X-APPEND" (quote x-append) (quote ((om-load-inputfun (quote input-funbox) "first element" "L1?" nil) (om-load-inputfun (quote input-funbox) "second element" "L2?" nil))) (om-make-point 210 94) nil nil nil nil 1))) (quote ((4 0 5 0 nil 0) (3 0 5 1 nil 0) (5 0 6 0 nil 0) (5 0 6 1 nil 0) (5 0 6 2 nil 0) (5 0 6 3 nil 0) (10 0 11 0 nil 0) (9 0 11 1 nil 0) (11 0 12 0 nil 0) (11 0 12 1 nil 0) (11 0 12 2 nil 0) (11 0 12 3 nil 0) (17 0 18 0 nil 0) (16 0 18 1 nil 0) (18 0 19 0 nil 0) (18 0 19 1 nil 0) (18 0 19 2 nil 0) (18 0 19 3 nil 0) (24 0 25 0 nil 0) (23 0 25 1 nil 0) (25 0 26 0 nil 0) (25 0 26 1 nil 0) (25 0 26 2 nil 0) (25 0 26 3 nil 0) (30 0 34 0 nil 0) (31 0 35 0 nil 0) (32 0 36 0 nil 0) (33 0 37 0 nil 0) (37 0 39 0 nil 0) (36 0 39 1 nil 0) (35 0 39 2 nil 0) (34 0 39 3 nil 0) (48 0 45 0 nil 0) (47 0 45 1 nil 0) (49 0 46 0 nil 0) (50 0 46 1 nil 0) (56 0 57 0 nil 0) (55 0 57 1 nil 0) (53 0 57 2 nil 0) (58 0 60 0 nil 0) (59 0 60 1 nil 0) (62 0 64 0 nil 0) (61 0 64 1 nil 0) (66 0 68 0 nil 0) (65 0 68 1 nil 0))) nil 6.050003))
