; OM File Header - Saved 2011/11/09 17:30:47
; (6.050003 :patc (om-make-point 97 299) (om-make-point 504 50) (om-make-point 562 702) "" 183 0 "2011/10/13 15:55:11" "2011/10/13 17:24:35")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "om-technique" (quote ((om-load-boxcomment "comment 4" (om-make-point 296 30) (quote "repmus.ircam.fr/openmusic/home") nil (om-make-point 7 515) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 100 60) (quote "t=vrai$nil=faux") nil (om-make-point 453 397) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux 20" (quote t) (quote nil) (om-make-point 403 397) (om-make-point 21 30) 1 "1" nil) (om-load-boxcall (quote bastype) "aux 19" (quote t) (quote nil) (om-make-point 377 397) (om-make-point 21 30) 1 "1" nil) (om-load-boxcall (quote bastype) "aux 18" (quote t) (quote nil) (om-make-point 330 396) (om-make-point 21 30) 1 "1" nil) (om-load-boxcall (quote bastype) "aux 17" (quote t) (quote nil) (om-make-point 306 396) (om-make-point 21 30) 1 "1" nil) (om-load-boxcall (quote bastype) "aux 16" (quote t) (quote nil) (om-make-point 261 396) (om-make-point 21 30) 1 "1" nil) (om-load-boxcall (quote bastype) "aux 15" (quote t) (quote nil) (om-make-point 237 395) (om-make-point 21 30) 0 "0" nil) (om-load-boxcall (quote bastype) "aux 14" (quote t) (quote nil) (om-make-point 189 397) (om-make-point 21 30) 1 "1" nil) (om-load-boxcall (quote bastype) "aux 13" (quote t) (quote nil) (om-make-point 163 396) (om-make-point 21 30) 2 "2" nil) (om-load-boxcall (quote genfun) "OM>=" (quote om>=) (quote ((om-load-inputfun (quote input-funbox) "a number" "NUM1" 0) (om-load-inputfun (quote input-funbox) "a number" "NUM2" 1))) (om-make-point 314 426) nil nil nil nil 1) (om-load-boxcall (quote genfun) "OM<=" (quote om<=) (quote ((om-load-inputfun (quote input-funbox) "a number" "NUM1" 0) (om-load-inputfun (quote input-funbox) "a number" "NUM2" 1))) (om-make-point 391 427) nil nil nil nil 1) (om-load-boxcall (quote genfun) "OM<" (quote om<) (quote ((om-load-inputfun (quote input-funbox) "a number" "NUM1" 0) (om-load-inputfun (quote input-funbox) "a number" "NUM2" 1))) (om-make-point 251 426) nil nil nil nil 1) (om-load-boxcall (quote genfun) "OM>" (quote om>) (quote ((om-load-inputfun (quote input-funbox) "a number" "NUM1" 0) (om-load-inputfun (quote input-funbox) "a number" "NUM2" 1))) (om-make-point 179 427) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux 12" (quote t) (quote nil) (om-make-point 109 394) (om-make-point 21 30) 0 "0" nil) (om-load-boxcall (quote bastype) "aux 11" (quote t) (quote nil) (om-make-point 76 394) (om-make-point 21 30) 0 "0" nil) (om-load-boxcomment "comment 3" (om-make-point 350 31) (quote "om=") nil (om-make-point 85 365) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote genfun) "OM=" (quote om=) (quote ((om-load-inputfun (quote input-funbox) "a number" "NUM1" 0) (om-load-inputfun (quote input-funbox) "a number" "NUM2" 0))) (om-make-point 93 426) nil nil nil nil 1) (om-load-boxcomment "comment 2" (om-make-point 681 22) (quote "==========================================") nil (om-make-point 66 341) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 681 22) (quote "==========================================") nil (om-make-point 54 121) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux 10" (quote t) (quote nil) (om-make-point 323 254) (om-make-point 97 30) (list 1 2 3 4 5 6 7) "(1 2 3 4 5 6 7)" nil) (om-load-boxcall (quote bastype) "aux 9" (quote t) (quote nil) (om-make-point 246 254) (om-make-point 75 30) (list 1 2 3 4 5) "(1 2 3 4 5)" nil) (om-load-boxcall (quote genfun) "OM+ 6" (quote om+) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 272 286) (om-make-point 82 35) nil nil nil 1) (om-load-boxcall (quote bastype) "aux 8" (quote t) (quote nil) (om-make-point 153 254) (om-make-point 75 30) (list 1 2 3 4 5) "(1 2 3 4 5)" nil) (om-load-boxcall (quote bastype) "aux 7" (quote t) (quote nil) (om-make-point 69 254) (om-make-point 75 30) (list 1 2 3 4 5) "(1 2 3 4 5)" nil) (om-load-boxcall (quote genfun) "OM+ 5" (quote om+) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 103 286) (om-make-point 82 35) nil nil nil 1) (om-load-boxcall (quote bastype) "aux 6" (quote t) (quote nil) (om-make-point 454 164) (om-make-point 21 30) 4 "4" nil) (om-load-boxcall (quote bastype) "aux 5" (quote t) (quote nil) (om-make-point 374 163) (om-make-point 75 30) (list 1 2 3 4 5) "(1 2 3 4 5)" nil) (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 281 162) (om-make-point 75 30) (list 1 2 3 4 5) "(1 2 3 4 5)" nil) (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 252 163) (om-make-point 21 30) 4 "4" nil) (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 154 163) (om-make-point 21 30) 5 "5" nil) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 109 164) (om-make-point 21 30) 4 "4" nil) (om-load-boxcall (quote genfun) "OM+ 4" (quote om+) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 392 191) (om-make-point 77 35) nil nil nil 1) (om-load-boxcall (quote genfun) "OM+ 3" (quote om+) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 250 192) (om-make-point 98 35) nil nil nil 1) (om-load-boxcall (quote genfun) "OM+ 2" (quote om+) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 102 191) (om-make-point 82 35) nil nil nil 1) (om-load-boxcall (quote lispfun) "+" (quote +) (quote nil) (om-make-point 346 50) nil nil nil nil 1) (om-load-boxcall (quote lispfun) "/" (quote /) (quote ((om-load-inputfun (quote input-funbox) "NUM" "NUM" nil))) (om-make-point 437 51) nil nil nil nil 1) (om-load-boxcall (quote lispfun) "*" (quote *) (quote nil) (om-make-point 408 50) nil nil nil nil 1) (om-load-boxcall (quote lispfun) "-" (quote -) (quote ((om-load-inputfun (quote input-funbox) "NUM" "NUM" nil))) (om-make-point 379 51) nil nil nil nil 1) (om-load-boxcall (quote genfun) "OM/" (quote om/) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 1) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 1))) (om-make-point 275 58) nil nil nil nil 1) (om-load-boxcall (quote genfun) "OM-" (quote om-) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 206 59) nil nil nil nil 1) (om-load-boxcall (quote genfun) "OM+" (quote om+) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 134 59) nil nil nil nil 1) (om-load-boxcall (quote genfun) "OM*" (quote om*) (quote ((om-load-inputfun (quote input-funbox) "number or list" "ARG1" 0) (om-load-inputfun (quote input-funbox) "number or list" "ARG2" 0))) (om-make-point 68 60) nil nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 350 31) (quote "om*	       om+          om-            om/") nil (om-make-point 64 26) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (quote ((5 0 10 0 nil 0) (4 0 10 1 nil 0) (3 0 11 0 nil 0) (2 0 11 1 nil 0) (7 0 12 0 nil 0) (6 0 12 1 nil 0) (9 0 13 0 nil 0) (8 0 13 1 nil 0) (15 0 17 0 nil 0) (14 0 17 1 nil 0) (21 0 22 0 nil 0) (20 0 22 1 nil 0) (24 0 25 0 nil 0) (23 0 25 1 nil 0) (27 0 32 0 nil 0) (26 0 32 1 nil 0) (29 0 33 0 nil 0) (28 0 33 1 nil 0) (31 0 34 0 nil 0) (30 0 34 1 nil 0))) nil 6.050003))
