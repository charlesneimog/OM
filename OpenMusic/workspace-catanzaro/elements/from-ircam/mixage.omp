; OM File Header - Saved 2018/06/05 0:53:29
; (6.130002 :patc (om-make-point 145 244) (om-make-point 780 150) (om-make-point 500 400) "" 183 0 "2011/10/31 11:09:31" "2011/10/31 12:34:48")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "mixage" (quote ((om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 155 42) (om-make-point 21 30) 3 "3" nil) (om-load-boxcomment "comment 2" (om-make-point 130 27) (quote "audio-mix-console") nil (om-make-point 285 13) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-editor-box1 "AUDIO-MIX-CONSOLE" (quote audio-mix-console) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "number of tracks in the console" "nbtracks" 1))) (om-make-point 299 75) (om-make-point 65 70) (let ((rep (make-instance (quote audio-mix-console) :nbtracks (quote 1)))) (setf (channels-ctrl rep) (list (if (find-class (quote audio-channel-ctrl) nil) (make-instance (quote audio-channel-ctrl) :track 1 :pan-ctrl 0 :vol-ctrl 100 :from-file t)))) rep) nil nil (pairlis (quote (palette-mode scale show-stems obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list 0 nil (quote t) 1 0 (om-make-point 400 20) (om-make-point 80 250) 0 1000 nil 1 (quote :midishare) 0 nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 2)) nil nil nil nil) (om-load-boxcomment "comment" (om-make-point 130 27) (quote "midi-mix-console") nil (om-make-point 109 11) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-editor-box1 "MIDI-MIX-CONSOLE" (quote midi-mix-console) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "output port number" "midiport" 0) (om-load-inputfun (quote input-funbox) "number of tracks" "nbtracks" 1))) (om-make-point 113 75) (om-make-point 65 70) (let ((rep (make-instance (quote midi-mix-console) :midiport 0 :nbtracks 3))) (setf (channels-ctrl rep) (list (if (find-class (quote channel-ctrl) nil) (make-instance (quote channel-ctrl) :midiport 0 :midichannel 1 :program 1 :pan-ctrl 64 :control1-num 1 :control2-num 2 :control1-val 0 :control2-val 0 :vol-ctrl 100 :pitch-ctrl 64 :from-file t)) (if (find-class (quote channel-ctrl) nil) (make-instance (quote channel-ctrl) :midiport 0 :midichannel 2 :program 2 :pan-ctrl 64 :control1-num 1 :control2-num 2 :control1-val 0 :control2-val 0 :vol-ctrl 100 :pitch-ctrl 64 :from-file t)) (if (find-class (quote channel-ctrl) nil) (make-instance (quote channel-ctrl) :midiport 0 :midichannel 3 :program 3 :pan-ctrl 64 :control1-num 1 :control2-num 2 :control1-val 0 :control2-val 0 :vol-ctrl 100 :pitch-ctrl 64 :from-file t)))) (setf (miditrack rep) (quote 0)) rep) "x" nil (pairlis (quote (scale show-stems mode grillestep notechancolor? cmnpref obj-mode palette-mode zoom player inport outport deltapict winpos winsize)) (list nil (quote t) 0 1000 nil (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) 0 0 1 (quote :midishare) 0 0 (om-make-point 0 0) (om-make-point 183 315) (om-make-point 240 560))) nil nil nil nil))) (quote ((0 0 4 2 nil 0))) nil 6.050003))
