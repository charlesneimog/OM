; OM File Header - Saved 2020/12/19 23:35:45
; (6.070104 :patc (om-make-point 62 120) (om-make-point 1177 234) (om-make-point 602 561) "non documentation" 183 0 nil nil)
; End File Header
; External resources 
; (list (list (quote :sound) "#P\"../../in-files/africa.aiff\""))
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "05-sound-cut" (quote ((om-load-boxcall (quote lispfun) "GET-OM-SOUND-DATA" (quote get-om-sound-data) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 0 238) nil nil nil nil 1) (om-load-editor-box1 "" (quote sound) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "a track index for multichannel mixing (0 = no specific track)" "tracknum" 1) (om-load-inputfun (quote input-funbox) "a list of markers (s)" "markers" nil))) (om-make-point 121 464) (om-make-point 152 65) (let ((newobj nil)) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "") (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (scale palette-mode approx fontsize staff cmnpref deltapict outport inport zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode show-stems player)) (list nil 0 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) 0 0 1 nil 1000 0 (om-make-point 370 280) (om-make-point 55 22) 0 1 (quote t) (quote :midishare))) t nil nil nil) (om-load-boxcall (quote bastype) "aux2" (quote t) (quote nil) (om-make-point 240 290) (om-make-point 46 27) "cut.aiff" "\"cut.aiff\"" nil) (om-load-boxcall (quote genfun) "OUTFILE" (quote outfile) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "PATH" nil))) (om-make-point 233 319) nil nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 258 74) (quote "OUTFILE :$create a pathname with the input name and  the output-files directory specified in the Preferences") "" (om-make-point 293 302) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 145 55) (quote "SAVE-SOUND$save selection in a new sound file") "" (om-make-point 252 398) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote genfun) "SAVE-SOUND" (quote save-sound) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "FILENAME" nil))) (om-make-point 178 389) nil nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 172 43) (quote "begin and end time of the selection are stated in ms") "" (om-make-point 220 226) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote lispfun) "SECOND" (quote second) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 163 252) nil nil nil nil 1) (om-load-boxcall (quote lispfun) "FIRST" (quote first) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 135 252) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux1" (quote t) (quote nil) (om-make-point 166 176) (om-make-point 48 30) 1000 "1000" nil) (om-load-boxcall (quote genfun) "OM*" (quote om*) (quote ((om-load-inputfun (quote input-funbox) "first input" "SELF" 0) (om-load-inputfun (quote input-funbox) "second input" "NUM" 0))) (om-make-point 147 207) nil nil nil nil 1) (om-load-boxcall (quote genfun) "SOUND-CUT" (quote sound-cut) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "S" nil) (om-load-inputfun (quote input-funbox) "no documentation" "BEG" nil) (om-load-inputfun (quote input-funbox) "no documentation" "END" nil))) (om-make-point 99 306) (om-make-point 93 55) nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 210 51) (quote "- Algorithmically$use the SOUND-CUT box") "" (om-make-point 217 144) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 104 80) (om-make-point 148 33) (list 0.5 1.0 1.5 2.5 4.0) "(0.5 1.0 1.5 2.5 4.0)" nil) (om-load-boxcomment "comment" (om-make-point 239 72) (quote "- From the sound editor:$select an interval (double-click) between two markers and drag the selection into the patch") "" (om-make-point 283 63) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 57 27) (quote "SOUND") "" (om-make-point 15 127) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 199 30) (quote "Extract a part of the sound file") "" (om-make-point 282 17) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 113 30) (quote "Cut Sound") "" (om-make-point 176 15) nil (om-make-color 0 0 0) (om-make-font "Verdana" 14 :family "Verdana" :style (quote (:bold)) :mode (quote nil))) (om-load-editor-box1 "africa.aiff" (quote sound) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "a track index for multichannel mixing (0 = no specific track)" "tracknum" 1) (om-load-inputfun (quote input-funbox) "a list of markers (s)" "markers" nil))) (om-make-point 90 117) (om-make-point 88 63) (let ((newobj (let ((thesound (load-sound (om-make-pathname :directory (quote (:relative "in-files")) :device :unspecific :host :unspecific :name "africa" :type "aiff") 1))) (when thesound (setf (markers thesound) (quote (0.5 1.0 1.5 2.5 4.0)))) thesound))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "africa.aiff") (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (scale palette-mode approx fontsize staff cmnpref deltapict outport inport zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode show-stems player)) (list nil 0 2 24 (quote g) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) 0 0 1 nil 1000 0 (om-make-point 370 280) (om-make-point 40 10) 0 1 (quote t) (quote :midishare))) t nil nil nil))) (quote ((19 0 0 0 nil 0) (6 0 1 0 nil 0) (2 0 3 0 nil 0) (12 0 6 0 nil 0) (3 0 6 1 nil 0) (19 2 8 0 nil 0) (19 2 9 0 nil 0) (19 2 11 0 nil 0) (10 0 11 1 nil 0) (19 0 12 0 nil 0) (9 0 12 1 nil 0) (8 0 12 2 nil 0) (14 0 19 2 nil 0))) nil 6.070104))
