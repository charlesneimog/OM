; OM File Header - Saved 2017/05/31 0:44:08
; (6.120001 :patc (om-make-point 10 210) (om-make-point 328 23) (om-make-point 1179 708) "" 183 0 "2017/05/17 16:23:01" "2017/05/31 0:44:08")
; End File Header
; External resources 
; (list (list (quote :sound) "#P\"../../out-files/voix-6NV0033.aif-transposicao.aiff\"" "#P\"../../../installers-e-bibliotecas/libraries/OM-SuperVP 2.5/resources/sound/voix-6NV0033.aif\""))
(in-package :om)(load-lib-for (quote ("OM-SuperVP")))(setf *om-current-persistent* (om-load-patch1 "03_omsupervp_04" (quote ((let ((box (om-load-boxcomment "comment" (om-make-point 456 62) (quote "((0 0) (2 700) (4 -700) (7 0))") "" (om-make-point 379 64) nil (om-make-color 0 0 0) (om-make-font "Verdana" 24.0D0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 258 60) (om-make-point 41 30) 700 "700" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 9" (quote t) (quote nil) (om-make-point 656 358) (om-make-point 24 30) (quote t) "t" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 8" (quote t) (quote nil) (om-make-point 598 354) (om-make-point 24 30) (quote t) "t" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 7" (quote t) (quote nil) (om-make-point 433 356) (om-make-point 27 30) 8 "8" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 6" (quote t) (quote nil) (om-make-point 330 332) (om-make-point 48 30) 4096 "4096" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 5" (quote t) (quote nil) (om-make-point 263 360) (om-make-point 33 30) nil "nil" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 216 358) (om-make-point 33 30) nil "nil" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 250 214) (om-make-point 34 30) 40 "40" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 128 173) (om-make-point 186 30) (list (list 0 0) (list 2 700) (list 4 -700) (list 7 0)) "((0 0) (2 700) (4 -700) (7 0))" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "SUPERVP-TRANSPOSITION" (quote supervp-transposition) (quote ((om-load-inputfun (quote input-funbox) "" "SELF" 0) (om-load-inputfunmenu1 (quote input-funmenu) "" "PRESERVE-ENVELOPPE" (quote t) (list (list "Preserve Enveloppe On" (quote t)) (list "Preserve Enveloppe Off" nil))) (om-load-inputfunmenu1 (quote input-funmenu) "" "ENVELOPPE-TYPE" (quote t) (list (list "True Enveloppe" (quote t)) (list "LPC Enveloppe" nil))) (om-load-inputfun (quote input-funbox) "" "FILTER-ORDER" 70))) (om-make-point 131 250) (om-make-point 150 83.0) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "voix-6NV0033.aif-transposicao.aiff" (quote sound) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "a track index for multichannel mixing (0 = no specific track)" "tracknum" 0) (om-load-inputfun (quote input-funbox) "a list of markers (s)" "markers" nil))) (om-make-point 358 552) (om-make-point 297 162) (let ((newobj (let ((thesound (load-sound (om-make-pathname :directory (quote (:relative "out-files")) :device :unspecific :host :unspecific :name "voix-6NV0033.aif-transposicao" :type "aiff") 0 1.0 0))) (when thesound (setf (markers thesound) (quote nil))) thesound))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "voix-6NV0033.aif-transposicao.aiff") (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (scale show-stems notechancolor? cmnpref obj-mode deltapict show-spectrum winpos winsize mode grillestep zoom player inport outport)) (list nil (quote t) nil (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) 0 (om-make-point 0 0) nil (om-make-point 400 20) (om-make-point 370 280) 0 nil 1 (quote :om-audio) nil nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 845 177) (om-make-point 126 30) "-transposicao.aiff" "\"-transposicao.aiff\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "GET-NAME" (quote get-name) (quote ((om-load-inputfun (quote input-funbox) "SELF" "SELF" nil))) (om-make-point 749 169) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "STRING+" (quote string+) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 746 241) (om-make-point 184 47.0) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "SUPERVP-PROCESSING" (quote supervp-processing) (quote ((om-load-inputfun (quote input-funbox) "" "SRCPATH" nil) (om-load-inputfun (quote input-funbox) "" "PROCESSINGS" "") (om-load-inputfun (quote input-funbox) "" "BEGIN" nil) (om-load-inputfun (quote input-funbox) "" "END" nil) (om-load-inputfun (quote input-funbox) "" "WINDOWSIZE" 4096) (om-load-inputfun (quote input-funbox) "" "FFTSIZE" 4096) (om-load-inputfunmenu1 (quote input-funmenu) "" "WINDOWSTEP-OVERSAMP" 8 (list (list "1/4" 4) (list "1/8" 8) (list "1/16" 16) (list "1/32" 32))) (om-load-inputfunmenu1 (quote input-funmenu) "" "WINDOW-TYPE" "hanning" (list (list "Blackman" "blackman") (list "Hanning" "hanning") (list "Hamming" "hamming"))) (om-load-inputfunmenu1 (quote input-funmenu) "" "SHAPE-INVARIANT" (quote t) (list (list "Shape Invariant On" (quote t)) (list "Shape Invariant Off" nil))) (om-load-inputfun (quote input-funbox) "" "PRESERVE-TRANSIENT" (quote t)) (om-load-inputfunmenu1 (quote input-funmenu) "" "NORMALIZE" nil (list (list "Normalize On" (quote t)) (list "Normalize Off" nil))) (om-load-inputfun (quote input-funbox) "" "OUTFILE" "out.aiff"))) (om-make-point 59 398) (om-make-point 719 83.0) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 546 69) (quote "supervp-processing") "" (om-make-point 558 493) nil (om-make-color 0 0 0) (om-make-font "Verdana" 24.0D0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "voix-6NV0033.aif" (quote sound) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "a track index for multichannel mixing (0 = no specific track)" "tracknum" 0) (om-load-inputfun (quote input-funbox) "a list of markers (s)" "markers" nil))) (om-make-point 65 41) (om-make-point 154 89) (let ((newobj (let ((thesound (load-sound (om-make-pathname :directory (quote (:absolute "Users" "tatianacatanzaro" "Documents" "UnB-aulas" "OpenMusic" "installers-e-bibliotecas" "libraries" "OM-SuperVP 2.5" "resources" "sound")) :device nil :host nil :name "voix-6NV0033" :type "aif") 0 1.0 0))) (when thesound (setf (markers thesound) (quote nil))) thesound))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "voix-6NV0033.aif") (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (scale show-stems notechancolor? cmnpref obj-mode deltapict show-spectrum winpos winsize mode grillestep zoom player inport outport)) (list nil (quote t) nil (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) 0 (om-make-point 0 0) nil (om-make-point 212 244) (om-make-point 959 340) 0 nil 1 (quote :om-audio) nil nil)) t nil nil t))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 324 73) (quote "Supervp-transposition") "" (om-make-point 287 2) nil (om-make-color 0 0 0) (om-make-font "Verdana" 24.0D0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((9 0 10 0 nil 0) (8 0 10 3 nil 0) (15 0 11 0 nil 0) (17 0 13 0 nil 0) (13 0 14 0 nil 0) (12 0 14 1 nil 0) (17 0 15 0 nil 0) (10 0 15 1 nil 0) (7 0 15 2 nil 0) (6 0 15 3 nil 0) (5 0 15 4 nil 0) (5 0 15 5 nil 0) (4 0 15 6 nil 0) (3 0 15 9 nil 0) (2 0 15 10 nil 0) (14 0 15 11 nil 0))) nil 6.120001))
