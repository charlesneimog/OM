; OM File Header - Saved 2020/12/05 20:27:01
; (6.120003 :patc (om-make-point 155 584) (om-make-point 954 454) (om-make-point 712 648) "" 183 0 nil "2020/12/05 20:27:01")
; End File Header
(in-package :om)(load-lib-for (quote ("OMCollider")))(setf *om-current-persistent* (om-load-patch1 "tut.3 synthdef" (quote ((let ((box (om-load-boxcall (quote genfun) "LFNOISE1_AR" (quote omsc::lfnoise1_ar) (quote ((om-load-inputfun (quote input-funbox) "" "FREQ" 6) (om-load-inputfun (quote input-funbox) "" "MUL" 200) (om-load-inputfun (quote input-funbox) "" "ADD" 1000))) (om-make-point 448 73) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "SINOSC_AR" (quote omsc::sinosc_ar) (quote ((om-load-inputfun (quote input-funbox) "" "FREQ" 440) (om-load-inputfun (quote input-funbox) "" "PHASE" 0) (om-load-inputfun (quote input-funbox) "" "MUL" 0.1) (om-load-inputfun (quote input-funbox) "" "ADD" 0))) (om-make-point 328 104) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OUT" (quote omsc::out) (quote ((om-load-inputfun (quote input-funbox) "" "BUS" 0) (om-load-inputfun (quote input-funbox) "" "IN" 0))) (om-make-point 285 233) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 3" (quote list) (quote nil) (om-make-point 127 369) (om-make-point 47 28) "prova" "\"prova\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "SYNTHDEF" (quote omsc::synthdef) (quote ((om-load-inputfun (quote input-funbox) "" "SYNTHNAME" nil) (om-load-inputfun (quote input-funbox) "" "IN" nil))) (om-make-point 292 372) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 2" (quote list) (quote nil) (om-make-point 92 87) (om-make-point 35 28) (list 0 1) "(0 1)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ARRAY-SC 2" (quote omsc::array-sc) (quote ((om-load-inputfun (quote input-funbox) "" "IN" nil))) (om-make-point 62 135) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 435 459) (om-make-point 78 30) "test.scd" "\"\\test.scd\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MAKE-SCD" (quote omsc::make-scd) (quote ((om-load-inputfun (quote input-funbox) "" "DATA" nil) (om-load-inputfun (quote input-funbox) "" "FILENAME" nil))) (om-make-point 311 507) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((0 0 1 0 nil 0) (6 0 2 0 nil 0) (1 0 2 1 nil 0) (3 0 4 0 nil 0) (2 0 4 1 nil 0) (5 0 6 0 nil 0) (4 0 8 0 nil 0) (7 0 8 1 nil 0))) nil 6.120003))
