; OM File Header - Saved 2020/12/05 20:27:01
; (6.120003 :patc (om-make-point 198 445) (om-make-point 534 169) (om-make-point 847 899) "" 183 0 nil "2020/12/05 20:27:01")
; End File Header
(in-package :om)(load-lib-for (quote ("OMCollider")))(setf *om-current-persistent* (om-load-patch1 "membrane-exagon" (quote ((let ((box (om-load-boxcall (quote genfun) "SYNTHESIZER" (quote omsc::synthesizer) (quote ((om-load-inputfun (quote input-funbox) "" "DATA" nil))) (om-make-point 351 763) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MEMBRANE-HEXAGON" (quote omsc::membrane-hexagon) (quote ((om-load-inputfun (quote input-funbox) "" "IN" 0) (om-load-inputfun (quote input-funbox) "" "TENSION" 0.05) (om-load-inputfun (quote input-funbox) "" "LOSS" 0.99) (om-load-inputfun (quote input-funbox) "" "MUL" 1) (om-load-inputfun (quote input-funbox) "" "ADD" 0))) (om-make-point 412 438) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 89 29) (quote "excitation") "" (om-make-point 467 185) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "WHITENOISE_AR" (quote omsc::whitenoise_ar) (quote ((om-load-inputfun (quote input-funbox) "" "MUL" 0.8) (om-load-inputfun (quote input-funbox) "" "ADD" (list 0)))) (om-make-point 458 223) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 195 79) (quote "Trigger with Mouse Button") "" (om-make-point 617 39) nil (om-make-color 0 0 0) (om-make-font "Verdana" 14.0D0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 124 24) (quote "timescales") "" (om-make-point 156 26) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 4" (quote list) (quote nil) (om-make-point 182 59) (om-make-point 38 30) 0.1 "0.1" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ENV-PERC" (quote omsc::env-perc) (quote ((om-load-inputfun (quote input-funbox) "" "ATTACK" 0.01) (om-load-inputfun (quote input-funbox) "" "RELEASE" 1) (om-load-inputfun (quote input-funbox) "" "LEVEL" 0.1) (om-load-inputfun (quote input-funbox) "" "CURVE" -4))) (om-make-point 273 120) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "GUI" (quote omsc::gui) (quote ((om-load-inputfun (quote input-funbox) "" "IN" nil))) (om-make-point 208 721) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ENVGEN" (quote omsc::envgen) (quote ((om-load-inputfun (quote input-funbox) "" "ENVELOPE" nil) (om-load-inputfun (quote input-funbox) "" "GATE" 0.1) (om-load-inputfun (quote input-funbox) "" "LEVELSCALE" 1) (om-load-inputfun (quote input-funbox) "" "LEVELBIAS" 0) (om-load-inputfun (quote input-funbox) "" "TIMESCALE" 0.1) (om-load-inputfun (quote input-funbox) "" "DONEACTION" 0))) (om-make-point 165 111) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "A*B" (quote omsc::a*b) (quote ((om-load-inputfun (quote input-funbox) "" "A" nil) (om-load-inputfun (quote input-funbox) "" "B" nil))) (om-make-point 144 245) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MOUSEBUTTON" (quote omsc::mousebutton) (quote ((om-load-inputfun (quote input-funbox) "" "MINVAL" 0) (om-load-inputfun (quote input-funbox) "" "MAXVAL" 1) (om-load-inputfun (quote input-funbox) "" "WARP" 0) (om-load-inputfun (quote input-funbox) "" "LAG" 0))) (om-make-point 29 76) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MOUSE-Y" (quote omsc::mouse-y) (quote ((om-load-inputfun (quote input-funbox) "" "MINVAL" 0.99999) (om-load-inputfun (quote input-funbox) "" "MAXVAL" 0.999) (om-load-inputfun (quote input-funbox) "" "WARP" 2) (om-load-inputfun (quote input-funbox) "" "LAG" 0.2))) (om-make-point 756 329) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MOUSE-X" (quote omsc::mouse-x) (quote ((om-load-inputfun (quote input-funbox) "" "MINVAL" 0.01) (om-load-inputfun (quote input-funbox) "" "MAXVAL" 0.1) (om-load-inputfun (quote input-funbox) "" "WARP" 0) (om-load-inputfun (quote input-funbox) "" "LAG" 0))) (om-make-point 648 324) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "FUNCTION-PLAY" (quote omsc::function-play) (quote ((om-load-inputfun (quote input-funbox) "" "IN" nil))) (om-make-point 158 621) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 2" (quote list) (quote nil) (om-make-point 26 459) (om-make-point 35 28) (list 0 1) "(0 1)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ARRAY-SC 2" (quote omsc::array-sc) (quote ((om-load-inputfun (quote input-funbox) "" "IN" nil))) (om-make-point 42 491) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OUT" (quote omsc::out) (quote ((om-load-inputfun (quote input-funbox) "" "BUS" (list (quote omsc::bus))) (om-load-inputfun (quote input-funbox) "" "IN" (list (quote omsc::in))))) (om-make-point 129 529) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((8 0 0 0 nil 0) (10 0 1 0 nil 0) (13 0 1 1 nil 0) (12 0 1 2 nil 0) (14 0 8 0 nil 0) (7 0 9 0 nil 0) (11 0 9 1 nil 0) (6 0 9 4 nil 0) (9 0 10 0 nil 0) (3 0 10 1 nil 0) (17 0 14 0 nil 0) (15 0 16 0 nil 0) (16 0 17 0 nil 0) (1 0 17 1 nil 0))) nil 6.120003))
