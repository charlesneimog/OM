; OM File Header - Saved 2020/12/05 20:27:01
; (6.120003 :patc (om-make-point 10 110) (om-make-point 618 91) (om-make-point 739 846) "" 183 0 nil "2020/12/05 20:27:01")
; End File Header
(in-package :om)(load-lib-for (quote ("OMCollider")))(setf *om-current-persistent* (om-load-patch1 "Autogui-FFT" (quote ((let ((box (om-load-boxcall (quote genfun) "SYNTHESIZER" (quote omsc::synthesizer) (quote ((om-load-inputfun (quote input-funbox) "" "DATA" nil))) (om-make-point 443 731) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 10" (quote list) (quote nil) (om-make-point 312 591) (om-make-point 41 30) "test" "\"test\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "NDEF" (quote omsc::ndef) (quote ((om-load-inputfun (quote input-funbox) "" "ARG" nil) (om-load-inputfun (quote input-funbox) "" "IN" nil) (om-load-inputfun (quote input-funbox) "" "NAME" nil))) (om-make-point 232 621) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 9" (quote list) (quote nil) (om-make-point 493 196) (om-make-point 105 30) "LocalBuf(2048)" "\"LocalBuf(2048)\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 8" (quote list) (quote nil) (om-make-point 640 309) (om-make-point 58 30) "stretch" "\"stretch\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 7" (quote list) (quote nil) (om-make-point 553 305) (om-make-point 44 30) "shift" "\"shift\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "FFT" (quote omsc::fft) (quote ((om-load-inputfun (quote input-funbox) "" "BUFFER" 0) (om-load-inputfun (quote input-funbox) "" "IN" 0) (om-load-inputfun (quote input-funbox) "" "HOP" 0.5) (om-load-inputfun (quote input-funbox) "" "WINTYPE" 0) (om-load-inputfun (quote input-funbox) "" "ACTIVE" 1) (om-load-inputfun (quote input-funbox) "" "WINSIZE" 0))) (om-make-point 392 263) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "PV_BINSHIFT" (quote omsc::pv_binshift) (quote ((om-load-inputfun (quote input-funbox) "" "BUFFER" 0) (om-load-inputfun (quote input-funbox) "" "STRETCH" 1) (om-load-inputfun (quote input-funbox) "" "SHIFT" 0) (om-load-inputfun (quote input-funbox) "" "INTERP" 0))) (om-make-point 482 355) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "IFFT_AR" (quote omsc::ifft_ar) (quote ((om-load-inputfun (quote input-funbox) "" "BUFFER" 0) (om-load-inputfun (quote input-funbox) "" "WINTYPE" 0) (om-load-inputfun (quote input-funbox) "" "WINSIZE" 0))) (om-make-point 536 444) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 6" (quote list) (quote nil) (om-make-point 39 452) (om-make-point 233 30) "rate=1,pan=0.0,stretch=0.5,shift=1" "\"rate=1,pan=0.0,stretch=0.5,shift=1\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 5" (quote list) (quote nil) (om-make-point 304 469) (om-make-point 41 30) "pan" "\"pan\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 4" (quote list) (quote nil) (om-make-point 295 100) (om-make-point 42 30) "rate" "\"rate\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "BUFFER-READ" (quote omsc::buffer-read) (quote ((om-load-inputfun (quote input-funbox) "" "FILENAME" nil))) (om-make-point 153 87) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "PLAYBUF" (quote omsc::playbuf) (quote ((om-load-inputfun (quote input-funbox) "" "NUMCHANNELS" 1) (om-load-inputfun (quote input-funbox) "" "BUFNUM" "k") (om-load-inputfun (quote input-funbox) "" "RATE" 1) (om-load-inputfun (quote input-funbox) "" "TRIGGER" 1) (om-load-inputfun (quote input-funbox) "" "STARTPOS" 0.5) (om-load-inputfun (quote input-funbox) "" "LOOP" 1) (om-load-inputfun (quote input-funbox) "" "DONEACTION" 0))) (om-make-point 288 175) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 100 60) (quote "velocità di lettura") "" (om-make-point 289 30) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 3" (quote list) (quote nil) (om-make-point 17 48) (om-make-point 172 30) "Classicalguitarmono.wav" "\"\\Classicalguitarmono.wav\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "PAN2_AR" (quote omsc::pan2_ar) (quote ((om-load-inputfun (quote input-funbox) "" "IN" 0) (om-load-inputfun (quote input-funbox) "" "POS" 0) (om-load-inputfun (quote input-funbox) "" "LEVEL" 1))) (om-make-point 242 522) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "GUI" (quote omsc::gui) (quote ((om-load-inputfun (quote input-funbox) "" "IN" nil))) (om-make-point 300 698) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 100 60) (quote "Loop = 1 (normal playback)") "" (om-make-point 424 43) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 451 112) (om-make-point 17 30) 1 "1" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((17 0 0 0 nil 0) (9 0 2 0 nil 0) (16 0 2 1 nil 0) (1 0 2 2 nil 0) (3 0 6 0 nil 0) (13 0 6 1 nil 0) (6 0 7 0 nil 0) (4 0 7 1 nil 0) (5 0 7 2 nil 0) (7 0 8 0 nil 0) (15 0 12 0 nil 0) (12 0 13 1 nil 0) (11 0 13 2 nil 0) (19 0 13 5 nil 0) (8 0 16 0 nil 0) (10 0 16 1 nil 0) (2 0 17 0 nil 0))) nil 6.120003))
