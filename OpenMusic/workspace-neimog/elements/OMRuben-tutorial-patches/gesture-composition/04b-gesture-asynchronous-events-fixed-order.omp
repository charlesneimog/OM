; OM File Header - Saved 2020/09/23 20:55:26
; (6.13 :patc (om-make-point 10 10) (om-make-point 216 23) (om-make-point 1211 666) "" 183 0 nil "2020/09/23 20:55:26")
; End File Header
(in-package :om)(load-lib-for (quote ("OMRuben")))(setf *om-current-persistent* (om-load-patch1 "04b-gesture-asynchronous-events-fixed-order" (quote ((let ((box (om-load-boxcall (quote genfun) "R-GESTURE-SEQUENCES-FIXED-ORDER" (quote r-gesture-sequences-fixed-order) (quote ((om-load-inputfun (quote input-funbox) "total-dur-ms-list" "TOTAL-DUR-MS-LIST" nil) (om-load-inputfun (quote input-funbox) "gesture-lists-list" "GESTURE-LISTS-LIST" nil) (om-load-inputfun (quote input-funbox) "ranges-list-of-chordseqs" "RANGES-LIST-OF-CHORDSEQS" nil) (om-load-inputfun (quote input-funbox) "min-max-dur-ms-lists-lists" "MIN-MAX-DUR-MS-LISTS-LISTS" nil) (om-load-inputfun (quote input-funbox) "speed-ratios-lists-lists" "SPEED-RATIOS-LISTS-LISTS" nil) (om-load-inputfun (quote input-funbox) "silences-before-lists-lists" "SILENCES-BEFORE-LISTS-LISTS" nil) (om-load-inputfun (quote input-funbox) "min-max-range-cents-lists" "MIN-MAX-RANGE-CENTS-LISTS" nil))) (om-make-point 291 131) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 13" (quote list) (quote nil) (om-make-point 868 528) (om-make-point 42 28) 8 "8" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "EXPORT-MUSICXML" (quote export-musicxml) (quote ((om-load-inputfun (quote input-funbox) "a VOICE or POLY object" "SELF" nil) (om-load-inputfun (quote input-funbox) "list of voice keys" "KEYS" (list (list (quote g) 2))) (om-load-inputfun (quote input-funbox) "tone subdivision approximation" "APPROX" 2) (om-load-inputfun (quote input-funbox) "a target pathname" "PATH" nil))) (om-make-point 781 568) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 358 444) (quote "'r-gesture-sequences' creates a polyphony through$gesture scripts. See object documentation for more info. The difference from the gesture-script objects is that there is no vertical synchronization. Each part has it's individual life, within a set of probabilities and continuosly varied tessitura within the input range.$$In this example, a minimum amount of input information is provided, meaning that the result will be more randomized within these ranges. For more control over each instrumental role, add a textfile object, and keep adding different sublists. There is no fixed order of gestures within each instrument, duplicating some of the lists will increase their probability.$$The r-gesture-sequence functions operate on the level below, for 'r-gestures-chordseq', see the second Sciarrino patch. This patch has quite similar settings to patch number 3, allowing a comparision of the effect of synchronous vs. asynchronous mass structure.$$Rendering again will always create a slightly different $composition.") "" (om-make-point 745 34) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 12" (quote list) (quote nil) (om-make-point 520 166) (om-make-point 83 30) (list (list 300 2400)) "((300 2400))" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 11" (quote list) (quote nil) (om-make-point 538 117) (om-make-point 135 30) (list (list (list 0 700) (list 300 3200))) "(((0 700)(300 3200)))" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 10" (quote list) (quote nil) (om-make-point 611 81) (om-make-point 73 30) (list (list (list 0.6 1.3))) "(((.6 1.3)))" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 9" (quote list) (quote nil) (om-make-point 466 51) (om-make-point 225 30) (list (list (list 200 500) (list 700 6000) (list 450 7200))) "(((200 500) (700 6000)(450 7200)))" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 8" (quote list) (quote nil) (om-make-point 442 13) (om-make-point 134 30) (list (list (list 0 1) (list 1 2) (list 0 2 1))) "(((0 1)(1 2)(0 2 1)))" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 7" (quote list) (quote nil) (om-make-point 224 50) (om-make-point 65 30) (list 90000) "(90000)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ 2" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 302 2) (om-make-point 130 65) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((9452))) :lonset (quote (0 377)) :ldur (quote ((377))) :lvel (quote ((15))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((9316))) :lonset (quote (0 284)) :ldur (quote ((284))) :lvel (quote ((23))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((9192))) :lonset (quote (0 319)) :ldur (quote ((319))) :lvel (quote ((22))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((9192))) :lonset (quote (0 319)) :ldur (quote ((319))) :lvel (quote ((22))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((9192))) :lonset (quote (0 319)) :ldur (quote ((319))) :lvel (quote ((22))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((9144))) :lonset (quote (0 337)) :ldur (quote ((337))) :lvel (quote ((40))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((9096))) :lonset (quote (0 389)) :ldur (quote ((389))) :lvel (quote ((15))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8914))) :lonset (quote (0 685)) :ldur (quote ((685))) :lvel (quote ((29))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8914))) :lonset (quote (0 685)) :ldur (quote ((685))) :lvel (quote ((29))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8696))) :lonset (quote (0 273)) :ldur (quote ((273))) :lvel (quote ((11))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8470))) :lonset (quote (0 621)) :ldur (quote ((621))) :lvel (quote ((24))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8468))) :lonset (quote (0 1265)) :ldur (quote ((1265))) :lvel (quote ((58))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8288))) :lonset (quote (0 697)) :ldur (quote ((697))) :lvel (quote ((23))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8286))) :lonset (quote (0 1004)) :ldur (quote ((1004))) :lvel (quote ((20))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7794))) :lonset (quote (0 1376)) :ldur (quote ((1376))) :lvel (quote ((25))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6338))) :lonset (quote (0 302)) :ldur (quote ((302))) :lvel (quote ((24))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6332))) :lonset (quote (0 795)) :ldur (quote ((795))) :lvel (quote ((40))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6332))) :lonset (quote (0 795)) :ldur (quote ((795))) :lvel (quote ((40))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6332))) :lonset (quote (0 795)) :ldur (quote ((795))) :lvel (quote ((40))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6326))) :lonset (quote (0 261)) :ldur (quote ((261))) :lvel (quote ((61))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5818))) :lonset (quote (0 639)) :ldur (quote ((639))) :lvel (quote ((26))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5816))) :lonset (quote (0 395)) :ldur (quote ((395))) :lvel (quote ((14))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5816))) :lonset (quote (0 395)) :ldur (quote ((395))) :lvel (quote ((14))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5814))) :lonset (quote (0 493)) :ldur (quote ((493))) :lvel (quote ((25))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quote (((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0))))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.13 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj)) "x" nil (pairlis (quote (scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote t) (quote :normal) 1 0 (om-make-point 400 23) (om-make-point 789 720) 0 1000 nil 1 (quote :osc-scoreplayer) 0 nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (list (quote ggf) (quote ggf) (quote ggf) (quote ggf) (quote ggf) (quote ggf) (quote ggf) (quote ggf) (quote ggf) (quote ggf) (quote ggf) (quote ggf) (quote ggf) (quote ggf) (quote ggf) (quote ggf) (quote ggf) (quote ggf) (quote ggf) (quote ggf) (quote ggf) (quote ggf) (quote ggf) (quote ggf)) 24 16)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-GEST-SINGLE-CHORD" (quote r-gest-single-chord) (quote ((om-load-inputfun (quote input-funbox) "macromelody-chord" "MACROMELODY-CHORD" nil) (om-load-inputfun (quote input-funbox) "ms-duration" "MS-DURATION" nil) (om-load-inputfun (quote input-funbox) "speed-ratio" "SPEED-RATIO" nil))) (om-make-point 29 152) nil nil "l" nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-GEST-IRREGULAR-MICRO-TRILL" (quote r-gest-irregular-micro-trill) (quote ((om-load-inputfun (quote input-funbox) "macromel-chord" "MACROMEL-CHORD" nil) (om-load-inputfun (quote input-funbox) "ms-duration" "MS-DURATION" nil) (om-load-inputfun (quote input-funbox) "speed-ratio" "SPEED-RATIO" nil))) (om-make-point 81 82) nil nil "l" nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote abstraction) "sine-melody" (om-load-patch-abs1 "sine-melody" (quote ((let ((box (om-load-boxcall (quote bastype) "list 11" (quote list) (quote nil) (om-make-point 421 57) (om-make-point 45 30) (list 4 15) "(4 15)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 10" (quote list) (quote nil) (om-make-point 427 100) (om-make-point 70 30) (list 0.0 1.0) "(0.0 1.0)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 9" (quote list) (quote nil) (om-make-point 438 138) (om-make-point 52 30) (list 0 360) "(0 360)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 8" (quote list) (quote nil) (om-make-point 543 195) (om-make-point 22 26) 1 "1" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 7" (quote list) (quote nil) (om-make-point 614 56) (om-make-point 23 29) 6 "6" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 6" (quote list) (quote nil) (om-make-point 564 17) (om-make-point 55 30) (list 3 15) "(3 15)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 5" (quote list) (quote nil) (om-make-point 486 30) (om-make-point 59 30) (list 0 1000) "(0 1000)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 4" (quote list) (quote nil) (om-make-point 222 23) (om-make-point 45 30) 12.5 "12.5" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "R-FULL-RANGE" (quote r-full-range) (quote ((om-load-inputfun (quote input-funbox) "CENTS-STEP" "CENTS-STEP" nil))) (om-make-point 200 62) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 3" (quote list) (quote nil) (om-make-point 170 20) (om-make-point 45 30) 12.5 "12.5" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-RANDOM-BPFS" (quote r-random-bpfs) (quote ((om-load-inputfun (quote input-funbox) "y-minmax-list" "Y-MINMAX-LIST" (list 0 1000)) (om-load-inputfun (quote input-funbox) "points-minmax-list" "POINTS-MINMAX-LIST" (list 7 9)) (om-load-inputfun (quote input-funbox) "number-of-bpfs" "NUMBER-OF-BPFS" 3))) (om-make-point 509 76) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "FIRST" (quote first) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 279 274) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 2" (quote list) (quote nil) (om-make-point 338 16) (om-make-point 125 30) (list (list 1 10) (list 2 6) (list 4 14)) "((1 10) (2 6) (4 14))" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 332 69) (om-make-point 59 30) (list 0 1000) "(0 1000)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-GLISS-ADDITIVE-SINE-BPFS" (quote r-gliss-additive-sine-bpfs) (quote ((om-load-inputfun (quote input-funbox) "" "Y-RANGE-MINMAX" nil) (om-load-inputfun (quote input-funbox) "" "MIN-MAX-FREQS-LISTS" nil) (om-load-inputfun (quote input-funbox) "" "FREQ-BPFS-1000X1000" nil) (om-load-inputfun (quote input-funbox) "" "MIN-MAX-FREQS-PR-BPF" nil) (om-load-inputfun (quote input-funbox) "" "MIN-MAX-AMP" nil) (om-load-inputfun (quote input-funbox) "" "MIN-MAX-PHASE" nil) (om-load-inputfun (quote input-funbox) "" "NUMBER-OF-BPFS" nil))) (om-make-point 354 200) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output" 0 (om-make-point 119 247) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "speed" 2 (om-make-point 125 20) "" "speed" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "dur" 1 (om-make-point 90 32) "" "dur" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input" 0 (om-make-point 5 45) "" nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-INPUT-BPF-RAW-MELODY" (quote r-input-bpf-raw-melody) (quote ((om-load-inputfun (quote input-funbox) "midicents-range-minmax" "MIDICENTS-RANGE-MINMAX" nil) (om-load-inputfun (quote input-funbox) "ms-duration" "MS-DURATION" nil) (om-load-inputfun (quote input-funbox) "speed-ratio" "SPEED-RATIO" nil) (om-load-inputfun (quote input-funbox) "cents-interval-size" "CENTS-INTERVAL-SIZE" nil) (om-load-inputfun (quote input-funbox) "instrumental-range-midicents" "INSTRUMENTAL-RANGE-MIDICENTS" nil) (om-load-inputfun (quote input-funbox) "bpf-self-melody-shape" "BPF-SELF-MELODY-SHAPE" nil))) (om-make-point 68 134) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((7 0 8 0 nil 0) (6 0 10 0 nil 0) (5 0 10 1 nil 0) (4 0 10 2 nil 0) (14 0 11 0 nil 0) (13 0 14 0 nil 0) (12 0 14 1 nil 0) (10 0 14 2 nil 0) (0 0 14 3 nil 0) (1 0 14 4 nil 0) (2 0 14 5 nil 0) (3 0 14 6 nil 0) (19 0 15 0 nil 0) (18 0 19 0 nil 0) (17 0 19 1 nil 0) (16 0 19 2 nil 0) (9 0 19 3 nil 0) (8 0 19 4 nil 0) (11 0 19 5 nil 0))) 6.13 nil "" (om-make-point 200 200) (om-make-point 500 400)) (quote ((om-load-inputfun (quote input-funbox) "" "input" nil) (om-load-inputfun (quote input-funbox) "" "dur" nil) (om-load-inputfun (quote input-funbox) "" "speed" nil))) (om-make-point 198 169) nil (list nil) "l" "sine-melody"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "X-APPEND" (quote x-append) (quote ((om-load-inputfun (quote input-funbox) "first element" "L1?" nil) (om-load-inputfun (quote input-funbox) "second element" "L2?" nil) (om-load-inputfun (quote input-funbox) "additional elements" "LST?" nil))) (om-make-point 91 273) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 261 387) (om-make-point 130 90) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((9452 9452) (9452) (9302) (9452) (9302) (9452) (9302) (9452) (9452) (9452 9452) (9452) (9452) (9452 9452) (9452 9452) (9452 9452) (9452 9452) (9452 9452) (9452) (9477) (9452) (9477) (9452) (9477) (9452 9452) (9452 9452) (9452 9452) (9452) (9202) (9452) (9202) (9452) (9202) (9452) (9227) (9452) (9227) (9452) (9227) (9452) (9452 9452) (9452) (9452) (9452 9452) (9452 9452) (9452 9452) (9452 9452) (9452 9452) (9452) (9702) (9452) (9702) (9452) (9702) (9452) (9452) (9452) (9452) (9452) (9452) (9452) (9452) (9452 9452) (9452 9452) (9452 9452) (9452) (9302) (9452) (9302) (9452) (9302) (9452) (9452) (9452) (9602) (9452) (9602) (9452) (9602) (9452) (9677) (9452) (9677) (9452) (9677) (9452 9452) (9452 9452) (9452) (9502) (9452) (9502) (9452) (9502) (9452 9452) (9452 9452) (9452) (9477) (9452) (9477) (9452) (9477) (9452 9452) (9452 9452) (9452) (9452) (9452 9452) (9452 9452) (9452 9452) (9452 9452) (9452 9452) (9452 9452) (9452 9452) (9452) (9427) (9452) (9427) (9452) (9427) (9452) (9702) (9452) (9702) (9452) (9702) (9452 9452) (9452) (9202) (9452) (9202) (9452) (9202) (9452) (9452) (9452) (9452) (9452 9452) (9452) (9602) (9452) (9602) (9452) (9602) (9452 9452) (9452 9452) (9452 9452) (9452 9452) (9452) (9452) (9452 9452) (9452 9452) (9452 9452) (9452 9452) (9452 9452) (9452 9452) (9452) (9302) (9452) (9302) (9452) (9302) (9452) (9452) (9452) (9452) (9452 9452) (9452 9452) (9452) (9452) (9452 9452) (9452) (9452) (9452) (9452) (9452) (9452) (9452) (9427) (9452) (9427) (9452) (9427) (9452) (9452) (9452) (9427) (9452) (9427) (9452) (9427) (9452 9452) (9452 9452) (9452 9452) (9452 9452) (9452) (9452) (9452 9452) (9452) (9302) (9452) (9302) (9452) (9302) (9452) (9202) (9452) (9202) (9452) (9202) (9452 9452) (9452 9452) (9452) (9602) (9452) (9602) (9452) (9602) (9452 9452) (9452) (9502) (9452) (9502) (9452) (9502) (9452 9452) (9452) (9252) (9452) (9252) (9452) (9252) (9452 9452) (9452) (9477) (9452) (9477) (9452) (9477) (9452) (9452) (9452 9452) (9452) (9452) (9452) (9452) (9452) (9652) (9452) (9652) (9452) (9652) (9452) (9477) (9452) (9477) (9452) (9477) (9452 9452) (9452) (9502) (9452) (9502) (9452) (9502) (9452) (9227) (9452) (9227) (9452) (9227) (9452 9452) (9452 9452) (9452) (9452) (9452 9452) (9452) (9677) (9452) (9677) (9452) (9677) (9452) (9452) (9452) (9452) (9452) (9452) (9452 9452) (9452) (9652) (9452) (9652) (9452) (9652) (9452 9452) (9452) (9452) (9452) (9452) (9452) (9452) (9452) (9452) (9452) (9402) (9452) (9402) (9452) (9402) (9452 9452) (9452) (9452) (9452) (9452) (9452 9452) (9452) (9452) (9452 9452) (9452 9452) (9452 9452) (9452 9452) (9452) (9652) (9452) (9652) (9452) (9652) (9452 9452) (9452 9452))) :lonset (quoteldur (quote ((271 271) (208) (127) (127) (127) (127) (127) (143) (143) (361 361) (162) (162) (260 260) (356 356) (406 406) (226 226) (202 202) (149) (221) (221) (221) (221) (221) (267 267) (354 354) (254 254) (182) (123) (164) (164) (164) (164) (244) (237) (237) (237) (237) (237) (213) (247 247) (152) (152) (441 441) (485 485) (311 311) (225 225) (320 320) (152) (149) (149) (149) (149) (149) (124) (147) (119) (68) (68) (68) (68) (68) (317 317) (480 480) (288 288) (189) (221) (221) (221) (221) (221) (140) (140) (124) (169) (108) (108) (108) (108) (197) (131) (131) (131) (131) (131) (406 406) (207 207) (219) (219) (219) (219) (219) (219) (337 337) (295 295) (168) (136) (171) (171) (171) (171) (304 304) (244 244) (135) (135) (487 487) (441 441) (302 302) (413 413) (348 348) (244 244) (323 323) (224) (271) (271) (271) (271) (271) (169) (139) (167) (167) (167) (167) (290 290) (137) (158) (145) (145) (145) (145) (174) (174) (172) (172) (244 244) (132) (169) (132) (132) (132) (132) (455 455) (454 454) (365 365) (426 426) (168) (168) (451 451) (401 401) (479 479) (243 243) (205 205) (344 344) (227) (251) (251) (251) (251) (251) (151) (151) (147) (147) (490 490) (412 412) (141) (141) (257 257) (162) (140) (119) (119) (119) (119) (184) (168) (168) (168) (168) (168) (163) (163) (166) (158) (158) (158) (158) (158) (498 498) (320 320) (377 377) (375 375) (175) (175) (344 344) (214) (123) (123) (123) (123) (123) (223) (258) (258) (258) (258) (258) (424 424) (305 305) (300) (181) (181) (181) (181) (181) (443 443) (264) (211) (211) (211) (211) (211) (340 340) (227) (134) (134) (134) (134) (134) (435 435) (240) (187) (187) (187) (187) (187) (161) (161) (493 493) (156) (156) (155) (155) (159) (167) (172) (172) (172) (172) (144) (104) (156) (156) (156) (156) (379 379) (177) (205) (115) (115) (115) (115) (255) (160) (160) (160) (160) (160) (407 407) (480 480) (145) (145) (284 284) (236) (251) (251) (251) (251) (251) (248) (184) (184) (184) (184) (184) (472 472) (209) (289) (289) (289) (289) (289) (382 382) (164) (164) (171) (129) (139) (139) (139) (139) (199) (202) (202) (202) (202) (202) (286 286) (145) (145) (148) (148) (375 375) (168) (168) (427 427) (373 373) (311 311) (282 282) (128) (147) (142) (142) (142) (142) (253 253) (143 143))) :lvel (quote ((59 59) (55) (56) (56) (56) (56) (56) (70) (70) (77 77) (66) (66) (54 54) (69 69) (65 65) (54 54) (78 78) (57) (61) (61) (61) (61) (61) (68 68) (88 88) (62 62) (55) (64) (55) (55) (55) (55) (56) (58) (58) (58) (58) (58) (66) (76 76) (58) (58) (85 85) (85 85) (66 66) (57 57) (73 73) (70) (58) (58) (58) (58) (58) (61) (73) (70) (55) (55) (55) (55) (55) (48 48) (64 64) (51 51) (56) (58) (58) (58) (58) (58) (59) (59) (55) (73) (57) (57) (57) (57) (55) (55) (55) (55) (55) (55) (89 89) (80 80) (62) (55) (55) (55) (55) (55) (55 55) (75 75) (55) (67) (59) (59) (59) (59) (81 81) (54 54) (56) (56) (50 50) (66 66) (57 57) (76 76) (87 87) (53 53) (64 64) (55) (57) (57) (57) (57) (57) (56) (73) (56) (56) (56) (56) (77 77) (56) (74) (61) (61) (61) (61) (66) (66) (57) (57) (49 49) (55) (69) (65) (65) (65) (65) (54 54) (68 68) (75 75) (71 71) (58) (58) (45 45) (76 76) (45 45) (52 52) (79 79) (60 60) (59) (58) (58) (58) (58) (58) (60) (60) (66) (66) (70 70) (79 79) (74) (74) (90 90) (56) (69) (55) (55) (55) (55) (61) (65) (65) (65) (65) (65) (67) (67) (57) (56) (56) (56) (56) (56) (45 45) (84 84) (66 66) (76 76) (56) (56) (79 79) (66) (57) (57) (57) (57) (57) (56) (55) (55) (55) (55) (55) (80 80) (78 78) (58) (65) (65) (65) (65) (65) (83 83) (56) (58) (58) (58) (58) (58) (82 82) (56) (56) (56) (56) (56) (56) (57 57) (58) (56) (56) (56) (56) (56) (68) (68) (60 60) (58) (58) (72) (72) (56) (71) (57) (57) (57) (57) (57) (73) (55) (55) (55) (55) (53 53) (58) (71) (58) (58) (58) (58) (61) (55) (55) (55) (55) (55) (46 46) (71 71) (75) (75) (52 52) (55) (57) (57) (57) (57) (57) (55) (56) (56) (56) (56) (56) (78 78) (61) (59) (59) (59) (59) (59) (78 78) (63) (63) (59) (73) (55) (55) (55) (55) (58) (56) (56) (56) (56) (56) (48 48) (55) (55) (75) (75) (67 67) (68) (68) (49 49) (88 88) (56 56) (55 55) (57) (63) (55) (55) (55) (55) (81 81) (54 54))) :loffset (quote ((0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0))) :lchan (quotelegato 0)))) (load-port-info newobj (quote ((0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((9316 9316) (9316 9316) (9316 9316) (9316 9316) (9316 9316) (9316) (9316) (9316 9316) (9316 9316) (9316 9316) (9316) (9266) (9316) (9266) (9316) (9266) (9316) (9316) (9316) (9316) (9316) (9516) (9316) (9516) (9316) (9516) (9316 9316) (9316) (9316) (9316 9316) (9316 9316) (9316) (9266) (9316) (9266) (9316) (9266) (9316) (9316) (9316 9316) (9316) (9291) (9316) (9291) (9316) (9291) (9316) (9291) (9316 9316) (9316) (9316) (9316) (9166) (9316) (9166) (9316) (9166) (9316) (9366) (9316) (9366) (9316) (9366) (9316 9316) (9316) (9541) (9316) (9541) (9316) (9541) (9316) (9091) (9316) (9091) (9316) (9091) (9316) (9091) (9316) (9091) (9316) (9091) (9316) (9316) (9316 9316) (9316 9316) (9316) (9316) (9316 9316) (9316) (9316) (9316 9316) (9316) (9066) (9316) (9066) (9316) (9066) (9316) (9266) (9316) (9266) (9316) (9266) (9316) (9541) (9316) (9541) (9316) (9541) (9316) (9316) (9316 9316) (9316) (9316) (9316) (9316) (9316) (9266) (9316) (9266) (9316) (9266) (9316 9316) (9316 9316) (9316 9316) (9316 9316) (9316) (9266) (9316) (9266) (9316) (9266) (9316 9316) (9316 9316) (9316 9316) (9316) (9166) (9316) (9166) (9316) (9166) (9316) (9166) (9316 9316) (9316 9316) (9316) (9316) (9316 9316) (9316) (9466) (9316) (9466) (9316) (9466) (9316 9316) (9316 9316) (9316) (9316) (9316) (9316) (9316) (9066) (9316) (9066) (9316) (9066) (9316) (9316) (9316 9316) (9316 9316) (9316 9316) (9316 9316) (9316) (9316) (9316 9316) (9316 9316) (9316 9316) (9316) (9316) (9316 9316) (9316) (9116) (9316) (9116) (9316) (9116) (9316) (9091) (9316) (9091) (9316) (9091) (9316) (9366) (9316) (9366) (9316) (9366) (9316) (9266) (9316) (9266) (9316) (9266) (9316 9316) (9316 9316) (9316 9316) (9316) (9466) (9316) (9466) (9316) (9466) (9316) (9566) (9316) (9566) (9316) (9566) (9316 9316) (9316) (9316) (9316) (9316) (9316) (9316) (9316) (9316) (9316 9316) (9316 9316) (9316) (9566) (9316) (9566) (9316) (9566) (9316 9316) (9316) (9066) (9316) (9066) (9316) (9066) (9316 9316) (9316) (9316) (9316) (9341) (9316) (9341) (9316) (9341) (9316 9316) (9316 9316) (9316) (9316) (9316 9316) (9316) (9316) (9316) (9316) (9316) (9316) (9316) (9316) (9316) (9541) (9316) (9541) (9316) (9541) (9316 9316) (9316) (9091) (9316) (9091) (9316) (9091) (9316 9316) (9316) (9316) (9316) (9316) (9316) (9466) (9316) (9466) (9316) (9466) (9316) (9066) (9316) (9066) (9316) (9066) (9316) (9316) (9316) (9316) (9316 9316) (9316 9316) (9316 9316) (9316) (9316) (9316) (9366) (9316) (9366) (9316) (9366) (9316 9316) (9316 9316) (9316) (9316) (9316) (9316) (9316) (9316) (9316 9316) (9316) (9566) (9316) (9566) (9316) (9566) (9316 9316) (9316) (9316) (9316) (9316) (9316) (9316) (9316 9316) (9316) (9316) (9316 9316) (9316) (9316) (9316) (9166) (9316) (9166) (9316) (9166) (9316) (9316) (9316 9316))) :lonset (quoteldur (quote ((409 409) (236 236) (363 363) (366 366) (255 255) (144) (144) (231 231) (381 381) (487 487) (155) (258) (258) (258) (258) (258) (171) (171) (173) (173) (187) (171) (134) (134) (134) (134) (390 390) (146) (146) (224 224) (383 383) (201) (108) (108) (108) (108) (108) (148) (148) (201 201) (138) (126) (117) (117) (117) (117) (117) (117) (367 367) (172) (172) (195) (225) (225) (225) (225) (225) (270) (197) (197) (197) (197) (197) (221 221) (199) (187) (187) (187) (187) (187) (195) (182) (182) (182) (182) (182) (184) (97) (97) (97) (97) (97) (135) (135) (321 321) (226 226) (169) (169) (226 226) (160) (160) (390 390) (293) (206) (206) (206) (206) (206) (266) (202) (202) (202) (202) (202) (137) (123) (113) (113) (113) (113) (178) (178) (406 406) (141) (141) (159) (159) (147) (129) (129) (129) (129) (129) (437 437) (375 375) (209 209) (479 479) (200) (148) (148) (148) (148) (148) (296 296) (206 206) (301 301) (78) (152) (143) (74) (74) (74) (74) (74) (387 387) (360 360) (181) (181) (232 232) (211) (138) (148) (148) (148) (148) (387 387) (251 251) (168) (168) (132) (132) (265) (170) (170) (170) (170) (170) (145) (145) (264 264) (356 356) (442 442) (400 400) (160) (160) (415 415) (290 290) (413 413) (132) (132) (232 232) (200) (241) (241) (241) (241) (241) (183) (234) (234) (234) (234) (234) (213) (135) (135) (135) (135) (135) (268) (185) (185) (185) (185) (185) (205 205) (380 380) (392 392) (224) (182) (182) (182) (182) (182) (222) (254) (254) (254) (254) (254) (276 276) (167) (256) (256) (256) (256) (256) (146) (146) (366 366) (225 225) (267) (217) (217) (217) (217) (217) (296 296) (210) (233) (233) (233) (233) (233) (266 266) (150) (150) (135) (145) (188) (188) (188) (188) (442 442) (410 410) (138) (138) (410 410) (170) (167) (167) (167) (167) (167) (158) (158) (210) (289) (289) (289) (289) (289) (271 271) (182) (215) (215) (215) (215) (215) (298 298) (143) (143) (155) (155) (123) (175) (134) (134) (134) (134) (188) (142) (142) (142) (142) (142) (136) (136) (139) (139) (345 345) (301 301) (455 455) (163) (163) (212) (145) (137) (137) (137) (137) (352 352) (414 414) (157) (206) (100) (100) (100) (100) (352 352) (205) (107) (128) (128) (128) (128) (402 402) (256) (239) (239) (239) (239) (239) (477 477) (164) (164) (321 321) (158) (158) (234) (176) (176) (176) (176) (176) (139) (139) (292 292))) :lvel (quote ((58 58) (53 53) (75 75) (54 54) (49 49) (70) (70) (71 71) (80 80) (85 85) (65) (55) (55) (55) (55) (55) (55) (55) (65) (65) (56) (68) (55) (55) (55) (55) (77 77) (70) (70) (55 55) (68 68) (59) (58) (58) (58) (58) (58) (56) (56) (74 74) (55) (74) (66) (56) (56) (56) (56) (56) (77 77) (64) (64) (59) (61) (61) (61) (61) (61) (55) (55) (55) (55) (55) (55) (50 50) (65) (55) (55) (55) (55) (55) (57) (60) (60) (60) (60) (60) (60) (62) (62) (62) (62) (62) (60) (60) (61 61) (76 76) (63) (63) (46 46) (75) (75) (58 58) (55) (55) (55) (55) (55) (55) (61) (56) (56) (56) (56) (56) (57) (73) (55) (55) (55) (55) (62) (62) (80 80) (55) (55) (66) (66) (55) (55) (55) (55) (55) (55) (76 76) (47 47) (78 78) (70 70) (55) (55) (55) (55) (55) (55) (45 45) (67 67) (61 61) (55) (70) (72) (57) (57) (57) (57) (57) (88 88) (75 75) (70) (70) (58 58) (55) (73) (58) (58) (58) (58) (52 52) (49 49) (73) (73) (60) (60) (55) (56) (56) (56) (56) (56) (57) (57) (79 79) (62 62) (70 70) (73 73) (68) (68) (55 55) (55 55) (80 80) (59) (59) (51 51) (58) (55) (55) (55) (55) (55) (55) (55) (55) (55) (55) (55) (56) (55) (55) (55) (55) (55) (63) (65) (65) (65) (65) (65) (73 73) (59 59) (59 59) (57) (55) (55) (55) (55) (55) (55) (56) (56) (56) (56) (56) (57 57) (59) (55) (55) (55) (55) (55) (57) (57) (57 57) (87 87) (57) (63) (63) (63) (63) (63) (67 67) (55) (55) (55) (55) (55) (55) (57 57) (69) (69) (57) (70) (55) (55) (55) (55) (78 78) (60 60) (70) (70) (90 90) (59) (55) (55) (55) (55) (55) (55) (55) (56) (61) (61) (61) (61) (61) (51 51) (57) (56) (56) (56) (56) (56) (56 56) (61) (61) (58) (58) (55) (68) (55) (55) (55) (55) (56) (68) (68) (68) (68) (68) (70) (70) (59) (59) (58 58) (46 46) (67 67) (59) (59) (57) (72) (59) (59) (59) (59) (68 68) (73 73) (57) (66) (64) (64) (64) (64) (59 59) (56) (71) (55) (55) (55) (55) (74 74) (57) (63) (63) (63) (63) (63) (47 47) (61) (61) (68 68) (74) (74) (55) (55) (55) (55) (55) (55) (57) (57) (47 47))) :loffset (quote ((0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0))) :lchan (quotelegato 0)))) (load-port-info newobj (quote ((0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((9192) (9442) (9192) (9442) (9192) (9442) (9192) (9242) (9192) (9242) (9192) (9242) (9192 9192) (9192) (9192) (9192 9192) (9192 9192) (9192) (8967) (9192) (8967) (9192) (8967) (9192) (8967) (9192 9192) (9192 9192) (9192) (9192 9192) (9192 9192) (9192 9192) (9192) (9192) (9192) (9217) (9192) (9217) (9192) (9217) (9192 9192) (9192) (9192) (9192) (9192) (9192) (9192) (9192 9192) (9192) (9192) (9192) (9242) (9192) (9242) (9192) (9242) (9192 9192) (9192 9192) (9192) (9192) (9192) (9192) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192) (9217) (9192) (9217) (9192) (9217) (9192 9192) (9192) (9192) (9192 9192) (9192) (9417) (9192) (9417) (9192) (9417) (9192 9192) (9192) (9192) (9192 9192) (9192) (9342) (9192) (9342) (9192) (9342) (9192 9192) (9192 9192) (9192) (9192) (9192) (9442) (9192) (9442) (9192) (9442) (9192) (9342) (9192) (9342) (9192) (9342) (9192 9192) (9192) (8992) (9192) (8992) (9192) (8992) (9192 9192) (9192) (9192) (9192) (9167) (9192) (9167) (9192) (9167) (9192 9192) (9192 9192) (9192 9192) (9192) (9192) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192) (9242) (9192) (9242) (9192) (9242) (9192) (9217) (9192) (9217) (9192) (9217) (9192) (9192) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192) (8992) (9192) (8992) (9192) (8992) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192) (9192) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192) (9192) (9192) (9142) (9192) (9142) (9192) (9142) (9192) (9192) (9192 9192) (9192) (9192) (9192 9192) (9192) (9042) (9192) (9042) (9192) (9042) (9192) (9192) (9192) (9242) (9192) (9242) (9192) (9242) (9192 9192) (9192) (9192) (9192 9192) (9192) (9192) (9192 9192) (9192 9192) (9192) (9442) (9192) (9442) (9192) (9442) (9192) (9192) (9192 9192) (9192 9192) (9192) (8942) (9192) (8942) (9192) (8942) (9192 9192) (9192) (9042) (9192) (9042) (9192) (9042) (9192) (9192) (9192) (9192) (9192) (8942) (9192) (8942) (9192) (8942) (9192) (9342) (9192) (9342) (9192) (9342) (9192) (9042) (9192) (9042) (9192) (9042) (9192) (9442) (9192) (9442) (9192) (9442) (9192 9192) (9192) (9192) (9192) (9192) (9192 9192) (9192) (9042) (9192) (9042) (9192) (9042) (9192 9192) (9192 9192) (9192) (9192) (9192 9192) (9192 9192) (9192 9192) (9192) (9192) (9192 9192) (9192 9192) (9192) (9192) (9192 9192) (9192) (9192) (9192) (9192) (9392) (9192) (9392) (9192) (9392) (9192) (9342) (9192) (9342) (9192) (9342) (9192 9192) (9192) (9192) (9192))) :lonset (quote (242 387 561 735 909 1083 1351 1478 1722 1966 2210 2454 2935 3708 3870 4176 4734 5308 5396 5483 5603 5762 5921 6080 6239 6743 7075 7659 8024 8499 9036 9640 9806 9976 10251 10416 10581 10746 10911 11655 12158 12379 12604 12829 13054 13279 13648 14418 14592 15271 15405 15583 15721 15859 15997 16590 17278 18077 18223 18765 18918 19670 20373 20891 21484 21810 22590 23289 24210 24956 25083 25245 25405 25565 25725 26489 26935 27086 27336 28098 28215 28343 28471 28599 28727 29113 29603 29753 30394 30879 31097 31310 31523 31736 31949 32256 33028 34011 34182 34620 34811 34992 35173 35354 35535 36396 36502 36674 36812 36950 37088 37699 38108 38216 38363 38510 38657 38804 39391 40294 40455 40763 40900 41026 41119 41212 41305 41619 42360 43138 43923 44076 44749 45288 45880 46615 47411 47593 47727 47855 47983 48111 48648 48789 48912 49030 49148 49266 50036 50216 50610 51701 52301 53139 54021 54227 54402 54577 54752 54927 55107 55643 56661 57291 58177 59050 59876 60602 61225 61842 62018 62312 62737 63347 63847 64720 65737 65915 66465 66555 66722 66870 67018 67166 67825 67959 68268 68529 68673 69060 70182 70419 70630 70841 71052 71263 71873 72049 72282 72433 72591 72779 72967 73155 73438 73783 73964 74483 75193 75359 75634 76298 77137 77264 77443 77569 77695 77821 78206 78347 78541 79606 80116 80300 80525 80750 80975 81200 81719 82718 82949 83184 83419 83654 83889 84726 84861 85096 85248 85863 86018 86182 86346 86510 86674 87023 87210 87413 87616 87819 88022 88594 88781 88966 89151 89336 89521 90312 90486 90733 90980 91227 91474 92419 92948 93108 93449 93580 94262 95184 95342 95574 95806 96038 96270 97129 97696 98276 98434 98655 99496 100455 100989 101157 101640 102564 102954 103121 103613 104166 104664 104802 104959 105103 105262 105421 105580 105739 105999 106221 106337 106501 106665 106829 107561 108460 108598 109179 109255)) :ldur (quote ((145) (174) (174) (174) (174) (174) (127) (244) (244) (244) (244) (244) (403 403) (162) (162) (297 297) (352 352) (88) (87) (120) (159) (159) (159) (159) (159) (288 288) (412 412) (259) (448 448) (409 409) (321 321) (166) (166) (275) (165) (165) (165) (165) (165) (284 284) (221) (225) (225) (225) (225) (225) (497 497) (174) (174) (134) (178) (138) (138) (138) (138) (461 461) (207 207) (146) (146) (153) (153) (318 318) (310 310) (467 467) (296 296) (223 223) (496 496) (368 368) (326 326) (127) (162) (160) (160) (160) (160) (318 318) (151) (151) (314 314) (117) (128) (128) (128) (128) (128) (376 376) (150) (150) (475 475) (218) (213) (213) (213) (213) (213) (338 338) (383 383) (171) (171) (191) (181) (181) (181) (181) (181) (106) (172) (138) (138) (138) (138) (210 210) (108) (147) (147) (147) (147) (147) (237 237) (161) (161) (137) (126) (93) (93) (93) (93) (235 235) (253 253) (223 223) (153) (153) (458 458) (427 427) (374 374) (335 335) (182) (134) (128) (128) (128) (128) (141) (123) (118) (118) (118) (118) (180) (180) (491 491) (438 438) (483 483) (469 469) (206) (175) (175) (175) (175) (175) (373 373) (328 328) (492 492) (399 399) (448 448) (372 372) (427 427) (372 372) (320 320) (176) (176) (269 269) (244 244) (401 401) (495 495) (381 381) (178) (178) (90) (167) (148) (148) (148) (148) (134) (134) (201 201) (144) (144) (425 425) (237) (211) (211) (211) (211) (211) (176) (176) (151) (158) (188) (188) (188) (188) (252 252) (181) (181) (358 358) (166) (166) (458 458) (372 372) (127) (179) (126) (126) (126) (126) (141) (141) (378 378) (298 298) (184) (225) (225) (225) (225) (225) (346 346) (231) (235) (235) (235) (235) (235) (135) (135) (152) (152) (155) (164) (164) (164) (164) (164) (187) (203) (203) (203) (203) (203) (187) (185) (185) (185) (185) (185) (174) (247) (247) (247) (247) (247) (449 449) (160) (160) (131) (131) (333 333) (158) (232) (232) (232) (232) (232) (478 478) (222 222) (158) (158) (446 446) (435 435) (276 276) (168) (168) (499 499) (215 215) (167) (167) (281 281) (225) (138) (138) (144) (159) (159) (159) (159) (159) (222) (116) (164) (164) (164) (164) (414 414) (138) (138) (76))) :lvel (quote ((55) (55) (55) (55) (55) (55) (62) (58) (58) (58) (58) (58) (54 54) (59) (59) (89 89) (81 81) (55) (67) (74) (55) (55) (55) (55) (55) (55 55) (79 79) (58) (85 85) (69 69) (84 84) (59) (59) (55) (60) (60) (60) (60) (60) (86 86) (55) (65) (65) (65) (65) (65) (45 45) (66) (66) (63) (71) (59) (59) (59) (59) (84 84) (74 74) (72) (72) (60) (60) (46 46) (60 60) (59 59) (89 89) (74 74) (89 89) (62 62) (90 90) (56) (70) (58) (58) (58) (58) (53 53) (74) (74) (68 68) (55) (62) (62) (62) (62) (62) (65 65) (75) (75) (90 90) (59) (56) (56) (56) (56) (56) (67 67) (50 50) (60) (60) (55) (55) (55) (55) (55) (55) (55) (66) (57) (57) (57) (57) (72 72) (58) (55) (55) (55) (55) (55) (81 81) (60) (60) (55) (74) (56) (56) (56) (56) (88 88) (79 79) (53 53) (58) (58) (84 84) (84 84) (89 89) (66 66) (57) (74) (58) (58) (58) (58) (58) (71) (57) (57) (57) (57) (68) (68) (90 90) (82 82) (53 53) (84 84) (57) (60) (60) (60) (60) (60) (48 48) (71 71) (72 72) (67 67) (63 63) (66 66) (77 77) (47 47) (75 75) (65) (65) (77 77) (57 57) (72 72) (85 85) (49 49) (73) (73) (59) (68) (55) (55) (55) (55) (67) (67) (79 79) (61) (61) (79 79) (57) (58) (58) (58) (58) (58) (55) (55) (55) (66) (56) (56) (56) (56) (75 75) (68) (68) (57 57) (62) (62) (56 56) (88 88) (56) (66) (56) (56) (56) (56) (66) (66) (57 57) (61 61) (58) (55) (55) (55) (55) (55) (75 75) (55) (58) (58) (58) (58) (58) (74) (74) (73) (73) (59) (55) (55) (55) (55) (55) (56) (66) (66) (66) (66) (66) (57) (59) (59) (59) (59) (59) (59) (55) (55) (55) (55) (55) (71 71) (70) (70) (61) (61) (82 82) (55) (58) (58) (58) (58) (58) (83 83) (50 50) (63) (63) (77 77) (82 82) (90 90) (73) (73) (79 79) (78 78) (74) (74) (65 65) (59) (55) (55) (58) (58) (58) (58) (58) (58) (61) (68) (60) (60) (60) (60) (82 82) (75) (75) (62))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0))) :lchan (quote ((7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7 7) (7) (7) (7 7) (7 7) (7) (7) (7) (7) (7) (7) (7) (7) (7 7) (7 7) (7) (7 7) (7 7) (7 7) (7) (7) (7) (7) (7) (7) (7) (7) (7 7) (7) (7) (7) (7) (7) (7) (7 7) (7) (7) (7) (7) (7) (7) (7) (7) (7 7) (7 7) (7) (7) (7) (7) (7 7) (7 7) (7 7) (7 7) (7 7) (7 7) (7 7) (7 7) (7) (7) (7) (7) (7) (7) (7 7) (7) (7) (7 7) (7) (7) (7) (7) (7) (7) (7 7) (7) (7) (7 7) (7) (7) (7) (7) (7) (7) (7 7) (7 7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7 7) (7) (7) (7) (7) (7) (7) (7 7) (7) (7) (7) (7) (7) (7) (7) (7) (7 7) (7 7) (7 7) (7) (7) (7 7) (7 7) (7 7) (7 7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7 7) (7 7) (7 7) (7 7) (7) (7) (7) (7) (7) (7) (7 7) (7 7) (7 7) (7 7) (7 7) (7 7) (7 7) (7 7) (7 7) (7) (7) (7 7) (7 7) (7 7) (7 7) (7 7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7 7) (7) (7) (7 7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7 7) (7) (7) (7 7) (7) (7) (7 7) (7 7) (7) (7) (7) (7) (7) (7) (7) (7) (7 7) (7 7) (7) (7) (7) (7) (7) (7) (7 7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7 7) (7) (7) (7) (7) (7 7) (7) (7) (7) (7) (7) (7) (7 7) (7 7) (7) (7) (7 7) (7 7) (7 7) (7) (7) (7 7) (7 7) (7) (7) (7 7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7) (7 7) (7) (7) (7))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((9192) (9192) (9192 9192) (9192 9192) (9192) (9192) (9192 9192) (9192 9192) (9192 9192) (9192) (9192) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192) (9192) (9192) (9042) (9192) (9042) (9192) (9042) (9192) (9192) (9192 9192) (9192 9192) (9192 9192) (9192) (8992) (9192) (8992) (9192) (8992) (9192 9192) (9192 9192) (9192) (9192) (9192 9192) (9192 9192) (9192 9192) (9192) (9417) (9192) (9417) (9192) (9417) (9192 9192) (9192) (9142) (9192) (9142) (9192) (9142) (9192) (9192) (9192 9192) (9192 9192) (9192 9192) (9192) (9192) (9192 9192) (9192 9192) (9192) (9142) (9192) (9142) (9192) (9142) (9192 9192) (9192) (9192) (9192) (9192) (9192) (9192) (9192 9192) (9192 9192) (9192) (9192) (9192) (9217) (9192) (9217) (9192) (9217) (9192) (9192) (9192 9192) (9192) (9192) (9192 9192) (9192) (8967) (9192) (8967) (9192) (8967) (9192 9192) (9192 9192) (9192) (9192) (9192 9192) (9192 9192) (9192) (9192) (9192 9192) (9192) (9192) (9192) (9192) (9192 9192) (9192) (9192) (9192) (9217) (9192) (9217) (9192) (9217) (9192 9192) (9192) (8942) (9192) (8942) (9192) (8942) (9192) (9192) (9192 9192) (9192) (9167) (9192) (9167) (9192) (9167) (9192) (9192) (9192) (8992) (9192) (8992) (9192) (8992) (9192) (9192) (9192 9192) (9192) (9192) (9192) (9192) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192) (9192) (9192) (9192) (9192) (9342) (9192) (9342) (9192) (9342) (9192) (9392) (9192) (9392) (9192) (9392) (9192 9192) (9192) (9192) (9192) (9167) (9192) (9167) (9192) (9167) (9192) (9192) (9192 9192) (9192 9192) (9192) (9192) (9192) (9192) (9192 9192) (9192 9192) (9192 9192) (9192) (9042) (9192) (9042) (9192) (9042) (9192 9192) (9192) (9442) (9192) (9442) (9192) (9442) (9192) (9192) (9192) (9192) (9192) (9192) (9192) (9192) (9192) (9192) (9192) (9192) (9192 9192) (9192) (8967) (9192) (8967) (9192) (8967) (9192 9192) (9192 9192) (9192) (9192) (9192) (9142) (9192) (9142) (9192) (9142) (9192 9192) (9192 9192) (9192) (9342) (9192) (9342) (9192) (9342) (9192 9192) (9192) (9217) (9192) (9217) (9192) (9217) (9192) (9392) (9192) (9392) (9192) (9392) (9192) (9192) (9192) (9192) (9192 9192) (9192) (9442) (9192) (9442) (9192) (9442) (9192 9192) (9192) (9192) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192) (8992) (9192) (8992) (9192) (8992) (9192) (8967) (9192) (8967) (9192) (8967) (9192) (9192) (9192) (9192) (9192) (9192) (9192) (9392) (9192) (9392) (9192) (9392) (9192 9192) (9192 9192))) :lonset (quoteldur (quote ((168) (168) (401 401) (344 344) (153) (153) (464 464) (488 488) (425 425) (151) (151) (308 308) (265 265) (238 238) (375 375) (149) (149) (170) (268) (268) (268) (268) (268) (148) (148) (344 344) (241 241) (234 234) (169) (156) (156) (156) (156) (156) (380 380) (330 330) (132) (132) (281 281) (494 494) (466 466) (193) (202) (202) (202) (202) (202) (434 434) (195) (231) (231) (231) (231) (231) (152) (152) (223 223) (463 463) (377 377) (131) (131) (353 353) (353 353) (297) (185) (185) (185) (185) (185) (299 299) (188) (211) (211) (211) (211) (211) (442 442) (426 426) (165) (165) (190) (172) (172) (172) (172) (172) (177) (177) (430 430) (132) (132) (448 448) (203) (249) (249) (249) (249) (249) (433 433) (357 357) (176) (176) (463 463) (300 300) (142) (142) (265 265) (155) (155) (157) (157) (430 430) (161) (161) (204) (81) (142) (142) (142) (142) (490 490) (158) (156) (156) (156) (156) (156) (168) (168) (414 414) (134) (175) (175) (175) (175) (175) (177) (177) (173) (195) (121) (121) (121) (121) (170) (170) (378 378) (173) (173) (152) (152) (293 293) (465 465) (477 477) (328 328) (376 376) (470 470) (408 408) (176) (176) (174) (174) (122) (116) (222) (222) (222) (222) (224) (276) (276) (276) (276) (276) (344 344) (165) (165) (128) (167) (167) (167) (167) (167) (180) (180) (274 274) (286 286) (131) (131) (140) (140) (245 245) (494 494) (456 456) (155) (164) (128) (128) (128) (128) (278 278) (137) (175) (119) (119) (119) (119) (264) (220) (220) (220) (220) (220) (212) (281) (281) (281) (281) (281) (331 331) (132) (166) (186) (186) (186) (186) (248 248) (209 209) (160) (160) (115) (129) (173) (173) (173) (173) (264 264) (221 221) (164) (222) (222) (222) (222) (222) (274 274) (155) (129) (129) (129) (129) (129) (189) (168) (168) (168) (168) (168) (181) (181) (134) (134) (450 450) (143) (180) (180) (180) (180) (180) (386 386) (178) (178) (384 384) (319 319) (320 320) (341 341) (294 294) (134) (175) (175) (175) (175) (175) (130) (161) (161) (161) (161) (161) (141) (141) (161) (161) (175) (175) (142) (151) (137) (137) (137) (137) (401 401) (137 137))) :lvel (quote ((62) (62) (75 75) (79 79) (70) (70) (89 89) (55 55) (71 71) (64) (64) (69 69) (62 62) (59 59) (78 78) (56) (56) (60) (58) (58) (58) (58) (58) (63) (63) (64 64) (56 56) (90 90) (64) (61) (61) (61) (61) (61) (73 73) (72 72) (57) (57) (84 84) (71 71) (63 63) (65) (60) (60) (60) (60) (60) (87 87) (58) (55) (55) (55) (55) (55) (58) (58) (65 65) (63 63) (63 63) (71) (71) (78 78) (71 71) (59) (56) (56) (56) (56) (56) (87 87) (58) (55) (55) (55) (55) (55) (72 72) (71 71) (72) (72) (56) (59) (59) (59) (59) (59) (56) (56) (66 66) (72) (72) (56 56) (55) (60) (60) (60) (60) (60) (52 52) (68 68) (71) (71) (63 63) (72 72) (65) (65) (64 64) (73) (73) (55) (55) (60 60) (71) (71) (58) (71) (55) (55) (55) (55) (66 66) (59) (56) (56) (56) (56) (56) (64) (64) (76 76) (56) (57) (57) (57) (57) (57) (65) (65) (55) (69) (61) (61) (61) (61) (67) (67) (90 90) (63) (63) (60) (60) (55 55) (57 57) (63 63) (51 51) (81 81) (45 45) (90 90) (68) (68) (59) (59) (55) (70) (60) (60) (60) (60) (57) (66) (66) (66) (66) (66) (45 45) (73) (73) (57) (69) (69) (69) (69) (69) (67) (67) (84 84) (88 88) (68) (68) (58) (58) (54 54) (84 84) (83 83) (55) (68) (55) (55) (55) (55) (87 87) (59) (68) (57) (57) (57) (57) (55) (60) (60) (60) (60) (60) (60) (59) (59) (59) (59) (59) (69 69) (55) (67) (70) (70) (70) (70) (45 45) (80 80) (65) (65) (62) (72) (62) (62) (62) (62) (66 66) (83 83) (55) (59) (59) (59) (59) (59) (53 53) (58) (56) (56) (56) (56) (56) (55) (55) (55) (55) (55) (55) (62) (62) (73) (73) (67 67) (57) (58) (58) (58) (58) (58) (76 76) (64) (64) (69 69) (61 61) (50 50) (77 77) (54 54) (55) (65) (65) (65) (65) (65) (57) (58) (58) (58) (58) (58) (61) (61) (55) (55) (60) (60) (55) (65) (58) (58) (58) (58) (77 77) (64 64))) :loffset (quote ((0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0))) :lchan (quotelegato 0)))) (load-port-info newobj (quote ((0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((9192 9192) (9192) (9042) (9192) (9042) (9192) (9042) (9192 9192) (9192) (9192 9192) (9192 9192) (9192 9192) (9192) (9442) (9192) (9442) (9192) (9442) (9192 9192) (9192 9192) (9192) (9192) (9192 9192) (9192 9192) (9192 9192) (9192) (9392) (9192) (9392) (9192) (9392) (9192) (9142) (9192) (9142) (9192) (9142) (9192) (9392) (9192) (9392) (9192) (9392) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192) (9442) (9192) (9442) (9192) (9442) (9192) (9192) (9192 9192) (9192 9192) (9192) (8992) (9192) (8992) (9192) (8992) (9192 9192) (9192 9192) (9192 9192) (9192) (9192) (9192 9192) (9192) (9192) (9192) (9192) (9192) (9192) (9192 9192) (9192 9192) (9192 9192) (9192) (9417) (9192) (9417) (9192) (9417) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192) (9192) (9192 9192) (9192 9192) (9192) (9192) (9192) (9192) (9192) (9192) (8942) (9192) (8942) (9192) (8942) (9192) (9192) (9192) (8992) (9192) (8992) (9192) (8992) (9192) (9192) (9192 9192) (9192) (9192) (9192) (9192) (9192) (9192) (9192) (9192) (9192 9192) (9192) (8942) (9192) (8942) (9192) (8942) (9192) (8992) (9192) (8992) (9192) (8992) (9192 9192) (9192 9192) (9192) (9192) (9192) (9342) (9192) (9342) (9192) (9342) (9192 9192) (9192 9192) (9192) (8942) (9192) (8942) (9192) (8942) (9192) (9192) (9192) (9192) (9192) (9192) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192) (9192) (9192) (9167) (9192) (9167) (9192) (9167) (9192) (9142) (9192) (9142) (9192) (9142) (9192) (9192) (9192) (9217) (9192) (9217) (9192) (9217) (9192 9192) (9192) (9192) (9192 9192) (9192 9192) (9192) (9392) (9192) (9392) (9192) (9392) (9192 9192) (9192 9192) (9192 9192) (9192) (9192) (9192) (9192) (9192) (9192) (9192) (8992) (9192) (8992) (9192) (8992) (9192) (9192) (9192 9192) (9192) (9342) (9192) (9342) (9192) (9342) (9192 9192) (9192 9192) (9192) (9192 9192) (9192 9192) (9192) (9167) (9192) (9167) (9192) (9167) (9192) (9192) (9192 9192) (9192) (9192) (9192) (9192) (9192) (9192) (9192) (9442) (9192) (9442) (9192) (9442) (9192) (9192) (9192 9192) (9192) (9167) (9192) (9167) (9192) (9167) (9192) (9192 9192) (9192) (8942) (9192) (8942) (9192) (8942) (9192) (9142) (9192) (9142) (9192) (9142) (9192 9192) (9192 9192) (9192 9192) (9192) (9192) (9192) (9142) (9192) (9142) (9192) (9142) (9192 9192) (9192 9192) (9192 9192) (9192 9192) (9192) (8942) (9192) (8942) (9192) (8942) (9192 9192) (9192) (9442) (9192) (9442) (9192) (9442) (9192 9192) (9192) (8942) (9192) (8942) (9192) (8942) (9192) (8942) (9192) (9192) (9192) (9242) (9192) (9242) (9192) (9242) (9192) (9192))) :lonset (quoteldur (quote ((393 393) (157) (132) (137) (137) (137) (137) (249 249) (208) (348 348) (315 315) (498 498) (274) (202) (202) (202) (202) (202) (217 217) (395 395) (174) (174) (483 483) (378 378) (360 360) (147) (119) (119) (119) (119) (119) (163) (158) (143) (143) (143) (143) (233) (154) (154) (154) (154) (154) (295 295) (399 399) (249 249) (480 480) (251) (158) (158) (158) (158) (158) (152) (152) (349 349) (254 254) (207) (149) (91) (91) (91) (91) (270 270) (302 302) (444 444) (163) (163) (435 435) (162) (162) (158) (158) (156) (156) (385 385) (431 431) (461 461) (184) (112) (112) (112) (112) (112) (449 449) (230 230) (483 483) (310 310) (179) (179) (224 224) (258 258) (235) (176) (176) (154) (154) (164) (152) (132) (132) (132) (132) (148) (148) (103) (142) (152) (152) (152) (152) (147) (147) (238 238) (154) (154) (119) (187) (187) (187) (187) (187) (246 246) (213) (259) (259) (259) (259) (259) (200) (202) (202) (202) (202) (202) (368 368) (378 378) (140) (140) (189) (191) (191) (191) (191) (191) (385 385) (394 394) (155) (115) (185) (185) (185) (185) (232) (210) (210) (210) (210) (210) (384 384) (240 240) (400 400) (295 295) (328 328) (167) (167) (184) (171) (140) (140) (140) (140) (185) (162) (162) (162) (162) (162) (177) (177) (199) (201) (201) (201) (201) (201) (354 354) (160) (160) (303 303) (301 301) (242) (236) (236) (236) (236) (236) (208 208) (245 245) (353 353) (180) (233) (233) (233) (233) (233) (141) (165) (165) (165) (165) (165) (143) (143) (262 262) (198) (142) (160) (160) (160) (160) (366 366) (202 202) (211) (381 381) (406 406) (146) (160) (116) (116) (116) (116) (173) (173) (374 374) (80) (119) (145) (145) (145) (145) (247) (188) (188) (188) (188) (188) (136) (136) (272 272) (203) (213) (213) (213) (213) (213) (287) (245 245) (233) (222) (222) (222) (222) (222) (116) (139) (139) (139) (139) (139) (393 393) (235 235) (225 225) (148) (148) (305) (168) (168) (168) (168) (168) (431 431) (284 284) (345 345) (387 387) (138) (187) (187) (187) (187) (187) (429 429) (220) (186) (186) (186) (186) (186) (418 418) (147) (124) (111) (105) (105) (105) (105) (105) (178) (178) (189) (224) (224) (224) (224) (224) (169) (169))) :lvel (quote ((86 86) (57) (68) (55) (55) (55) (55) (80 80) (62) (69 69) (69 69) (85 85) (55) (56) (56) (56) (56) (56) (49 49) (74 74) (63) (63) (81 81) (69 69) (50 50) (55) (66) (66) (66) (66) (66) (59) (70) (58) (58) (58) (58) (63) (55) (55) (55) (55) (55) (63 63) (76 76) (61 61) (58 58) (64) (62) (62) (62) (62) (62) (73) (73) (90 90) (51 51) (57) (73) (61) (61) (61) (61) (55 55) (61 61) (73 73) (75) (75) (75 75) (59) (59) (57) (57) (58) (58) (61 61) (62 62) (55 55) (59) (58) (58) (58) (58) (58) (85 85) (90 90) (70 70) (74 74) (58) (58) (54 54) (61 61) (73) (72) (72) (70) (70) (58) (71) (56) (56) (56) (56) (74) (74) (62) (68) (55) (55) (55) (55) (67) (67) (81 81) (73) (73) (55) (57) (57) (57) (57) (57) (64 64) (66) (55) (55) (55) (55) (55) (55) (55) (55) (55) (55) (55) (65 65) (87 87) (68) (68) (55) (60) (60) (60) (60) (60) (54 54) (74 74) (65) (68) (55) (55) (55) (55) (56) (56) (56) (56) (56) (56) (77 77) (84 84) (64 64) (52 52) (52 52) (71) (71) (55) (67) (57) (57) (57) (57) (57) (59) (59) (59) (59) (59) (73) (73) (55) (58) (58) (58) (58) (58) (83 83) (75) (75) (46 46) (58 58) (56) (59) (59) (59) (59) (59) (71 71) (65 65) (72 72) (55) (55) (55) (55) (55) (55) (57) (55) (55) (55) (55) (55) (72) (72) (54 54) (56) (73) (58) (58) (58) (58) (67 67) (84 84) (63) (47 47) (52 52) (56) (74) (66) (66) (66) (66) (72) (72) (87 87) (57) (72) (56) (56) (56) (56) (55) (56) (56) (56) (56) (56) (65) (65) (68 68) (58) (55) (55) (55) (55) (55) (56) (77 77) (55) (55) (55) (55) (55) (55) (55) (67) (67) (67) (67) (67) (71 71) (69 69) (80 80) (66) (66) (55) (67) (67) (67) (67) (67) (65 65) (54 54) (90 90) (57 57) (56) (59) (59) (59) (59) (59) (67 67) (59) (55) (55) (55) (55) (55) (57 57) (55) (70) (71) (62) (62) (62) (62) (62) (67) (67) (57) (60) (60) (60) (60) (60) (59) (59))) :loffset (quote ((0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quotelegato 0)))) (load-port-info newobj (quote ((0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((9144 9144) (9144) (9144) (9144) (9144) (9144) (9144) (9144) (9144) (9144 9144) (9144) (8944) (9144) (8944) (9144) (8944) (9144 9144) (9144) (9144) (9144) (8994) (9144) (8994) (9144) (8994) (9144) (9169) (9144) (9169) (9144) (9169) (9144) (9094) (9144) (9094) (9144) (9094) (9144) (9144) (9144 9144) (9144) (9094) (9144) (9094) (9144) (9094) (9144) (9144) (9144) (9144) (9144 9144) (9144) (8894) (9144) (8894) (9144) (8894) (9144) (9094) (9144) (9094) (9144) (9094) (9144 9144) (9144 9144) (9144 9144) (9144 9144) (9144) (9194) (9144) (9194) (9144) (9194) (9144) (8894) (9144) (8894) (9144) (8894) (9144 9144) (9144 9144) (9144) (9344) (9144) (9344) (9144) (9344) (9144 9144) (9144 9144) (9144 9144) (9144 9144) (9144 9144) (9144) (9144) (9144) (9144) (9144) (9144) (9144 9144) (9144) (9344) (9144) (9344) (9144) (9344) (9144 9144) (9144) (9144) (9144) (9169) (9144) (9169) (9144) (9169) (9144 9144) (9144) (9144) (9144) (9144) (9144 9144) (9144) (9144) (9144) (9194) (9144) (9194) (9144) (9194) (9144 9144) (9144) (9144 9144) (9144 9144) (9144 9144) (9144 9144) (9144) (9144) (9144 9144) (9144 9144) (9144 9144) (9144) (9144) (9144) (8894) (9144) (8894) (9144) (8894) (9144) (9144) (9144) (9144) (9144 9144) (9144 9144) (9144) (8919) (9144) (8919) (9144) (8919) (9144 9144) (9144) (8944) (9144) (8944) (9144) (8944) (9144) (9144) (9144 9144) (9144 9144) (9144) (9144) (9144) (8944) (9144) (8944) (9144) (8944) (9144 9144) (9144 9144) (9144 9144) (9144 9144) (9144 9144) (9144 9144) (9144) (9094) (9144) (9094) (9144) (9094) (9144 9144) (9144 9144) (9144 9144) (9144) (9144) (9144) (9144) (9144) (9144) (9144 9144) (9144 9144) (9144 9144) (9144) (9094) (9144) (9094) (9144) (9094) (9144 9144) (9144) (9144) (9144) (9144) (9144 9144) (9144 9144) (9144 9144) (9144 9144) (9144) (9144) (9144) (9144) (9144 9144) (9144) (9144) (9144) (9144) (9144 9144) (9144 9144) (9144) (9144 9144) (9144) (9144) (9144) (9144) (9144) (9144) (9144) (9144) (9144 9144) (9144 9144) (9144) (9144) (9144) (9394) (9144) (9394) (9144) (9394) (9144 9144) (9144 9144) (9144) (9144) (9144 9144) (9144 9144) (9144) (9144) (9144) (9144) (9144) (9144) (9144) (9144) (9144 9144) (9144) (9144) (9144) (9144) (9144) (9144) (9144) (8994) (9144) (8994) (9144) (8994) (9144) (9394) (9144) (9394) (9144) (9394) (9144) (9144) (9144 9144) (9144) (9144) (9144) (9394) (9144) (9394) (9144) (9394) (9144) (8894) (9144) (8894) (9144) (8894) (9144) (9144) (9144))) :lonset (quoteldur (quote ((348 348) (252) (203) (203) (203) (203) (203) (174) (174) (427 427) (233) (255) (255) (255) (255) (255) (372 372) (142) (142) (266) (198) (198) (198) (198) (198) (132) (233) (233) (233) (233) (233) (210) (112) (112) (112) (112) (112) (157) (157) (265 265) (226) (133) (120) (120) (120) (120) (175) (175) (135) (135) (259 259) (144) (178) (178) (178) (178) (178) (245) (138) (112) (112) (112) (112) (325 325) (327 327) (403 403) (395 395) (81) (168) (161) (161) (161) (161) (122) (153) (145) (145) (145) (145) (378 378) (208 208) (237) (216) (216) (216) (216) (216) (499 499) (247 247) (467 467) (247 247) (462 462) (167) (167) (172) (172) (145) (145) (230 230) (230) (161) (161) (161) (161) (161) (298 298) (175) (175) (207) (252) (252) (252) (252) (252) (284 284) (177) (177) (152) (152) (237 237) (218) (211) (115) (125) (112) (112) (112) (112) (288 288) (208) (468 468) (302 302) (470 470) (395 395) (175) (175) (280 280) (418 418) (289 289) (165) (165) (197) (281) (281) (281) (281) (281) (142) (142) (162) (162) (246 246) (364 364) (198) (199) (199) (199) (199) (199) (499 499) (179) (127) (138) (138) (138) (138) (166) (166) (383 383) (380 380) (142) (142) (202) (165) (165) (165) (165) (165) (259 259) (499 499) (466 466) (277 277) (216 216) (279 279) (209) (213) (213) (213) (213) (213) (478 478) (206 206) (453 453) (172) (172) (149) (149) (147) (147) (289 289) (222 222) (493 493) (134) (197) (197) (197) (197) (197) (237 237) (159) (159) (164) (164) (288 288) (347 347) (256 256) (407 407) (175) (175) (167) (167) (322 322) (177) (177) (161) (161) (221 221) (420 420) (230) (384 384) (159) (159) (168) (168) (173) (173) (146) (146) (490 490) (348 348) (155) (155) (224) (161) (161) (161) (161) (161) (262 262) (281 281) (180) (180) (208 208) (392 392) (174) (174) (171) (161) (104) (104) (104) (104) (360 360) (176) (176) (131) (131) (140) (140) (235) (182) (182) (182) (182) (182) (198) (135) (135) (135) (135) (135) (160) (160) (310 310) (176) (176) (219) (149) (149) (149) (149) (149) (189) (194) (194) (194) (194) (194) (176) (176) (209))) :lvel (quote ((66 66) (57) (60) (60) (60) (60) (60) (73) (73) (70 70) (56) (57) (57) (57) (57) (57) (48 48) (74) (74) (55) (61) (61) (61) (61) (61) (55) (59) (59) (59) (59) (59) (55) (61) (61) (61) (61) (61) (66) (66) (48 48) (59) (69) (56) (56) (56) (56) (58) (58) (64) (64) (59 59) (55) (63) (63) (63) (63) (63) (57) (68) (56) (56) (56) (56) (78 78) (69 69) (62 62) (84 84) (55) (65) (57) (57) (57) (57) (57) (67) (56) (56) (56) (56) (66 66) (48 48) (55) (56) (56) (56) (56) (56) (77 77) (46 46) (70 70) (46 46) (57 57) (64) (64) (66) (66) (59) (59) (67 67) (61) (57) (57) (57) (57) (57) (61 61) (56) (56) (55) (56) (56) (56) (56) (56) (78 78) (69) (69) (64) (64) (72 72) (56) (68) (55) (73) (56) (56) (56) (56) (68 68) (59) (71 71) (53 53) (74 74) (45 45) (70) (70) (83 83) (84 84) (81 81) (60) (60) (63) (57) (57) (57) (57) (57) (63) (63) (61) (61) (58 58) (62 62) (55) (56) (56) (56) (56) (56) (75 75) (56) (69) (56) (56) (56) (56) (68) (68) (62 62) (77 77) (68) (68) (56) (55) (55) (55) (55) (55) (85 85) (69 69) (52 52) (75 75) (57 57) (45 45) (55) (58) (58) (58) (58) (58) (51 51) (65 65) (87 87) (69) (69) (67) (67) (59) (59) (52 52) (49 49) (53 53) (60) (56) (56) (56) (56) (56) (79 79) (69) (69) (57) (57) (64 64) (66 66) (80 80) (55 55) (70) (70) (63) (63) (68 68) (73) (73) (57) (57) (76 76) (61 61) (75) (46 46) (73) (73) (73) (73) (66) (66) (59) (59) (71 71) (52 52) (59) (59) (61) (57) (57) (57) (57) (57) (60 60) (71 71) (73) (73) (49 49) (47 47) (67) (67) (55) (72) (59) (59) (59) (59) (77 77) (56) (56) (75) (75) (58) (58) (57) (56) (56) (56) (56) (56) (65) (59) (59) (59) (59) (59) (66) (66) (87 87) (59) (59) (59) (55) (55) (55) (55) (55) (60) (56) (56) (56) (56) (56) (55) (55) (73))) :loffset (quote ((0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quotelegato 0)))) (load-port-info newobj (quote ((0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((9096) (9096) (9096) (8871) (9096) (8871) (9096) (8871) (9096 9096) (9096) (9096) (9096) (9321) (9096) (9321) (9096) (9321) (9096 9096) (9096 9096) (9096 9096) (9096) (9121) (9096) (9121) (9096) (9121) (9096 9096) (9096 9096) (9096 9096) (9096) (9296) (9096) (9296) (9096) (9296) (9096) (9096 9096) (9096 9096) (9096) (9096) (9096 9096) (9096) (9096) (9246) (9096) (9246) (9096) (9246) (9096 9096) (9096) (8871) (9096) (8871) (9096) (8871) (9096) (9096) (9096 9096) (9096) (9096) (9096 9096) (9096 9096) (9096) (9096) (9096) (9096) (9096) (9096) (9096) (9321) (9096) (9321) (9096) (9321) (9096 9096) (9096 9096) (9096 9096) (9096) (9096) (9096) (9096) (9096 9096) (9096) (8846) (9096) (8846) (9096) (8846) (9096 9096) (9096) (8896) (9096) (8896) (9096) (8896) (9096 9096) (9096) (9096) (9096) (9346) (9096) (9346) (9096) (9346) (9096 9096) (9096) (9346) (9096) (9346) (9096) (9346) (9096) (9096) (9096) (9096) (9096) (9096) (9096) (9096) (9096) (9096) (9096) (9096) (9096) (9096) (9096) (9096) (9346) (9096) (9346) (9096) (9346) (9096 9096) (9096) (9096) (9096) (9096) (9096) (9096) (9096 9096) (9096 9096) (9096 9096) (9096) (9096) (9096) (8846) (9096) (8846) (9096) (8846) (9096 9096) (9096) (9096) (9096) (9096 9096) (9096 9096) (9096) (9096) (9096 9096) (9096 9096) (9096) (9246) (9096) (9246) (9096) (9246) (9096 9096) (9096) (9121) (9096) (9121) (9096) (9121) (9096 9096) (9096 9096) (9096) (8896) (9096) (8896) (9096) (8896) (9096) (8896) (9096) (9346) (9096) (9346) (9096) (9346) (9096 9096) (9096 9096) (9096 9096) (9096) (9146) (9096) (9146) (9096) (9146) (9096 9096) (9096) (9096) (9096 9096) (9096) (9121) (9096) (9121) (9096) (9121) (9096) (9096) (9096) (9096) (9096) (9296) (9096) (9296) (9096) (9296) (9096) (9096) (9096) (9096) (9096) (9296) (9096) (9296) (9096) (9296) (9096 9096) (9096 9096) (9096 9096) (9096) (9096) (9096) (9096) (9096) (9096) (9096 9096) (9096 9096) (9096) (8946) (9096) (8946) (9096) (8946) (9096) (8946) (9096) (8896) (9096) (8896) (9096) (8896) (9096) (9071) (9096) (9071) (9096) (9071) (9096 9096) (9096 9096) (9096) (9096) (9096 9096) (9096) (9096) (9096 9096) (9096 9096) (9096) (9096 9096) (9096) (9121) (9096) (9121) (9096) (9121) (9096) (9096) (9096) (9096) (9096) (9096) (9096) (9146) (9096) (9146) (9096) (9146) (9096 9096) (9096 9096) (9096 9096) (9096) (8896) (9096) (8896) (9096) (8896) (9096 9096) (9096) (8846) (9096) (8846) (9096) (8846) (9096) (9246) (9096) (9246) (9096) (9246) (9096) (9096 9096) (9096 9096) (9096) (9096) (9096) (9096) (9096 9096) (9096 9096) (9096) (9096) (9096 9096) (9096) (9096) (9096 9096) (9096 9096) (9096) (9096) (9096 9096))) :lonset (quoteldur (quote ((165) (165) (185) (163) (163) (163) (163) (163) (325 325) (181) (181) (148) (130) (130) (130) (130) (130) (237 237) (415 415) (410 410) (223) (222) (222) (222) (222) (222) (216 216) (495 495) (286 286) (225) (244) (244) (244) (244) (244) (272) (468 468) (274 274) (156) (156) (409 409) (210) (137) (108) (162) (162) (162) (162) (306 306) (187) (108) (115) (115) (115) (115) (172) (172) (479 479) (172) (172) (252 252) (220 220) (162) (150) (170) (170) (170) (170) (261) (225) (225) (225) (225) (225) (247 247) (452 452) (497 497) (179) (179) (161) (161) (388 388) (166) (149) (149) (149) (149) (149) (228 228) (248) (221) (221) (221) (221) (221) (277 277) (142) (142) (120) (152) (152) (152) (152) (152) (298 298) (120) (155) (155) (155) (155) (155) (164) (164) (279) (164) (259) (259) (259) (259) (259) (247) (226) (226) (226) (226) (226) (157) (122) (142) (142) (142) (142) (337 337) (159) (111) (111) (111) (111) (111) (261 261) (290 290) (212 212) (180) (180) (202) (202) (202) (202) (202) (202) (354 354) (178) (178) (221) (397 397) (324 324) (148) (148) (278 278) (326 326) (180) (131) (131) (131) (131) (131) (406 406) (279) (199) (199) (199) (199) (199) (224 224) (357 357) (134) (127) (122) (103) (103) (103) (103) (103) (113) (174) (174) (174) (174) (174) (446 446) (304 304) (246 246) (190) (178) (109) (109) (109) (109) (331 331) (165) (165) (265 265) (222) (209) (209) (209) (209) (209) (133) (133) (177) (177) (202) (170) (170) (170) (170) (170) (137) (137) (171) (171) (216) (172) (172) (172) (172) (172) (386 386) (308 308) (424 424) (164) (164) (155) (155) (139) (139) (426 426) (337 337) (153) (118) (113) (99) (99) (99) (99) (99) (153) (261) (261) (261) (261) (261) (134) (154) (127) (127) (127) (127) (426 426) (242 242) (178) (178) (405 405) (138) (138) (366 366) (428 428) (201) (266 266) (237) (253) (253) (253) (253) (253) (154) (154) (179) (179) (173) (173) (204) (135) (135) (135) (135) (135) (242 242) (318 318) (371 371) (98) (141) (162) (162) (162) (162) (325 325) (228) (208) (208) (208) (208) (208) (152) (170) (170) (170) (170) (170) (203) (454 454) (329 329) (135) (135) (172) (172) (208 208) (336 336) (149) (149) (259 259) (163) (163) (432 432) (288 288) (132) (132) (442 442))) :lvel (quote ((56) (56) (55) (56) (56) (56) (56) (56) (63 63) (55) (55) (55) (55) (55) (55) (55) (55) (67 67) (86 86) (80 80) (59) (55) (55) (55) (55) (55) (87 87) (76 76) (74 74) (55) (56) (56) (56) (56) (56) (70) (59 59) (55 55) (67) (67) (83 83) (72) (55) (72) (59) (59) (59) (59) (55 55) (55) (71) (56) (56) (56) (56) (58) (58) (69 69) (61) (61) (75 75) (48 48) (55) (66) (57) (57) (57) (57) (61) (58) (58) (58) (58) (58) (50 50) (75 75) (62 62) (56) (56) (74) (74) (79 79) (60) (56) (56) (56) (56) (56) (57 57) (57) (55) (55) (55) (55) (55) (63 63) (59) (59) (58) (56) (56) (56) (56) (56) (51 51) (56) (57) (57) (57) (57) (57) (58) (58) (71) (63) (55) (55) (55) (55) (55) (57) (55) (55) (55) (55) (55) (55) (70) (61) (61) (61) (61) (67 67) (69) (59) (59) (59) (59) (59) (72 72) (87 87) (63 63) (64) (64) (56) (57) (57) (57) (57) (57) (63 63) (65) (65) (73) (46 46) (65 65) (61) (61) (77 77) (60 60) (59) (56) (56) (56) (56) (56) (49 49) (56) (59) (59) (59) (59) (59) (51 51) (51 51) (55) (71) (66) (55) (55) (55) (55) (55) (57) (56) (56) (56) (56) (56) (83 83) (73 73) (80 80) (56) (72) (62) (62) (62) (62) (86 86) (57) (57) (63 63) (63) (64) (64) (64) (64) (64) (59) (59) (69) (69) (56) (57) (57) (57) (57) (57) (68) (68) (63) (63) (55) (56) (56) (56) (56) (56) (59 59) (75 75) (77 77) (61) (61) (75) (75) (65) (65) (51 51) (64 64) (61) (73) (60) (55) (55) (55) (55) (55) (57) (59) (59) (59) (59) (59) (57) (73) (55) (55) (55) (55) (70 70) (86 86) (67) (67) (81 81) (75) (75) (65 65) (63 63) (70) (57 57) (55) (55) (55) (55) (55) (55) (56) (56) (60) (60) (63) (63) (58) (55) (55) (55) (55) (55) (63 63) (71 71) (85 85) (62) (67) (55) (55) (55) (55) (74 74) (55) (55) (55) (55) (55) (55) (55) (70) (70) (70) (70) (70) (67) (74 74) (75 75) (62) (62) (64) (64) (65 65) (82 82) (65) (65) (71 71) (60) (60) (81 81) (53 53) (61) (61) (83 83))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0 0))) :lchan (quotelegato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8914) (8914) (8914 8914) (8914 8914) (8914 8914) (8914 8914) (8914 8914) (8914 8914) (8914 8914) (8914) (8914) (8914 8914) (8914 8914) (8914) (9164) (8914) (9164) (8914) (9164) (8914 8914) (8914) (8764) (8914) (8764) (8914) (8764) (8914 8914) (8914 8914) (8914 8914) (8914) (8914) (8914 8914) (8914) (8864) (8914) (8864) (8914) (8864) (8914 8914) (8914) (8914) (8914) (8914) (8914 8914) (8914) (8914) (8914) (8914) (8914 8914) (8914) (8689) (8914) (8689) (8914) (8689) (8914) (8689) (8914) (8689) (8914) (8689) (8914 8914) (8914 8914) (8914 8914) (8914 8914) (8914 8914) (8914 8914) (8914) (8714) (8914) (8714) (8914) (8714) (8914) (8714) (8914) (8914) (8914) (8939) (8914) (8939) (8914) (8939) (8914 8914) (8914 8914) (8914 8914) (8914 8914) (8914 8914) (8914) (8914) (8914) (8964) (8914) (8964) (8914) (8964) (8914) (8914) (8914 8914) (8914 8914) (8914) (9164) (8914) (9164) (8914) (9164) (8914) (8914) (8914 8914) (8914) (8914) (8914) (8714) (8914) (8714) (8914) (8714) (8914 8914) (8914) (9139) (8914) (9139) (8914) (9139) (8914 8914) (8914 8914) (8914 8914) (8914) (8914) (8914) (9139) (8914) (9139) (8914) (9139) (8914) (9064) (8914) (9064) (8914) (9064) (8914 8914) (8914) (8914) (8914 8914) (8914 8914) (8914) (8914) (8914) (8689) (8914) (8689) (8914) (8689) (8914 8914) (8914) (8914) (8914 8914) (8914 8914) (8914 8914) (8914) (8864) (8914) (8864) (8914) (8864) (8914) (9114) (8914) (9114) (8914) (9114) (8914) (9064) (8914) (9064) (8914) (9064) (8914 8914) (8914) (8914) (8914) (8889) (8914) (8889) (8914) (8889) (8914) (8889) (8914) (8889) (8914) (8889) (8914) (8914) (8914 8914) (8914 8914) (8914 8914) (8914) (8914) (8914 8914) (8914) (9114) (8914) (9114) (8914) (9114) (8914 8914) (8914 8914) (8914) (8914) (8914 8914) (8914) (9164) (8914) (9164) (8914) (9164) (8914 8914) (8914 8914) (8914 8914) (8914 8914) (8914) (8964) (8914) (8964) (8914) (8964) (8914) (8664) (8914) (8664) (8914) (8664) (8914 8914) (8914) (8664) (8914) (8664) (8914) (8664) (8914 8914) (8914) (8889) (8914) (8889) (8914) (8889) (8914) (8914) (8914 8914) (8914) (8914) (8914 8914) (8914) (8914) (8914 8914) (8914 8914) (8914 8914) (8914 8914) (8914 8914) (8914) (8914) (8914) (9064) (8914) (9064) (8914) (9064) (8914 8914) (8914) (8689) (8914) (8689) (8914) (8689) (8914 8914) (8914) (8914 8914) (8914) (9064) (8914) (9064) (8914) (9064) (8914 8914) (8914) (8914) (8914) (8914) (8914) (8939) (8914) (8939) (8914) (8939) (8914) (8914) (8914) (8914 8914) (8914 8914) (8914) (9064) (8914) (9064) (8914) (9064) (8914 8914))) :lonset (quoteldur (quote ((171) (171) (249 249) (245 245) (264 264) (275 275) (248 248) (390 390) (333 333) (181) (181) (310 310) (380 380) (144) (163) (178) (178) (178) (178) (251 251) (211) (231) (231) (231) (231) (231) (463 463) (490 490) (360 360) (135) (135) (319 319) (208) (160) (160) (160) (160) (160) (333 333) (157) (157) (157) (157) (261 261) (170) (170) (173) (173) (263 263) (185) (85) (171) (171) (171) (171) (135) (135) (126) (126) (126) (126) (241 241) (480 480) (373 373) (270 270) (218 218) (243 243) (135) (117) (154) (79) (79) (79) (79) (79) (141) (141) (131) (126) (138) (138) (138) (138) (455 455) (270 270) (450 450) (400 400) (449 449) (179) (179) (88) (179) (167) (167) (167) (167) (155) (155) (268 268) (436 436) (213) (223) (223) (223) (223) (223) (143) (143) (350 350) (132) (132) (147) (167) (181) (181) (181) (181) (398 398) (147) (167) (167) (167) (167) (167) (467 467) (420 420) (448 448) (181) (181) (238) (210) (210) (210) (210) (210) (131) (142) (142) (142) (142) (142) (409 409) (176) (176) (216 216) (466 466) (144) (144) (201) (163) (163) (163) (163) (163) (393 393) (176) (176) (332 332) (431 431) (314 314) (157) (199) (199) (199) (199) (199) (136) (191) (149) (149) (149) (149) (210) (175) (175) (175) (175) (175) (439 439) (156) (156) (122) (163) (163) (163) (163) (163) (148) (144) (162) (162) (162) (162) (168) (168) (307 307) (315 315) (495 495) (144) (144) (316 316) (211) (231) (231) (231) (231) (231) (350 350) (435 435) (132) (132) (433 433) (160) (120) (120) (120) (120) (120) (382 382) (291 291) (386 386) (324 324) (239) (219) (219) (219) (219) (219) (309) (191) (191) (191) (191) (191) (338 338) (156) (155) (155) (155) (155) (155) (359 359) (238) (239) (239) (239) (239) (239) (144) (144) (241 241) (166) (166) (342 342) (172) (172) (209 209) (206 206) (433 433) (383 383) (401 401) (163) (163) (203) (149) (149) (149) (149) (149) (497 497) (235) (247) (247) (247) (247) (247) (320 320) (220) (476 476) (136) (151) (146) (146) (146) (146) (208 208) (165) (165) (167) (167) (200) (207) (207) (207) (207) (207) (144) (144) (257) (212 212) (295 295) (192) (136) (136) (136) (136) (136) (80 80))) :lvel (quote ((67) (67) (58 58) (90 90) (50 50) (83 83) (66 66) (68 68) (46 46) (59) (59) (50 50) (45 45) (59) (65) (59) (59) (59) (59) (63 63) (56) (62) (62) (62) (62) (62) (58 58) (75 75) (49 49) (60) (60) (56 56) (55) (56) (56) (56) (56) (56) (56 56) (70) (70) (68) (68) (68 68) (66) (66) (72) (72) (67 67) (59) (70) (57) (57) (57) (57) (57) (65) (65) (65) (65) (65) (72 72) (46 46) (59 59) (90 90) (48 48) (61 61) (72) (70) (61) (56) (56) (56) (56) (56) (56) (56) (55) (72) (55) (55) (55) (55) (87 87) (84 84) (49 49) (55 55) (50 50) (58) (58) (58) (72) (60) (60) (60) (60) (64) (64) (63 63) (54 54) (55) (55) (55) (55) (55) (55) (69) (69) (84 84) (66) (66) (55) (65) (56) (56) (56) (56) (87 87) (55) (55) (55) (55) (55) (55) (87 87) (74 74) (81 81) (71) (71) (57) (55) (55) (55) (55) (55) (58) (55) (55) (55) (55) (55) (77 77) (62) (62) (73 73) (77 77) (62) (62) (55) (60) (60) (60) (60) (60) (63 63) (57) (57) (54 54) (50 50) (68 68) (65) (57) (57) (57) (57) (57) (55) (72) (56) (56) (56) (56) (55) (61) (61) (61) (61) (61) (50 50) (61) (61) (60) (55) (55) (55) (55) (55) (58) (74) (55) (55) (55) (55) (72) (72) (67 67) (87 87) (56 56) (62) (62) (48 48) (56) (58) (58) (58) (58) (58) (81 81) (56 56) (74) (74) (90 90) (56) (60) (60) (60) (60) (60) (48 48) (83 83) (90 90) (79 79) (56) (57) (57) (57) (57) (57) (62) (55) (55) (55) (55) (55) (68 68) (59) (60) (60) (60) (60) (60) (60 60) (59) (62) (62) (62) (62) (62) (56) (56) (62 62) (65) (65) (50 50) (71) (71) (78 78) (46 46) (78 78) (87 87) (71 71) (55) (55) (57) (56) (56) (56) (56) (56) (52 52) (55) (58) (58) (58) (58) (58) (70 70) (73) (56 56) (56) (72) (55) (55) (55) (55) (54 54) (68) (68) (68) (68) (59) (58) (58) (58) (58) (58) (72) (72) (72) (57 57) (68 68) (64) (56) (56) (56) (56) (56) (55 55))) :loffset (quote ((0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0))) :lchan (quote ((6) (6) (6 6) (6 6) (6 6) (6 6) (6 6) (6 6) (6 6) (6) (6) (6 6) (6 6) (6) (6) (6) (6) (6) (6) (6 6) (6) (6) (6) (6) (6) (6) (6 6) (6 6) (6 6) (6) (6) (6 6) (6) (6) (6) (6) (6) (6) (6 6) (6) (6) (6) (6) (6 6) (6) (6) (6) (6) (6 6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6 6) (6 6) (6 6) (6 6) (6 6) (6 6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6 6) (6 6) (6 6) (6 6) (6 6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6 6) (6 6) (6) (6) (6) (6) (6) (6) (6) (6) (6 6) (6) (6) (6) (6) (6) (6) (6) (6) (6 6) (6) (6) (6) (6) (6) (6) (6 6) (6 6) (6 6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6 6) (6) (6) (6 6) (6 6) (6) (6) (6) (6) (6) (6) (6) (6) (6 6) (6) (6) (6 6) (6 6) (6 6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6 6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6 6) (6 6) (6 6) (6) (6) (6 6) (6) (6) (6) (6) (6) (6) (6 6) (6 6) (6) (6) (6 6) (6) (6) (6) (6) (6) (6) (6 6) (6 6) (6 6) (6 6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6 6) (6) (6) (6) (6) (6) (6) (6 6) (6) (6) (6) (6) (6) (6) (6) (6) (6 6) (6) (6) (6 6) (6) (6) (6 6) (6 6) (6 6) (6 6) (6 6) (6) (6) (6) (6) (6) (6) (6) (6) (6 6) (6) (6) (6) (6) (6) (6) (6 6) (6) (6 6) (6) (6) (6) (6) (6) (6) (6 6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6) (6 6) (6 6) (6) (6) (6) (6) (6) (6) (6 6))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8914) (8714) (8914) (8714) (8914) (8714) (8914) (8914) (8914 8914) (8914) (9164) (8914) (9164) (8914) (9164) (8914) (8689) (8914) (8689) (8914) (8689) (8914 8914) (8914 8914) (8914) (8714) (8914) (8714) (8914) (8714) (8914) (9114) (8914) (9114) (8914) (9114) (8914) (8914) (8914 8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914 8914) (8914 8914) (8914 8914) (8914 8914) (8914) (8914) (8914 8914) (8914 8914) (8914 8914) (8914 8914) (8914 8914) (8914) (8764) (8914) (8764) (8914) (8764) (8914) (8914) (8914 8914) (8914 8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914) (8664) (8914) (8664) (8914) (8664) (8914 8914) (8914 8914) (8914 8914) (8914) (8964) (8914) (8964) (8914) (8964) (8914 8914) (8914 8914) (8914) (8939) (8914) (8939) (8914) (8939) (8914 8914) (8914 8914) (8914 8914) (8914) (8914) (8914 8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914 8914) (8914 8914) (8914 8914) (8914 8914) (8914 8914) (8914) (8864) (8914) (8864) (8914) (8864) (8914 8914) (8914 8914) (8914) (8914) (8914 8914) (8914) (8914) (8914 8914) (8914 8914) (8914 8914) (8914) (8889) (8914) (8889) (8914) (8889) (8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914 8914) (8914 8914) (8914) (8664) (8914) (8664) (8914) (8664) (8914 8914) (8914 8914) (8914) (8964) (8914) (8964) (8914) (8964) (8914 8914) (8914 8914) (8914) (8864) (8914) (8864) (8914) (8864) (8914 8914) (8914 8914) (8914 8914) (8914) (8689) (8914) (8689) (8914) (8689) (8914) (8914) (8914 8914) (8914) (8914) (8914) (8914) (8914 8914) (8914 8914) (8914 8914) (8914 8914) (8914) (8714) (8914) (8714) (8914) (8714) (8914) (9114) (8914) (9114) (8914) (9114) (8914 8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914 8914) (8914) (8939) (8914) (8939) (8914) (8939) (8914) (8689) (8914) (8689) (8914) (8689) (8914 8914) (8914 8914) (8914 8914) (8914 8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914 8914) (8914) (8914) (8914) (8914) (8914 8914) (8914) (8914) (8914) (8914) (8914) (8914) (8914 8914) (8914 8914) (8914 8914) (8914) (8889) (8914) (8889) (8914) (8889) (8914 8914) (8914 8914) (8914) (8914) (8914 8914) (8914) (8914) (8914 8914) (8914) (8914 8914) (8914 8914) (8914) (8914) (8914) (8689) (8914) (8689) (8914) (8689) (8914 8914) (8914 8914) (8914 8914) (8914 8914) (8914) (8764) (8914) (8764) (8914) (8764))) :lonset (quoteldur (quote ((171) (132) (132) (132) (132) (132) (152) (152) (279 279) (151) (136) (136) (136) (136) (136) (230) (140) (140) (140) (140) (140) (306 306) (203 203) (197) (126) (126) (126) (126) (126) (130) (109) (109) (109) (109) (109) (146) (146) (430 430) (162) (162) (172) (172) (161) (161) (146) (146) (343 343) (264 264) (463 463) (235 235) (133) (133) (271 271) (449 449) (267 267) (356 356) (397 397) (215) (180) (180) (180) (180) (180) (135) (135) (358 358) (457 457) (145) (125) (125) (125) (125) (125) (160) (160) (167) (167) (156) (156) (136) (136) (158) (173) (173) (173) (173) (173) (343 343) (408 408) (312 312) (213) (275) (275) (275) (275) (275) (459 459) (205 205) (182) (188) (188) (188) (188) (188) (253 253) (291 291) (232 232) (176) (176) (430 430) (136) (197) (197) (197) (197) (197) (201 201) (313 313) (462 462) (290 290) (448 448) (242) (212) (212) (212) (212) (212) (229 229) (291 291) (168) (168) (485 485) (181) (181) (231 231) (433 433) (451 451) (144) (135) (129) (129) (129) (129) (161) (161) (156) (156) (260) (207) (207) (207) (207) (207) (138) (138) (156) (156) (286 286) (434 434) (233) (219) (219) (219) (219) (219) (303 303) (439 439) (204) (270) (270) (270) (270) (270) (484 484) (233 233) (209) (113) (113) (113) (113) (113) (440 440) (275 275) (428 428) (230) (138) (138) (138) (138) (138) (131) (131) (322 322) (152) (152) (180) (180) (468 468) (293 293) (405 405) (413 413) (146) (122) (122) (122) (122) (122) (339) (118) (118) (118) (118) (118) (367 367) (152) (152) (224) (254) (254) (254) (254) (254) (260 260) (99) (155) (190) (190) (190) (190) (152) (128) (128) (128) (128) (128) (461 461) (417 417) (305 305) (447 447) (195) (226) (226) (226) (226) (226) (337 337) (137) (137) (137) (137) (257 257) (154) (204) (204) (204) (204) (204) (454 454) (226 226) (290 290) (112) (145) (187) (187) (187) (187) (474 474) (364 364) (161) (161) (245 245) (138) (138) (248 248) (202) (447 447) (421 421) (169) (169) (240) (250) (250) (250) (250) (250) (412 412) (223 223) (235 235) (368 368) (158) (186) (186) (186) (186) (186))) :lvel (quote ((57) (65) (65) (65) (65) (65) (58) (58) (54 54) (68) (56) (56) (56) (56) (56) (55) (55) (55) (55) (55) (55) (53 53) (54 54) (62) (56) (56) (56) (56) (56) (70) (55) (55) (55) (55) (55) (74) (74) (75 75) (75) (75) (55) (55) (58) (58) (62) (62) (65 65) (62 62) (79 79) (58 58) (66) (66) (76 76) (53 53) (49 49) (77 77) (54 54) (56) (55) (55) (55) (55) (55) (73) (73) (66 66) (61 61) (55) (55) (55) (55) (55) (55) (63) (63) (71) (71) (60) (60) (59) (59) (55) (57) (57) (57) (57) (57) (87 87) (75 75) (56 56) (61) (56) (56) (56) (56) (56) (49 49) (48 48) (67) (55) (55) (55) (55) (55) (83 83) (66 66) (58 58) (70) (70) (50 50) (55) (55) (55) (55) (55) (55) (88 88) (86 86) (78 78) (60 60) (75 75) (66) (58) (58) (58) (58) (58) (69 69) (85 85) (65) (65) (79 79) (63) (63) (76 76) (79 79) (86 86) (59) (70) (55) (55) (55) (55) (75) (75) (59) (59) (55) (56) (56) (56) (56) (56) (61) (61) (75) (75) (88 88) (80 80) (55) (61) (61) (61) (61) (61) (79 79) (66 66) (61) (59) (59) (59) (59) (59) (45 45) (47 47) (62) (56) (56) (56) (56) (56) (77 77) (69 69) (85 85) (65) (55) (55) (55) (55) (55) (65) (65) (52 52) (63) (63) (67) (67) (51 51) (81 81) (75 75) (53 53) (61) (61) (61) (61) (61) (61) (59) (56) (56) (56) (56) (56) (85 85) (66) (66) (56) (67) (67) (67) (67) (67) (48 48) (62) (72) (58) (58) (58) (58) (58) (55) (55) (55) (55) (55) (80 80) (52 52) (55 55) (75 75) (56) (61) (61) (61) (61) (61) (72 72) (63) (63) (62) (62) (59 59) (55) (57) (57) (57) (57) (57) (66 66) (66 66) (83 83) (55) (72) (57) (57) (57) (57) (63 63) (47 47) (74) (74) (58 58) (59) (59) (76 76) (75) (64 64) (76 76) (61) (61) (58) (60) (60) (60) (60) (60) (74 74) (53 53) (88 88) (74 74) (73) (61) (61) (61) (61) (61))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((10) (10) (10) (10) (10) (10) (10) (10) (10 10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10 10) (10 10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10 10) (10) (10) (10) (10) (10) (10) (10) (10) (10 10) (10 10) (10 10) (10 10) (10) (10) (10 10) (10 10) (10 10) (10 10) (10 10) (10) (10) (10) (10) (10) (10) (10) (10) (10 10) (10 10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10 10) (10 10) (10 10) (10) (10) (10) (10) (10) (10) (10 10) (10 10) (10) (10) (10) (10) (10) (10) (10 10) (10 10) (10 10) (10) (10) (10 10) (10) (10) (10) (10) (10) (10) (10 10) (10 10) (10 10) (10 10) (10 10) (10) (10) (10) (10) (10) (10) (10 10) (10 10) (10) (10) (10 10) (10) (10) (10 10) (10 10) (10 10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10 10) (10 10) (10) (10) (10) (10) (10) (10) (10 10) (10 10) (10) (10) (10) (10) (10) (10) (10 10) (10 10) (10) (10) (10) (10) (10) (10) (10 10) (10 10) (10 10) (10) (10) (10) (10) (10) (10) (10) (10) (10 10) (10) (10) (10) (10) (10 10) (10 10) (10 10) (10 10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10 10) (10) (10) (10) (10) (10) (10) (10) (10) (10 10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10) (10 10) (10 10) (10 10) (10 10) (10) (10) (10) (10) (10) (10) (10 10) (10) (10) (10) (10) (10 10) (10) (10) (10) (10) (10) (10) (10 10) (10 10) (10 10) (10) (10) (10) (10) (10) (10) (10 10) (10 10) (10) (10) (10 10) (10) (10) (10 10) (10) (10 10) (10 10) (10) (10) (10) (10) (10) (10) (10) (10) (10 10) (10 10) (10 10) (10 10) (10) (10) (10) (10) (10) (10))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8696) (8696) (8696) (8696) (8696 8696) (8696) (8696) (8696 8696) (8696 8696) (8696) (8671) (8696) (8671) (8696) (8671) (8696 8696) (8696) (8721) (8696) (8721) (8696) (8721) (8696 8696) (8696 8696) (8696 8696) (8696 8696) (8696 8696) (8696 8696) (8696) (8696) (8696 8696) (8696 8696) (8696 8696) (8696 8696) (8696) (8546) (8696) (8546) (8696) (8546) (8696) (8696) (8696) (8471) (8696) (8471) (8696) (8471) (8696) (8696 8696) (8696) (8496) (8696) (8496) (8696) (8496) (8696 8696) (8696 8696) (8696) (8696) (8696) (8946) (8696) (8946) (8696) (8946) (8696) (8671) (8696) (8671) (8696) (8671) (8696) (8471) (8696) (8471) (8696) (8471) (8696 8696) (8696) (8646) (8696) (8646) (8696) (8646) (8696) (8671) (8696) (8671) (8696) (8671) (8696) (8696) (8696) (8696) (8696) (8696) (8696) (8546) (8696) (8546) (8696) (8546) (8696 8696) (8696 8696) (8696) (8546) (8696) (8546) (8696) (8546) (8696 8696) (8696 8696) (8696 8696) (8696 8696) (8696) (8696) (8696 8696) (8696 8696) (8696 8696) (8696) (8696) (8696 8696) (8696 8696) (8696) (8696) (8696 8696) (8696) (8846) (8696) (8846) (8696) (8846) (8696 8696) (8696) (8546) (8696) (8546) (8696) (8546) (8696) (8896) (8696) (8896) (8696) (8896) (8696 8696) (8696) (8446) (8696) (8446) (8696) (8446) (8696) (8446) (8696) (8471) (8696) (8471) (8696) (8471) (8696) (8696) (8696 8696) (8696 8696) (8696 8696) (8696 8696) (8696 8696) (8696 8696) (8696) (8696) (8696 8696) (8696) (8896) (8696) (8896) (8696) (8896) (8696 8696) (8696) (8496) (8696) (8496) (8696) (8496) (8696 8696) (8696 8696) (8696 8696) (8696) (8696) (8696 8696) (8696) (8696) (8696) (8696) (8696 8696) (8696 8696) (8696) (8696) (8696 8696) (8696 8696) (8696) (8696) (8696) (8696) (8696 8696) (8696) (8896) (8696) (8896) (8696) (8896) (8696) (8946) (8696) (8946) (8696) (8946) (8696) (8696) (8696 8696) (8696 8696) (8696) (8846) (8696) (8846) (8696) (8846) (8696) (8696) (8696) (8696) (8696 8696) (8696 8696) (8696 8696) (8696 8696) (8696 8696) (8696) (8696) (8696) (8696) (8696) (8921) (8696) (8921) (8696) (8921) (8696 8696) (8696) (8471) (8696) (8471) (8696) (8471) (8696) (8696) (8696 8696) (8696 8696) (8696) (8846) (8696) (8846) (8696) (8846) (8696) (8446) (8696) (8446) (8696) (8446) (8696 8696) (8696) (8546) (8696) (8546) (8696) (8546) (8696 8696) (8696) (8696) (8696) (8646) (8696) (8646) (8696) (8646) (8696) (8896) (8696) (8896) (8696) (8896) (8696) (8721) (8696) (8721) (8696) (8721) (8696) (8671) (8696) (8671) (8696) (8671) (8696 8696) (8696 8696) (8696 8696) (8696) (8696) (8696 8696) (8696 8696) (8696) (8921) (8696) (8921) (8696) (8921) (8696 8696) (8696 8696) (8696) (8846) (8696) (8846) (8696) (8846) (8696) (8446) (8696) (8446) (8696) (8446) (8696) (8696) (8696 8696) (8696 8696) (8696 8696))) :lonset (quoteldur (quote ((179) (179) (156) (156) (458 458) (168) (168) (341 341) (423 423) (198) (127) (127) (127) (127) (127) (311 311) (112) (135) (138) (138) (138) (138) (276 276) (307 307) (368 368) (441 441) (323 323) (313 313) (158) (158) (242 242) (352 352) (201 201) (425 425) (100) (134) (134) (134) (134) (134) (161) (161) (179) (285) (285) (285) (285) (285) (251) (317 317) (145) (274) (274) (274) (274) (274) (233 233) (222 222) (161) (161) (142) (157) (157) (157) (157) (157) (175) (162) (162) (162) (162) (162) (254) (189) (189) (189) (189) (189) (259 259) (192) (209) (209) (209) (209) (209) (211) (233) (233) (233) (233) (233) (199) (127) (127) (127) (127) (127) (168) (138) (115) (115) (115) (115) (323 323) (360 360) (156) (195) (195) (195) (195) (195) (383 383) (415 415) (220 220) (327 327) (174) (174) (486 486) (384 384) (323 323) (146) (146) (442 442) (303 303) (172) (172) (277 277) (191) (174) (174) (174) (174) (174) (411 411) (156) (132) (204) (204) (204) (204) (143) (168) (185) (185) (185) (185) (255 255) (124) (165) (120) (86) (86) (86) (86) (86) (207) (119) (119) (119) (119) (119) (152) (152) (435 435) (281 281) (290 290) (306 306) (381 381) (261 261) (152) (152) (360 360) (126) (104) (135) (135) (135) (135) (267 267) (183) (245) (245) (245) (245) (245) (246 246) (321 321) (329 329) (159) (159) (284 284) (162) (162) (135) (135) (284 284) (416 416) (154) (154) (236 236) (209 209) (180) (180) (141) (141) (480 480) (216) (264) (264) (264) (264) (264) (161) (168) (156) (156) (156) (156) (163) (163) (239 239) (448 448) (233) (208) (208) (208) (208) (208) (177) (177) (165) (165) (234 234) (327 327) (346 346) (243 243) (409 409) (181) (181) (148) (148) (129) (179) (126) (126) (126) (126) (477 477) (152) (132) (127) (127) (127) (127) (144) (144) (424 424) (377 377) (174) (187) (187) (187) (187) (187) (146) (114) (148) (148) (148) (148) (327 327) (174) (97) (151) (151) (151) (151) (314 314) (166) (166) (130) (118) (185) (185) (185) (185) (138) (167) (167) (167) (167) (167) (143) (231) (231) (231) (231) (231) (141) (197) (113) (113) (113) (113) (324 324) (326 326) (383 383) (181) (181) (318 318) (471 471) (246) (200) (200) (200) (200) (200) (476 476) (281 281) (193) (257) (257) (257) (257) (257) (166) (108) (151) (151) (151) (151) (173) (173) (256 256) (388 388) (418 418))) :lvel (quote ((64) (64) (68) (68) (49 49) (70) (70) (75 75) (54 54) (57) (58) (58) (58) (58) (58) (47 47) (57) (75) (65) (65) (65) (65) (52 52) (90 90) (62 62) (81 81) (45 45) (54 54) (57) (57) (47 47) (67 67) (67 67) (68 68) (55) (64) (64) (64) (64) (64) (65) (65) (68) (55) (55) (55) (55) (55) (74) (86 86) (55) (55) (55) (55) (55) (55) (49 49) (57 57) (70) (70) (55) (59) (59) (59) (59) (59) (55) (55) (55) (55) (55) (55) (55) (59) (59) (59) (59) (59) (87 87) (58) (57) (57) (57) (57) (57) (55) (60) (60) (60) (60) (60) (55) (59) (59) (59) (59) (59) (59) (71) (56) (56) (56) (56) (49 49) (52 52) (58) (56) (56) (56) (56) (56) (72 72) (45 45) (73 73) (67 67) (70) (70) (61 61) (48 48) (72 72) (64) (64) (57 57) (65 65) (69) (69) (53 53) (57) (65) (65) (65) (65) (65) (68 68) (64) (68) (56) (56) (56) (56) (57) (66) (56) (56) (56) (56) (53 53) (66) (73) (66) (62) (62) (62) (62) (62) (55) (58) (58) (58) (58) (58) (68) (68) (80 80) (50 50) (65 65) (54 54) (78 78) (46 46) (58) (58) (79 79) (66) (66) (55) (55) (55) (55) (88 88) (56) (65) (65) (65) (65) (65) (46 46) (49 49) (61 61) (71) (71) (90 90) (66) (66) (67) (67) (76 76) (50 50) (66) (66) (83 83) (63 63) (67) (67) (55) (55) (52 52) (57) (55) (55) (55) (55) (55) (58) (69) (55) (55) (55) (55) (61) (61) (63 63) (52 52) (56) (56) (56) (56) (56) (56) (72) (72) (73) (73) (47 47) (52 52) (62 62) (50 50) (90 90) (55) (55) (63) (63) (56) (71) (61) (61) (61) (61) (46 46) (55) (66) (59) (59) (59) (59) (61) (61) (89 89) (85 85) (55) (60) (60) (60) (60) (60) (56) (69) (60) (60) (60) (60) (77 77) (57) (70) (65) (65) (65) (65) (59 59) (60) (60) (64) (74) (61) (61) (61) (61) (68) (55) (55) (55) (55) (55) (58) (55) (55) (55) (55) (55) (55) (72) (67) (67) (67) (67) (71 71) (55 55) (70 70) (55) (55) (53 53) (45 45) (56) (56) (56) (56) (56) (56) (66 66) (73 73) (65) (55) (55) (55) (55) (55) (60) (73) (56) (56) (56) (56) (59) (59) (81 81) (60 60) (50 50))) :loffset (quote ((0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0))) :lchan (quotelegato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8470) (8620) (8470) (8620) (8470) (8620) (8470 8470) (8470) (8470) (8470 8470) (8470) (8470) (8470) (8695) (8470) (8695) (8470) (8695) (8470 8470) (8470) (8470) (8470 8470) (8470) (8245) (8470) (8245) (8470) (8245) (8470 8470) (8470) (8470) (8470 8470) (8470) (8470) (8470 8470) (8470 8470) (8470) (8470) (8470) (8520) (8470) (8520) (8470) (8520) (8470) (8470) (8470) (8220) (8470) (8220) (8470) (8220) (8470 8470) (8470) (8470) (8470 8470) (8470) (8470) (8470) (8445) (8470) (8445) (8470) (8445) (8470 8470) (8470 8470) (8470 8470) (8470) (8470) (8220) (8470) (8220) (8470) (8220) (8470 8470) (8470) (8470) (8470) (8470) (8470 8470) (8470 8470) (8470 8470) (8470 8470) (8470) (8470) (8470 8470) (8470) (8270) (8470) (8270) (8470) (8270) (8470 8470) (8470 8470) (8470) (8445) (8470) (8445) (8470) (8445) (8470 8470) (8470 8470) (8470 8470) (8470) (8470) (8470) (8245) (8470) (8245) (8470) (8245) (8470) (8470) (8470 8470) (8470 8470) (8470) (8320) (8470) (8320) (8470) (8320) (8470 8470) (8470) (8470) (8470 8470) (8470) (8470) (8470) (8470) (8470 8470) (8470) (8420) (8470) (8420) (8470) (8420) (8470) (8470) (8470) (8470) (8470) (8470) (8470) (8470) (8470) (8470) (8470 8470) (8470 8470) (8470 8470) (8470) (8470) (8470 8470) (8470) (8320) (8470) (8320) (8470) (8320) (8470 8470) (8470 8470) (8470) (8520) (8470) (8520) (8470) (8520) (8470) (8495) (8470) (8495) (8470) (8495) (8470) (8470) (8470) (8720) (8470) (8720) (8470) (8720) (8470) (8470) (8470) (8470) (8470 8470) (8470) (8620) (8470) (8620) (8470) (8620) (8470 8470) (8470) (8270) (8470) (8270) (8470) (8270) (8470 8470) (8470 8470) (8470) (8470) (8470 8470) (8470 8470) (8470 8470) (8470 8470) (8470 8470) (8470) (8470) (8470) (8670) (8470) (8670) (8470) (8670) (8470) (8695) (8470) (8695) (8470) (8695) (8470) (8470) (8470 8470) (8470) (8420) (8470) (8420) (8470) (8420) (8470 8470) (8470) (8470) (8470) (8495) (8470) (8495) (8470) (8495) (8470) (8470) (8470 8470) (8470) (8495) (8470) (8495) (8470) (8495) (8470 8470) (8470 8470) (8470) (8470) (8470) (8270) (8470) (8270) (8470) (8270) (8470 8470) (8470 8470) (8470 8470) (8470) (8470) (8470) (8520) (8470) (8520) (8470) (8520) (8470 8470) (8470) (8220) (8470) (8220) (8470) (8220) (8470 8470) (8470 8470) (8470 8470) (8470 8470) (8470) (8520) (8470) (8520) (8470) (8520) (8470) (8470) (8470 8470) (8470) (8270) (8470) (8270) (8470) (8270) (8470 8470) (8470) (8495) (8470) (8495) (8470) (8495) (8470) (8470) (8470) (8220) (8470) (8220) (8470) (8220) (8470 8470) (8470) (8470))) :lonset (quoteldur (quote ((200) (192) (192) (192) (192) (192) (439 439) (156) (156) (244 244) (162) (162) (199) (183) (183) (183) (183) (183) (379 379) (179) (179) (250 250) (226) (142) (93) (93) (93) (93) (250 250) (175) (175) (409 409) (172) (172) (497 497) (363 363) (157) (157) (120) (137) (194) (194) (194) (194) (167) (167) (119) (159) (130) (130) (130) (130) (249 249) (141) (141) (234 234) (170) (170) (176) (127) (127) (127) (127) (127) (421 421) (325 325) (427 427) (209) (118) (187) (170) (170) (170) (170) (219 219) (152) (152) (159) (159) (222 222) (483 483) (321 321) (401 401) (179) (179) (475 475) (142) (173) (173) (173) (173) (173) (246 246) (482 482) (231) (157) (157) (157) (157) (157) (247 247) (331 331) (326 326) (174) (174) (113) (162) (162) (162) (162) (162) (140) (140) (203 203) (486 486) (184) (122) (122) (122) (122) (122) (471 471) (167) (167) (374 374) (133) (133) (132) (132) (352 352) (179) (173) (173) (173) (173) (173) (131) (131) (154) (154) (147) (147) (171) (171) (165) (165) (271 271) (408 408) (256 256) (142) (142) (437 437) (133) (206) (121) (121) (121) (121) (220 220) (280 280) (151) (192) (132) (132) (132) (132) (232) (164) (164) (164) (164) (164) (132) (132) (194) (178) (178) (178) (178) (178) (138) (138) (170) (170) (275 275) (191) (219) (219) (219) (219) (219) (214 214) (96) (186) (160) (160) (160) (160) (446 446) (462 462) (169) (169) (286 286) (242 242) (456 456) (416 416) (446 446) (153) (153) (171) (146) (134) (134) (134) (134) (169) (132) (132) (132) (132) (132) (158) (158) (368 368) (202) (173) (173) (173) (173) (173) (291 291) (151) (151) (96) (100) (184) (184) (184) (184) (153) (153) (368 368) (194) (158) (158) (158) (158) (158) (276 276) (483 483) (180) (180) (183) (165) (165) (165) (165) (165) (309 309) (313 313) (335 335) (131) (131) (180) (166) (166) (166) (166) (166) (410 410) (148) (165) (165) (165) (165) (165) (382 382) (476 476) (300 300) (423 423) (286) (173) (173) (173) (173) (173) (166) (166) (293 293) (202) (203) (203) (203) (203) (203) (357 357) (212) (178) (178) (178) (178) (178) (159) (159) (165) (128) (162) (162) (162) (162) (294 294) (154) (154))) :lvel (quote ((59) (57) (57) (57) (57) (57) (81 81) (72) (72) (52 52) (56) (56) (62) (56) (56) (56) (56) (56) (64 64) (58) (58) (88 88) (59) (71) (64) (64) (64) (64) (48 48) (74) (74) (49 49) (74) (74) (59 59) (61 61) (69) (69) (57) (75) (69) (69) (69) (69) (73) (73) (56) (73) (57) (57) (57) (57) (70 70) (63) (63) (58 58) (73) (73) (59) (55) (55) (55) (55) (55) (68 68) (55 55) (48 48) (71) (65) (65) (57) (57) (57) (57) (66 66) (67) (67) (63) (63) (49 49) (59 59) (52 52) (90 90) (71) (71) (85 85) (55) (59) (59) (59) (59) (59) (52 52) (53 53) (55) (69) (69) (69) (69) (69) (56 56) (57 57) (72 72) (73) (73) (59) (58) (58) (58) (58) (58) (55) (55) (79 79) (63 63) (56) (57) (57) (57) (57) (57) (68 68) (61) (61) (64 64) (63) (63) (61) (61) (83 83) (57) (62) (62) (62) (62) (62) (64) (64) (59) (59) (75) (75) (65) (65) (74) (74) (80 80) (47 47) (90 90) (62) (62) (50 50) (72) (73) (56) (56) (56) (56) (79 79) (56 56) (56) (66) (57) (57) (57) (57) (56) (55) (55) (55) (55) (55) (55) (55) (59) (56) (56) (56) (56) (56) (68) (68) (62) (62) (59 59) (57) (55) (55) (55) (55) (55) (64 64) (57) (66) (55) (55) (55) (55) (87 87) (90 90) (73) (73) (46 46) (77 77) (57 57) (74 74) (89 89) (66) (66) (55) (72) (56) (56) (56) (56) (63) (57) (57) (57) (57) (57) (58) (58) (78 78) (57) (58) (58) (58) (58) (58) (52 52) (57) (57) (66) (71) (58) (58) (58) (58) (68) (68) (46 46) (56) (58) (58) (58) (58) (58) (45 45) (85 85) (59) (59) (60) (55) (55) (55) (55) (55) (67 67) (72 72) (45 45) (68) (68) (56) (72) (72) (72) (72) (72) (79 79) (57) (61) (61) (61) (61) (61) (89 89) (63 63) (81 81) (70 70) (55) (63) (63) (63) (63) (63) (62) (62) (67 67) (59) (55) (55) (55) (55) (55) (65 65) (55) (55) (55) (55) (55) (55) (60) (60) (58) (73) (56) (56) (56) (56) (90 90) (63) (63))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0))) :lchan (quotelegato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8468) (8468) (8468 8468) (8468) (8468) (8468 8468) (8468) (8468) (8468 8468) (8468) (8468) (8468 8468) (8468) (8468) (8468 8468) (8468) (8693) (8468) (8693) (8468) (8693) (8468 8468) (8468 8468) (8468 8468) (8468 8468) (8468 8468) (8468) (8318) (8468) (8318) (8468) (8318) (8468) (8668) (8468) (8668) (8468) (8668) (8468 8468) (8468) (8468) (8468) (8618) (8468) (8618) (8468) (8618) (8468 8468) (8468 8468) (8468 8468) (8468) (8218) (8468) (8218) (8468) (8218) (8468) (8468) (8468) (8218) (8468) (8218) (8468) (8218) (8468) (8718) (8468) (8718) (8468) (8718) (8468) (8418) (8468) (8418) (8468) (8418) (8468) (8468) (8468 8468) (8468 8468) (8468 8468) (8468) (8268) (8468) (8268) (8468) (8268) (8468 8468) (8468) (8418) (8468) (8418) (8468) (8418) (8468) (8468) (8468) (8468) (8468) (8518) (8468) (8518) (8468) (8518) (8468) (8618) (8468) (8618) (8468) (8618) (8468 8468) (8468 8468) (8468) (8468) (8468) (8618) (8468) (8618) (8468) (8618) (8468 8468) (8468 8468) (8468 8468) (8468 8468) (8468 8468) (8468 8468) (8468) (8468) (8468) (8693) (8468) (8693) (8468) (8693) (8468 8468) (8468 8468) (8468) (8618) (8468) (8618) (8468) (8618) (8468 8468) (8468 8468) (8468 8468) (8468 8468) (8468) (8468) (8468 8468) (8468) (8468) (8468 8468) (8468 8468) (8468) (8468) (8468) (8468) (8468) (8468) (8468 8468) (8468 8468) (8468 8468) (8468) (8468) (8468) (8468) (8468 8468) (8468 8468) (8468 8468) (8468 8468) (8468 8468) (8468) (8468) (8468) (8468) (8468) (8468) (8468) (8493) (8468) (8493) (8468) (8493) (8468) (8468) (8468 8468) (8468) (8693) (8468) (8693) (8468) (8693) (8468) (8468) (8468 8468) (8468 8468) (8468 8468) (8468) (8468) (8468 8468) (8468) (8668) (8468) (8668) (8468) (8668) (8468) (8268) (8468) (8268) (8468) (8268) (8468) (8668) (8468) (8668) (8468) (8668) (8468 8468) (8468) (8443) (8468) (8443) (8468) (8443) (8468 8468) (8468) (8468) (8468) (8518) (8468) (8518) (8468) (8518) (8468 8468) (8468 8468) (8468) (8718) (8468) (8718) (8468) (8718) (8468) (8468) (8468) (8518) (8468) (8518) (8468) (8518) (8468) (8318) (8468) (8318) (8468) (8318) (8468 8468) (8468) (8468) (8468) (8468) (8468) (8468) (8468) (8468) (8468) (8243) (8468) (8243) (8468) (8243) (8468) (8468) (8468 8468) (8468 8468) (8468) (8668) (8468) (8668) (8468) (8668) (8468 8468) (8468 8468) (8468) (8468) (8468 8468) (8468 8468) (8468) (8468) (8468) (8243) (8468) (8243) (8468) (8243) (8468 8468) (8468 8468) (8468 8468) (8468 8468) (8468) (8468) (8468 8468) (8468 8468) (8468))) :lonset (quoteldur (quote ((175) (175) (357 357) (140) (140) (340 340) (154) (154) (295 295) (138) (138) (256 256) (131) (131) (445 445) (163) (247) (247) (247) (247) (247) (202 202) (270 270) (495 495) (337 337) (344 344) (133) (234) (234) (234) (234) (234) (244) (233) (233) (233) (233) (233) (217 217) (178) (178) (141) (138) (118) (118) (118) (118) (413 413) (286 286) (347 347) (118) (161) (171) (171) (171) (171) (148) (148) (125) (155) (153) (153) (153) (153) (208) (202) (202) (202) (202) (202) (166) (180) (180) (180) (180) (180) (162) (162) (464 464) (409 409) (332 332) (179) (221) (221) (221) (221) (221) (256 256) (168) (202) (129) (129) (129) (129) (132) (132) (177) (177) (275) (219) (219) (219) (219) (219) (218) (187) (187) (187) (187) (187) (343 343) (239 239) (181) (181) (213) (242) (242) (242) (242) (242) (209 209) (424 424) (365 365) (464 464) (349 349) (331 331) (174) (174) (235) (216) (216) (216) (216) (216) (428 428) (404 404) (184) (107) (123) (123) (123) (123) (475 475) (491 491) (344 344) (340 340) (154) (154) (330 330) (158) (158) (252 252) (479 479) (144) (144) (173) (173) (139) (139) (209 209) (240 240) (294 294) (169) (169) (181) (181) (346 346) (338 338) (492 492) (369 369) (289 289) (170) (170) (131) (131) (153) (153) (176) (202) (202) (202) (202) (202) (168) (168) (200 200) (173) (136) (184) (184) (184) (184) (163) (163) (313 313) (446 446) (469 469) (154) (154) (288 288) (153) (145) (145) (145) (145) (145) (188) (135) (135) (135) (135) (135) (145) (177) (177) (177) (177) (177) (325 325) (164) (99) (180) (180) (180) (180) (253 253) (137) (137) (230) (184) (184) (184) (184) (184) (294 294) (224 224) (175) (106) (106) (106) (106) (106) (170) (170) (121) (151) (181) (181) (181) (181) (211) (215) (215) (215) (215) (215) (471 471) (128) (168) (138) (138) (138) (138) (167) (167) (137) (146) (152) (152) (152) (152) (137) (137) (346 346) (326 326) (150) (115) (156) (156) (156) (156) (249 249) (460 460) (154) (154) (406 406) (480 480) (134) (134) (172) (166) (126) (126) (126) (126) (462 462) (236 236) (310 310) (299 299) (167) (167) (277 277) (305 305) (21))) :lvel (quote ((60) (60) (46 46) (72) (72) (72 72) (71) (71) (45 45) (64) (64) (75 75) (73) (73) (84 84) (61) (61) (61) (61) (61) (61) (88 88) (56 56) (76 76) (78 78) (84 84) (63) (56) (56) (56) (56) (56) (58) (56) (56) (56) (56) (56) (79 79) (72) (72) (59) (69) (59) (59) (59) (59) (86 86) (75 75) (75 75) (58) (74) (63) (63) (63) (63) (73) (73) (58) (61) (55) (55) (55) (55) (57) (67) (67) (67) (67) (67) (64) (58) (58) (58) (58) (58) (73) (73) (70 70) (77 77) (50 50) (62) (60) (60) (60) (60) (60) (63 63) (57) (74) (58) (58) (58) (58) (55) (55) (71) (71) (56) (65) (65) (65) (65) (65) (57) (56) (56) (56) (56) (56) (76 76) (60 60) (65) (65) (58) (64) (64) (64) (64) (64) (74 74) (72 72) (77 77) (88 88) (45 45) (53 53) (72) (72) (64) (56) (56) (56) (56) (56) (73 73) (56 56) (57) (69) (72) (72) (72) (72) (68 68) (80 80) (79 79) (50 50) (59) (59) (64 64) (59) (59) (72 72) (56 56) (58) (58) (55) (55) (69) (69) (47 47) (86 86) (88 88) (61) (61) (55) (55) (64 64) (50 50) (85 85) (71 71) (83 83) (65) (65) (61) (61) (58) (58) (63) (55) (55) (55) (55) (55) (68) (68) (45 45) (60) (72) (55) (55) (55) (55) (74) (74) (57 57) (76 76) (46 46) (74) (74) (80 80) (55) (57) (57) (57) (57) (57) (55) (58) (58) (58) (58) (58) (58) (61) (61) (61) (61) (61) (82 82) (56) (67) (55) (55) (55) (55) (47 47) (57) (57) (56) (58) (58) (58) (58) (58) (69 69) (64 64) (55) (59) (59) (59) (59) (59) (69) (69) (55) (73) (57) (57) (57) (57) (58) (56) (56) (56) (56) (56) (89 89) (58) (70) (55) (55) (55) (55) (60) (60) (55) (73) (56) (56) (56) (56) (58) (58) (80 80) (69 69) (56) (74) (55) (55) (55) (55) (61 61) (75 75) (74) (74) (64 64) (79 79) (69) (69) (58) (73) (55) (55) (55) (55) (74 74) (80 80) (88 88) (64 64) (68) (68) (74 74) (76 76) (59))) :loffset (quote ((0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0))) :lchan (quote ((9) (9) (9 9) (9) (9) (9 9) (9) (9) (9 9) (9) (9) (9 9) (9) (9) (9 9) (9) (9) (9) (9) (9) (9) (9 9) (9 9) (9 9) (9 9) (9 9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9 9) (9) (9) (9) (9) (9) (9) (9) (9) (9 9) (9 9) (9 9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9 9) (9 9) (9 9) (9) (9) (9) (9) (9) (9) (9 9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9 9) (9 9) (9) (9) (9) (9) (9) (9) (9) (9) (9 9) (9 9) (9 9) (9 9) (9 9) (9 9) (9) (9) (9) (9) (9) (9) (9) (9) (9 9) (9 9) (9) (9) (9) (9) (9) (9) (9 9) (9 9) (9 9) (9 9) (9) (9) (9 9) (9) (9) (9 9) (9 9) (9) (9) (9) (9) (9) (9) (9 9) (9 9) (9 9) (9) (9) (9) (9) (9 9) (9 9) (9 9) (9 9) (9 9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9 9) (9) (9) (9) (9) (9) (9) (9) (9) (9 9) (9 9) (9 9) (9) (9) (9 9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9 9) (9) (9) (9) (9) (9) (9) (9 9) (9) (9) (9) (9) (9) (9) (9) (9) (9 9) (9 9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9 9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9 9) (9 9) (9) (9) (9) (9) (9) (9) (9 9) (9 9) (9) (9) (9 9) (9 9) (9) (9) (9) (9) (9) (9) (9) (9) (9 9) (9 9) (9 9) (9 9) (9) (9) (9 9) (9 9) (9))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8288) (8038) (8288) (8038) (8288) (8038) (8288) (8063) (8288) (8063) (8288) (8063) (8288) (8288) (8288) (8288) (8288) (8288) (8288 8288) (8288) (8088) (8288) (8088) (8288) (8088) (8288) (8288) (8288) (8288) (8288 8288) (8288) (8513) (8288) (8513) (8288) (8513) (8288) (8438) (8288) (8438) (8288) (8438) (8288) (8313) (8288) (8313) (8288) (8313) (8288) (8438) (8288) (8438) (8288) (8438) (8288) (8288) (8288) (8138) (8288) (8138) (8288) (8138) (8288) (8288) (8288 8288) (8288) (8288) (8288) (8288 8288) (8288 8288) (8288) (8288) (8288) (8288) (8288 8288) (8288 8288) (8288 8288) (8288) (8288) (8288) (8288) (8288 8288) (8288 8288) (8288 8288) (8288 8288) (8288) (8288) (8288) (8438) (8288) (8438) (8288) (8438) (8288) (8538) (8288) (8538) (8288) (8538) (8288) (8063) (8288) (8063) (8288) (8063) (8288 8288) (8288 8288) (8288) (8288) (8288 8288) (8288 8288) (8288) (8288) (8288) (8288) (8288) (8238) (8288) (8238) (8288) (8238) (8288 8288) (8288) (8313) (8288) (8313) (8288) (8313) (8288) (8038) (8288) (8038) (8288) (8038) (8288 8288) (8288 8288) (8288 8288) (8288) (8538) (8288) (8538) (8288) (8538) (8288 8288) (8288 8288) (8288 8288) (8288 8288) (8288 8288) (8288 8288) (8288 8288) (8288) (8063) (8288) (8063) (8288) (8063) (8288) (8288) (8288) (8288) (8288 8288) (8288 8288) (8288) (8288) (8288 8288) (8288 8288) (8288 8288) (8288) (8288) (8288 8288) (8288 8288) (8288 8288) (8288) (8288) (8288) (8438) (8288) (8438) (8288) (8438) (8288) (8288) (8288) (8288) (8288) (8288) (8288 8288) (8288) (8288) (8288) (8088) (8288) (8088) (8288) (8088) (8288 8288) (8288 8288) (8288 8288) (8288) (8088) (8288) (8088) (8288) (8088) (8288 8288) (8288) (8288) (8288) (8513) (8288) (8513) (8288) (8513) (8288 8288) (8288 8288) (8288 8288) (8288) (8288) (8288) (8338) (8288) (8338) (8288) (8338) (8288) (8288) (8288) (8438) (8288) (8438) (8288) (8438) (8288 8288) (8288) (8288) (8288 8288) (8288) (8288) (8288 8288) (8288 8288) (8288) (8138) (8288) (8138) (8288) (8138) (8288) (8288) (8288 8288) (8288) (8288) (8288 8288) (8288 8288) (8288) (8288) (8288) (8288) (8488) (8288) (8488) (8288) (8488) (8288) (8288) (8288 8288) (8288 8288) (8288 8288) (8288) (8288) (8288) (8288) (8288 8288) (8288 8288) (8288) (8488) (8288) (8488) (8288) (8488) (8288) (8313) (8288) (8313) (8288) (8313) (8288 8288) (8288 8288) (8288 8288) (8288 8288) (8288) (8063) (8288) (8063) (8288) (8063) (8288 8288) (8288 8288) (8288) (8288) (8288) (8288) (8288) (8288) (8288 8288) (8288) (8288) (8288 8288) (8288 8288) (8288) (8488) (8288) (8488) (8288) (8488) (8288 8288) (8288))) :lonset (quoteldur (quote ((160) (106) (101) (101) (101) (101) (319) (156) (156) (156) (156) (156) (204) (182) (182) (182) (182) (182) (480 480) (145) (172) (172) (172) (172) (172) (153) (153) (180) (180) (308 308) (122) (186) (186) (186) (186) (186) (189) (159) (151) (151) (151) (151) (155) (205) (205) (205) (205) (205) (159) (203) (203) (203) (203) (203) (160) (160) (136) (141) (212) (212) (212) (212) (177) (177) (367 367) (135) (135) (204) (259 259) (474 474) (142) (142) (175) (175) (217 217) (391 391) (271 271) (149) (149) (146) (146) (213 213) (270 270) (437 437) (228 228) (139) (139) (152) (248) (248) (248) (248) (248) (131) (154) (154) (154) (154) (154) (187) (162) (128) (128) (128) (128) (470 470) (481 481) (132) (132) (466 466) (361 361) (168) (168) (143) (143) (209) (131) (131) (131) (131) (131) (348 348) (136) (172) (172) (172) (172) (172) (134) (195) (195) (195) (195) (195) (435 435) (264 264) (327 327) (193) (235) (235) (235) (235) (235) (364 364) (462 462) (213 213) (405 405) (263 263) (306 306) (274 274) (263) (167) (167) (167) (167) (167) (131) (131) (159) (159) (474 474) (495 495) (181) (181) (321 321) (489 489) (263 263) (163) (163) (389 389) (293 293) (421 421) (173) (173) (161) (126) (118) (118) (118) (118) (160) (176) (176) (176) (176) (176) (445 445) (142) (142) (162) (136) (141) (141) (141) (141) (428 428) (378 378) (303 303) (203) (234) (234) (234) (234) (234) (462 462) (170) (170) (221) (211) (211) (211) (211) (211) (229 229) (481 481) (491 491) (181) (181) (253) (236) (236) (236) (236) (236) (154) (154) (173) (165) (147) (147) (147) (147) (320 320) (139) (139) (313 313) (171) (171) (365 365) (363 363) (199) (260) (260) (260) (260) (260) (171) (171) (448 448) (164) (164) (333 333) (240 240) (216) (171) (171) (162) (148) (148) (148) (148) (148) (163) (163) (429 429) (210 210) (231 231) (180) (180) (143) (143) (319 319) (247 247) (211) (178) (178) (178) (178) (178) (84) (146) (157) (157) (157) (157) (203 203) (442 442) (224 224) (409 409) (154) (134) (178) (178) (178) (178) (311 311) (464 464) (166) (202) (202) (202) (202) (202) (202 202) (164) (164) (208 208) (448 448) (209) (131) (131) (131) (131) (131) (485 485) (163))) :lvel (quote ((57) (72) (58) (58) (58) (58) (55) (55) (55) (55) (55) (55) (56) (55) (55) (55) (55) (55) (62 62) (67) (57) (57) (57) (57) (57) (66) (66) (59) (59) (70 70) (55) (57) (57) (57) (57) (57) (56) (70) (58) (58) (58) (58) (66) (55) (55) (55) (55) (55) (58) (56) (56) (56) (56) (56) (74) (74) (67) (67) (57) (57) (57) (57) (60) (60) (89 89) (61) (61) (63) (84 84) (59 59) (68) (68) (71) (71) (86 86) (77 77) (48 48) (60) (60) (62) (62) (72 72) (80 80) (53 53) (56 56) (62) (62) (56) (55) (55) (55) (55) (55) (61) (56) (56) (56) (56) (56) (57) (70) (58) (58) (58) (58) (67 67) (86 86) (69) (69) (49 49) (59 59) (73) (73) (75) (75) (58) (60) (60) (60) (60) (60) (46 46) (57) (58) (58) (58) (58) (58) (64) (56) (56) (56) (56) (56) (53 53) (89 89) (49 49) (56) (55) (55) (55) (55) (55) (65 65) (64 64) (84 84) (82 82) (72 72) (80 80) (60 60) (62) (55) (55) (55) (55) (55) (62) (62) (73) (73) (56 56) (56 56) (58) (58) (72 72) (49 49) (70 70) (55) (55) (78 78) (70 70) (62 62) (62) (62) (56) (69) (60) (60) (60) (60) (57) (56) (56) (56) (56) (56) (54 54) (69) (69) (56) (69) (56) (56) (56) (56) (81 81) (63 63) (45 45) (58) (56) (56) (56) (56) (56) (58 58) (74) (74) (55) (64) (64) (64) (64) (64) (88 88) (60 60) (59 59) (68) (68) (56) (56) (56) (56) (56) (56) (74) (74) (58) (69) (55) (55) (55) (55) (45 45) (73) (73) (89 89) (71) (71) (75 75) (88 88) (55) (61) (61) (61) (61) (61) (69) (69) (80 80) (61) (61) (66 66) (73 73) (65) (65) (65) (64) (56) (56) (56) (56) (56) (75) (75) (71 71) (71 71) (51 51) (66) (66) (66) (66) (48 48) (74 74) (55) (55) (55) (55) (55) (55) (57) (68) (59) (59) (59) (59) (70 70) (87 87) (72 72) (89 89) (63) (73) (56) (56) (56) (56) (84 84) (58 58) (56) (59) (59) (59) (59) (59) (72 72) (60) (60) (52 52) (88 88) (66) (55) (55) (55) (55) (55) (77 77) (67))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0))) :lchan (quotelegato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8286 8286) (8286) (8286) (8286) (8036) (8286) (8036) (8286) (8036) (8286) (8036) (8286) (8036) (8286) (8036) (8286) (8286) (8286) (8286) (8286 8286) (8286 8286) (8286) (8286) (8286) (8236) (8286) (8236) (8286) (8236) (8286 8286) (8286) (8286) (8286 8286) (8286 8286) (8286 8286) (8286) (8286) (8286) (8536) (8286) (8536) (8286) (8536) (8286) (8036) (8286) (8036) (8286) (8036) (8286) (8311) (8286) (8311) (8286) (8311) (8286) (8286) (8286) (8536) (8286) (8536) (8286) (8536) (8286) (8286) (8286) (8286) (8286 8286) (8286 8286) (8286 8286) (8286) (8061) (8286) (8061) (8286) (8061) (8286 8286) (8286 8286) (8286) (8286) (8286) (8311) (8286) (8311) (8286) (8311) (8286) (8511) (8286) (8511) (8286) (8511) (8286) (8286) (8286 8286) (8286 8286) (8286 8286) (8286) (8286) (8286) (8136) (8286) (8136) (8286) (8136) (8286) (8436) (8286) (8436) (8286) (8436) (8286 8286) (8286) (8286) (8286) (8286) (8286) (8286) (8536) (8286) (8536) (8286) (8536) (8286) (8286) (8286 8286) (8286) (8136) (8286) (8136) (8286) (8136) (8286) (8486) (8286) (8486) (8286) (8486) (8286) (8286) (8286) (8286) (8286 8286) (8286) (8286) (8286 8286) (8286 8286) (8286) (8286) (8286 8286) (8286) (8311) (8286) (8311) (8286) (8311) (8286) (8311) (8286) (8311) (8286) (8311) (8286) (8286) (8286 8286) (8286) (8286) (8286) (8511) (8286) (8511) (8286) (8511) (8286) (8286) (8286) (8286) (8286) (8286) (8286 8286) (8286) (8286) (8286 8286) (8286) (8286) (8286) (8136) (8286) (8136) (8286) (8136) (8286 8286) (8286 8286) (8286 8286) (8286 8286) (8286 8286) (8286) (8536) (8286) (8536) (8286) (8536) (8286 8286) (8286) (8261) (8286) (8261) (8286) (8261) (8286) (8286) (8286) (8286) (8286 8286) (8286) (8286) (8286 8286) (8286) (8286) (8286 8286) (8286 8286) (8286 8286) (8286 8286) (8286) (8286) (8286) (8061) (8286) (8061) (8286) (8061) (8286 8286) (8286) (8286) (8286 8286) (8286) (8336) (8286) (8336) (8286) (8336) (8286) (8286) (8286 8286) (8286) (8236) (8286) (8236) (8286) (8236) (8286) (8286) (8286 8286) (8286) (8236) (8286) (8236) (8286) (8236) (8286 8286) (8286) (8286) (8286 8286) (8286) (8436) (8286) (8436) (8286) (8436) (8286 8286) (8286) (8286) (8286) (8436) (8286) (8436) (8286) (8436) (8286) (8436) (8286) (8286) (8286 8286) (8286 8286) (8286) (8536) (8286) (8536) (8286) (8536) (8286) (8236) (8286) (8236) (8286) (8236) (8286 8286) (8286) (8036) (8286) (8036) (8286) (8036) (8286 8286) (8286 8286) (8286 8286) (8286 8286) (8286) (8536) (8286) (8536) (8286) (8536) (8286) (8286) (8286 8286) (8286 8286) (8286 8286) (8286) (8336) (8286) (8336) (8286) (8336) (8286) (8336) (8286) (8336) (8286) (8336) (8286 8286) (8286) (8286) (8286 8286) (8286) (8236) (8286) (8236) (8286) (8236) (8286 8286) (8286))) :lonset (quoteldur (quote ((358 358) (159) (159) (239) (225) (225) (225) (225) (225) (158) (152) (184) (184) (184) (184) (178) (178) (158) (158) (445 445) (376 376) (176) (176) (161) (121) (121) (121) (121) (121) (218 218) (169) (169) (366 366) (241 241) (282 282) (157) (157) (186) (144) (144) (144) (144) (144) (152) (217) (217) (217) (217) (217) (190) (240) (240) (240) (240) (240) (140) (140) (152) (163) (163) (163) (163) (163) (181) (181) (158) (158) (262 262) (471 471) (213 213) (134) (147) (163) (163) (163) (163) (254 254) (459 459) (175) (175) (217) (202) (202) (202) (202) (202) (246) (253) (253) (253) (253) (253) (160) (160) (335 335) (424 424) (495 495) (134) (134) (161) (199) (199) (199) (199) (199) (148) (171) (171) (171) (171) (171) (301 301) (178) (178) (166) (166) (220) (163) (141) (198) (198) (198) (198) (144) (144) (396 396) (175) (248) (248) (248) (248) (248) (132) (150) (164) (164) (164) (164) (137) (137) (144) (144) (203 203) (178) (178) (387 387) (201 201) (151) (151) (427 427) (128) (155) (155) (155) (155) (155) (126) (152) (152) (152) (152) (152) (135) (135) (435 435) (148) (148) (179) (150) (148) (148) (148) (148) (242) (173) (173) (173) (173) (173) (442 442) (165) (165) (391 391) (159) (159) (189) (150) (143) (143) (143) (143) (284 284) (378 378) (316 316) (312 312) (410 410) (154) (169) (166) (166) (166) (166) (230 230) (219) (276) (276) (276) (276) (276) (134) (134) (131) (131) (314 314) (132) (132) (201 201) (165) (165) (474 474) (237 237) (412 412) (331 331) (164) (164) (97) (127) (109) (109) (109) (109) (417 417) (155) (155) (260 260) (183) (109) (109) (109) (109) (109) (154) (154) (370 370) (193) (153) (134) (134) (134) (134) (177) (177) (367 367) (250) (223) (223) (223) (223) (223) (303 303) (136) (136) (474 474) (218) (213) (213) (213) (213) (213) (476 476) (166) (166) (104) (159) (117) (86) (86) (86) (86) (86) (181) (181) (368 368) (392 392) (180) (151) (103) (103) (103) (103) (141) (232) (232) (232) (232) (232) (480 480) (154) (154) (154) (154) (154) (154) (287 287) (285 285) (339 339) (210 210) (154) (166) (166) (166) (166) (166) (157) (157) (478 478) (342 342) (443 443) (251) (214) (214) (214) (214) (214) (202) (181) (181) (181) (181) (181) (329 329) (151) (151) (446 446) (133) (192) (192) (192) (192) (192) (424 424) (29))) :lvel (quote ((88 88) (63) (63) (59) (61) (61) (61) (61) (61) (60) (70) (62) (62) (62) (62) (71) (71) (61) (61) (73 73) (68 68) (68) (68) (58) (56) (56) (56) (56) (56) (63 63) (69) (69) (63 63) (89 89) (73 73) (71) (71) (57) (55) (55) (55) (55) (55) (57) (57) (57) (57) (57) (57) (55) (58) (58) (58) (58) (58) (64) (64) (61) (56) (56) (56) (56) (56) (67) (67) (64) (64) (73 73) (57 57) (54 54) (57) (73) (60) (60) (60) (60) (74 74) (57 57) (60) (60) (60) (58) (58) (58) (58) (58) (56) (55) (55) (55) (55) (55) (66) (66) (81 81) (78 78) (64 64) (69) (69) (57) (58) (58) (58) (58) (58) (68) (63) (63) (63) (63) (63) (87 87) (65) (65) (75) (75) (75) (57) (67) (55) (55) (55) (55) (68) (68) (63 63) (61) (58) (58) (58) (58) (58) (55) (71) (58) (58) (58) (58) (60) (60) (64) (64) (72 72) (56) (56) (79 79) (74 74) (69) (69) (78 78) (55) (58) (58) (58) (58) (58) (55) (61) (61) (61) (61) (61) (75) (75) (46 46) (62) (62) (55) (68) (63) (63) (63) (63) (55) (57) (57) (57) (57) (57) (50 50) (61) (61) (76 76) (57) (57) (55) (65) (59) (59) (59) (59) (89 89) (48 48) (67 67) (59 59) (69 69) (55) (68) (63) (63) (63) (63) (57 57) (55) (56) (56) (56) (56) (56) (65) (65) (75) (75) (85 85) (75) (75) (69 69) (65) (65) (63 63) (49 49) (73 73) (47 47) (58) (58) (58) (72) (55) (55) (55) (55) (56 56) (67) (67) (89 89) (57) (62) (62) (62) (62) (62) (55) (55) (62 62) (67) (65) (55) (55) (55) (55) (71) (71) (72 72) (55) (65) (65) (65) (65) (65) (70 70) (61) (61) (46 46) (65) (55) (55) (55) (55) (55) (80 80) (61) (61) (56) (69) (63) (56) (56) (56) (56) (56) (62) (62) (85 85) (83 83) (58) (69) (62) (62) (62) (62) (56) (70) (70) (70) (70) (70) (59 59) (59) (69) (69) (69) (69) (69) (74 74) (85 85) (58 58) (83 83) (56) (55) (55) (55) (55) (55) (71) (71) (66 66) (58 58) (52 52) (55) (59) (59) (59) (59) (59) (56) (60) (60) (60) (60) (60) (79 79) (63) (63) (47 47) (55) (55) (55) (55) (55) (55) (63 63) (66))) :loffset (quote ((0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0))) :lchan (quote ((1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1 1) (1 1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1 1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1 1) (1 1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1 1) (1) (1) (1 1) (1) (1) (1) (1) (1) (1) (1 1) (1))) :legato 0)))) (load-port-info newobj (quote ((0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7794) (7794) (7794) (7794) (7794) (7819) (7794) (7819) (7794) (7819) (7794) (7644) (7794) (7644) (7794) (7644) (7794 7794) (7794 7794) (7794 7794) (7794) (7994) (7794) (7994) (7794) (7994) (7794) (7644) (7794) (7644) (7794) (7644) (7794) (7794) (7794 7794) (7794 7794) (7794 7794) (7794) (7794) (7794) (7794) (7794 7794) (7794) (8019) (7794) (8019) (7794) (8019) (7794 7794) (7794 7794) (7794) (7544) (7794) (7544) (7794) (7544) (7794) (7569) (7794) (7569) (7794) (7569) (7794) (8019) (7794) (8019) (7794) (8019) (7794 7794) (7794 7794) (7794) (7794) (7794) (7794) (7794) (7794) (7794) (7794) (7794) (7794) (7794) (7794) (7794) (7794) (7794 7794) (7794 7794) (7794 7794) (7794) (7944) (7794) (7944) (7794) (7944) (7794) (7794) (7794) (7794) (7794) (7794) (8044) (7794) (8044) (7794) (8044) (7794 7794) (7794 7794) (7794) (7794) (7794 7794) (7794) (7794) (7794 7794) (7794) (7794) (7794 7794) (7794 7794) (7794 7794) (7794) (7794) (7794) (7594) (7794) (7594) (7794) (7594) (7794 7794) (7794) (7794) (7794 7794) (7794 7794) (7794 7794) (7794) (7794) (7794) (7794) (7794) (7794) (7794) (7794 7794) (7794 7794) (7794 7794) (7794 7794) (7794 7794) (7794 7794) (7794) (7794) (7794) (7794) (7794) (7794) (7794) (7794) (7794 7794) (7794) (7794) (7794) (7644) (7794) (7644) (7794) (7644) (7794 7794) (7794 7794) (7794) (7569) (7794) (7569) (7794) (7569) (7794 7794) (7794) (7544) (7794) (7544) (7794) (7544) (7794) (7544) (7794) (7944) (7794) (7944) (7794) (7944) (7794) (7569) (7794) (7569) (7794) (7569) (7794 7794) (7794) (7794) (7794) (7544) (7794) (7544) (7794) (7544) (7794 7794) (7794) (7544) (7794) (7544) (7794) (7544) (7794 7794) (7794) (7794) (7794) (7794) (7794) (7994) (7794) (7994) (7794) (7994) (7794 7794) (7794 7794) (7794) (7744) (7794) (7744) (7794) (7744) (7794 7794) (7794) (7569) (7794) (7569) (7794) (7569) (7794 7794) (7794 7794) (7794) (7769) (7794) (7769) (7794) (7769) (7794 7794) (7794) (7794) (7794) (7569) (7794) (7569) (7794) (7569) (7794) (7569) (7794) (7794) (7794 7794) (7794) (7794) (7794) (7794) (7794) (7794) (7794) (7794) (7794 7794) (7794 7794) (7794) (7844) (7794) (7844) (7794) (7844) (7794) (8019) (7794) (8019) (7794) (8019) (7794 7794) (7794) (7769) (7794) (7769) (7794) (7769) (7794 7794) (7794 7794) (7794 7794) (7794) (7794) (7794) (7544) (7794) (7544) (7794) (7544) (7794 7794) (7794 7794) (7794) (7644) (7794) (7644) (7794) (7644) (7794 7794) (7794) (7819) (7794) (7819) (7794) (7819) (7794 7794) (7794 7794) (7794 7794) (7794 7794) (7794 7794) (7794) (7794) (7794) (7794) (7794) (7794) (7794 7794) (7794 7794) (7794 7794) (7794) (7994) (7794) (7994) (7794) (7994) (7794) (7594) (7794) (7594) (7794) (7594) (7794) (7794) (7794) (7744) (7794) (7744) (7794) (7744))) :lonset (quoteldur (quote ((140) (140) (148) (148) (136) (102) (102) (102) (102) (102) (188) (219) (219) (219) (219) (219) (321 321) (232 232) (284 284) (165) (169) (169) (169) (169) (169) (149) (142) (142) (142) (142) (142) (153) (153) (448 448) (290 290) (242 242) (140) (140) (168) (168) (289 289) (255) (169) (169) (169) (169) (169) (399 399) (331 331) (105) (190) (193) (193) (193) (193) (210) (233) (233) (233) (233) (233) (236) (133) (113) (113) (113) (113) (454 454) (419 419) (174) (174) (157) (188) (188) (188) (188) (188) (151) (196) (196) (196) (196) (196) (207 207) (215 215) (494 494) (164) (201) (201) (201) (201) (201) (148) (148) (257) (166) (166) (173) (186) (186) (186) (186) (186) (358 358) (492 492) (160) (160) (242 242) (144) (144) (490 490) (149) (149) (380 380) (302 302) (217 217) (160) (160) (189) (177) (177) (177) (177) (177) (487 487) (181) (181) (480 480) (417 417) (273 273) (243) (177) (177) (177) (177) (177) (211) (383 383) (244 244) (206 206) (355 355) (427 427) (284 284) (212) (118) (118) (118) (118) (118) (159) (159) (344 344) (148) (148) (183) (190) (190) (190) (190) (190) (384 384) (201 201) (144) (128) (128) (128) (128) (128) (361 361) (162) (171) (61) (77) (77) (77) (77) (77) (235) (243) (243) (243) (243) (243) (149) (219) (219) (219) (219) (219) (333 333) (157) (157) (249) (192) (192) (192) (192) (192) (336 336) (183) (220) (220) (220) (220) (220) (484 484) (165) (165) (167) (167) (152) (234) (234) (234) (234) (234) (465 465) (223 223) (170) (188) (188) (188) (188) (188) (448 448) (171) (104) (104) (104) (104) (104) (255 255) (275 275) (244) (186) (186) (186) (186) (186) (466 466) (173) (173) (114) (128) (121) (119) (119) (119) (119) (119) (169) (169) (435 435) (175) (175) (179) (179) (166) (166) (153) (153) (229 229) (231 231) (241) (186) (186) (186) (186) (186) (132) (160) (160) (160) (160) (160) (460 460) (227) (273) (273) (273) (273) (273) (382 382) (389 389) (456 456) (143) (143) (184) (187) (126) (126) (126) (126) (275 275) (283 283) (165) (149) (149) (149) (149) (149) (231 231) (237) (191) (191) (191) (191) (191) (210 210) (426 426) (397 397) (496 496) (245 245) (136) (136) (181) (181) (147) (147) (304 304) (264 264) (490 490) (182) (169) (169) (169) (169) (169) (138) (165) (165) (165) (165) (165) (174) (174) (168) (164) (164) (164) (164) (164))) :lvel (quote ((66) (66) (61) (61) (56) (55) (55) (55) (55) (55) (56) (55) (55) (55) (55) (55) (55 55) (59 59) (63 63) (57) (58) (58) (58) (58) (58) (55) (57) (57) (57) (57) (57) (67) (67) (88 88) (75 75) (62 62) (70) (70) (55) (55) (87 87) (56) (59) (59) (59) (59) (59) (75 75) (82 82) (56) (68) (57) (57) (57) (57) (58) (55) (55) (55) (55) (55) (59) (73) (55) (55) (55) (55) (45 45) (55 55) (62) (62) (57) (57) (57) (57) (57) (57) (59) (56) (56) (56) (56) (56) (67 67) (52 52) (83 83) (57) (59) (59) (59) (59) (59) (56) (56) (57) (60) (60) (55) (57) (57) (57) (57) (57) (85 85) (90 90) (74) (74) (52 52) (69) (69) (89 89) (56) (56) (64 64) (87 87) (85 85) (70) (70) (58) (55) (55) (55) (55) (55) (86 86) (57) (57) (83 83) (75 75) (76 76) (56) (57) (57) (57) (57) (57) (74) (50 50) (86 86) (49 49) (68 68) (73 73) (85 85) (62) (59) (59) (59) (59) (59) (68) (68) (74 74) (60) (60) (56) (62) (62) (62) (62) (62) (82 82) (73 73) (64) (56) (56) (56) (56) (56) (75 75) (56) (66) (73) (57) (57) (57) (57) (57) (63) (55) (55) (55) (55) (55) (55) (55) (55) (55) (55) (55) (68 68) (56) (56) (58) (58) (58) (58) (58) (58) (47 47) (56) (58) (58) (58) (58) (58) (87 87) (65) (65) (74) (74) (59) (55) (55) (55) (55) (55) (59 59) (58 58) (59) (56) (56) (56) (56) (56) (78 78) (55) (56) (56) (56) (56) (56) (67 67) (61 61) (60) (64) (64) (64) (64) (64) (87 87) (69) (69) (55) (67) (60) (56) (56) (56) (56) (56) (71) (71) (76 76) (55) (55) (74) (74) (60) (60) (56) (56) (54 54) (45 45) (55) (55) (55) (55) (55) (55) (60) (56) (56) (56) (56) (56) (90 90) (56) (60) (60) (60) (60) (60) (52 52) (48 48) (58 58) (58) (58) (55) (70) (55) (55) (55) (55) (71 71) (88 88) (55) (58) (58) (58) (58) (58) (87 87) (57) (55) (55) (55) (55) (55) (81 81) (49 49) (75 75) (74 74) (70 70) (68) (68) (72) (72) (55) (55) (84 84) (79 79) (72 72) (70) (57) (57) (57) (57) (57) (64) (55) (55) (55) (55) (55) (57) (57) (59) (63) (63) (63) (63) (63))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quotelegato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6338 6338) (6338) (6313) (6338) (6313) (6338) (6313) (6338 6338) (6338) (6338) (6338 6338) (6338 6338) (6338) (6338) (6338) (6338) (6338 6338) (6338 6338) (6338) (6138) (6338) (6138) (6338) (6138) (6338 6338) (6338 6338) (6338 6338) (6338 6338) (6338) (6338) (6338) (6338) (6338 6338) (6338) (6338) (6338 6338) (6338) (6338) (6338) (6588) (6338) (6588) (6338) (6588) (6338) (6338) (6338 6338) (6338 6338) (6338 6338) (6338 6338) (6338) (6088) (6338) (6088) (6338) (6088) (6338 6338) (6338 6338) (6338) (6338) (6338 6338) (6338 6338) (6338 6338) (6338 6338) (6338 6338) (6338) (6138) (6338) (6138) (6338) (6138) (6338) (6338) (6338) (6188) (6338) (6188) (6338) (6188) (6338 6338) (6338) (6338) (6338) (6338) (6338 6338) (6338 6338) (6338) (6338) (6338 6338) (6338 6338) (6338) (6188) (6338) (6188) (6338) (6188) (6338) (6338) (6338 6338) (6338) (6538) (6338) (6538) (6338) (6538) (6338 6338) (6338 6338) (6338 6338) (6338 6338) (6338) (6363) (6338) (6363) (6338) (6363) (6338 6338) (6338) (6588) (6338) (6588) (6338) (6588) (6338 6338) (6338) (6338) (6338 6338) (6338 6338) (6338 6338) (6338) (6113) (6338) (6113) (6338) (6113) (6338 6338) (6338 6338) (6338 6338) (6338) (6488) (6338) (6488) (6338) (6488) (6338 6338) (6338) (6338) (6338 6338) (6338) (6338) (6338) (6363) (6338) (6363) (6338) (6363) (6338) (6338) (6338) (6338) (6338) (6338) (6338) (6338) (6338) (6338) (6338) (6338 6338) (6338) (6338) (6338 6338) (6338) (6363) (6338) (6363) (6338) (6363) (6338) (6088) (6338) (6088) (6338) (6088) (6338) (6188) (6338) (6188) (6338) (6188) (6338 6338) (6338) (6338) (6338 6338) (6338) (6338) (6338 6338) (6338 6338) (6338 6338) (6338 6338) (6338) (6338) (6338 6338) (6338 6338) (6338 6338) (6338 6338) (6338) (6338) (6338) (6338) (6338 6338) (6338) (6338) (6338 6338) (6338 6338) (6338) (6338) (6338) (6338) (6338 6338) (6338) (6338) (6338 6338) (6338) (6338) (6338 6338) (6338 6338) (6338 6338) (6338) (6338) (6338 6338) (6338) (6288) (6338) (6288) (6338) (6288) (6338) (6338) (6338) (6338) (6338) (6338) (6338 6338) (6338 6338) (6338) (6338) (6338 6338) (6338) (6338) (6338) (6338) (6338) (6363) (6338) (6363) (6338) (6363) (6338) (6338) (6338) (6338) (6338) (6338) (6338) (6563) (6338) (6563) (6338) (6563) (6338 6338) (6338 6338) (6338 6338) (6338) (6288) (6338) (6288) (6338) (6288) (6338 6338) (6338) (6338) (6338 6338) (6338 6338) (6338) (6338) (6338 6338) (6338 6338) (6338) (6088) (6338) (6088) (6338) (6088) (6338 6338))) :lonset (quote (441 969 1119 1243 1355 1467 1579 2127 2425 2586 2938 3595 4511 4657 5482 5646 6065 6288 7004 7203 7384 7565 7746 7927 8210 8952 9923 10395 11059 11230 11912 12065 12405 13299 13480 14251 14891 15035 15818 15950 16121 16292 16463 16634 16950 17098 17584 18283 18887 19792 20494 20689 20863 21037 21211 21385 21940 22625 23304 23450 23614 24080 24443 24996 25262 26357 26619 26761 26903 27045 27187 28028 28187 28557 28710 28899 29088 29277 29466 30290 30642 30778 31053 31200 31453 31967 33043 33217 34020 34871 35633 35809 35969 36129 36289 36449 36687 36858 37267 38053 38174 38285 38495 38705 38915 39275 39562 40332 41246 41780 42040 42265 42490 42715 42940 43424 44267 44412 44582 44752 44922 45092 45859 46665 46822 47109 48024 48592 49617 49747 49919 50066 50213 50360 50839 51269 52069 53047 53180 53345 53464 53583 53702 53908 54822 54974 55644 56066 56230 56574 56814 56986 57158 57330 57502 57956 58120 58288 58610 58753 58981 59209 59437 59665 60194 60366 60858 61857 62022 62861 63725 63948 64117 64211 64305 64399 64613 64706 64909 65066 65223 65380 65763 65962 66094 66226 66358 66490 66726 67821 67996 68715 69594 69732 70246 70659 71653 72396 73221 73378 73604 74063 75096 75780 76238 76403 76755 76894 77333 77698 77838 78637 78907 79326 79483 79776 79939 80115 81125 81298 82053 82552 82729 83187 83901 84239 84591 84730 85369 85781 85993 86137 86281 86425 86569 87180 87324 87469 87614 87759 87904 88552 88941 89593 89726 89996 90512 90673 90858 91015 91172 91376 91540 91704 91868 92032 92795 92934 93140 93346 93552 93758 94562 94745 94848 94951 95054 95157 95380 96552 97274 97790 97954 98095 98236 98377 98518 99289 100105 100261 101080 101655 102124 102303 103087 103731 104418 104595 104743 104891 105039 105187 105507 105744)) :ldur (quote ((316 316) (150) (124) (112) (112) (112) (112) (264 264) (161) (161) (414 414) (466 466) (146) (146) (164) (164) (201 201) (346 346) (199) (181) (181) (181) (181) (181) (490 490) (461 461) (352 352) (322 322) (171) (171) (153) (153) (279 279) (181) (181) (491 491) (144) (144) (132) (171) (171) (171) (171) (171) (148) (148) (405 405) (380 380) (376 376) (351 351) (195) (174) (174) (174) (174) (174) (274 274) (430 430) (146) (146) (285 285) (355 355) (227 227) (214 214) (489 489) (262) (142) (142) (142) (142) (142) (159) (159) (153) (189) (189) (189) (189) (189) (288 288) (136) (136) (147) (147) (209 209) (413 413) (174) (174) (402 402) (477 477) (176) (160) (160) (160) (160) (160) (171) (171) (246 246) (121) (111) (210) (210) (210) (210) (250 250) (457 457) (277 277) (206 206) (260) (225) (225) (225) (225) (225) (468 468) (145) (170) (170) (170) (170) (170) (289 289) (157) (157) (445 445) (292 292) (471 471) (130) (172) (147) (147) (147) (147) (345 345) (384 384) (338 338) (133) (165) (119) (119) (119) (119) (237 237) (152) (152) (247 247) (164) (164) (240) (172) (172) (172) (172) (172) (164) (164) (202) (143) (228) (228) (228) (228) (228) (172) (172) (324 324) (165) (165) (393 393) (223) (169) (94) (94) (94) (94) (93) (203) (157) (157) (157) (157) (199) (132) (132) (132) (132) (132) (482 482) (175) (175) (306 306) (138) (138) (208 208) (420 420) (435 435) (281 281) (157) (157) (444 444) (476 476) (470 470) (329 329) (165) (165) (139) (139) (332 332) (140) (140) (213 213) (417 417) (157) (157) (163) (163) (491 491) (173) (173) (299 299) (177) (177) (359 359) (222 222) (338 338) (139) (139) (382 382) (212) (144) (144) (144) (144) (144) (144) (145) (145) (145) (145) (145) (202 202) (240 240) (133) (133) (468 468) (161) (161) (157) (157) (204) (164) (164) (164) (164) (164) (139) (206) (206) (206) (206) (206) (183) (103) (103) (103) (103) (103) (478 478) (209 209) (240 240) (164) (141) (141) (141) (141) (141) (424 424) (156) (156) (231 231) (227 227) (179) (179) (209 209) (430 430) (177) (148) (148) (148) (148) (148) (237 237))) :lvel (quote ((60 60) (56) (74) (60) (60) (60) (60) (78 78) (69) (69) (74 74) (80 80) (58) (58) (60) (60) (68 68) (60 60) (58) (55) (55) (55) (55) (55) (73 73) (52 52) (89 89) (69 69) (69) (69) (66) (66) (79 79) (74) (74) (70 70) (67) (67) (55) (55) (55) (55) (55) (55) (64) (64) (64 64) (72 72) (59 59) (48 48) (58) (55) (55) (55) (55) (55) (62 62) (63 63) (61) (61) (89 89) (47 47) (57 57) (79 79) (67 67) (60) (55) (55) (55) (55) (55) (68) (68) (56) (55) (55) (55) (55) (55) (61 61) (65) (65) (66) (66) (72 72) (50 50) (61) (61) (57 57) (60 60) (56) (56) (56) (56) (56) (56) (75) (75) (75 75) (61) (68) (71) (71) (71) (71) (64 64) (66 66) (65 65) (46 46) (57) (59) (59) (59) (59) (59) (69 69) (55) (56) (56) (56) (56) (56) (58 58) (68) (68) (57 57) (50 50) (90 90) (62) (70) (58) (58) (58) (58) (51 51) (56 56) (45 45) (63) (70) (57) (57) (57) (57) (86 86) (60) (60) (90 90) (61) (61) (55) (55) (55) (55) (55) (55) (63) (63) (61) (55) (56) (56) (56) (56) (56) (74) (74) (62 62) (63) (63) (80 80) (55) (66) (59) (59) (59) (59) (57) (72) (55) (55) (55) (55) (59) (55) (55) (55) (55) (55) (87 87) (58) (58) (53 53) (61) (61) (89 89) (63 63) (74 74) (64 64) (74) (74) (76 76) (75 75) (82 82) (54 54) (74) (74) (70) (70) (60 60) (65) (65) (48 48) (66 66) (75) (75) (57) (57) (46 46) (62) (62) (52 52) (68) (68) (61 61) (76 76) (88 88) (62) (62) (61 61) (74) (56) (56) (56) (56) (56) (55) (61) (61) (61) (61) (61) (70 70) (79 79) (60) (60) (80 80) (66) (66) (61) (61) (61) (59) (59) (59) (59) (59) (55) (61) (61) (61) (61) (61) (60) (56) (56) (56) (56) (56) (75 75) (58 58) (76 76) (55) (57) (57) (57) (57) (57) (49 49) (63) (63) (78 78) (47 47) (72) (72) (51 51) (78 78) (56) (62) (62) (62) (62) (62) (49 49))) :loffset (quote ((0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0))) :lchan (quotelegato 0)))) (load-port-info newobj (quote ((0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6332 6332) (6332 6332) (6332 6332) (6332) (6582) (6332) (6582) (6332) (6582) (6332 6332) (6332 6332) (6332 6332) (6332) (6357) (6332) (6357) (6332) (6357) (6332 6332) (6332) (6332) (6332 6332) (6332) (6482) (6332) (6482) (6332) (6482) (6332 6332) (6332 6332) (6332 6332) (6332) (6282) (6332) (6282) (6332) (6282) (6332) (6307) (6332) (6307) (6332) (6307) (6332) (6332) (6332) (6107) (6332) (6107) (6332) (6107) (6332) (6332) (6332) (6332) (6332) (6332) (6332) (6332) (6332 6332) (6332) (6532) (6332) (6532) (6332) (6532) (6332) (6332) (6332) (6332) (6332) (6382) (6332) (6382) (6332) (6382) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332) (6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332) (6332) (6332 6332) (6332) (6307) (6332) (6307) (6332) (6307) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332) (6332) (6332) (6582) (6332) (6582) (6332) (6582) (6332) (6132) (6332) (6132) (6332) (6132) (6332) (6132) (6332) (6132) (6332) (6132) (6332) (6482) (6332) (6482) (6332) (6482) (6332 6332) (6332) (6332) (6332) (6332) (6332) (6332) (6332 6332) (6332 6332) (6332) (6332) (6332) (6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332) (6332) (6332 6332) (6332 6332) (6332) (6082) (6332) (6082) (6332) (6082) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332) (6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332) (6107) (6332) (6107) (6332) (6107) (6332 6332) (6332 6332) (6332) (6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332) (6082) (6332) (6082) (6332) (6082) (6332) (6182) (6332) (6182) (6332) (6182) (6332 6332) (6332 6332) (6332) (6182) (6332) (6182) (6332) (6182) (6332) (6332) (6332 6332) (6332) (6332) (6332 6332) (6332) (6332) (6332 6332) (6332 6332) (6332) (6332) (6332) (6332) (6332 6332) (6332) (6282) (6332) (6282) (6332) (6282) (6332) (6357) (6332) (6357) (6332) (6357) (6332) (6332) (6332) (6332) (6332) (6382) (6332) (6382) (6332) (6382) (6332) (6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332) (6182) (6332) (6182) (6332) (6182) (6332) (6557) (6332) (6557) (6332) (6557) (6332 6332) (6332) (6532) (6332) (6532) (6332) (6532) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332) (6332) (6332 6332))) :lonset (quoteldur (quote ((355 355) (326 326) (228 228) (223) (278) (278) (278) (278) (278) (393 393) (369 369) (312 312) (161) (178) (178) (178) (178) (178) (368 368) (180) (180) (471 471) (228) (173) (173) (173) (173) (173) (410 410) (264 264) (474 474) (206) (147) (147) (147) (147) (147) (271) (230) (230) (230) (230) (230) (144) (144) (114) (176) (124) (124) (124) (124) (153) (153) (175) (175) (174) (174) (167) (167) (234 234) (238) (254) (254) (254) (254) (254) (181) (181) (148) (148) (150) (169) (169) (169) (169) (169) (355 355) (359 359) (278 278) (453 453) (251 251) (172) (172) (367 367) (266 266) (382 382) (398 398) (174) (174) (329 329) (160) (148) (162) (162) (162) (162) (291 291) (304 304) (427 427) (273 273) (179) (179) (195) (260) (260) (260) (260) (260) (154) (197) (197) (197) (197) (197) (148) (131) (131) (131) (131) (131) (159) (227) (227) (227) (227) (227) (406 406) (180) (180) (167) (167) (166) (166) (213 213) (405 405) (137) (137) (144) (144) (288 288) (459 459) (227 227) (321 321) (468 468) (358 358) (291 291) (140) (140) (360 360) (323 323) (224) (234) (234) (234) (234) (234) (353 353) (222 222) (279 279) (428 428) (166) (166) (269 269) (496 496) (347 347) (310 310) (127) (156) (149) (149) (149) (149) (362 362) (351 351) (167) (167) (454 454) (287 287) (484 484) (401 401) (401 401) (116) (102) (219) (219) (219) (219) (200) (126) (126) (126) (126) (126) (373 373) (448 448) (249) (193) (193) (193) (193) (193) (163) (163) (381 381) (169) (169) (251 251) (133) (133) (378 378) (425 425) (147) (147) (159) (159) (429 429) (260) (172) (172) (172) (172) (172) (135) (170) (170) (170) (170) (170) (132) (132) (168) (168) (245) (178) (178) (178) (178) (178) (165) (165) (304 304) (404 404) (276 276) (269 269) (253 253) (290 290) (116) (181) (181) (181) (181) (181) (200) (162) (162) (162) (162) (162) (316 316) (193) (120) (120) (120) (120) (120) (485 485) (247 247) (478 478) (258 258) (451 451) (159) (159) (11 11))) :lvel (quote ((81 81) (60 60) (63 63) (55) (55) (55) (55) (55) (55) (68 68) (75 75) (84 84) (60) (60) (60) (60) (60) (60) (80 80) (59) (59) (76 76) (56) (63) (63) (63) (63) (63) (65 65) (75 75) (59 59) (63) (63) (63) (63) (63) (63) (55) (60) (60) (60) (60) (60) (75) (75) (57) (70) (57) (57) (57) (57) (61) (61) (61) (61) (56) (56) (62) (62) (81 81) (57) (55) (55) (55) (55) (55) (63) (63) (73) (73) (58) (63) (63) (63) (63) (63) (56 56) (83 83) (79 79) (85 85) (73 73) (63) (63) (68 68) (77 77) (83 83) (65 65) (59) (59) (55 55) (55) (74) (57) (57) (57) (57) (45 45) (84 84) (83 83) (48 48) (74) (74) (55) (58) (58) (58) (58) (58) (61) (55) (55) (55) (55) (55) (57) (69) (69) (69) (69) (69) (62) (58) (58) (58) (58) (58) (90 90) (71) (71) (75) (75) (69) (69) (80 80) (48 48) (57) (57) (75) (75) (81 81) (86 86) (69 69) (54 54) (87 87) (47 47) (45 45) (72) (72) (50 50) (74 74) (55) (57) (57) (57) (57) (57) (64 64) (71 71) (75 75) (68 68) (55) (55) (53 53) (69 69) (61 61) (67 67) (61) (67) (59) (59) (59) (59) (60 60) (63 63) (75) (75) (82 82) (83 83) (84 84) (69 69) (84 84) (56) (69) (57) (57) (57) (57) (56) (58) (58) (58) (58) (58) (83 83) (77 77) (57) (56) (56) (56) (56) (56) (73) (73) (56 56) (75) (75) (68 68) (62) (62) (89 89) (83 83) (69) (69) (56) (56) (54 54) (57) (55) (55) (55) (55) (55) (55) (55) (55) (55) (55) (55) (62) (62) (67) (67) (55) (58) (58) (58) (58) (58) (56) (56) (47 47) (73 73) (83 83) (78 78) (77 77) (78 78) (59) (56) (56) (56) (56) (56) (59) (74) (74) (74) (74) (74) (59 59) (57) (55) (55) (55) (55) (55) (87 87) (51 51) (62 62) (49 49) (45 45) (63) (63) (81 81))) :loffset (quote ((0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0))) :lchan (quotelegato 0)))) (load-port-info newobj (quote ((0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6332) (6332) (6332) (6332) (6332) (6332 6332) (6332) (6282) (6332) (6282) (6332) (6282) (6332) (6132) (6332) (6132) (6332) (6132) (6332) (6332) (6332) (6282) (6332) (6282) (6332) (6282) (6332 6332) (6332) (6332) (6332 6332) (6332 6332) (6332 6332) (6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332) (6332) (6332 6332) (6332) (6382) (6332) (6382) (6332) (6382) (6332 6332) (6332 6332) (6332 6332) (6332) (6332) (6332) (6332) (6332 6332) (6332) (6332) (6332) (6332) (6332) (6332) (6332) (6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332) (6332) (6332) (6332) (6332) (6332) (6332) (6332) (6332 6332) (6332) (6332) (6332 6332) (6332) (6332) (6332) (6332) (6332) (6482) (6332) (6482) (6332) (6482) (6332) (6332) (6332) (6332) (6332) (6332) (6332 6332) (6332) (6332) (6332) (6332) (6332) (6332) (6332) (6282) (6332) (6282) (6332) (6282) (6332) (6332) (6332) (6182) (6332) (6182) (6332) (6182) (6332 6332) (6332 6332) (6332) (6282) (6332) (6282) (6332) (6282) (6332) (6332) (6332 6332) (6332 6332) (6332) (6332) (6132) (6332) (6132) (6332) (6132) (6332) (6332) (6332 6332) (6332 6332) (6332) (6282) (6332) (6282) (6332) (6282) (6332 6332) (6332) (6332) (6332) (6382) (6332) (6382) (6332) (6382) (6332 6332) (6332) (6332) (6332) (6332) (6332) (6332) (6332) (6332) (6332 6332) (6332 6332) (6332) (6482) (6332) (6482) (6332) (6482) (6332) (6332) (6332) (6282) (6332) (6282) (6332) (6282) (6332 6332) (6332) (6282) (6332) (6282) (6332) (6282) (6332) (6382) (6332) (6382) (6332) (6382) (6332 6332) (6332 6332) (6332 6332) (6332) (6332) (6332 6332) (6332 6332) (6332 6332) (6332) (6332) (6332 6332) (6332) (6332) (6332 6332) (6332) (6132) (6332) (6132) (6332) (6132) (6332 6332) (6332) (6557) (6332) (6557) (6332) (6557) (6332) (6182) (6332) (6182) (6332) (6182) (6332) (6332) (6332 6332) (6332 6332) (6332) (6382) (6332) (6382) (6332) (6382) (6332 6332) (6332) (6382) (6332) (6382) (6332) (6382) (6332 6332) (6332 6332) (6332 6332) (6332) (6182) (6332) (6182) (6332) (6182) (6332) (6332) (6332 6332) (6332) (6332) (6332) (6332) (6332) (6332) (6332 6332) (6332 6332) (6332 6332) (6332) (6557) (6332) (6557) (6332) (6557) (6332) (6482) (6332) (6482) (6332) (6482) (6332 6332) (6332 6332) (6332) (6557) (6332) (6557) (6332) (6557) (6332 6332) (6332) (6332) (6332) (6332) (6332) (6082) (6332) (6082) (6332) (6082) (6332 6332) (6332 6332) (6332) (6282) (6332) (6282) (6332) (6282) (6332) (6307) (6332) (6307) (6332) (6307) (6332) (6182) (6332) (6182) (6332) (6182) (6332) (6357) (6332) (6357) (6332) (6357) (6332 6332) (6332) (6557) (6332) (6557) (6332) (6557) (6332 6332) (6332) (6482) (6332) (6482) (6332) (6482) (6332 6332) (6332 6332) (6332) (6332) (6332) (6332) (6332) (6282) (6332) (6282) (6332) (6282) (6332) (6332) (6332 6332) (6332) (6382) (6332) (6382) (6332) (6382) (6332))) :lonset (quoteldur (quote ((141) (141) (149) (149) (233) (329 329) (162) (316) (316) (316) (316) (316) (229) (170) (170) (170) (170) (170) (151) (151) (191) (167) (167) (167) (167) (167) (324 324) (172) (172) (238 238) (482 482) (297 297) (212) (433 433) (217 217) (356 356) (321 321) (153) (153) (491 491) (202) (207) (207) (207) (207) (207) (217 217) (435 435) (398 398) (171) (171) (146) (146) (213 213) (150) (150) (144) (144) (132) (132) (169) (169) (435 435) (302 302) (225 225) (306 306) (111) (126) (114) (145) (145) (145) (145) (145) (453 453) (140) (140) (447 447) (169) (169) (174) (174) (134) (167) (167) (167) (167) (167) (164) (276) (276) (276) (276) (276) (328 328) (238) (172) (172) (172) (172) (172) (159) (198) (198) (198) (198) (198) (176) (176) (208) (246) (246) (246) (246) (246) (497 497) (429 429) (109) (126) (147) (147) (147) (147) (172) (172) (279 279) (396 396) (207) (160) (259) (259) (259) (259) (259) (153) (153) (410 410) (396 396) (128) (128) (69) (69) (69) (69) (239 239) (143) (143) (261) (181) (181) (181) (181) (181) (454 454) (140) (131) (120) (120) (120) (120) (166) (166) (367 367) (483 483) (272) (216) (216) (216) (216) (216) (171) (171) (169) (219) (219) (219) (219) (219) (494 494) (252) (210) (210) (210) (210) (210) (201) (148) (95) (95) (95) (95) (291 291) (265 265) (493 493) (153) (153) (381 381) (391 391) (499 499) (176) (176) (210 210) (166) (166) (288 288) (141) (123) (203) (203) (203) (203) (309 309) (141) (173) (129) (129) (129) (129) (192) (204) (204) (204) (204) (204) (153) (153) (313 313) (368 368) (166) (186) (146) (146) (146) (146) (228 228) (146) (196) (158) (158) (158) (158) (348 348) (328 328) (237 237) (182) (163) (163) (163) (163) (163) (153) (153) (243 243) (303) (143) (143) (143) (143) (143) (225 225) (422 422) (285 285) (163) (153) (173) (173) (173) (173) (170) (302) (302) (302) (302) (302) (399 399) (475 475) (159) (128) (128) (128) (128) (128) (432 432) (170) (170) (174) (174) (269) (171) (171) (171) (171) (171) (379 379) (459 459) (217) (192) (192) (192) (192) (192) (217) (264) (264) (264) (264) (264) (164) (208) (208) (208) (208) (208) (193) (238) (238) (238) (238) (238) (416 416) (101) (129) (160) (160) (160) (160) (286 286) (132) (167) (167) (167) (167) (167) (497 497) (238 238) (181) (181) (148) (148) (120) (199) (199) (199) (199) (199) (162) (162) (260 260) (153) (198) (198) (198) (198) (198) (75))) :lvel (quote ((60) (60) (72) (72) (63) (65 65) (56) (55) (55) (55) (55) (55) (56) (60) (60) (60) (60) (60) (71) (71) (57) (65) (65) (65) (65) (65) (57 57) (58) (58) (81 81) (61 61) (69 69) (59) (56 56) (88 88) (88 88) (54 54) (66) (66) (82 82) (64) (63) (63) (63) (63) (63) (75 75) (65 65) (50 50) (63) (63) (75) (75) (82 82) (60) (60) (65) (65) (74) (74) (75) (75) (90 90) (51 51) (52 52) (51 51) (62) (72) (61) (55) (55) (55) (55) (55) (46 46) (67) (67) (82 82) (75) (75) (63) (63) (61) (59) (59) (59) (59) (59) (64) (55) (55) (55) (55) (55) (61 61) (55) (64) (64) (64) (64) (64) (56) (58) (58) (58) (58) (58) (55) (55) (57) (55) (55) (55) (55) (55) (71 71) (73 73) (58) (68) (55) (55) (55) (55) (60) (60) (62 62) (49 49) (55) (56) (60) (60) (60) (60) (60) (57) (57) (49 49) (52 52) (55) (71) (56) (56) (56) (56) (52 52) (55) (55) (56) (61) (61) (61) (61) (61) (65 65) (59) (66) (55) (55) (55) (55) (70) (70) (51 51) (68 68) (63) (56) (56) (56) (56) (56) (65) (65) (58) (55) (55) (55) (55) (55) (67 67) (56) (61) (61) (61) (61) (61) (56) (70) (60) (60) (60) (60) (74 74) (56 56) (83 83) (66) (66) (82 82) (85 85) (57 57) (62) (62) (74 74) (66) (66) (61 61) (55) (70) (56) (56) (56) (56) (87 87) (63) (66) (56) (56) (56) (56) (56) (56) (56) (56) (56) (56) (62) (62) (89 89) (46 46) (57) (73) (59) (59) (59) (59) (87 87) (58) (72) (57) (57) (57) (57) (50 50) (80 80) (89 89) (55) (55) (55) (55) (55) (55) (69) (69) (67 67) (56) (73) (73) (73) (73) (73) (49 49) (89 89) (63 63) (58) (66) (65) (65) (65) (65) (61) (56) (56) (56) (56) (56) (62 62) (87 87) (60) (57) (57) (57) (57) (57) (89 89) (71) (71) (72) (72) (56) (57) (57) (57) (57) (57) (46 46) (64 64) (57) (60) (60) (60) (60) (60) (59) (55) (55) (55) (55) (55) (55) (58) (58) (58) (58) (58) (71) (56) (56) (56) (56) (56) (66 66) (57) (69) (55) (55) (55) (55) (57 57) (60) (57) (57) (57) (57) (57) (78 78) (80 80) (66) (66) (62) (62) (70) (56) (56) (56) (56) (56) (61) (61) (66 66) (55) (65) (65) (65) (65) (65) (67))) :loffset (quote ((0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quotelegato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6332 6332) (6332) (6107) (6332) (6107) (6332) (6107) (6332 6332) (6332) (6182) (6332) (6182) (6332) (6182) (6332) (6332) (6332 6332) (6332 6332) (6332) (6332) (6332 6332) (6332) (6107) (6332) (6107) (6332) (6107) (6332 6332) (6332) (6332) (6332) (6332) (6332) (6107) (6332) (6107) (6332) (6107) (6332 6332) (6332) (6332) (6332) (6132) (6332) (6132) (6332) (6132) (6332) (6332) (6332) (6332) (6332) (6332) (6332) (6482) (6332) (6482) (6332) (6482) (6332) (6082) (6332) (6082) (6332) (6082) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332) (6332) (6332 6332) (6332 6332) (6332) (6332) (6332) (6332) (6332 6332) (6332 6332) (6332) (6332) (6332 6332) (6332) (6332) (6332 6332) (6332 6332) (6332 6332) (6332) (6332) (6332) (6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332) (6332) (6332) (6107) (6332) (6107) (6332) (6107) (6332 6332) (6332) (6332) (6332 6332) (6332) (6482) (6332) (6482) (6332) (6482) (6332) (6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332) (6382) (6332) (6382) (6332) (6382) (6332 6332) (6332 6332) (6332 6332) (6332) (6107) (6332) (6107) (6332) (6107) (6332) (6332) (6332 6332) (6332) (6382) (6332) (6382) (6332) (6382) (6332) (6482) (6332) (6482) (6332) (6482) (6332) (6332) (6332) (6332) (6332 6332) (6332) (6332) (6332 6332) (6332) (6332) (6332 6332) (6332) (6582) (6332) (6582) (6332) (6582) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332) (6332) (6332 6332) (6332) (6332) (6332) (6107) (6332) (6107) (6332) (6107) (6332 6332) (6332) (6132) (6332) (6132) (6332) (6132) (6332 6332) (6332 6332) (6332 6332) (6332) (6332) (6332) (6182) (6332) (6182) (6332) (6182) (6332) (6557) (6332) (6557) (6332) (6557) (6332) (6182) (6332) (6182) (6332) (6182) (6332 6332) (6332 6332) (6332) (6332) (6332 6332) (6332) (6557) (6332) (6557) (6332) (6557) (6332 6332) (6332) (6332) (6332) (6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332) (6332) (6332 6332) (6332) (6332) (6332 6332) (6332 6332) (6332 6332) (6332 6332) (6332) (6482) (6332) (6482) (6332) (6482) (6332) (6332) (6332) (6332) (6332) (6332) (6332) (6332) (6332) (6332) (6332) (6332) (6332) (6357) (6332) (6357) (6332) (6357) (6332) (6082) (6332) (6082) (6332) (6082) (6332 6332) (6332) (6082) (6332) (6082) (6332) (6082) (6332 6332) (6332) (6332))) :lonset (quoteldur (quote ((389 389) (192) (188) (188) (188) (188) (188) (213 213) (143) (156) (156) (156) (156) (156) (143) (143) (383 383) (497 497) (160) (160) (423 423) (119) (183) (183) (183) (183) (183) (428 428) (172) (172) (136) (136) (171) (117) (146) (146) (146) (146) (222 222) (154) (154) (198) (104) (124) (124) (124) (124) (179) (197) (197) (197) (197) (197) (155) (117) (117) (117) (117) (117) (194) (172) (172) (172) (172) (172) (442 442) (308 308) (330 330) (395 395) (455 455) (163) (163) (303 303) (415 415) (170) (170) (136) (136) (320 320) (383 383) (172) (172) (490 490) (150) (150) (480 480) (232 232) (395 395) (175) (175) (143) (143) (353 353) (352 352) (393 393) (484 484) (318 318) (157) (157) (141) (211) (211) (211) (211) (211) (335 335) (177) (177) (475 475) (215) (199) (199) (199) (199) (199) (176) (176) (474 474) (231 231) (448 448) (356 356) (371 371) (355 355) (226) (182) (182) (182) (182) (182) (216 216) (276 276) (366 366) (210) (215) (215) (215) (215) (215) (177) (177) (213 213) (123) (113) (204) (204) (204) (204) (169) (126) (126) (126) (126) (126) (181) (181) (168) (168) (379 379) (173) (173) (489 489) (137) (137) (259 259) (188) (193) (193) (193) (193) (193) (235 235) (225 225) (254 254) (313 313) (149) (149) (322 322) (254) (248) (110) (141) (141) (141) (141) (141) (381 381) (230) (261) (261) (261) (261) (261) (247 247) (362 362) (343 343) (150) (150) (127) (155) (141) (141) (141) (141) (113) (155) (169) (169) (169) (169) (172) (205) (205) (205) (205) (205) (264 264) (446 446) (180) (180) (434 434) (206) (276) (276) (276) (276) (276) (261 261) (158) (158) (179) (179) (288 288) (258 258) (241 241) (450 450) (456 456) (170) (170) (295 295) (139) (139) (487 487) (426 426) (291 291) (450 450) (197) (179) (179) (179) (179) (179) (148) (148) (174) (174) (149) (149) (163) (209) (209) (209) (209) (209) (138) (167) (167) (167) (167) (167) (153) (122) (141) (141) (141) (141) (225 225) (230) (181) (181) (181) (181) (181) (300 300) (158) (158))) :lvel (quote ((63 63) (57) (56) (56) (56) (56) (56) (73 73) (57) (56) (56) (56) (56) (56) (65) (65) (88 88) (72 72) (73) (73) (66 66) (56) (56) (56) (56) (56) (56) (69 69) (58) (58) (75) (75) (66) (65) (55) (55) (55) (55) (70 70) (56) (56) (56) (72) (56) (56) (56) (56) (56) (56) (56) (56) (56) (56) (55) (55) (55) (55) (55) (55) (56) (61) (61) (61) (61) (61) (78 78) (59 59) (83 83) (50 50) (77 77) (63) (63) (61 61) (55 55) (60) (60) (69) (69) (65 65) (49 49) (69) (69) (82 82) (62) (62) (73 73) (64 64) (61 61) (65) (65) (59) (59) (59 59) (49 49) (89 89) (77 77) (60 60) (69) (69) (55) (63) (63) (63) (63) (63) (53 53) (69) (69) (58 58) (55) (63) (63) (63) (63) (63) (63) (63) (60 60) (84 84) (71 71) (55 55) (71 71) (84 84) (56) (59) (59) (59) (59) (59) (76 76) (78 78) (54 54) (56) (61) (61) (61) (61) (61) (56) (56) (76 76) (55) (70) (55) (55) (55) (55) (62) (57) (57) (57) (57) (57) (64) (64) (68) (68) (86 86) (62) (62) (76 76) (55) (55) (88 88) (66) (55) (55) (55) (55) (55) (80 80) (63 63) (89 89) (59 59) (74) (74) (46 46) (61) (74) (58) (55) (55) (55) (55) (55) (65 65) (55) (62) (62) (62) (62) (62) (48 48) (61 61) (80 80) (74) (74) (57) (72) (55) (55) (55) (55) (56) (71) (65) (65) (65) (65) (55) (63) (63) (63) (63) (63) (56 56) (81 81) (65) (65) (76 76) (55) (62) (62) (62) (62) (62) (85 85) (71) (71) (65) (65) (82 82) (67 67) (64 64) (74 74) (51 51) (56) (56) (65 65) (71) (71) (74 74) (46 46) (90 90) (53 53) (55) (56) (56) (56) (56) (56) (55) (55) (58) (58) (60) (60) (56) (55) (55) (55) (55) (55) (55) (58) (58) (58) (58) (58) (57) (69) (71) (71) (71) (71) (83 83) (55) (56) (56) (56) (56) (56) (83 83) (60) (60))) :loffset (quote ((0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0))) :lchan (quotelegato 0)))) (load-port-info newobj (quote ((0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6326) (6326) (6326 6326) (6326 6326) (6326) (6476) (6326) (6476) (6326) (6476) (6326 6326) (6326 6326) (6326 6326) (6326) (6326) (6326) (6326) (6326) (6326) (6326) (6326) (6326 6326) (6326) (6576) (6326) (6576) (6326) (6576) (6326) (6326) (6326 6326) (6326) (6326) (6326) (6326) (6326) (6326) (6326 6326) (6326 6326) (6326) (6076) (6326) (6076) (6326) (6076) (6326) (6351) (6326) (6351) (6326) (6351) (6326) (6076) (6326) (6076) (6326) (6076) (6326) (6101) (6326) (6101) (6326) (6101) (6326) (6476) (6326) (6476) (6326) (6476) (6326) (6326 6326) (6326 6326) (6326) (6326) (6326 6326) (6326 6326) (6326) (6326) (6326 6326) (6326) (6326) (6326 6326) (6326) (6126) (6326) (6126) (6326) (6126) (6326) (6326) (6326) (6326) (6326 6326) (6326) (6326) (6326) (6576) (6326) (6576) (6326) (6576) (6326 6326) (6326 6326) (6326) (6326) (6326) (6576) (6326) (6576) (6326) (6576) (6326 6326) (6326 6326) (6326 6326) (6326 6326) (6326) (6326) (6326) (6526) (6326) (6526) (6326) (6526) (6326 6326) (6326 6326) (6326 6326) (6326 6326) (6326 6326) (6326) (6126) (6326) (6126) (6326) (6126) (6326 6326) (6326 6326) (6326) (6351) (6326) (6351) (6326) (6351) (6326) (6326) (6326) (6326) (6326) (6326) (6326) (6326) (6326 6326) (6326) (6351) (6326) (6351) (6326) (6351) (6326 6326) (6326) (6551) (6326) (6551) (6326) (6551) (6326) (6326) (6326) (6326) (6326 6326) (6326) (6376) (6326) (6376) (6326) (6376) (6326) (6326) (6301) (6326) (6301) (6326) (6301) (6326) (6376) (6326) (6376) (6326) (6376) (6326) (6326) (6326) (6326) (6326) (6526) (6326) (6526) (6326) (6526) (6326) (6326) (6326 6326) (6326 6326) (6326 6326) (6326 6326) (6326) (6326) (6326) (6301) (6326) (6301) (6326) (6301) (6326 6326) (6326) (6076) (6326) (6076) (6326) (6076) (6326) (6326) (6326) (6326) (6326) (6276) (6326) (6276) (6326) (6276) (6326 6326) (6326 6326) (6326) (6076) (6326) (6076) (6326) (6076) (6326) (6076) (6326) (6326) (6326 6326) (6326) (6326) (6326) (6326) (6326 6326) (6326 6326) (6326) (6476) (6326) (6476) (6326) (6476) (6326) (6326) (6326) (6326) (6326 6326) (6326) (6301) (6326) (6301) (6326) (6301) (6326) (6351) (6326) (6351) (6326) (6351) (6326 6326) (6326) (6301) (6326) (6301) (6326) (6301) (6326) (6326) (6326) (6326) (6326) (6326) (6326 6326) (6326) (6476) (6326) (6476) (6326) (6476) (6326 6326) (6326) (6326) (6326) (6301) (6326) (6301) (6326) (6301) (6326) (6551) (6326) (6551) (6326) (6551) (6326) (6326) (6326 6326) (6326 6326) (6326) (6326) (6326) (6326) (6326 6326) (6326 6326) (6326) (6101) (6326) (6101) (6326) (6101) (6326 6326) (6326 6326) (6326) (6326) (6326) (6326) (6326 6326) (6326 6326) (6326) (6301) (6326) (6301) (6326) (6301) (6326 6326) (6326 6326) (6326))) :lonset (quoteldur (quote ((156) (156) (286 286) (310 310) (157) (181) (181) (181) (181) (181) (275 275) (365 365) (385 385) (163) (163) (154) (160) (163) (163) (163) (163) (496 496) (258) (213) (213) (213) (213) (213) (151) (151) (282 282) (184) (195) (195) (195) (195) (195) (280 280) (246 246) (133) (186) (186) (186) (186) (186) (190) (253) (253) (253) (253) (253) (205) (181) (181) (181) (181) (181) (108) (144) (144) (144) (144) (144) (260) (179) (179) (179) (179) (179) (252) (281 281) (496 496) (156) (156) (388 388) (380 380) (174) (174) (315 315) (172) (172) (330 330) (242) (143) (143) (143) (143) (143) (162) (162) (150) (150) (304 304) (146) (146) (204) (162) (162) (162) (162) (162) (312 312) (411 411) (161) (161) (186) (164) (164) (164) (164) (164) (229 229) (325 325) (477 477) (428 428) (157) (157) (234) (243) (243) (243) (243) (243) (397 397) (459 459) (401 401) (254 254) (356 356) (180) (161) (138) (138) (138) (138) (426 426) (248 248) (238) (223) (223) (223) (223) (223) (159) (159) (142) (142) (147) (147) (172) (172) (213 213) (136) (121) (209) (209) (209) (209) (399 399) (156) (237) (237) (237) (237) (237) (155) (155) (161) (161) (336 336) (290) (143) (143) (143) (143) (143) (236) (183) (198) (198) (198) (198) (198) (194) (206) (206) (206) (206) (206) (145) (145) (172) (172) (171) (119) (119) (119) (119) (119) (147) (147) (352 352) (273 273) (494 494) (330 330) (173) (173) (175) (145) (121) (121) (121) (121) (225 225) (110) (159) (197) (197) (197) (197) (177) (177) (181) (181) (179) (216) (216) (216) (216) (216) (461 461) (212 212) (126) (132) (126) (110) (110) (110) (110) (110) (151) (151) (352 352) (150) (150) (143) (143) (286 286) (398 398) (252) (202) (202) (202) (202) (202) (167) (167) (135) (135) (331 331) (147) (132) (114) (114) (114) (114) (141) (132) (132) (132) (132) (132) (343 343) (157) (174) (174) (174) (174) (174) (142) (132) (162) (162) (162) (162) (479 479) (162) (142) (109) (109) (109) (109) (343 343) (176) (176) (153) (254) (254) (254) (254) (254) (151) (144) (144) (144) (144) (144) (158) (158) (498 498) (378 378) (132) (132) (152) (152) (392 392) (372 372) (202) (184) (184) (184) (184) (184) (475 475) (283 283) (179) (179) (180) (180) (262 262) (326 326) (205) (152) (152) (152) (152) (152) (276 276) (326 326) (129))) :lvel (quote ((72) (72) (52 52) (55 55) (56) (55) (55) (55) (55) (55) (87 87) (59 59) (86 86) (58) (58) (56) (71) (56) (56) (56) (56) (59 59) (60) (55) (55) (55) (55) (55) (74) (74) (48 48) (56) (55) (55) (55) (55) (55) (45 45) (46 46) (59) (57) (57) (57) (57) (57) (55) (56) (56) (56) (56) (56) (56) (61) (61) (61) (61) (61) (57) (55) (55) (55) (55) (55) (59) (55) (55) (55) (55) (55) (63) (78 78) (80 80) (75) (75) (69 69) (86 86) (62) (62) (87 87) (71) (71) (88 88) (61) (55) (55) (55) (55) (55) (74) (74) (58) (58) (50 50) (59) (59) (56) (55) (55) (55) (55) (55) (53 53) (84 84) (65) (65) (57) (56) (56) (56) (56) (56) (48 48) (52 52) (55 55) (77 77) (62) (62) (56) (55) (55) (55) (55) (55) (58 58) (68 68) (71 71) (45 45) (66 66) (65) (74) (58) (58) (58) (58) (50 50) (54 54) (56) (57) (57) (57) (57) (57) (70) (70) (67) (67) (72) (72) (72) (72) (47 47) (55) (70) (55) (55) (55) (55) (57 57) (60) (55) (55) (55) (55) (55) (65) (65) (58) (58) (73 73) (55) (58) (58) (58) (58) (58) (64) (56) (55) (55) (55) (55) (55) (55) (57) (57) (57) (57) (57) (55) (55) (75) (75) (55) (58) (58) (58) (58) (58) (73) (73) (63 63) (67 67) (67 67) (47 47) (59) (59) (55) (72) (57) (57) (57) (57) (76 76) (56) (70) (56) (56) (56) (56) (62) (62) (55) (55) (58) (58) (58) (58) (58) (58) (82 82) (73 73) (59) (70) (70) (56) (56) (56) (56) (56) (63) (63) (56 56) (74) (74) (65) (65) (72 72) (88 88) (59) (56) (56) (56) (56) (56) (75) (75) (55) (55) (65 65) (59) (62) (55) (55) (55) (55) (66) (55) (55) (55) (55) (55) (78 78) (58) (56) (56) (56) (56) (56) (65) (74) (60) (60) (60) (60) (88 88) (59) (74) (55) (55) (55) (55) (64 64) (72) (72) (57) (55) (55) (55) (55) (55) (63) (60) (60) (60) (60) (60) (61) (61) (64 64) (64 64) (57) (57) (58) (58) (55 55) (57 57) (68) (57) (57) (57) (57) (57) (64 64) (78 78) (60) (60) (69) (69) (66 66) (90 90) (56) (65) (65) (65) (65) (65) (51 51) (70 70) (63))) :loffset (quote ((0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0))) :lchan (quotelegato 0)))) (load-port-info newobj (quote ((0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5818 5818) (5818 5818) (5818 5818) (5818 5818) (5818 5818) (5818) (6018) (5818) (6018) (5818) (6018) (5818 5818) (5818) (5668) (5818) (5668) (5818) (5668) (5818) (5818) (5818) (5818) (5818) (5968) (5818) (5968) (5818) (5968) (5818) (5668) (5818) (5668) (5818) (5668) (5818) (5818) (5818 5818) (5818 5818) (5818 5818) (5818 5818) (5818 5818) (5818) (5818) (5818 5818) (5818 5818) (5818 5818) (5818 5818) (5818) (6068) (5818) (6068) (5818) (6068) (5818) (5818) (5843) (5818) (5843) (5818) (5843) (5818 5818) (5818 5818) (5818) (5818) (5818 5818) (5818 5818) (5818) (5768) (5818) (5768) (5818) (5768) (5818) (6043) (5818) (6043) (5818) (6043) (5818 5818) (5818 5818) (5818 5818) (5818 5818) (5818 5818) (5818) (5818) (5818) (5668) (5818) (5668) (5818) (5668) (5818 5818) (5818 5818) (5818 5818) (5818 5818) (5818) (5818) (5818) (5868) (5818) (5868) (5818) (5868) (5818 5818) (5818 5818) (5818 5818) (5818) (6018) (5818) (6018) (5818) (6018) (5818) (6018) (5818 5818) (5818) (5568) (5818) (5568) (5818) (5568) (5818 5818) (5818) (5793) (5818) (5793) (5818) (5793) (5818) (5593) (5818) (5593) (5818) (5593) (5818) (5818) (5818 5818) (5818 5818) (5818 5818) (5818) (5818) (5818 5818) (5818 5818) (5818 5818) (5818) (5768) (5818) (5768) (5818) (5768) (5818) (5818) (5818) (5818) (5818) (5593) (5818) (5593) (5818) (5593) (5818) (5818) (5818) (5818) (5818 5818) (5818 5818) (5818 5818) (5818 5818) (5818 5818) (5818) (5843) (5818) (5843) (5818) (5843) (5818 5818) (5818) (5818) (5818 5818) (5818 5818) (5818) (5868) (5818) (5868) (5818) (5868) (5818 5818) (5818 5818) (5818 5818) (5818 5818) (5818 5818) (5818) (5818) (5818 5818) (5818) (5818) (5818) (5818) (5818) (6068) (5818) (6068) (5818) (6068) (5818) (5818) (5818) (5818) (5818) (5818) (5818) (5818) (5818) (5818) (5818) (5818 5818) (5818 5818) (5818 5818) (5818) (5818) (5818) (5818) (5818 5818) (5818 5818) (5818 5818) (5818) (5818) (5818) (5818) (5818 5818) (5818) (5843) (5818) (5843) (5818) (5843) (5818 5818) (5818) (5818) (5818 5818) (5818) (5818) (5818) (5618) (5818) (5618) (5818) (5618) (5818) (6043) (5818) (6043) (5818) (6043) (5818) (6043) (5818) (6043) (5818) (6043) (5818 5818) (5818) (5818) (5818) (5768) (5818) (5768) (5818) (5768) (5818) (5818) (5818) (5818) (5818) (5768) (5818) (5768) (5818) (5768) (5818) (5818) (5818) (5818) (5818) (5818) (5818 5818) (5818 5818) (5818) (5818) (5818 5818) (5818 5818) (5818) (5818) (5818) (5618) (5818) (5618) (5818) (5618) (5818 5818))) :lonset (quoteldur (quote ((251 251) (459 459) (424 424) (409 409) (373 373) (254) (238) (238) (238) (238) (238) (338 338) (173) (139) (144) (144) (144) (144) (145) (145) (150) (150) (148) (160) (123) (123) (123) (123) (187) (215) (215) (215) (215) (215) (168) (168) (363 363) (495 495) (303 303) (495 495) (358 358) (168) (168) (217 217) (207 207) (424 424) (406 406) (152) (133) (133) (133) (133) (133) (215) (130) (154) (154) (154) (154) (154) (208 208) (240 240) (155) (155) (246 246) (450 450) (149) (166) (166) (166) (166) (166) (280) (192) (192) (192) (192) (192) (447 447) (271 271) (220 220) (282 282) (314 314) (139) (139) (187) (205) (205) (205) (205) (205) (482 482) (385 385) (440 440) (322 322) (179) (179) (228) (238) (238) (238) (238) (238) (326 326) (364 364) (250 250) (142) (121) (109) (92) (92) (92) (92) (92) (468 468) (141) (144) (144) (144) (144) (144) (223 223) (149) (217) (117) (117) (117) (117) (204) (150) (150) (150) (150) (150) (145) (145) (314 314) (429 429) (449 449) (161) (161) (359 359) (491 491) (489 489) (113) (179) (202) (202) (202) (202) (170) (170) (135) (135) (105) (199) (180) (180) (180) (180) (158) (158) (173) (173) (269 269) (479 479) (344 344) (405 405) (279 279) (272) (200) (200) (200) (200) (200) (400 400) (163) (163) (215 215) (202 202) (208) (204) (204) (204) (204) (204) (258 258) (290 290) (340 340) (242 242) (398 398) (175) (175) (453 453) (145) (145) (164) (164) (150) (158) (158) (158) (158) (158) (152) (152) (201) (169) (169) (217) (171) (171) (171) (171) (171) (380 380) (319 319) (486 486) (168) (168) (136) (136) (488 488) (390 390) (299 299) (149) (149) (162) (162) (361 361) (265) (171) (171) (171) (171) (171) (207 207) (135) (135) (292 292) (153) (153) (214) (220) (220) (220) (220) (220) (275) (181) (181) (181) (181) (181) (154) (139) (205) (205) (205) (205) (432 432) (168) (168) (238) (222) (222) (222) (222) (222) (173) (173) (157) (157) (175) (146) (129) (129) (129) (129) (164) (144) (148) (148) (148) (148) (314 314) (426 426) (161) (161) (293 293) (428 428) (172) (172) (170) (243) (243) (243) (243) (243) (219 219))) :lvel (quote ((51 51) (50 50) (67 67) (77 77) (75 75) (55) (57) (57) (57) (57) (57) (47 47) (64) (73) (55) (55) (55) (55) (63) (63) (58) (58) (57) (71) (56) (56) (56) (56) (55) (55) (55) (55) (55) (55) (55) (55) (59 59) (62 62) (84 84) (67 67) (68 68) (69) (69) (72 72) (53 53) (72 72) (78 78) (58) (62) (62) (62) (62) (62) (56) (56) (66) (66) (66) (66) (66) (55 55) (82 82) (57) (57) (58 58) (66 66) (56) (57) (57) (57) (57) (57) (55) (61) (61) (61) (61) (61) (45 45) (63 63) (55 55) (56 56) (78 78) (63) (63) (56) (57) (57) (57) (57) (57) (87 87) (46 46) (62 62) (52 52) (70) (70) (61) (67) (67) (67) (67) (67) (49 49) (48 48) (87 87) (57) (69) (72) (56) (56) (56) (56) (56) (45 45) (61) (58) (58) (58) (58) (58) (84 84) (55) (67) (60) (60) (60) (60) (64) (58) (58) (58) (58) (58) (58) (58) (79 79) (88 88) (67 67) (61) (61) (53 53) (67 67) (54 54) (57) (68) (56) (56) (56) (56) (71) (71) (72) (72) (55) (63) (55) (55) (55) (55) (64) (64) (63) (63) (60 60) (56 56) (47 47) (49 49) (75 75) (56) (62) (62) (62) (62) (62) (57 57) (67) (67) (79 79) (67 67) (56) (57) (57) (57) (57) (57) (82 82) (72 72) (46 46) (55 55) (77 77) (64) (64) (88 88) (63) (63) (55) (55) (55) (55) (55) (55) (55) (55) (68) (68) (75) (70) (70) (65) (57) (57) (57) (57) (57) (60 60) (69 69) (71 71) (56) (56) (63) (63) (47 47) (51 51) (55 55) (74) (74) (61) (61) (84 84) (59) (56) (56) (56) (56) (56) (47 47) (74) (74) (49 49) (67) (67) (59) (62) (62) (62) (62) (62) (59) (57) (57) (57) (57) (57) (57) (72) (62) (62) (62) (62) (60 60) (70) (70) (58) (57) (57) (57) (57) (57) (68) (68) (59) (59) (59) (71) (60) (60) (60) (60) (61) (69) (64) (64) (64) (64) (90 90) (53 53) (58) (58) (70 70) (82 82) (59) (59) (56) (60) (60) (60) (60) (60) (85 85))) :loffset (quote ((0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0))) :lchan (quotelegato 0)))) (load-port-info newobj (quote ((0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5816 5816) (5816) (5791) (5816) (5791) (5816) (5791) (5816) (5591) (5816) (5591) (5816) (5591) (5816) (5591) (5816) (5591) (5816) (5591) (5816 5816) (5816) (5816) (5816) (6066) (5816) (6066) (5816) (6066) (5816 5816) (5816 5816) (5816) (5816) (5816 5816) (5816 5816) (5816 5816) (5816 5816) (5816 5816) (5816 5816) (5816 5816) (5816) (5766) (5816) (5766) (5816) (5766) (5816) (5591) (5816) (5591) (5816) (5591) (5816 5816) (5816 5816) (5816) (5816) (5816) (5816) (5816) (6066) (5816) (6066) (5816) (6066) (5816) (6066) (5816) (5966) (5816) (5966) (5816) (5966) (5816) (5816) (5816 5816) (5816 5816) (5816 5816) (5816) (5816) (5816 5816) (5816 5816) (5816) (5816) (5816) (5816) (5816) (6016) (5816) (6016) (5816) (6016) (5816 5816) (5816 5816) (5816 5816) (5816) (5816) (5816 5816) (5816 5816) (5816) (5866) (5816) (5866) (5816) (5866) (5816) (5791) (5816) (5791) (5816) (5791) (5816 5816) (5816) (5816) (5816 5816) (5816) (5816) (5816) (5816) (5816 5816) (5816) (5816) (5816) (5816) (5816) (5866) (5816) (5866) (5816) (5866) (5816 5816) (5816 5816) (5816 5816) (5816 5816) (5816 5816) (5816 5816) (5816 5816) (5816) (5816) (5816) (5841) (5816) (5841) (5816) (5841) (5816) (5816) (5816 5816) (5816) (5816) (5816) (5816) (5816) (5791) (5816) (5791) (5816) (5791) (5816 5816) (5816) (5566) (5816) (5566) (5816) (5566) (5816 5816) (5816) (5816) (5816) (5841) (5816) (5841) (5816) (5841) (5816) (5816) (5816 5816) (5816) (6016) (5816) (6016) (5816) (6016) (5816) (5816) (5816) (6016) (5816) (6016) (5816) (6016) (5816) (6066) (5816) (6066) (5816) (6066) (5816) (5816) (5816) (5766) (5816) (5766) (5816) (5766) (5816) (5816) (5816 5816) (5816 5816) (5816) (5816) (5816 5816) (5816) (5866) (5816) (5866) (5816) (5866) (5816 5816) (5816 5816) (5816 5816) (5816 5816) (5816 5816) (5816) (5816) (5816 5816) (5816 5816) (5816) (6016) (5816) (6016) (5816) (6016) (5816) (5816) (6016) (5816) (6016) (5816) (6016) (5816 5816) (5816) (5591) (5816) (5591) (5816) (5591) (5816 5816) (5816) (5816) (5816 5816) (5816 5816) (5816) (5816) (5816) (5616) (5816) (5616) (5816) (5616) (5816) (5816) (5816 5816) (5816 5816) (5816) (5816) (5816 5816) (5816 5816) (5816 5816) (5816 5816) (5816 5816) (5816 5816) (5816) (6066) (5816) (6066) (5816) (6066) (5816) (5791) (5816) (5791) (5816) (5791) (5816) (5816) (5816 5816) (5816 5816) (5816) (5766) (5816) (5766) (5816) (5766) (5816) (5816) (5816) (5866) (5816) (5866) (5816) (5866) (5816) (5816) (5841) (5816) (5841) (5816) (5841) (5816) (5816) (5816 5816))) :lonset (quoteldur (quote ((250 250) (177) (219) (219) (219) (219) (219) (158) (100) (150) (150) (150) (150) (70) (197) (171) (171) (171) (171) (456 456) (180) (180) (134) (183) (183) (183) (183) (183) (447 447) (237 237) (157) (157) (443 443) (321 321) (285 285) (229 229) (254 254) (399 399) (410 410) (132) (180) (180) (180) (180) (180) (122) (124) (206) (206) (206) (206) (484 484) (253 253) (153) (153) (174) (174) (129) (121) (103) (119) (119) (119) (119) (119) (186) (303) (303) (303) (303) (303) (156) (156) (228 228) (245 245) (350 350) (153) (153) (305 305) (386 386) (161) (161) (135) (135) (230) (227) (227) (227) (227) (227) (291 291) (231 231) (467 467) (133) (133) (232 232) (223 223) (116) (89) (115) (115) (115) (115) (215) (168) (102) (102) (102) (102) (313 313) (150) (150) (445 445) (152) (152) (179) (179) (399 399) (175) (175) (155) (155) (135) (122) (132) (132) (132) (132) (489 489) (456 456) (385 385) (348 348) (256 256) (438 438) (398 398) (174) (174) (125) (133) (133) (133) (133) (133) (157) (157) (367 367) (180) (180) (174) (174) (159) (102) (189) (189) (189) (189) (292 292) (143) (287) (287) (287) (287) (287) (368 368) (161) (161) (232) (181) (181) (181) (181) (181) (131) (131) (238 238) (156) (136) (159) (159) (159) (159) (171) (171) (171) (174) (174) (174) (174) (174) (176) (142) (142) (142) (142) (142) (162) (162) (298) (157) (157) (157) (157) (157) (163) (163) (488 488) (433 433) (175) (175) (362 362) (210) (123) (123) (123) (123) (123) (285 285) (213 213) (249 249) (333 333) (379 379) (154) (154) (445 445) (227 227) (248) (161) (161) (161) (161) (161) (205) (152) (132) (173) (173) (173) (173) (211 211) (172) (146) (119) (119) (119) (119) (225 225) (180) (180) (314 314) (419 419) (166) (166) (185) (140) (140) (140) (140) (140) (176) (176) (489 489) (292 292) (165) (165) (441 441) (250 250) (217 217) (234 234) (228 228) (281 281) (235) (252) (252) (252) (252) (252) (211) (147) (74) (74) (74) (74) (170) (170) (251 251) (410 410) (181) (217) (95) (95) (95) (95) (136) (136) (254) (219) (219) (219) (219) (219) (202) (165) (237) (237) (237) (237) (237) (145) (145) (227 227))) :lvel (quote ((88 88) (57) (63) (63) (63) (63) (63) (59) (70) (57) (57) (57) (57) (58) (68) (57) (57) (57) (57) (60 60) (72) (72) (59) (56) (56) (56) (56) (56) (88 88) (73 73) (70) (70) (75 75) (50 50) (71 71) (45 45) (64 64) (48 48) (52 52) (58) (55) (55) (55) (55) (55) (57) (68) (56) (56) (56) (56) (57 57) (83 83) (61) (61) (55) (55) (58) (74) (69) (58) (58) (58) (58) (58) (61) (57) (57) (57) (57) (57) (68) (68) (65 65) (52 52) (47 47) (67) (67) (45 45) (63 63) (74) (74) (70) (70) (58) (56) (56) (56) (56) (56) (84 84) (67 67) (51 51) (56) (56) (89 89) (54 54) (55) (70) (55) (55) (55) (55) (61) (65) (55) (55) (55) (55) (67 67) (60) (60) (49 49) (56) (56) (65) (65) (64 64) (70) (70) (65) (65) (65) (70) (55) (55) (55) (55) (53 53) (56 56) (51 51) (72 72) (71 71) (70 70) (57 57) (75) (75) (61) (62) (62) (62) (62) (62) (71) (71) (87 87) (66) (66) (72) (72) (55) (65) (55) (55) (55) (55) (73 73) (55) (69) (69) (69) (69) (69) (71 71) (67) (67) (56) (55) (55) (55) (55) (55) (55) (55) (52 52) (61) (69) (62) (62) (62) (62) (58) (58) (57) (57) (57) (57) (57) (57) (55) (56) (56) (56) (56) (56) (74) (74) (64) (56) (56) (56) (56) (56) (57) (57) (48 48) (53 53) (72) (72) (84 84) (58) (56) (56) (56) (56) (56) (49 49) (69 69) (67 67) (53 53) (77 77) (74) (74) (70 70) (56 56) (55) (59) (59) (59) (59) (59) (57) (56) (73) (55) (55) (55) (55) (46 46) (55) (73) (56) (56) (56) (56) (45 45) (68) (68) (73 73) (72 72) (60) (60) (60) (59) (59) (59) (59) (59) (72) (72) (52 52) (63 63) (66) (66) (87 87) (61 61) (57 57) (56 56) (63 63) (69 69) (55) (56) (56) (56) (56) (56) (57) (66) (56) (56) (56) (56) (56) (56) (67 67) (52 52) (56) (69) (61) (61) (61) (61) (55) (55) (58) (57) (57) (57) (57) (57) (59) (66) (59) (59) (59) (59) (59) (74) (74) (45 45))) :loffset (quote ((0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0))) :lchan (quotelegato 0)))) (load-port-info newobj (quote ((0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5816 5816) (5816 5816) (5816) (5591) (5816) (5591) (5816) (5591) (5816 5816) (5816) (5816) (5816 5816) (5816 5816) (5816 5816) (5816) (5816) (5841) (5816) (5841) (5816) (5841) (5816) (5816) (5816 5816) (5816 5816) (5816) (5791) (5816) (5791) (5816) (5791) (5816 5816) (5816) (6041) (5816) (6041) (5816) (6041) (5816 5816) (5816 5816) (5816) (5816) (5816) (5816) (5816 5816) (5816) (6041) (5816) (6041) (5816) (6041) (5816) (5766) (5816) (5766) (5816) (5766) (5816) (5791) (5816) (5791) (5816) (5791) (5816 5816) (5816) (5766) (5816) (5766) (5816) (5766) (5816) (5816) (5816) (5966) (5816) (5966) (5816) (5966) (5816 5816) (5816 5816) (5816 5816) (5816 5816) (5816) (5816) (5816) (5666) (5816) (5666) (5816) (5666) (5816 5816) (5816 5816) (5816 5816) (5816 5816) (5816) (5566) (5816) (5566) (5816) (5566) (5816 5816) (5816) (5566) (5816) (5566) (5816) (5566) (5816 5816) (5816 5816) (5816 5816) (5816 5816) (5816 5816) (5816) (6041) (5816) (6041) (5816) (6041) (5816 5816) (5816 5816) (5816 5816) (5816) (5816) (5816 5816) (5816) (5816) (5816 5816) (5816 5816) (5816) (6041) (5816) (6041) (5816) (6041) (5816 5816) (5816 5816) (5816) (5816) (5816 5816) (5816 5816) (5816) (5766) (5816) (5766) (5816) (5766) (5816) (5816) (5816 5816) (5816) (5866) (5816) (5866) (5816) (5866) (5816 5816) (5816 5816) (5816) (5616) (5816) (5616) (5816) (5616) (5816 5816) (5816 5816) (5816 5816) (5816 5816) (5816) (6016) (5816) (6016) (5816) (6016) (5816 5816) (5816 5816) (5816 5816) (5816) (5816) (5816) (5791) (5816) (5791) (5816) (5791) (5816) (5816) (5816) (5816) (5816) (5816) (5816 5816) (5816 5816) (5816 5816) (5816) (5666) (5816) (5666) (5816) (5666) (5816) (5816) (5816) (5841) (5816) (5841) (5816) (5841) (5816 5816) (5816 5816) (5816 5816) (5816) (5816) (5816 5816) (5816) (5816) (5816 5816) (5816) (5791) (5816) (5791) (5816) (5791) (5816) (5816) (5816) (5816) (5816) (5816) (5816 5816) (5816 5816) (5816 5816) (5816) (6041) (5816) (6041) (5816) (6041) (5816 5816) (5816) (5816) (5816) (5591) (5816) (5591) (5816) (5591) (5816) (5816) (5816) (5816) (5816 5816) (5816) (5816) (5816) (5816) (5816) (5841) (5816) (5841) (5816) (5841) (5816 5816) (5816 5816) (5816 5816) (5816) (5816) (5816) (6041) (5816) (6041) (5816) (6041) (5816 5816) (5816 5816) (5816) (5816) (5816) (5816) (5816 5816) (5816 5816) (5816 5816) (5816) (5966) (5816) (5966) (5816) (5966) (5816) (5816) (5816 5816) (5816) (5791) (5816) (5791) (5816) (5791) (5816) (5791) (5816) (5791) (5816) (5791) (5816 5816) (5816) (5816) (5816 5816) (5816))) :lonset (quoteldur (quote ((431 431) (261 261) (198) (125) (125) (125) (125) (125) (351 351) (162) (162) (424 424) (341 341) (279 279) (209) (152) (131) (131) (131) (131) (131) (152) (152) (461 461) (290 290) (272) (195) (195) (195) (195) (195) (335 335) (182) (128) (128) (128) (128) (128) (466 466) (338 338) (164) (164) (164) (164) (411 411) (191) (218) (218) (218) (218) (218) (235) (184) (184) (184) (184) (184) (213) (246) (246) (246) (246) (246) (220 220) (185) (260) (260) (260) (260) (260) (140) (140) (135) (89) (142) (142) (142) (142) (323 323) (283 283) (470 470) (486 486) (173) (173) (94) (164) (175) (175) (175) (175) (441 441) (393 393) (490 490) (374 374) (232) (255) (255) (255) (255) (255) (366 366) (220) (160) (160) (160) (160) (160) (366 366) (229 229) (420 420) (477 477) (492 492) (119) (113) (114) (114) (114) (114) (452 452) (455 455) (426 426) (141) (141) (471 471) (167) (167) (290 290) (416 416) (225) (118) (118) (118) (118) (118) (207 207) (240 240) (153) (153) (448 448) (427 427) (201) (265) (265) (265) (265) (265) (173) (173) (420 420) (235) (179) (179) (179) (179) (179) (283 283) (361 361) (237) (157) (157) (157) (157) (157) (399 399) (468 468) (460 460) (270 270) (237) (179) (179) (179) (179) (179) (426 426) (483 483) (384 384) (146) (146) (140) (197) (197) (197) (197) (197) (160) (160) (158) (158) (161) (161) (367 367) (310 310) (337 337) (227) (174) (174) (174) (174) (174) (136) (136) (81) (124) (196) (196) (196) (196) (480 480) (406 406) (343 343) (179) (179) (226 226) (158) (158) (327 327) (208) (186) (186) (186) (186) (186) (173) (205) (205) (205) (205) (205) (210 210) (359 359) (424 424) (107) (141) (134) (134) (134) (134) (353 353) (159) (159) (265) (135) (135) (135) (135) (135) (180) (180) (179) (179) (209 209) (173) (173) (170) (170) (170) (296) (296) (296) (296) (296) (488 488) (487 487) (216 216) (147) (147) (175) (137) (137) (137) (137) (137) (464 464) (348 348) (141) (141) (147) (147) (226 226) (233 233) (451 451) (288) (164) (164) (164) (164) (164) (174) (174) (229 229) (254) (114) (114) (114) (114) (114) (234) (243) (243) (243) (243) (243) (277 277) (148) (148) (289 289) (36))) :lvel (quote ((85 85) (68 68) (57) (55) (55) (55) (55) (55) (68 68) (70) (70) (86 86) (89 89) (48 48) (71) (55) (55) (55) (55) (55) (55) (57) (57) (77 77) (83 83) (55) (61) (61) (61) (61) (61) (62 62) (56) (57) (57) (57) (57) (57) (59 59) (89 89) (65) (65) (61) (61) (76 76) (63) (57) (57) (57) (57) (57) (61) (59) (59) (59) (59) (59) (55) (58) (58) (58) (58) (58) (52 52) (55) (59) (59) (59) (59) (59) (69) (69) (56) (62) (55) (55) (55) (55) (84 84) (58 58) (63 63) (66 66) (59) (59) (55) (69) (55) (55) (55) (55) (64 64) (78 78) (75 75) (48 48) (56) (57) (57) (57) (57) (57) (52 52) (57) (58) (58) (58) (58) (58) (75 75) (87 87) (72 72) (65 65) (55 55) (64) (68) (58) (58) (58) (58) (82 82) (76 76) (68 68) (75) (75) (68 68) (56) (56) (82 82) (81 81) (56) (61) (61) (61) (61) (61) (50 50) (75 75) (57) (57) (73 73) (74 74) (57) (59) (59) (59) (59) (59) (73) (73) (78 78) (63) (56) (56) (56) (56) (56) (67 67) (48 48) (55) (59) (59) (59) (59) (59) (65 65) (61 61) (58 58) (59 59) (56) (56) (56) (56) (56) (56) (78 78) (74 74) (69 69) (67) (67) (57) (57) (57) (57) (57) (57) (71) (71) (60) (60) (72) (72) (63 63) (45 45) (45 45) (58) (56) (56) (56) (56) (56) (61) (61) (58) (72) (56) (56) (56) (56) (45 45) (51 51) (71 71) (61) (61) (45 45) (67) (67) (48 48) (58) (55) (55) (55) (55) (55) (56) (58) (58) (58) (58) (58) (52 52) (76 76) (71 71) (59) (72) (65) (65) (65) (65) (45 45) (64) (64) (63) (56) (56) (56) (56) (56) (69) (69) (70) (70) (81 81) (64) (64) (60) (60) (61) (58) (58) (58) (58) (58) (76 76) (74 74) (70 70) (57) (57) (55) (65) (65) (65) (65) (65) (59 59) (67 67) (63) (63) (60) (60) (83 83) (74 74) (55 55) (55) (56) (56) (56) (56) (56) (59) (59) (70 70) (55) (57) (57) (57) (57) (57) (57) (59) (59) (59) (59) (59) (45 45) (68) (68) (71 71) (68))) :loffset (quote ((0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0))) :lchan (quotelegato 0)))) (load-port-info newobj (quote ((0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5814) (5814) (5814) (5814) (5814) (5814) (5814 5814) (5814) (5814) (5814) (5964) (5814) (5964) (5814) (5964) (5814) (5814 5814) (5814) (5614) (5814) (5614) (5814) (5614) (5814 5814) (5814) (5589) (5814) (5589) (5814) (5589) (5814 5814) (5814 5814) (5814 5814) (5814) (5814) (5814 5814) (5814 5814) (5814) (5814) (5814) (5814) (5814) (5814) (5814 5814) (5814) (5764) (5814) (5764) (5814) (5764) (5814) (5589) (5814) (5589) (5814) (5589) (5814) (5814) (5814) (5814) (5814) (5814) (5814) (6039) (5814) (6039) (5814) (6039) (5814 5814) (5814 5814) (5814 5814) (5814 5814) (5814) (5814) (5814) (5814) (5814) (5814) (5814) (6039) (5814) (6039) (5814) (6039) (5814) (5814) (5814 5814) (5814 5814) (5814) (5814) (5814 5814) (5814 5814) (5814) (5814) (5814) (5814) (5814 5814) (5814 5814) (5814 5814) (5814) (5814) (5814 5814) (5814) (5789) (5814) (5789) (5814) (5789) (5814) (6039) (5814) (6039) (5814) (6039) (5814 5814) (5814) (5814) (5814) (6064) (5814) (6064) (5814) (6064) (5814) (5964) (5814) (5964) (5814) (5964) (5814) (5814) (5814 5814) (5814 5814) (5814 5814) (5814 5814) (5814 5814) (5814) (5814) (5814 5814) (5814) (5764) (5814) (5764) (5814) (5764) (5814 5814) (5814 5814) (5814) (5564) (5814) (5564) (5814) (5564) (5814) (5814) (5814 5814) (5814 5814) (5814) (5964) (5814) (5964) (5814) (5964) (5814) (5664) (5814) (5664) (5814) (5664) (5814) (5814) (5814) (5814) (5814) (5814) (5814) (5814) (5814) (5814) (5814 5814) (5814 5814) (5814) (5814) (5814 5814) (5814) (5814) (5814) (5814) (5814) (5814) (5814 5814) (5814 5814) (5814) (5814) (5814 5814) (5814 5814) (5814) (5814) (5814) (5814) (5814 5814) (5814 5814) (5814 5814) (5814 5814) (5814 5814) (5814) (5664) (5814) (5664) (5814) (5664) (5814) (6064) (5814) (6064) (5814) (6064) (5814 5814) (5814 5814) (5814 5814) (5814 5814) (5814) (5814) (5814) (5564) (5814) (5564) (5814) (5564) (5814) (5814) (5814) (5814) (5814) (5814) (5814 5814) (5814 5814) (5814 5814) (5814) (5789) (5814) (5789) (5814) (5789) (5814 5814) (5814) (6039) (5814) (6039) (5814) (6039) (5814) (6039) (5814) (5764) (5814) (5764) (5814) (5764) (5814) (5814) (5814) (5814) (5814 5814) (5814 5814) (5814 5814) (5814) (6064) (5814) (6064) (5814) (6064) (5814 5814) (5814 5814) (5814) (5814) (5814 5814) (5814) (5614) (5814) (5614) (5814) (5614) (5814) (5764) (5814) (5764) (5814) (5764) (5814 5814) (5814) (5614) (5814) (5614) (5814) (5614) (5814 5814) (5814 5814) (5814) (6014) (5814) (6014) (5814) (6014) (5814) (5814) (5814) (5664) (5814) (5664) (5814) (5664) (5814) (5814) (5814 5814) (5814 5814) (5814) (5864) (5814) (5864) (5814) (5864) (5814 5814) (5814 5814) (5814) (5814) (5814 5814))) :lonset (quoteldur (quote ((145) (145) (132) (132) (151) (151) (224 224) (149) (149) (135) (170) (191) (191) (191) (191) (211) (339 339) (206) (178) (178) (178) (178) (178) (428 428) (169) (178) (131) (131) (131) (131) (281 281) (445 445) (468 468) (177) (177) (381 381) (275 275) (170) (170) (136) (136) (165) (165) (238 238) (183) (96) (96) (96) (96) (96) (148) (163) (163) (163) (163) (163) (165) (152) (152) (152) (152) (152) (183) (161) (161) (161) (161) (161) (284 284) (204 204) (303 303) (408 408) (142) (142) (175) (175) (177) (177) (235) (162) (162) (162) (162) (162) (165) (165) (456 456) (313 313) (135) (135) (312 312) (332 332) (133) (133) (139) (139) (293 293) (269 269) (249 249) (147) (147) (421 421) (147) (145) (145) (145) (145) (145) (122) (127) (124) (124) (124) (124) (471 471) (167) (167) (195) (280) (280) (280) (280) (280) (152) (215) (215) (215) (215) (215) (146) (146) (427 427) (224 224) (233 233) (313 313) (437 437) (141) (141) (321 321) (76) (131) (146) (146) (146) (146) (239 239) (350 350) (172) (239) (239) (239) (239) (239) (155) (155) (295 295) (443 443) (151) (197) (197) (197) (197) (197) (133) (157) (157) (157) (157) (157) (141) (141) (160) (160) (175) (165) (144) (144) (144) (144) (432 432) (469 469) (155) (155) (258 258) (150) (150) (146) (146) (150) (150) (293 293) (307 307) (180) (180) (470 470) (239 239) (147) (147) (160) (160) (456 456) (414 414) (458 458) (339 339) (318 318) (132) (135) (135) (135) (135) (135) (238) (236) (236) (236) (236) (236) (360 360) (414 414) (360 360) (382 382) (154) (154) (232) (196) (196) (196) (196) (196) (137) (157) (139) (139) (139) (139) (222 222) (477 477) (271 271) (193) (217) (217) (217) (217) (217) (338 338) (78) (83) (138) (169) (169) (169) (169) (169) (219) (179) (179) (179) (179) (179) (155) (155) (177) (177) (381 381) (388 388) (403 403) (166) (159) (146) (146) (146) (146) (418 418) (427 427) (172) (172) (479 479) (133) (133) (133) (133) (133) (133) (181) (138) (138) (138) (138) (138) (242 242) (235) (224) (224) (224) (224) (224) (233 233) (363 363) (190) (204) (204) (204) (204) (204) (137) (137) (162) (147) (147) (147) (147) (147) (142) (142) (412 412) (207 207) (113) (126) (120) (120) (120) (120) (322 322) (423 423) (170) (170) (15 15))) :lvel (quote ((75) (75) (67) (67) (66) (66) (74 74) (59) (59) (57) (70) (61) (61) (61) (61) (65) (80 80) (55) (62) (62) (62) (62) (62) (85 85) (57) (71) (59) (59) (59) (59) (53 53) (67 67) (51 51) (71) (71) (58 58) (88 88) (72) (72) (62) (62) (61) (61) (71 71) (56) (59) (59) (59) (59) (59) (55) (65) (65) (65) (65) (65) (57) (55) (55) (55) (55) (55) (55) (57) (57) (57) (57) (57) (68 68) (78 78) (65 65) (75 75) (66) (66) (56) (56) (57) (57) (58) (67) (67) (67) (67) (67) (72) (72) (86 86) (67 67) (66) (66) (85 85) (72 72) (65) (65) (74) (74) (61 61) (49 49) (48 48) (70) (70) (89 89) (63) (55) (55) (55) (55) (55) (60) (67) (56) (56) (56) (56) (90 90) (59) (59) (57) (59) (59) (59) (59) (59) (56) (55) (55) (55) (55) (55) (70) (70) (74 74) (86 86) (75 75) (73 73) (80 80) (69) (69) (64 64) (60) (74) (56) (56) (56) (56) (55 55) (45 45) (55) (55) (55) (55) (55) (55) (73) (73) (81 81) (63 63) (56) (60) (60) (60) (60) (60) (56) (55) (55) (55) (55) (55) (68) (68) (71) (71) (60) (68) (56) (56) (56) (56) (59 59) (66 66) (71) (71) (88 88) (75) (75) (60) (60) (74) (74) (60 60) (85 85) (63) (63) (81 81) (87 87) (60) (60) (70) (70) (71 71) (65 65) (72 72) (85 85) (49 49) (56) (59) (59) (59) (59) (59) (66) (55) (55) (55) (55) (55) (59 59) (49 49) (59 59) (49 49) (60) (60) (56) (59) (59) (59) (59) (59) (57) (73) (60) (60) (60) (60) (45 45) (83 83) (59 59) (55) (62) (62) (62) (62) (62) (81 81) (61) (64) (68) (63) (63) (63) (63) (63) (59) (56) (56) (56) (56) (56) (62) (62) (56) (56) (82 82) (66 66) (52 52) (66) (69) (55) (55) (55) (55) (51 51) (46 46) (67) (67) (60 60) (55) (56) (56) (56) (56) (56) (60) (58) (58) (58) (58) (58) (90 90) (55) (56) (56) (56) (56) (56) (68 68) (53 53) (57) (55) (55) (55) (55) (55) (65) (65) (60) (64) (64) (64) (64) (64) (70) (70) (65 65) (59 59) (61) (66) (55) (55) (55) (55) (70 70) (58 58) (58) (58) (45 45))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0))) :lchan (quotelegato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quote (((0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0)) ((0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0)) ((0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0)) ((0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0 0)) ((0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0)) ((0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0)) ((0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0)) ((0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0)) ((0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0)) ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)) ((0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0)) ((0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0)) ((0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0)) ((0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0)) ((0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0)) ((0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0)) ((0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0)) ((0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0 0) (0)) ((0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0) (0) (0) (0) (0 0) (0 0) (0) (0) (0 0))))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote t) (quote :normal) 1 0 (om-make-point 400 23) (om-make-point 849 692) 0 1000 nil 1 (quote :osc-scoreplayer) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (list (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff)) 24 8)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxwithed1 (quote box-with-win) "channels" (quote omloop) (quote ((om-load-inputfun (quote input-funbox) "" "chord-seqs" nil) (om-load-inputfun (quote input-funbox) "" "channels" nil))) (om-make-point 459 317) nil nil nil (list (let ((box (om-load-boxcall (quote genfun) "NTH-RANDOM" (quote nth-random) (quote ((om-load-inputfun (quote input-funbox) "a list" "LIST" nil))) (om-make-point 243 157) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "inlist" (quote listloop) (quote ((om-load-inputfun (quote input-funbox) "list to iterate" "LIST" nil))) (om-make-point 13 172) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "collect" (quote listing) (quote ((om-load-inputfun (quote input-funbox) "anything" "DATA" nil))) (om-make-point 230 331) nil nil nil nil 3))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-APPLY-CHANNEL-CHORDSEQ" (quote r-apply-channel-chordseq) (quote ((om-load-inputfun (quote input-funbox) "chord-seq" "CHORD-SEQ" nil) (om-load-inputfun (quote input-funbox) "channel" "CHANNEL" nil))) (om-make-point 166 226) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "channels" 1 (om-make-point 250 59) "" "channels" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "chord-seqs" 0 (om-make-point 5 40) "" "chord-seqs" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-seqbox "finally" (quote finaldo) (quote ((om-load-inputfun (quote input-funbox) "value to return" "VAL" nil))) (om-make-point 295 415) nil nil nil 0))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-seqbox "eachTime" (quote loopdo) (quote ((om-load-inputfun (quote input-funbox) "operations to do" "OP" nil))) (om-make-point 195 415) nil nil nil 0))) (when (fboundp (quote set-active)) (set-active box nil)) box)) (quote ((4 0 0 0 nil 0) (5 0 1 0 nil 0) (3 0 2 0 nil 0) (1 0 3 0 nil 0) (0 0 3 1 nil 0) (2 1 6 0 nil 0) (2 0 7 0 nil 0))) 1 "channels" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 6" (quote list) (quote nil) (om-make-point 416 267) (om-make-point 292 30) (list 1 6 7 9 10 11 12 13 14 14 14 15 16 17 18 20) "(1 6 7 9 10 11 12 13 14 14 14 15 16 17 18   20)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-MULTISEQ-TO-POLY-LEGATO-TIE" (quote r-multiseq-to-poly-legato-tie) (quote ((om-load-inputfun (quote input-funbox) "chordseqs-list" "CHORDSEQS-LIST" (list 0)) (om-load-inputfun (quote input-funbox) "tempo" "TEMPO" 0) (om-load-inputfun (quote input-funbox) "time-signature-list" "TIME-SIGNATURE-LIST" (list 0)) (om-load-inputfun (quote input-funbox) "multiplication-factor " "MULTIPLICATION-FACTOR" 0) (om-load-inputfun (quote input-funbox) "ms-rest-treshold" "MS-REST-TRESHOLD" 0) (om-load-inputfun (quote input-funbox) "ms-tie-treshold" "MS-TIE-TRESHOLD" 0))) (om-make-point 225 542) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 5" (quote list) (quote nil) (om-make-point 308 483) (om-make-point 48 30) (list (list 5 4)) "((5 4))" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 4" (quote list) (quote nil) (om-make-point 231 485) (om-make-point 24 30) 40 "40" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 3" (quote list) (quote nil) (om-make-point 369 480) (om-make-point 24 30) 13 "13" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 2" (quote list) (quote nil) (om-make-point 406 489) (om-make-point 31 30) 100 "100" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 462 500) (om-make-point 31 30) 100 "100" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "POLY" (quote poly) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of VOICE objects" "voices" (list (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (1 (((4 4) (1 1 1 1))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (6000)) :ldur (quote (1000)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6000)) :ldur (quote (1000)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6000)) :ldur (quote (1000)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6000)) :ldur (quote (1000)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 60) nil)) :legato 100 :ties (quote (nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 572 538) (om-make-point 130 90) (if (find-class (quote poly) nil) (let ((newobj (make-instance (quote poly) :voices (list (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (4 -4 -1.0 3 2 2 2 2 1)) (1 (6 2 -2 4 1.0 -4)) (1 (-3 3 3 -2 4 -4 2)) (1 (4.0 -1 6 3 -4 -1.0)) (1 (-1 3 2 3 3 3 3 2)))) ((5 4) ((1 (2.0 -4 -1.0 4 -2 4 1.0 1)) (1 (3.0 -4 -1.0 3 2 3 3 3 2)) (1 (16 4.0 4 4 3)) (1 (4 4 3 4 -4 2)) (1 (3 -7 6 -3)))) ((5 4) ((1 (-1 7 -8 3)) (1 (2.0 -2 3 4 1.0 -7)) (1 (2 2 2 2 2 2 -6)) (1 (-1 2 2 2 1 1 1 1 1 -4 -1.0 3)) (1 (2.0 -2 7 -3 4 -1)))) ((5 4) ((1 (-1 3 3 3 3 3 3)) (1 (-4 2 2 -6 2 3 1)) (1 (3 2 2 -1 3 2 2 2 2 2 -1)) (1 (-4 6 3 -3 3)) (1 (4 3 3 3 3 -4 -1.0)))) ((5 4) ((1 (4 1.0 -4 4 -7)) (1 (-1 3 2 3 3 3 3 -1 4)) (1 (8 -8 2 2)) (1 (7 -7 6)) (1 (8 3.0 -3 6)))) ((5 4) ((1 (-7 4 1.0 -3 4)) (1 (-8 4 1.0 3 4 1)) (1 (3.0 4 4 4 -4 -1.0 1)) (1 (2.0 2 3 3 3 3 -7)) (1 (4 -4 2 3 2 2 2 2)))) ((5 4) ((1 (4 3 -7 3 3 -1)) (1 (-4 -1.0 4 -4 -1.0 2 3 2 1)) (1 (2.0 2 2 6 -7 2)) (1 (4.0 1.0 -4 -1.0 4 1.0 -4)) (1 (-3 6 -2 3 3 -4)))) ((5 4) ((1 (-4 6 -6 3)) (1 (4.0 -4 7 -4 2)) (1 (2.0 3 -2 4 1.0 -4 -1.0 3 1)) (1 (3.0 4 4 4 4 -3)) (1 (-1 2 2 -6 2 2 -3)))) ((5 4) ((1 (-1 7 6 -4 -1.0)) (1 (-3 2 2 -8 4)) (1 (-6 3 2 2 2 2 2 3)) (1 (3 3 3 3 3 -7 1)) (1 (2.0 3 -3 3 3 3 3 3 3)))) ((5 4) ((1 (-4 7 -2 4 1.0 -1)) (1 (4 1.0 -4 -1.0 4 1.0 -2)) (1 (-4 3 3 4 1.0 -4)) (1 (3 2 2 2 2 2 -2 3 3)) (1 (4 1.0 4 4 4 -2 3)))) ((5 4) ((1 (4.0 4 -3 4 3 2)) (1 (4 3 3 -6 4 1.0)) (1 (8 3 3 3 3 1)) (1 (2.0 4 1.0 -7 3 2 1)) (1 (2.0 2 2 2 6 -4 2)))) ((5 4) ((1 (2.0 3 3 3 3 3 3 3 1)) (1 (7.0 -4 3 3 3 2)) (1 (8 3 3 3 3 3)) (1 (-2 2 2 3 3 3 3 -4 2)) (1 (4.0 -1 3 3 2 2 2 2 -1 3)))) ((5 4) ((1 (4 3 3 3 3 -4 4)) (1 (2.0 7 -2 2 2 4)) (1 (16 4.0 4 4 2)) (1 (3.0 4 4 4 3 3 3 1)) (1 (3.0 3 -3 7 -4 -1.0)))) ((5 4) ((1 (-1 3 4 4 4 4)) (1 (4 -6 4 1.0 -4)) (1 (-4 3 3 -4 -1.0 3 2 2)) (1 (3 2 2 -4 3 3 3 2)) (1 (2.0 3 3 -7 4 -2 1)))) ((5 4) ((1 (2.0 2 -7 2 2 -3)) (1 (-4 4 1.0 -7 3 1)) (1 (2.0 -3 6 -6 3)) (1 (3.0 -8 4 1.0 4)) (1 (-2 2 2 2 2 2 2 -4 -1.0)))) ((5 4) ((1 (-2 4 -2 2 -8 -1.0)) (1 (-1)) (1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (286 286)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9302)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9302)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9302)) :ldur (quote (71)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (474)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (158)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (316 316)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (214)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (214)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (286 286)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (143 143)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (474 474)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (237 237)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (225 225)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9477)) :ldur (quote (225)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (225)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9477)) :ldur (quote (225)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (225)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9477)) :ldur (quote (150)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (316 316)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (316 316)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (79 79)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9202)) :ldur (quote (125)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9202)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9202)) :ldur (quote (125)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (774)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9227)) :ldur (quote (194)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (194)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9227)) :ldur (quote (145)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (286)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9227)) :ldur (quote (286)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (214)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (286 286)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (237)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (474 474)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (553 553)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (237 237)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (237 237)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (316 316)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (167)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9702)) :ldur (quote (167)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (167)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9702)) :ldur (quote (167)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (167)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9702)) :ldur (quote (167)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (150)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (150)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (150)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (75)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (75)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (75)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (75)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (75)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (225 225)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (553 553)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (316 316)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (237)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9302)) :ldur (quote (237)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (237)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9302)) :ldur (quote (237)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (237)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9302)) :ldur (quote (237)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (150)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (150)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9602)) :ldur (quote (225)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (75)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9602)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9602)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9677)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9677)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9677)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (474 474)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (237 237)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (237)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9502)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9502)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9502)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (300 300)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (300 300)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9477)) :ldur (quote (130)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9477)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9477)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (261 261)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (600 600)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (525 525)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (450 450)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (600 600)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (450 450)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (316 316)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (316 316)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (286 286)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9427)) :ldur (quote (286)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (71)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9427)) :ldur (quote (286)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (286)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9427)) :ldur (quote (286)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (71)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9702)) :ldur (quote (130)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9702)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9702)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (286 286)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9202)) :ldur (quote (214)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (143)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9202)) :ldur (quote (143)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (143)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9202)) :ldur (quote (143)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (286)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (214)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (273 273)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9602)) :ldur (quote (205)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (136)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9602)) :ldur (quote (68)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (143)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9602)) :ldur (quote (143)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (429 429)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (143 143)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (316 316)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (429 429)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (474 474)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (237 237)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (500 500)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (143 143)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (214 214)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (286 286)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9302)) :ldur (quote (71)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9302)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9302)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (167)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (167)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (167)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (167)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (553 553)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (474 474)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (158)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (158)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (316 316)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (136)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9427)) :ldur (quote (196)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (196)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9427)) :ldur (quote (196)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (196)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9427)) :ldur (quote (196)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (65)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (173)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (173)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9427)) :ldur (quote (173)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (173)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9427)) :ldur (quote (173)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (173)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9427)) :ldur (quote (173)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (553 553)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (316 316)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (353 353)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (353 353)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (237)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (237)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (316 316)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (214)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9302)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9302)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9302)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9202)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9202)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9202)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (205 205)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (300 300)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (300)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9602)) :ldur (quote (225)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (150)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9602)) :ldur (quote (286)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9602)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (286 286)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (571)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9502)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9502)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9502)) :ldur (quote (71)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (300 300)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9252)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (75)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9252)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9252)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (450 450)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9477)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9477)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9477)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (188)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (188)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (62 62)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (205)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (136)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (522)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9652)) :ldur (quote (196)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9652)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9652)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (125)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9477)) :ldur (quote (125)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9477)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9477)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (125 125)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9502)) :ldur (quote (196)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (130)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9502)) :ldur (quote (130)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (130)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9502)) :ldur (quote (130)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9227)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9227)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9227)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (250 250)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (553 553)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (158)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (158)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (316 316)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (800)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9677)) :ldur (quote (200)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (200)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9677)) :ldur (quote (100)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (240)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9677)) :ldur (quote (240)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (240)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (180)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (180)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (180)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (60)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (500 500)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (225)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9652)) :ldur (quote (300)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (300)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9652)) :ldur (quote (300)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (300)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9652)) :ldur (quote (316)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (316 316)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (136)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9402)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9402)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9402)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (273 273)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (68)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (167)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (167)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (167)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (300 300)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (225)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (75)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (450 450)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (225 225)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (300 300)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (300 300)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (158)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9652)) :ldur (quote (158)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9652)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9652)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (316 316)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9452 9452)) :ldur (quote (158 158)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (6 -4 4 -2 4)) (1 (8 2.0 -8 2)) (1 (2.0 -3 2 2 -8 3)) (1 (8 1.0 -4 7)) (1 (-3 3 4 4 4 4 1)))) ((5 4) ((1 (3.0 -4 -1.0 3 3 -4 3 1)) (1 (3.0 -3 3 3 2 2 2 2 -2)) (1 (6 -8 2 2 1)) (1 (3.0 4 1.0 -4 -1.0 3 2 2 1)) (1 (3 2 -6 2 2 -2 3)))) ((5 4) ((1 (6 2 2 2 2 2 2 2 -3 1)) (1 (4.0 1.0 -4 3 3 -4 2)) (1 (4 1.0 3 3 3 3 -3)) (1 (-4 -1.0 4 3 3 3 3 1)) (1 (3.0 -6 3 3 3 3)))) ((5 4) ((1 (3 3 3 -1 3 3 3 3 1)) (1 (3.0 3 3 2 2 2 2 2 -4 -1.0 1)) (1 (3 -2 4 1.0 -7 3)) (1 (8 2.0 3 -4 -1.0 3)) (1 (7 3 -3 6 -2)))) ((5 4) ((1 (-3 4 3 3 3 3 2)) (1 (2.0 -8 -1.0 4 3 3 1)) (1 (3.0 3 3 -7 2 2 1)) (1 (3 2 2 3 3 -6 3)) (1 (3.0 -7 2 2 -3 3 1)))) ((5 4) ((1 (2.0 -1 2 2 2 2 2 2 -1 4 1.0)) (1 (12 3 -3)) (1 (-1 7 -6 3 2 1)) (1 (3 2 2 4 -4 3)) (1 (-8 4 -7)))) ((5 4) ((1 (2 2 2 1 1 1 1 1 -4 -1.0 4 1.0)) (1 (16 1.0 3 3 2)) (1 (2.0 -8 3 2 2 2 2)) (1 (3 -2 6 -7 3)) (1 (6 3 -4 -1.0 2 2 -2 1)))) ((5 4) ((1 (4.0 3 3 3 3 3 -4 -1.0)) (1 (2 2 -3 4 -6 3)) (1 (3.0 -8 -1.0 6 -2)) (1 (6 -8 3 3)) (1 (-8 6 -4 -1.0 1)))) ((5 4) ((1 (4.0 -4 6 -4 -1.0 1)) (1 (2.0 2 -2 4 -8 2)) (1 (4 1.0 4 4 4 4 -2)) (1 (-4 3 4 4 4 4 1)) (1 (3.0 -3 3 2 2 2 2 2 2)))) ((5 4) ((1 (3.0 3 3 3 3 3 -2 3)) (1 (4 1.0 -7)) (1 (6 3 3 3 3 3 2)) (1 (16 4.0 4 4 3)) (1 (4 4 -6 4 -2)))) ((5 4) ((1 (-4 -1.0 3 4 4 4 3)) (1 (4 1.0 -4 2 2 -4 2)) (1 (3.0 -8 3 -4 -1.0)) (1 (-1 4 3 3 3 3 3)) (1 (-3 4 -6 3 4 1)))) ((5 4) ((1 (3.0 4 4 4 -1 4 -2)) (1 (-4 -1.0 2 2 -2 2 2 3 2)) (1 (4 3 -6 6 -1)) (1 (-2 6 -2 2 2 -4 -1.0)) (1 (-1 6 -2 3 3 3 3 1)))) ((5 4) ((1 (2.0 3 -8 3 3 -1 2)) (1 (4 1.0 4 4 4 4)) (1 (16 1.0 -1 3 3 3 1)) (1 (3.0 3 3 -6 4 1)) (1 (2.0 2 -2 3 3 2 3 2 2 2)))) ((5 4) ((1 (2 -3 3 2 2 2 2 2 -2)) (1 (-1 2 2 -4 2 2 -1 4 1.0)) (1 (12 3.0 6)) (1 (-6 3 3 3 2 2 2)) (1 (2 2 4 1.0 -4 6)))) ((5 4) ((1 (4 1.0 3 2 2 2 2 -7)) (1 (4 1.0 -4 -1.0 3 2 2 2 1)) (1 (3 -1 6 -7 3)) (1 (4 4 4 4 4 -2 1)) (1 (7.0 -3 3 3 -1 4 1.0)))) ((5 4) ((1 (-1 3 3 -3 4 3 3 3 1)) (1 (3.0 3 -4 2 2 -7)) (1 (4 -8 -3.0)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (450 450)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (300 300)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (300 300)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (600 600)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (150 150)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (150)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (150)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (225 225)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (600 600)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (525 525)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (196)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9266)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9266)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9266)) :ldur (quote (65)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (205)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (68)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9516)) :ldur (quote (205)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9516)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9516)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (474 474)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (158)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (158)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (79 79)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (286 286)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9266)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9266)) :ldur (quote (71)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9266)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (225 225)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (375)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9291)) :ldur (quote (125)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (125)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9291)) :ldur (quote (125)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (125)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9291)) :ldur (quote (125)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (125)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9291)) :ldur (quote (125)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (62 62)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (214)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (214)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9166)) :ldur (quote (300)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (225)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9166)) :ldur (quote (225)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (225)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9166)) :ldur (quote (225)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9366)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9366)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9366)) :ldur (quote (68)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (214 214)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9541)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9541)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9541)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9091)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9091)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (65)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9091)) :ldur (quote (180)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (180)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9091)) :ldur (quote (120)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (120)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9091)) :ldur (quote (120)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (120)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9091)) :ldur (quote (120)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (60)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (300 300)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (225 225)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (571)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (214)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (214 214)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (500)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (214)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (429 429)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9066)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9066)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9066)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (273)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9266)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9266)) :ldur (quote (68)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9266)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9541)) :ldur (quote (143)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (71)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9541)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9541)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (205)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (205)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (205 205)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (214)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (71)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9266)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9266)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9266)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (286 286)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (1000 1000)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (250 250)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (525 525)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9266)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (75)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9266)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (167)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9266)) :ldur (quote (167)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (333 333)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (250 250)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (316 316)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9166)) :ldur (quote (143)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (143)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9166)) :ldur (quote (71)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (71)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9166)) :ldur (quote (71)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (71)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9166)) :ldur (quote (71)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (286 286)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (960 960)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (180)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (180)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (120 120)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9466)) :ldur (quote (143)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9466)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9466)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (429 429)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (214 214)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (429)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (214)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (143)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (143)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (71)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9066)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9066)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9066)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (300 300)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (225 225)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (450 450)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (450 450)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (225)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (225)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (450 450)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (75 75)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (450 450)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (75)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (150)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (300 300)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9116)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9116)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9116)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9091)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9091)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9091)) :ldur (quote (62)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9366)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9366)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9366)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (143)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9266)) :ldur (quote (196)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (196)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9266)) :ldur (quote (196)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (196)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9266)) :ldur (quote (196)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (196 196)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (500 500)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (391 391)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9466)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9466)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9466)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (774)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9566)) :ldur (quote (194)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (194)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9566)) :ldur (quote (145)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (300)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9566)) :ldur (quote (300)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (300 300)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (316)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (158)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (158)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (158 158)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (237 237)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (300)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9566)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9566)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9566)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (286 286)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9066)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (71)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9066)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9066)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (273 273)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (150)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (150)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9341)) :ldur (quote (150)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9341)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (300)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9341)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (450 450)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (474 474)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (158)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (158)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (409 409)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (68)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9541)) :ldur (quote (286)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (286)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9541)) :ldur (quote (286)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (286)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9541)) :ldur (quote (286)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (857 857)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (161)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9091)) :ldur (quote (161)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (161)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9091)) :ldur (quote (54)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9091)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (300 300)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (75)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (130)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9466)) :ldur (quote (196)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9466)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9466)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9066)) :ldur (quote (150)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (150)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9066)) :ldur (quote (150)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (150)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9066)) :ldur (quote (150)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (158)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (158)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (158)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (158)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (316 316)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (857 857)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (429 429)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9366)) :ldur (quote (143)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9366)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (158)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9366)) :ldur (quote (158)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (316 316)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (474 474)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (261)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (196)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (130)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (130)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (130)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (130)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (300 300)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9566)) :ldur (quote (150)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9566)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (75)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9566)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (450 450)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (261)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (261)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (261)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (261)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (261)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (65 65)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (273 273)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (188)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (188)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9166)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9166)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (62)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9166)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9316 9316)) :ldur (quote (400 400)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (-3 2 3 3 3 3 3 2 1)) (1 (3.0 4 4 4 4 -3 1)) (1 (4.0 1.0 -4 3 3 -1 4)) (1 (-3 4 1.0 -2 2 2 2 3 3 1)) (1 (4 3 -4 4 6)))) ((5 4) ((1 (-2 4 -1 6 6)) (1 (4 1.0 -3 3 3 4 3 2)) (1 (4 3 3 -7 4)) (1 (-2 3 3 3 3 3 3)) (1 (8 1.0 -3 3 3 -2)))) ((5 4) ((1 (-3 2 3 2 2 2 2 -4)) (1 (-1 6 -2 3 -6)) (1 (2 2 -4 -1.0 2 2 -4 -1.0)) (1 (-2 4 1.0 -4 -1.0 4 1.0 -2 2)) (1 (4.0 1.0 -1 4 3 -4 -1.0)))) ((5 4) ((1 (-1 7 -2 4 1.0 -4)) (1 (-2 4 1.0 -4 -1.0 2 3 3 2)) (1 (4 3 -7 4 1.0 -1 1)) (1 (2.0 2 4 1.0 -4 -1.0 2 2 2 1)) (1 (2.0 2 2 -3 4 1.0 -1 2 2)))) ((5 4) ((1 (-4 -1.0 7 3 3 3)) (1 (4 3 3 4 1.0 -4 -1.0)) (1 (4 1.0 -7 3 3 -1)) (1 (-1 3 3 3 3 3 3 -3)) (1 (-4 -1.0 2 3 2 2 2 2 -3)))) ((5 4) ((1 (-2 3 -2 2 2 2 2 2 2)) (1 (-4 -1.0 4 -8 3 1)) (1 (2.0 -1 2 2 2 2 2 2 -2 4 -1)) (1 (-4 -1.0 4 -6 3 -1)) (1 (-4 -1.0 2 2 -6 3)))) ((5 4) ((1 (4.0 6 -2 4 1.0 -2)) (1 (-1 4 1.0 -4 -1.0 3 2 2 2)) (1 (2 2 -4 -1.0 2 2 2 2 2 2)) (1 (-7 3 3 -2 4 1.0)) (1 (2.0 -7 6 -2 3)))) ((5 4) ((1 (4.0 1.0 -4 7 -4)) (1 (3 3 3 3 3 3 4 1.0)) (1 (7 -8 4)) (1 (3.0 -1 6 -6 4)) (1 (3.0 -4 -1.0 4 1.0 -4 -1.0 2)))) ((5 4) ((1 (4.0 1.0 -3 4 1.0 -3 4)) (1 (8 3 -1 4 -2 3)) (1 (14 7 -1)) (1 (-3 4 1.0 -8 3 1)) (1 (2.0 -4 2 3 2 2 2 2 -1)))) ((5 4) ((1 (-4 2 2 -2 3 2 2 -1)) (1 (-1 6 -8 -1.0 4 1)) (1 (3.0 3 3 3 3 -4 -1.0 2)) (1 (4 2 3 3 3 3 3 1)) (1 (4.0 3 3 -4 4 1.0 -1)))) ((5 4) ((1 (-3 3 3 -1 6 -2 2)) (1 (3.0 -6 2 3 2 2 2 2)) (1 (-3 2 2 4 1.0 -6)) (1 (-2 4 -2 3 3 3 3)) (1 (4 3 -3 4 1.0 -4)))) ((5 4) ((1 (-3 4 4 4 4 4 1)) (1 (3.0 -7 2 2 -1 2 2)) (1 (-4 -1.0 3 3 3 3 3 3 -1)) (1 (3 3 3 3 3 3 -2)) (1 (-1 3 3 3 3 3 3 -3)))) ((5 4) ((1 (-4 3 4 4 4 3)) (1 (4 -8 -1.0 6)) (1 (3 3 -2 2 2 -7 3)) (1 (3.0 -7 3 4 4 2)) (1 (4 1.0 4 -8 4 1.0)))) ((5 4) ((1 (3.0 3 -4 3 3 4)) (1 (3.0 -4 -1.0 6 -6)) (1 (4 -3 3 3 -4 4)) (1 (3.0 -4 -1.0 3 -2 3 3 -1)) (1 (-2 4 -3 3 -3 2 2)))) ((5 4) ((1 (3 3 3 3 3 3 -1 3 2 2)) (1 (4 3 3 -7 4 1.0)) (1 (8 1.0 2 -4 -1.0 1 -2)) (1 (-1)) (1 (-1)))) ((5 4) ((1 (-1)) (1 (-1)) (1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (130)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9242)) :ldur (quote (65)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (261)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9242)) :ldur (quote (261)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (261)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9242)) :ldur (quote (261)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (65 65)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (261 261)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8967)) :ldur (quote (130)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (130)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8967)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8967)) :ldur (quote (65)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8967)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (286 286)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (429 429)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (316)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (474 474)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (474 474)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (261 261)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9217)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (130)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9217)) :ldur (quote (286)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9217)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (286 286)) :lvel (quote (86 86)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (600 600)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9242)) :ldur (quote (225)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9242)) :ldur (quote (150)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9242)) :ldur (quote (150)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (500 500)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (250 250)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (167)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (167)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (167)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (167)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (286 286)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (286 286)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (143 143)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (333 333)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (250 250)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (553 553)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (273 273)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9217)) :ldur (quote (205)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9217)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (286)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9217)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (286 286)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (71)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (286 286)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9417)) :ldur (quote (143)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9417)) :ldur (quote (71)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9417)) :ldur (quote (158)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (500 500)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (300)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (237)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (237)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (214)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (237 237)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (286 286)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (71)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9167)) :ldur (quote (136)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9167)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9167)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (273 273)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (237 237)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (167)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (167)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (250 250)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (474 474)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9242)) :ldur (quote (150)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9242)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9242)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9217)) :ldur (quote (143)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9217)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9217)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (450 450)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (225 225)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (525 525)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (261 261)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (553 553)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (450 450)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (150 150)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (571)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (286 286)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (214 214)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (955 955)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (477 477)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (75)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (225)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (167)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (167)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (250 250)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (167)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (167)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (429 429)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (286)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9042)) :ldur (quote (71)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9042)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9042)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9242)) :ldur (quote (205)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9242)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9242)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (68 68)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (450 450)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (150 150)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (205)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (167)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (167)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (333 333)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (316)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (237)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9042)) :ldur (quote (250)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (250)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9042)) :ldur (quote (250)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (250)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9042)) :ldur (quote (62)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (188)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (225)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (225)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (225)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9042)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9042)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9042)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (316)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (474 474)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (205 205)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9042)) :ldur (quote (261)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (261)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9042)) :ldur (quote (130)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9042)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (273 273)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (225 225)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (450 450)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (286 286)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (286 286)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (225 225)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (237)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (173)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9392)) :ldur (quote (173)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (173)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9392)) :ldur (quote (173)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (173)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9392)) :ldur (quote (173)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (173)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (115)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (115)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (273)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (273 273)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (7 7))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (632)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (79)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (7))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (-1 3 3 -6 6 -1)) (1 (-6 4 1.0 -2 2 2 -2)) (1 (7 -2 7 -3)) (1 (-2 6 -4 -1.0 2 2 -2)) (1 (-3 4 1.0 -2 4 -2 3)))) ((5 4) ((1 (8 1.0 -4 -1.0)) (1 (2 2 -8 3 4 1)) (1 (3.0 4 4 4 -6 1)) (1 (2.0 2 -4 4 1.0 -4 3)) (1 (8 2.0 -4 2)))) ((5 4) ((1 (3 3 3 3 3 4 1.0 -3)) (1 (-4 4 1.0 -7 2 2)) (1 (8 -4 7 -1)) (1 (-7 7 -6)) (1 (-2 3 3 3 3 3 3 -1 1)))) ((5 4) ((1 (6.0 -4 3 4 4 1)) (1 (3.0 4 4 -4 2 2 -2)) (1 (-4 -1.0 3 -2 7 3)) (1 (3.0 -2 2 2 4 1.0 -6)) (1 (4 1.0 4 3 3 3 3 1)))) ((5 4) ((1 (3.0 -6 4 -6)) (1 (-1 3 3 3 3 3 3 -1)) (1 (6 -3 6 -3)) (1 (3 3 -2 3 3 3 3 3)) (1 (3 3 3 -2 6 -1 2)))) ((5 4) ((1 (2 6 -3 3 4 1)) (1 (3.0 4 4 4 6 -1)) (1 (-4 -1.0 4 1.0 -4 3 3)) (1 (-1 7 4 -4 2 2)) (1 (3 -8)))) ((5 4) ((1 (3 3 -3 3 3 -7)) (1 (6 -6 3 3 -2)) (1 (-3 3 2 2 2 2 2 -4)) (1 (-2 7 -3 3 3 3 1)) (1 (4 3 -3 3 3 6)))) ((5 4) ((1 (-6 2 3 3 3 3 3)) (1 (7 3 -7 3 2)) (1 (3 2 2 2 -3 3 3 -4)) (1 (-2 4 1.0 -3 3 3 -3 1)) (1 (2.0 2 -2 4 -8 -1.0 1)))) ((5 4) ((1 (6.0 7 -3 4)) (1 (7 7 -6)) (1 (-1 6 3 3 -7 1)) (1 (3.0 3 2 2 3 3 3 3)) (1 (-6 3 4 4 3)))) ((5 4) ((1 (4 1.0 4 -7 4 1.0)) (1 (-8 3 3 2 3 3 1)) (1 (2.0 3 3 -3 3 3 -4 -1.0)) (1 (-1 4 -7 4 -3)) (1 (-4 -1.0 2 2 -4 2 2 -2 1)))) ((5 4) ((1 (3.0 -1 7 6 -1)) (1 (-7 3 3 2 2 2 2 -1)) (1 (-1 4 -6 2 3 2 2 1)) (1 (3 -3 4 3 3 3 3)) (1 (4 -4 -1.0 3 4 4 1)))) ((5 4) ((1 (4.0 4 4 -2 4 1.0 -2)) (1 (-3 2 3 3 3 3 3 -2)) (1 (-2 4 -6 3 -3)) (1 (-3 3 3 2 2 3 3 3 2)) (1 (14 3 -2 1)))) ((5 4) ((1 (2.0 3 3 3 3 3 -3)) (1 (4 -4 3 2 2 2 2 2)) (1 (-4 -1.0 3 3 3 3 3 3)) (1 (-1 3 3 -7 2 2 -2)) (1 (-6 6 -1 2 3 2)))) ((5 4) ((1 (4 3 3 -7 4)) (1 (16 1.0 3 -1 4 1.0)) (1 (4 -7)) (1 (4 1.0 -7 4 1.0 -2)) (1 (-6 4 -4 -1.0 2 2)))) ((5 4) ((1 (3 3 3 3 -6 2 2)) (1 (3 3 3 3 -6 2 2)) (1 (3 3 -4 3 3 -2 2 1)) (1 (3 2 2 2 -2 6 -2 2)) (1 (-1)))) ((5 4) ((1 (-1)) (1 (-1)) (1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (450 450)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (553 553)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (553 553)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (474 474)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (237 237)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (857 857)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9042)) :ldur (quote (300)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (75)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9042)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9042)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (68)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (225 225)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (750 750)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (188)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (261 261)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (600 600)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (525 525)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (525 525)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9417)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9417)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9417)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (68 68)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (68)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (225 225)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (525 525)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (225 225)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (273 273)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (273)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (68)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (500 500)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (500 500)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9217)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9217)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9217)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (450 450)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (474 474)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (237)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8967)) :ldur (quote (316)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (79)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8967)) :ldur (quote (273)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (273)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8967)) :ldur (quote (273)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (409 409)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (525 525)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (409 409)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (450 450)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9217)) :ldur (quote (150)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9217)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9217)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (477 477)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (68)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (273)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (409 409)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (130)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9167)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9167)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9167)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (477)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (136)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (136)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (136)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (75)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (75 75)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (525 525)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (525 525)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (525 525)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (429 429)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (71)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (136)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9392)) :ldur (quote (300)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (300)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9392)) :ldur (quote (225)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (286)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9392)) :ldur (quote (286)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (286 286)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (130)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9167)) :ldur (quote (196)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9167)) :ldur (quote (65)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9167)) :ldur (quote (205)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (75 75)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (583 583)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (500 500)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9042)) :ldur (quote (205)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9042)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9042)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (286 286)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (214)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (71)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (286)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (286)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (286)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (71)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (286)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (286)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (286 286)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8967)) :ldur (quote (205)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8967)) :ldur (quote (205)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8967)) :ldur (quote (205)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (333 333)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (250 250)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (188)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (188)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (125)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (125)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (188)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (188)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (188)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (125)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (1050 1050)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (225 225)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (75)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (286 286)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9217)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9217)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9217)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9392)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9392)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9392)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (450 450)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (286)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (286 286)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (923)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (173)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (231 231)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (545 545)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (158)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (205)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (205)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8967)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8967)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8967)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9392)) :ldur (quote (71)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9392)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9392)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (429 429)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (143 143)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (-3 6 -7 3 1)) (1 (3 2 2 2 4 -1 3 4)) (1 (16 4.0 6)) (1 (2.0 -7 4 3 3 2)) (1 (4 3 -8 3 -2)))) ((5 4) ((1 (-4 -1.0 6 -8 1)) (1 (3.0 3 -4 -1.0 7 -3)) (1 (-4 4 1.0 -6 4)) (1 (6 2 2 2 2 2 -2 3 1)) (1 (4 2 2 2 -4 4 3 1)))) ((5 4) ((1 (4 3 3 -6 4 -2)) (1 (-2 6 -6 4 -2)) (1 (-3 7 -6 4)) (1 (3 3 3 3 3 -1 2 2 -3)) (1 (-4 4 1.0 -6 4)))) ((5 4) ((1 (-6 3 2 2 2 2 2 -3)) (1 (-4 4 4 -4 3)) (1 (4.0 -4 -1.0 3 3 -3 3)) (1 (3.0 -1 3 3 -8 3 1)) (1 (2.0 -4 3 3 -6 2)))) ((5 4) ((1 (4.0 -3 6 -1 7)) (1 (-4 3 2 2 2 2 2 -4 -1.0)) (1 (6 -4 3 4 1.0)) (1 (3.0 -7 4 1.0 3 3)) (1 (8 1.0 -8 3)))) ((5 4) ((1 (12 1.0 -3 3 2)) (1 (8 1.0 3 -4 -1.0 3 1)) (1 (2.0 2 2 2 2 2 2 -6)) (1 (2 2 2 2 2 2 -2 2 2 -1 1)) (1 (4.0 -6 3 3 -6)))) ((5 4) ((1 (-2 2 3 3 3 3 3 -3)) (1 (-4 -1.0 4 -2 3 4 3)) (1 (2.0 4 4 4 3 3 3)) (1 (4 3 3 -3 4 1.0 -3)) (1 (-4 4 1.0 -7 2 1)))) ((5 4) ((1 (6 3 3 3 3 3 -1)) (1 (6 -8 4 1.0)) (1 (16 4.0 2 3 3 3 1)) (1 (2.0 -3 4 3 3 3 3 1)) (1 (3.0 -3 4 1.0 -4 -1.0 3)))) ((5 4) ((1 (16 4)) (1 (-2 4 1.0 -4 -1.0 3 3 -3)) (1 (-4 3 3 2 2 2 2 -2 1)) (1 (2.0 3 3 3 3 3 3 3 -2)) (1 (-3 3 3 3 3 3 3)))) ((5 4) ((1 (-1 4 1.0 -7 3 3 -1)) (1 (-6 4 -4 4)) (1 (4 4 4 4 4 4)) (1 (-7 3 4 -4)) (1 (-3 4 1.0 -4 3 4 3)))) ((5 4) ((1 (4 4 4 -6 2 1)) (1 (4 3 3 3 -1 2 2 -3 1)) (1 (3.0 -6 3 2 3 3 3 1)) (1 (2.0 -1 4 1.0 -4 3 -3)) (1 (-2 3 -4 4 1.0 -3 2)))) ((5 4) ((1 (4.0 1.0 -8 2 3 2 1)) (1 (3 2 -7 3 3 4)) (1 (16 3.0 2 2 2 2 2)) (1 (-4 -1.0 4 3 3 3 3 2)) (1 (2.0 -8 2 2 -4 -1.0)))) ((5 4) ((1 (-2 4 -8 3 3)) (1 (3 3 3 3 -2 4 -1)) (1 (-1 4 -1 4 3 3 3 2)) (1 (2.0 3 2 2 2 2 2 2 -4)) (1 (-2 6 -7 4)))) ((5 4) ((1 (-1 3 -1 2 2 -4 -1.0 4 1)) (1 (3.0 3 3 3 3 -2 6)) (1 (-7 4 -8 1)) (1 (4.0 1.0 -8 6 -1)) (1 (2 3 3 3 3 3 -4)))) ((5 4) ((1 (-2 6 -6 3 2)) (1 (4 3 3 3 6 -2 1)) (1 (2.0 2 2 2 2 2 2 2 -1 3 3 -2)) (1 (-6 3 3 3 3 2)) (1 (4 1.0 -4 3 3 -6)))) ((5 4) ((1 (-1)) (1 (-1)) (1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (450 450)) :lvel (quote (86 86)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9042)) :ldur (quote (75)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9042)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9042)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (286 286)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (286 286)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (923 923)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (346 346)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (300)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (225 225)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (450 450)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (75)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (500 500)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (409)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9392)) :ldur (quote (136)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9392)) :ldur (quote (136)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9392)) :ldur (quote (136)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (68)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (273)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9392)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (68)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9392)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9392)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (273 273)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (450 450)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (525 525)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (300)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (130)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (130)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (136)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (136)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (136)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (237 237)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (214 214)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (68)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (150 150)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (429 429)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (500 500)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9417)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9417)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9417)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (500 500)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (250 250)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (333 333)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (286 286)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (600 600)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (225 225)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (857)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (571)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (71)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (150)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (75 75)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (286 286)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (286 286)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (79)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (409)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (474 474)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (750)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (94)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (141)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (141)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (141)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (47)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (273)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (68)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (237 237)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (1200 1200)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (286 286)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9167)) :ldur (quote (214)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9167)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9167)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (71)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (180)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (180)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (180)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (180)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (180)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (180)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (180)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9217)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9217)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9217)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (333 333)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (333 333)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (250)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9392)) :ldur (quote (250)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (250)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9392)) :ldur (quote (250)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (250)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9392)) :ldur (quote (250)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (250 250)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (333 333)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (273 273)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (71)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8992)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (136)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (68 68)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (125)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (188)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (188)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (188)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9342)) :ldur (quote (62)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (333 333)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (250 250)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (237)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (158 158)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9167)) :ldur (quote (214)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9167)) :ldur (quote (71)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9167)) :ldur (quote (136)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (273 273)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (828)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (103)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (103)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (103)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (103)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (103)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (130)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9167)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (237)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9167)) :ldur (quote (237)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (237)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9167)) :ldur (quote (237)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (316)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (286 286)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (143)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (143)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (143)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (474 474)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (316 316)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (237 237)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (158)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (316)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (79)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (196)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (196)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9142)) :ldur (quote (196)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (391 391)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (300 300)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (75 75)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (450 450)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (474 474)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (237)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9442)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192 9192)) :ldur (quote (409 409)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (68)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (120)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (120)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (120)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (120)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (120)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (120)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8942)) :ldur (quote (120)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (180)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (180)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9242)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9242)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (150)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9242)) :ldur (quote (286)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9192)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (-4 4 1.0 -8 3)) (1 (4 3 3 3 3 -4 -1.0)) (1 (3 3 -4 -1.0 6 -3)) (1 (-4 -1.0 4 4 4 4 1)) (1 (3.0 4 -2 4 1.0 -4 -1.0)))) ((5 4) ((1 (-1 2 2 -4 -1.0 4 3 3 1)) (1 (3.0 3 3 -4 2 4 3)) (1 (4 4 4 -4 3 2 1)) (1 (3 2 2 3 3 -4 -1.0 4 1)) (1 (3.0 2 2 2 2 2 -6 3 1)))) ((5 4) ((1 (3.0 -6 2 2 -4 -1.0 2)) (1 (3.0 -2 2 3 3 3 3 3 -1)) (1 (-7 4 2 2 2 2 2 -1)) (1 (-3 4 1.0 -3 4 1.0 -3)) (1 (6 6 -1 2 3 3 1)))) ((5 4) ((1 (2.0 3 3 -7 2 2 2 1)) (1 (3 2 -2 4 1.0 -6 1)) (1 (3.0 -3 4 3 3 3 2)) (1 (4 -3 7 -4 -1.0)) (1 (-1 4 -4 -1.0 7 3)))) ((5 4) ((1 (7 3 3 -4 3 2)) (1 (6 2 -1 3 -1 3 3 1)) (1 (2.0 3 3 3 -4 -1.0 4 -1)) (1 (-4 3 3 3 4 4 2)) (1 (3.0 4 4 -1 4 3 3)))) ((5 4) ((1 (4 1.0 2 -2 4 -7)) (1 (-1 3 -3 3 -4 -1.0 2 2)) (1 (2 2 2 2 -7 4 -2)) (1 (-6 3 -4 -1.0 6)) (1 (8 -4 7 -1)))) ((5 4) ((1 (-2 6 -7 3 2)) (1 (14 -2 4 1.0)) (1 (8 2.0 -3 3 3 -1)) (1 (-6 3 4 4 3)) (1 (4 1.0 4 -4 -1.0 2 2 -2)))) ((5 4) ((1 (-1 3 3 -4 4 -4 2)) (1 (4.0 3 3 3 3 3 3)) (1 (8 3.0 -4)) (1 (-2 3 2 2 2 2 2 -4 -1.0)) (1 (3 3 -8 4 1.0)))) ((5 4) ((1 (-3 4 1.0 -4 2 2 -2)) (1 (-4 -1.0 3 3 3 3 3 3)) (1 (-1 4 -3 7 4 1.0)) (1 (3.0 -2 4 3 4 3)) (1 (4 3 3 3 3 -4 -1.0)))) ((5 4) ((1 (-3 7 -6 3)) (1 (-4 -1.0 6 3 3 -3)) (1 (2 2 -1 2 2 4 -1 3 1)) (1 (7.0 2 3 3 3 3 1)) (1 (2.0 -1 4 -3 3 3 -4)))) ((5 4) ((1 (-3 3 3 -4 4 -3)) (1 (-2 4 1.0 -3 4 -4 -1.0)) (1 (-2 6 -8 3 1)) (1 (2.0 -7 3 3 -2 4)) (1 (3 3 -3 3 3 3 -2)))) ((5 4) ((1 (-3 6 -7 3)) (1 (-4 -1.0 6 3 3 -4)) (1 (-1 3 3 -4 -1.0 3 3 -3)) (1 (-2 2 2 -2 7 -3 1)) (1 (4.0 -2 3 3 -7 3)))) ((5 4) ((1 (3 3 3 3 3 -4 4)) (1 (4 -1 3 3 -3 3 -2)) (1 (-4 6 3 3 -4 -1.0)) (1 (-1 3 3 2 2 2 2 -4 -1.0 3)) (1 (3.0 -3 3 3 2 2 -4 -1.0)))) ((5 4) ((1 (2 2 -6 4 3 3 2)) (1 (4 3 -4 -1.0 3 2 2 2)) (1 (2 2 -7 3 3 -4)) (1 (-4 4 1.0 -8 3)) (1 (3 -7 3 2 2 2 2)))) ((5 4) ((1 (3 -8 3 3 3 2)) (1 (2.0 3 3 -2 3 3 -4 2)) (1 (2.0 -16)) (1 (-1)) (1 (-1)))) ((5 4) ((1 (-1)) (1 (-1)) (1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (300 300)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (286)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (225)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (225)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (450 450)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (273)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8944)) :ldur (quote (273)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (273)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8944)) :ldur (quote (273)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (68)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8944)) :ldur (quote (316)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (316 316)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (143)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (143)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8994)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8994)) :ldur (quote (71)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8994)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9169)) :ldur (quote (273)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9169)) :ldur (quote (273)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (273)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9169)) :ldur (quote (273)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9094)) :ldur (quote (136)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (68)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9094)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (130)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9094)) :ldur (quote (130)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (196)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (196)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (261 261)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (65)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9094)) :ldur (quote (130)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (130)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9094)) :ldur (quote (130)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (130)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9094)) :ldur (quote (130)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (65)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (150)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (150)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (150 150)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8894)) :ldur (quote (196)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (196)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8894)) :ldur (quote (196)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (196)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8894)) :ldur (quote (196)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (273)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9094)) :ldur (quote (136)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9094)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9094)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (316 316)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (316 316)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (409 409)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (409 409)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9194)) :ldur (quote (205)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9194)) :ldur (quote (68)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9194)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8894)) :ldur (quote (136)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8894)) :ldur (quote (68)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (237)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8894)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (316 316)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (79 79)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9344)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9344)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9344)) :ldur (quote (316)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (553 553)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (300 300)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (525 525)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (225 225)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (477 477)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (136)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (450)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (150)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (225 225)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (225)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9344)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (75)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9344)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9344)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (286 286)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9169)) :ldur (quote (261)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (261)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9169)) :ldur (quote (130)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (273)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9169)) :ldur (quote (273)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (273 273)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (300)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (150)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (300 300)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (237)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (237)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9194)) :ldur (quote (158)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9194)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9194)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (286 286)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (450 450)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (600 600)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (525 525)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (450 450)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (225)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (150)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (1000 1000)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (286 286)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (600 600)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8894)) :ldur (quote (300)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (300)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8894)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (300)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8894)) :ldur (quote (300)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (150)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (150)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (286 286)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (143 143)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8919)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8919)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8919)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (800 800)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8944)) :ldur (quote (150)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8944)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8944)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (237)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (237)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (316 316)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (333 333)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (167)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (167)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8944)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8944)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8944)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (300 300)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (525 525)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (300 300)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (316 316)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (237 237)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (316 316)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (237)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9094)) :ldur (quote (286)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9094)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9094)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (553 553)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (237 237)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (450 450)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (225)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (225)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (167)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (167)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (167)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (167)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (333 333)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (250 250)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (83 83)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (136)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9094)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9094)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9094)) :ldur (quote (68)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (300 300)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (225)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (225)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (300 300)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (316 316)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (316 316)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (450 450)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (225)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (75)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (286 286)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (225)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (225)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (225 225)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (474 474)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (237)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (429 429)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (158)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (158)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (553 553)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (79 79)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9394)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9394)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9394)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (261 261)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (316 316)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (237)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (237)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (237 237)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (429 429)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (196)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (130)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (130)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (130)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (130)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (196 196)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (143)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (143)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (273)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8994)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8994)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (286)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8994)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9394)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9394)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9394)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144 9144)) :ldur (quote (300 300)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9394)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9394)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9394)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8894)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8894)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8894)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9144)) :ldur (quote (136)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (-4 -1.0 3 3 -2 3 3 3 1)) (1 (2.0 3 3 -7 4 1.0 -1)) (1 (-4 3 3 -6 2 2 1)) (1 (3 2 2 4 -4 4 1.0)) (1 (8 2.0 -4 3 1)))) ((5 4) ((1 (3.0 3 3 3 3 -4 -1.0)) (1 (-3 3 -4 -1.0 7 -1)) (1 (-4 4 -7 3 1)) (1 (3.0 4 4 4 4 -4 1)) (1 (4.0 -4 7 -3 3)))) ((5 4) ((1 (12 3.0 3 -2 4 1.0)) (1 (7 -7 2 2 3 1)) (1 (2.0 3 3 -2 4 -3 3 2 1)) (1 (3 2 2 -8 3 3)) (1 (-6 7 -3 3 2)))) ((5 4) ((1 (7 -6)) (1 (-1 3 -2 3 2 3 3 3 3)) (1 (-4 -1.0 4 3 3 3 2)) (1 (4 -1 4 -3 6 -1)) (1 (-3 7 3 3 -3 1)))) ((5 4) ((1 (2.0 3 -1 6 -3 3 2 2)) (1 (3 2 2 3 -8 1)) (1 (3.0 3 3 3 3 3 -2)) (1 (-1 4 2 2 -4 -1.0 2 2 1)) (1 (4 2 2 -2 4 -4 2 1)))) ((5 4) ((1 (2.0 3 3 3 3 3 3 -4 -1.0 1)) (1 (4.0 3 4 4 4 3)) (1 (4 1.0 -3 4 3 3 3)) (1 (4 3 -4 -1.0 3 2 2 2 1)) (1 (2.0 2 -8 4 1.0 -3)))) ((5 4) ((1 (-4 -1.0 3 2 2 2 2 2 -2 3)) (1 (8 -4 -1.0 3)) (1 (-2 3 3 -6 3 3 1)) (1 (2.0 3 3 3 -2 4 1.0 -2)) (1 (-3 3 3 3 -4 -1.0 3)))) ((5 4) ((1 (3.0 -2 4 1.0 2 2 4 -1)) (1 (-6 4 1.0 -1 3 2 2 2 1)) (1 (2.0 2 -3 6 -4 -1.0 2)) (1 (3.0 3 3 3 3 3 3)) (1 (-8 4 1.0 2 2 2 1)))) ((5 4) ((1 (2 2 2 2 -4 -1.0 2 3 3 3 1)) (1 (3.0 3 -4 -1.0 6 -3)) (1 (-3 4 -6 4 -2)) (1 (-4 3 3 2 2 2 2 4 1.0)) (1 (-1 3 3 -7 4 -1 2)))) ((5 4) ((1 (2.0 3 3 3 3 3 -4)) (1 (-1 2 2 3 3 -4 3 2)) (1 (4 3 3 3 2 2 -4 1)) (1 (2.0 3 -4 -1.0 3 3 3 3 1)) (1 (2.0 3 -4 6 -4 2)))) ((5 4) ((1 (3.0 -8 6 -2)) (1 (-4 3 3 -2 3 3 -3 1)) (1 (3 -7 6 -3)) (1 (-3 4 1.0 -3 2 2 2 2 2 1)) (1 (3 2 -1 2 4 4 4 3)))) ((5 4) ((1 (4 1.0 2 3 2 2 2 2 -3)) (1 (6 -8 4 -1)) (1 (3 3 6 -8)) (1 (2 2 4 1.0 -3 6)) (1 (-4 3 4 -8 1)))) ((5 4) ((1 (3.0 4 4 4 4 4)) (1 (-7 3 3 -8)) (1 (3 3 3 3 -8)) (1 (3 2 2 2 2 2 -7 1)) (1 (4.0 -6 4 1.0 -3 3)))) ((5 4) ((1 (2.0 -8 2 2 3 3 2)) (1 (3 -2 4 1.0 -1 3 3 3 1)) (1 (3.0 3 3 -6 2 3 1)) (1 (2.0 3 3 3 -7 3)) (1 (-8 6 -4 1)))) ((5 4) ((1 (4.0 -4 -1.0 2 2 3 3 -1)) (1 (-6 3 -6 4)) (1 (7 2 -6 4 -1)) (1 (-7 3 3 -2 6)) (1 (7 2 2 -4 4 1.0)))) ((5 4) ((1 (2.0 -16)) (1 (-1)) (1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8871)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8871)) :ldur (quote (65)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8871)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (286 286)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9321)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (71)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9321)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9321)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (300 300)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (300 300)) :lvel (quote (86 86)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (667 667)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (250)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9121)) :ldur (quote (83)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9121)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9121)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (237 237)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (553 553)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (316 316)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (237)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9296)) :ldur (quote (79)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (250)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9296)) :ldur (quote (250)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (250)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9296)) :ldur (quote (250)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (62)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (500 500)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (214 214)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (720)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (180)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (240 240)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (477)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9246)) :ldur (quote (136)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9246)) :ldur (quote (68)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9246)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (261 261)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8871)) :ldur (quote (130)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (65)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8871)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8871)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (500 500)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (143)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (808 808)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (196 196)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (130)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (300)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9321)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9321)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9321)) :ldur (quote (316)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (316 316)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (474 474)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (525 525)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (75)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (205)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (409 409)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8846)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8846)) :ldur (quote (237)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8846)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (237 237)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (79)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (316 316)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (158)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (158)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (158)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9346)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (79)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9346)) :ldur (quote (286)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9346)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (286 286)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9346)) :ldur (quote (71)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (173)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9346)) :ldur (quote (173)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (173)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9346)) :ldur (quote (173)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (173)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (173)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (58)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (286)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9346)) :ldur (quote (136)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (136)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9346)) :ldur (quote (136)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (68)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9346)) :ldur (quote (150)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (300 300)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (196)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (130)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (130)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (130)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (130)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (130)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (196 196)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (750 750)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (281 281)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8846)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (71)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8846)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8846)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (300 300)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (225)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (225)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (225)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (225 225)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (316 316)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (158)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (158)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (316 316)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (273 273)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9246)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9246)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (68)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9246)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (450 450)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9121)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9121)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9121)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (214 214)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (300 300)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (150)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (150)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (75)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (120)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (120)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (120)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (120)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (120)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9346)) :ldur (quote (180)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (180)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9346)) :ldur (quote (180)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (60)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9346)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (450 450)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (316 316)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (316 316)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9146)) :ldur (quote (196)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (130)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9146)) :ldur (quote (130)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (130)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9146)) :ldur (quote (130)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (261 261)) :lvel (quote (86 86)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (286 286)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (143)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9121)) :ldur (quote (214)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9121)) :ldur (quote (214)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9121)) :ldur (quote (214)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (150)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (150)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (225)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (225)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9296)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (273)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9296)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9296)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (136)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (136)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (68)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (196)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9296)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9296)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (65)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9296)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (429 429)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (143 143)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (474 474)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (205)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (205)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (68)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (237)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (474 474)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (273 273)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (136)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8946)) :ldur (quote (136)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (136)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8946)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8946)) :ldur (quote (68)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8946)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (130)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (261)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (261)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (261)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (286)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9071)) :ldur (quote (214)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9071)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9071)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (474 474)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (316 316)) :lvel (quote (86 86)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (225)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (225)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (450 450)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (167)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (167)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (333 333)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (500 500)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (225)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (300 300)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (75)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9121)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9121)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9121)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9146)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9146)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9146)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (71 71)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (286 286)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (214 214)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (136)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (136)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (286 286)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8846)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8846)) :ldur (quote (71)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8846)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9246)) :ldur (quote (214)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (71)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9246)) :ldur (quote (214)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9246)) :ldur (quote (214)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (474 474)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (79 79)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (150)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (150)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (225)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (225)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (237 237)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (316 316)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (525)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (150)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (300 300)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (429 429)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (525 525)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (150)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096)) :ldur (quote (150)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (13))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9096 9096)) :ldur (quote (300 300)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (13 13))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (-6 3 3 -4 -1.0 4)) (1 (6 4 4 -6)) (1 (4 -7 6 -3 1)) (1 (4.0 -8 3 3 -2)) (1 (-4 4 1.0 4 1.0 -4)))) ((5 4) ((1 (-2 2 3 3 3 3 3 -3)) (1 (4 -7 3 4 3)) (1 (4 4 4 -8 -1.0 1)) (1 (6.0 -6 7)) (1 (-6 4 1.0 2 2 4)))) ((5 4) ((1 (8 1.0 3 3 3 3 3)) (1 (-4 4 1.0 -7 3 2)) (1 (4 1.0 3 -8 4)) (1 (-1 3 3 3 3 -6 3)) (1 (8 1.0 2 3 3 3 3)))) ((5 4) ((1 (-6 2 2 2 2 2 2 -3)) (1 (-1 4 -1 7 -1 4 1.0)) (1 (-3 4 -3 3 -6)) (1 (4 -4 2 2 3 2 2 2 2 2 -1)) (1 (-7 2 2 -4 2 2 1)))) ((5 4) ((1 (3 2 2 6 4 -1 1)) (1 (6.0 -4 6 -4)) (1 (6 -3 3 3 -4 -1.0)) (1 (-2 2 3 3 3 3 3 -1 3 2)) (1 (12 1.0 -2 6 -1)))) ((5 4) ((1 (-3 3 3 3 3 3 2)) (1 (8 1.0 2 -7 3)) (1 (3.0 -6 2 2 -2 2 3 1)) (1 (3.0 3 3 3 -4 -1.0 4 1.0)) (1 (7 3 3 3 3 3 -2)))) ((5 4) ((1 (-1 7 -3 6 -2)) (1 (-4 6 -1 3 3 -2)) (1 (-3 4 3 3 3 3 3)) (1 (16 4.0 2 2 2 2 2)) (1 (7 -6 2)))) ((5 4) ((1 (4 -7 3 -2 4)) (1 (3.0 -8 2 2 -4)) (1 (-3 3 3 3 3 3 3 -2)) (1 (-4 6 -8 1)) (1 (2.0 3 4 1.0 -4 6 1)))) ((5 4) ((1 (4.0 -8 3 3 3)) (1 (3 3 3 -4 2 3 2 1)) (1 (2.0 2 2 -6 3 3 3 1)) (1 (2.0 3 3 -3 6 -3)) (1 (-3 3 3 -1 2 3 3 3 3 1)))) ((5 4) ((1 (2.0 -6 2 2 3 3 3 2)) (1 (4 1.0 3 -7)) (1 (4 -4 4 1.0 -4 2)) (1 (6.0 -4 2 2 -6)) (1 (4 1.0 3 4 4 4 2)))) ((5 4) ((1 (2.0 4 -3 4 1.0 -4 2)) (1 (4.0 -2 2 2 -7 3)) (1 (4.0 -2 3 2 2 2 2 2 4)) (1 (8 1.0 6 -4)) (1 (4 1.0 -1 4 3 3 3 2)))) ((5 4) ((1 (4 1.0 -6 4 1.0 3 3 1)) (1 (3.0 3 3 -8 4)) (1 (4 1.0 3 3 3 3 3 -2 3)) (1 (3.0 -3 4 4 4 4 2)) (1 (2.0 4 -4 -1.0 2 2 -2 4)))) ((5 4) ((1 (4 1.0 3 -4 4 1.0 -3)) (1 (3 3 -3 3 -8)) (1 (3 6 -4 -1.0 4 1.0)) (1 (-7 6 -4 -1.0 2)) (1 (3 -6 3 2 2 2 2 1)))) ((5 4) ((1 (2.0 -4 7 4 3)) (1 (4 4 4 4 4 1.0 -1)) (1 (3 -2 7 -4 2 2)) (1 (3 2 2 2 -4 3 -2 2)) (1 (3 3 3 -6 3 3 1)))) ((5 4) ((1 (3.0 3 3 3 -2 2 2 -2)) (1 (-3 4 -4 3 -4 -1.0)) (1 (-2 4 3 2 2 2 2 2)) (1 (-4 -1.0 2 -16 -1.0)) (1 (-1)))) ((5 4) ((1 (-1)) (1 (-1)) (1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (286 286)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (450 450)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (300 300)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (300 300)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (286 286)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (429 429)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (71 71)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (333 333)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (333 333)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (136)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9164)) :ldur (quote (205)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9164)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9164)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (286 286)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8764)) :ldur (quote (286)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8764)) :ldur (quote (273)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (273)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8764)) :ldur (quote (273)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (68 68)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (553 553)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (316 316)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (158)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (158)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (316 316)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (500)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8864)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8864)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8864)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (286 286)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (300)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (300 300)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (205 205)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (522)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (130)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (143)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (143)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (143)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (316 316)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (553 553)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (316 316)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (316 316)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (237 237)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (231 231)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (115)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8714)) :ldur (quote (115)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (173)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8714)) :ldur (quote (115)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (115)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8714)) :ldur (quote (115)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (115)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8714)) :ldur (quote (115)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8939)) :ldur (quote (150)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (75)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8939)) :ldur (quote (237)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8939)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (474 474)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (316 316)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (79 79)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (450 450)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (450 450)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (120)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8964)) :ldur (quote (180)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (180)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8964)) :ldur (quote (180)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (180)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8964)) :ldur (quote (180)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (180)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (120)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (818 818)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (409 409)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9164)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9164)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9164)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (571)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (214 214)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8714)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (71)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8714)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8714)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (273 273)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (438)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9139)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9139)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9139)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (553 553)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (474 474)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (474 474)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (237)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (237)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (273)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9139)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9139)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9139)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (800)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9064)) :ldur (quote (100)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (100)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9064)) :ldur (quote (100)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (100)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9064)) :ldur (quote (100)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (700 700)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (200)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (300)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (225 225)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (300 300)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (158)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (158)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (474 474)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (79)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (286 286)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (429 429)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (71 71)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8864)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8864)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8864)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9114)) :ldur (quote (214)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9114)) :ldur (quote (71)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9114)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9064)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9064)) :ldur (quote (68)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9064)) :ldur (quote (225)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (450 450)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (180)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (180)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (120)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8889)) :ldur (quote (180)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (180)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8889)) :ldur (quote (180)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (180)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8889)) :ldur (quote (60)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (130)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8889)) :ldur (quote (130)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8889)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8889)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (400)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (300)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (316 316)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (316 316)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (158 158)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (273 273)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9114)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9114)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9114)) :ldur (quote (300)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (300 300)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (150 150)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (225 225)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9164)) :ldur (quote (130)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (130)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9164)) :ldur (quote (130)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (130)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9164)) :ldur (quote (130)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (261 261)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (632 632)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (474 474)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (286 286)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (286)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8964)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8964)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8964)) :ldur (quote (261)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (261)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8664)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8664)) :ldur (quote (65)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8664)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (286 286)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (240)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8664)) :ldur (quote (180)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (180)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8664)) :ldur (quote (180)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (180)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8664)) :ldur (quote (180)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (180 180)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (250)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8889)) :ldur (quote (250)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (250)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8889)) :ldur (quote (250)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (125)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8889)) :ldur (quote (286)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (286 286)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (300)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (300 300)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (225 225)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (237 237)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (474 474)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (316 316)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (450 450)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9064)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9064)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9064)) :ldur (quote (71)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (525 525)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (300)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (273 273)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (525 525)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9064)) :ldur (quote (150)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9064)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9064)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (225 225)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8939)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (68)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8939)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8939)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (316)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (237 237)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (316 316)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (237)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9064)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9064)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9064)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (6))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (125 125)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (6 6))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (-8 3 2 2 2 2 2)) (1 (-8 2 2 4 -3)) (1 (-1 2 2 2 2 2 2 -1 3 2)) (1 (2 2 2 2 -6 4 -1)) (1 (-6 3 -2 3 2 2 2 1)))) ((5 4) ((1 (2.0 2 -7 2 2 2 2 2 2)) (1 (-2 2 2 -2 6 -3 3 1)) (1 (2.0 3 3 -4 3 3 -4)) (1 (-4 2 2 -8 4)) (1 (14 7 -3)))) ((5 4) ((1 (-2 4 -2 2 2 -4 4)) (1 (8 3.0 -4 3)) (1 (7 -6)) (1 (-2 6 -4 -1.0 3 3 2)) (1 (4 3 3 -1 2 2 -4 -1.0)))) ((5 4) ((1 (4 1.0 6 -6)) (1 (2 2 2 2 2 2 -1 3 3 -3)) (1 (-4 -1.0 3 3 -1 3 3 2 2)) (1 (-4 3 3 3 3 3 3 -1 1)) (1 (4.0 -8 6 -2)))) ((5 4) ((1 (-1 4 1.0 3 4 4 4)) (1 (4 4 -3 6 -2)) (1 (3 -3 3 3 3 3 3)) (1 (3 4 -8 4)) (1 (-3 4 -3 3 3 -3 3)))) ((5 4) ((1 (4.0 -6 2 3 3 3)) (1 (3 3 3 -3 4 1.0 -3)) (1 (7 -1 4 -7)) (1 (-1 6 -4 4 3 2)) (1 (4 3 3 -2 3 -1 4)))) ((5 4) ((1 (7 3 -8 2)) (1 (4.0 1.0 -7 3 3 2)) (1 (7 -6)) (1 (6 -7 2 2 2)) (1 (3 2 2 -3 3 3 3 3 -1)))) ((5 4) ((1 (-4 4 3 3 3 3 1)) (1 (3.0 -6 2 2 -6 1)) (1 (2.0 3 4 -1 6 -4)) (1 (-3 4 3 3 3 3 2)) (1 (2.0 -3 4 -2 6 -1)))) ((5 4) ((1 (-4 3 4 4 4 3)) (1 (2.0 4 -4 -1.0 7 -2)) (1 (-1 4 -7 3 2 2 2)) (1 (2 2 -8 6 -1)) (1 (-2 4 -6 6)))) ((5 4) ((1 (-4 -1.0 3 2 2 2 2 2 -2)) (1 (2 2 -3 4 1.0 -4 2 1)) (1 (2.0 -4 -1.0 3 3 -7 1)) (1 (6.0 -6 4 -3)) (1 (-3 6 -4 -1.0 6)))) ((5 4) ((1 (7 2 2 2 2 2 -4)) (1 (4 1.0 2 2 2 2 2 -6)) (1 (4 1.0 -4 2 2 -4 -1.0)) (1 (-1 3 4 4 4 4 2)) (1 (2.0 -6 4 -4 -1.0 2 2)))) ((5 4) ((1 (4 3 3 3 -2 2 2 2 2)) (1 (2 2 -2 7 -4 -1.0 3)) (1 (4.0 4 -6 4 1.0)) (1 (2.0 -3 3 3 3 3 3 1)) (1 (3.0 -8 4 1.0 -4)))) ((5 4) ((1 (-2 2 2 -6 2 2 4)) (1 (4 1.0 3 3 3 3 3)) (1 (6 -6 3 -2 1)) (1 (4.0 -3 2 2 3 3 3 3)) (1 (12 3.0 -2 2)))) ((5 4) ((1 (4.0 -7 3 3 -4)) (1 (4 -4 2 2 -1 4 -2)) (1 (3 6 -1 6 -2)) (1 (-4 3 3 -4 4 3)) (1 (4 4 4 4 -3 3)))) ((5 4) ((1 (3.0 -6 3 -6 2)) (1 (3.0 -8 4 1.0 -4)) (1 (3 3 3 3 3 3 -4)) (1 (-1)) (1 (-1)))) ((5 4) ((1 (-1)) (1 (-1)) (1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8714)) :ldur (quote (143)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8714)) :ldur (quote (143)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8714)) :ldur (quote (143)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (158)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (158)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (316 316)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (158)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9164)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9164)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9164)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (237)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (316 316)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (214 214)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8714)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8714)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (71)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8714)) :ldur (quote (130)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (130)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9114)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9114)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9114)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (429 429)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (71)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (300 300)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (875 875)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (438 438)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (300 300)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (300 300)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (667 667)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (250 250)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (808 808)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (429 429)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8764)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8764)) :ldur (quote (300)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8764)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (353 353)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (529 529)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (136)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (136)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8664)) :ldur (quote (188)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (188)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8664)) :ldur (quote (188)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (188)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8664)) :ldur (quote (188)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (62 62)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (450 450)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (286 286)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8964)) :ldur (quote (286)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (286)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8964)) :ldur (quote (286)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (316)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8964)) :ldur (quote (316)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (474 474)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (214 214)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8939)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8939)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8939)) :ldur (quote (237)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (316 316)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (316 316)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (273 273)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (205 205)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (225 225)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (300 300)) :lvel (quote (86 86)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (553 553)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (316 316)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (450 450)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (300)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8864)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8864)) :ldur (quote (300)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8864)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (225 225)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (300 300)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (525)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (150 150)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (150 150)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (808 808)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (474 474)) :lvel (quote (86 86)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (158)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8889)) :ldur (quote (158)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8889)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8889)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (196)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (196)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (71)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (75)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (300 300)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (450 450)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8664)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8664)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8664)) :ldur (quote (143)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (333 333)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (500 500)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8964)) :ldur (quote (273)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (273)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8964)) :ldur (quote (273)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8964)) :ldur (quote (300)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (525 525)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (286 286)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8864)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8864)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8864)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (474 474)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (333 333)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (500 500)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (158)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (158)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (316 316)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (158)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (79)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (71 71)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (316 316)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (450 450)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (450 450)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (500)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8714)) :ldur (quote (143)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8714)) :ldur (quote (143)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8714)) :ldur (quote (143)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (286)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9114)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9114)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (9114)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (333 333)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (167)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (167)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (273)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (273)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (273)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (273)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (136)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (286 286)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8939)) :ldur (quote (143)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (261)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8939)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8939)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (130)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (500 500)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (214 214)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (316 316)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (316 316)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (71)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (300 300)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (150)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (300 300)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (300)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (500 500)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (250 250)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (83 83)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8889)) :ldur (quote (130)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8889)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8889)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (947 947)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (158 158)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (316 316)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (158)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (158)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (316 316)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (250)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (500 500)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (500 500)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (286)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (273)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (273)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (273)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8689)) :ldur (quote (273)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (205 205)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (225 225)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (150 150)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914 8914)) :ldur (quote (300 300)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8764)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8764)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8914)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8764)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (-6 3 3 -3 3 3)) (1 (-3 6 -7 3 1)) (1 (2.0 -7 4 1.0 -3 4)) (1 (3.0 -2 3 2 2 2 2 2 -3 1)) (1 (4.0 -4 -1.0 2 2 2 2 2 2)))) ((5 4) ((1 (-6 4 -7 3)) (1 (2.0 4 1.0 -4 6 -1)) (1 (-4 4 1.0 4 1.0 3 3)) (1 (-4 4 -7 4 1.0)) (1 (12 1.0 -2 6 -1)))) ((5 4) ((1 (-2 2 2 2 2 2 2 -1 3 3 1)) (1 (2.0 4 4 4 4 3)) (1 (8 -2 4 1.0 -4 1)) (1 (4 1.0 4 4 4 4)) (1 (-3 4 -4 -1.0 3 -3 1)))) ((5 4) ((1 (2.0 3 2 3 3 3 3 3 -3)) (1 (-4 3 3 3 3 3 3 -2)) (1 (-4 -1.0 4 3 3 3 3 1)) (1 (2.0 -4 -1.0 4 -2 3 3 2)) (1 (4 3 3 -3 3 4 2)))) ((5 4) ((1 (2.0 4 4 4 3 2 2 2 1)) (1 (3 -1 3 2 2 2 2 2 -3 2)) (1 (3.0 4 1.0 -2 3 3 3 3)) (1 (4 3 -4 -1.0 4 1.0 -3)) (1 (-3 6 -4 3 -3)))) ((5 4) ((1 (4 1.0 -2 3 3 7 -1)) (1 (-2 6 -4 -1.0 4 1.0 -1)) (1 (-4 -1.0 2 2 6 -4)) (1 (-4 4 -3 3 3 -3)) (1 (-1 4 -8 3 3 2)))) ((5 4) ((1 (4 3 3 -8 3)) (1 (3.0 -1 3 2 3 3 3 3)) (1 (-4 2 3 3 3 3 3 2)) (1 (3.0 2 3 2 2 2 2 2 2 -4 -1.0)) (1 (3 2 2 2 2 2 -6 2 1)))) ((5 4) ((1 (2.0 -4 6 -2 4 -2)) (1 (-4 4 4 4 1.0)) (1 (-8 4 -6 2)) (1 (3 -8 4 1.0 -3)) (1 (-4 -1.0 2 2 2 2 2 2 4)))) ((5 4) ((1 (-2 3 4 4 4 4 2)) (1 (2.0 -4 4 -6 4 1.0)) (1 (7 -7 3 3 -1)) (1 (-2 4 -7 3 3 1)) (1 (3 -4 4 -6 2)))) ((5 4) ((1 (4.0 -1 3 3 -1 4 -6)) (1 (3 -3 3 3 -7)) (1 (2 2 7 3 4 2)) (1 (2.0 4 4 4 -3 3 2)) (1 (3 3 3 3 -7 3 1)))) ((5 4) ((1 (12 3.0 -2 6 1)) (1 (3.0 3 3 3 3 3 -2 2)) (1 (4 -1 3 3 -3 4 -4)) (1 (-2 4 1.0 -4 4 1.0 -2 3)) (1 (8 1.0 3 3 -4 1)))) ((5 4) ((1 (3 -1 2 3 2 2 2 2 -3 2)) (1 (6.0 -3 2 2 2 2 2 2)) (1 (-6 2 2 6 -2)) (1 (-4 4 1.0 -8 -1.0 2)) (1 (4 3 3 3 3 -6)))) ((5 4) ((1 (2 2 2 2 2 2 -7)) (1 (4 1.0 -6 3 2 2 2 1)) (1 (4 4 1.0 -2 3 3 -4 1)) (1 (3 3 3 3 3 -1 2 3 2)) (1 (4 3 3 -8 2 2)))) ((5 4) ((1 (2.0 4 4 4 4 -1 2 3)) (1 (2 2 2 2 -7 4 1.0 -1)) (1 (-6 4 1.0 -7 2)) (1 (4.0 -6 3 3 4 1.0)) (1 (-7 7 -4 2)))) ((5 4) ((1 (2.0 3 3 3 3 3 4 1.0)) (1 (2.0 -8 4 -4 -1.0 1)) (1 (3.0 4 4 4 4 4)) (1 (-4 -1.0 3 2 2 2 2 2 -2 1)) (1 (2.0 3 -7 4 -4 -1.0)))) ((5 4) ((1 (-2 6 6 -4 -1.0)) (1 (-1)) (1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (214)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (214)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (214)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (214)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (450 450)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (225)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (75)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (286 286)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (286 286)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8671)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8671)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8671)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (68 68)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8721)) :ldur (quote (143)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (143)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8721)) :ldur (quote (143)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (143)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8721)) :ldur (quote (143)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (300 300)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (225 225)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (333 333)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (500 500)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (300 300)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (300 300)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (300 300)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (300 300)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (818 818)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (409 409)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8546)) :ldur (quote (136)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (136)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8546)) :ldur (quote (136)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (136)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8546)) :ldur (quote (136)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (68)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8471)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8471)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8471)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (600)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (300 300)) :lvel (quote (86 86)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (75)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8496)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8496)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8496)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (316 316)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (237 237)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (79)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (180)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (120)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8946)) :ldur (quote (180)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (180)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8946)) :ldur (quote (180)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (180)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8946)) :ldur (quote (180)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8671)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8671)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8671)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8471)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8471)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8471)) :ldur (quote (68)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (286 286)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8646)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8646)) :ldur (quote (273)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8646)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8671)) :ldur (quote (273)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (136)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8671)) :ldur (quote (250)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (250)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8671)) :ldur (quote (250)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (125)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (125)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (125)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (62)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8546)) :ldur (quote (136)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8546)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8546)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (136 136)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (273 273)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8546)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8546)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (300)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8546)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (300 300)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (474 474)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (237 237)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (286 286)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (214)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (214)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (500 500)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (474 474)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (316 316)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (158)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (158)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (474 474)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (300 300)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (225)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (225)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (286 286)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8846)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (143)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8846)) :ldur (quote (286)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8846)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (214 214)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (214)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8546)) :ldur (quote (143)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8546)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8546)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (130)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (196)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (130 130)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (120)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8446)) :ldur (quote (180)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (120)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8446)) :ldur (quote (120)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (120)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8446)) :ldur (quote (120)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (120)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8446)) :ldur (quote (120)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8471)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8471)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8471)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (136)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (68)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (450 450)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (300 300)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (353 353)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (353 353)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (353 353)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (300 300)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (237)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (316 316)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (143)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (143)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (286 286)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8496)) :ldur (quote (261)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (261)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8496)) :ldur (quote (261)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (261)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8496)) :ldur (quote (130)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (286 286)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (286 286)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (500 500)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (214)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (214)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (300 300)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (225)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (225)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (75)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (237)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (316 316)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (158 158)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (273 273)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (237 237)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (237)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (237)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (525 525)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (300)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8946)) :ldur (quote (136)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8946)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8946)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (65)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (750 750)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (375 375)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (62)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8846)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8846)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8846)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (136)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (273)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (273 273)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (286 286)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (286 286)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (214 214)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (600 600)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (75)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8921)) :ldur (quote (205)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (136)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8921)) :ldur (quote (136)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (136)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8921)) :ldur (quote (136)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (136 136)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8471)) :ldur (quote (143)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8471)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8471)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (167)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (167)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (500 500)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (300 300)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8846)) :ldur (quote (273)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8846)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8846)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8446)) :ldur (quote (158)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (158)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8446)) :ldur (quote (158)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (158)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8446)) :ldur (quote (158)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (286 286)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8546)) :ldur (quote (143)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (143)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8546)) :ldur (quote (143)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (71)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8546)) :ldur (quote (273)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (273 273)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (68)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8646)) :ldur (quote (196)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8646)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8646)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (130)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8896)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8721)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8721)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8721)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (125)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8671)) :ldur (quote (188)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (143)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8671)) :ldur (quote (143)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (143)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8671)) :ldur (quote (143)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (286 286)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (300 300)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (150 150)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (286 286)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (525 525)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8921)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8921)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8921)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (273 273)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (300 300)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (75)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8846)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8846)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8846)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8446)) :ldur (quote (143)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8446)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8446)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (71)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (15))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (286 286)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (474 474)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8696 8696)) :ldur (quote (474 474)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (15 15))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (-8 3 3 3 3 2)) (1 (4 -8 6)) (1 (-3 3 3 -1 4 -3 3 2)) (1 (4 3 3 3 3 3 -3 1)) (1 (4.0 1.0 -7 3 3 -2)))) ((5 4) ((1 (-3 4 3 2 2 2 2 2 -2)) (1 (-2 4 -4 -1.0 3 3 3)) (1 (3.0 -6 3 3 -4 -1.0)) (1 (7 -8 4)) (1 (2.0 -4 3 3 -2 2 2 3 1)))) ((5 4) ((1 (2.0 3 3 -3 3 3 -4)) (1 (-4 2 3 2 2 2 2 -3 2)) (1 (2.0 -4 -1.0 2 2 -2 4 -2)) (1 (-2 3 3 -3 3 2 2 2 2 1)) (1 (8 3.0 -4 1)))) ((5 4) ((1 (4.0 -4 -1.0 6 -4)) (1 (-4 3 -7 2 3 2)) (1 (4 3 3 -3 3 -4 -1.0)) (1 (-2 2 2 -2 3 3 -1 3 -1)) (1 (-2 7 -2 4 1.0 -3)))) ((5 4) ((1 (-1 6 -4 3 3 -3 1)) (1 (6.0 2 3 3 3 3 3)) (1 (-6 4 7 -2)) (1 (4 3 3 3 3 3 -2 3)) (1 (6 -4 -1.0 4 1.0 -2 2)))) ((5 4) ((1 (3 -4 -1.0 2 3 3 3 3 2)) (1 (7 2 -1 3 -7)) (1 (-1 7 -8 3 2)) (1 (3 2 2 2 -2 7 -3)) (1 (-1 3 3 -4 -1.0 4 1.0 -2 2)))) ((5 4) ((1 (2 -2 2 2 -4 -1.0 4 1.0 -1 1)) (1 (2.0 3 3 3 3 3 -6)) (1 (2 2 -6 3 3 -4)) (1 (-2 2 2 -4 -1.0 3 3 -3)) (1 (-3 3 3 -2 4 -6)))) ((5 4) ((1 (6 -8 4)) (1 (2 2 -4 6 -4)) (1 (2 3 2 2 2 2 -3 3 -2)) (1 (-4 4 -7 2 3)) (1 (2 2 2 2 -4 -1.0 4 3 2)))) ((5 4) ((1 (3 3 3 -1 2 2 -7)) (1 (3 3 3 3 3 3 -4)) (1 (-3 2 2 -7 3 3)) (1 (4 -3 3 3 3 3 1)) (1 (3.0 3 -1 3 -6 2 3 1)))) ((5 4) ((1 (3.0 3 3 3 -4 -1.0 6)) (1 (8 -8 3 2)) (1 (6 4 -3 6)) (1 (-2 6 -8 4)) (1 (3.0 -7 2 2 -4 2)))) ((5 4) ((1 (4 2 2 2 2 -3 3 2 2 1)) (1 (2.0 2 2 -6 3 3 -3)) (1 (-4 4 1.0 -6 3 2)) (1 (3 3 3 3 -3 4 -3)) (1 (-4 2 2 -3 2 2 3 3)))) ((5 4) ((1 (3 3 2 2 -4 -1.0 4 1.0)) (1 (8 1.0 3 3 3 3 3)) (1 (-7 4 -2 6)) (1 (7 3 -4 -1.0 3 3 1)) (1 (2.0 3 3 3 -6 4 1.0)))) ((5 4) ((1 (-4 4 1.0 -3 4 1.0 -2 1)) (1 (3 -2 3 3 3 3 3 3 -1)) (1 (-6 6 -8)) (1 (2 3 3 3 3 3 -6)) (1 (4 1.0 7 -1 4 -1)))) ((5 4) ((1 (-4 6 -7 3)) (1 (4 3 3 3 3 3 3 -1)) (1 (-1 4 -3 3 3 3 3 1)) (1 (3.0 3 -2 4 1.0 -6)) (1 (3 3 3 3 3 3 -4)))) ((5 4) ((1 (-2 3 3 -1 3 2 3 3 3 2)) (1 (8 2.0 -4 3 1)) (1 (-1)) (1 (-1)) (1 (-1)))) ((5 4) ((1 (-1)) (1 (-1)) (1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8620)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8620)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8620)) :ldur (quote (333)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (500 500)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (205)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (205)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (273 273)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (261)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8695)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8695)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8695)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (65 65)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (273 273)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8245)) :ldur (quote (136)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (136)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8245)) :ldur (quote (136)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (136)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8245)) :ldur (quote (136)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (300 300)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (225)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (225)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (225 225)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (225)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (225)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (553 553)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (316 316)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (205)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (205)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8520)) :ldur (quote (136)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (205)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8520)) :ldur (quote (68)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (214)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8520)) :ldur (quote (214)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (214)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (214)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8220)) :ldur (quote (205)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8220)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8220)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (136 136)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (158)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (158)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (316 316)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (196)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (196)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8445)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8445)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8445)) :ldur (quote (65)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (750 750)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (94 94)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (474 474)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (214)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (143)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8220)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8220)) :ldur (quote (286)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8220)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (214 214)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (158)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (158)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (237)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (237)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (237 237)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (553 553)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (316 316)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (429 429)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (214)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (214)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (71 71)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8270)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8270)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8270)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (316 316)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (553 553)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8445)) :ldur (quote (188)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (188)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8445)) :ldur (quote (188)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (188)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8445)) :ldur (quote (188)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (188 188)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (450 450)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (300 300)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (150)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (188)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (125)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8245)) :ldur (quote (188)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (188)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8245)) :ldur (quote (188)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (188)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8245)) :ldur (quote (125)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (525)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (225 225)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (500 500)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8320)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8320)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8320)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (500 500)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (286 286)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (143)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (150)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (150)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (150)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (300 300)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (75)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8420)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8420)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8420)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (150)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (150)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (150)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (150)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (225)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (225)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (214)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (214)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (286 286)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (500 500)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (333 333)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (167)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (167)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (500 500)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (143)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8320)) :ldur (quote (214)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8320)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8320)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (214 214)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (300 300)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8520)) :ldur (quote (225)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8520)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8520)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (273)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8495)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8495)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8495)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8720)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8720)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8720)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (150)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (150)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (300 300)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8620)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8620)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (75)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8620)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (205 205)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8270)) :ldur (quote (205)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (68)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8270)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8270)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (391 391)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (571 571)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (214)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (143)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (474 474)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (316 316)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (474 474)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (450 450)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (300 300)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (150)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (150)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8670)) :ldur (quote (261)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (130)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8670)) :ldur (quote (130)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (130)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8670)) :ldur (quote (130)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (196)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8695)) :ldur (quote (130)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (130)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8695)) :ldur (quote (65)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8695)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (300 300)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8420)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8420)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8420)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (273 273)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (143)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8495)) :ldur (quote (143)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8495)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8495)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (150)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (150)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (300 300)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (500)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8495)) :ldur (quote (188)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (188)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8495)) :ldur (quote (188)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (188)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8495)) :ldur (quote (188)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (316 316)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (474 474)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (477)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8270)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (68)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8270)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8270)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (273 273)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (300 300)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (300 300)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (75)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (188)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8520)) :ldur (quote (188)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (188)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8520)) :ldur (quote (188)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (188)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8520)) :ldur (quote (188)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (450 450)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (130)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8220)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8220)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8220)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (333 333)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (583 583)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (333 333)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (450 450)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8520)) :ldur (quote (261)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (196)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8520)) :ldur (quote (196)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (196)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8520)) :ldur (quote (196)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (286 286)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8270)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8270)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (71)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8270)) :ldur (quote (237)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (316 316)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8495)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8495)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8495)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (180)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (180)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (180)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8220)) :ldur (quote (120)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (180)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8220)) :ldur (quote (180)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (180)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8220)) :ldur (quote (120)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470 8470)) :ldur (quote (667 667)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (250)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8470)) :ldur (quote (83)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (-6 3 3 -2 4 1.0)) (1 (-1 2 2 4 1.0 3 3 4)) (1 (-8 2 2 -4 4)) (1 (-1 2 2 -7 6 -1)) (1 (-7 3 4 4 4 1)))) ((5 4) ((1 (4.0 4 -7 3 -1 2)) (1 (3.0 -7 7 -3)) (1 (4 1.0 4 1.0 -7 2 1)) (1 (4.0 4 4 4 4 -1 3)) (1 (4 4 4 4 4 -3)))) ((5 4) ((1 (-4 -1.0 3 -4 -1.0 3 3 -1 1)) (1 (2.0 2 2 2 2 2 6 -2 1)) (1 (3.0 -4 4 1.0 -6 2)) (1 (3 3 3 3 3 -3 2 2)) (1 (-2 2 3 2 2 2 2 -2 3 1)))) ((5 4) ((1 (3.0 3 3 3 3 -6)) (1 (3 3 3 3 3 3 -2 3)) (1 (3 -4 -1.0 7 -4 -1.0)) (1 (6 -1 4 1.0 -6 1)) (1 (2.0 3 3 3 3 3 3)))) ((5 4) ((1 (6 3 2 2 2 2 -4)) (1 (-4 2 2 -4 -1.0 3 3 -1)) (1 (4 3 3 3 3 3)) (1 (-4 -1.0 3 3 3 3 3 2)) (1 (8 2.0 -4 -1.0 2)))) ((5 4) ((1 (8 2.0 3 -3 3 2)) (1 (2.0 4 4 4 4 3 -1)) (1 (-7 6 -6 1)) (1 (4.0 1.0 -4 -1.0 7 -3)) (1 (4 1.0 4 1.0 -8 1)))) ((5 4) ((1 (2.0 3 -7 4 3 3)) (1 (4 3 3 6 -4)) (1 (6 -4 3 2 2 2 2 1)) (1 (16 2.0 4)) (1 (3.0 -2 4 1.0 -4 4 1.0 1)))) ((5 4) ((1 (4 -8 -1.0 4 1.0 -3)) (1 (3 3 -7 4 -3)) (1 (-4 7 -7 1)) (1 (4 -7 3 3 -4)) (1 (2 2 -6 3 -1 4 2)))) ((5 4) ((1 (3.0 -4 -1.0 3 3 -7)) (1 (3 3 4 1.0 -4 -1.0 3)) (1 (2.0 -6 7 -4 -1.0 1)) (1 (4.0 1.0 -4 -1.0 4 -4 -1.0)) (1 (-1 3 3 -4 -1.0 2 2 -4)))) ((5 4) ((1 (2 2 -8 3 3 2)) (1 (2.0 3 3 3 -6 3 2)) (1 (7 -6 3 2 3 1)) (1 (3.0 3 3 -7 3 3)) (1 (-7 4 1.0 -4 4)))) ((5 4) ((1 (3.0 -8 -1.0 7 -1)) (1 (-3 3 3 -6 4)) (1 (-2 2 2 2 2 2 2 -4 -1.0)) (1 (-1 3 2 2 2 2 2 -3 2 2)) (1 (4 3 3 3 -8 1)))) ((5 4) ((1 (4.0 -3 3 2 3 3 3 3)) (1 (-4 4 -3 2 2 -4)) (1 (-1 3 3 3 3 3 3 3)) (1 (8 2.0 -8 2)) (1 (2 2 2 2 2 -2 3 3 -1 2 2)))) ((5 4) ((1 (3 3 3 3 -6 3 1)) (1 (3.0 3 3 3 3 -4 2)) (1 (4.0 1.0 -3 2 3 2 2 2 2)) (1 (-2 3 3 -1 2 2 2 2 2 2)) (1 (8 1.0 2 -3 4 1.0 -1)))) ((5 4) ((1 (-4 -1.0 4 1.0 2 2 3 3 2)) (1 (3 -4 4 -3 6)) (1 (-1 3 3 -8 6)) (1 (4 -7 2)) (1 (3 -2 3 3 2 2 2 2 -3 1)))) ((5 4) ((1 (6.0 4 -4 -1.0 4 1.0 1)) (1 (4.0 -7 3 3 -4)) (1 (-2 4 -1 4 -1 1 -4 -1.0)) (1 (-1)) (1 (-1)))) ((5 4) ((1 (-1)) (1 (-1)) (1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (237)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (237)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (316 316)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (150)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (150)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (300 300)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (225)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (225)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (300 300)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (150)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (150)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (300 300)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (158)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (158)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (474 474)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8693)) :ldur (quote (261)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (261)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8693)) :ldur (quote (261)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (65)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8693)) :ldur (quote (286)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (214 214)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (143 143)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (525 525)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (300 300)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (300 300)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (150)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8318)) :ldur (quote (75)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (250)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8318)) :ldur (quote (250)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (250)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8318)) :ldur (quote (250)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (188)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8668)) :ldur (quote (261)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (261)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8668)) :ldur (quote (261)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (261)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8668)) :ldur (quote (261)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (214 214)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (214)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (214)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (71)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8618)) :ldur (quote (143)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8618)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8618)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (429 429)) :lvel (quote (86 86)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (71 71)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (300 300)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8218)) :ldur (quote (205)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8218)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8218)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (136)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (136)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8218)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8218)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8218)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8718)) :ldur (quote (71)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (214)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8718)) :ldur (quote (214)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (214)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8718)) :ldur (quote (214)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (196)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8418)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8418)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8418)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (196)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (225)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (525 525)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (474 474)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (316 316)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (79)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8268)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8268)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8268)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (225 225)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (429)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8418)) :ldur (quote (214)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8418)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8418)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (225)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (225)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (316)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8518)) :ldur (quote (237)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (237)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8518)) :ldur (quote (237)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (237)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8518)) :ldur (quote (237)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8618)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8618)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8618)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (706 706)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (176 176)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (571)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8618)) :ldur (quote (143)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (273)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8618)) :ldur (quote (273)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (273)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8618)) :ldur (quote (273)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (205 205)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (450 450)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (75 75)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (525 525)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (316 316)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (316 316)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (79)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (205)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (273)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8693)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8693)) :ldur (quote (300)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8693)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (450 450)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (409 409)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8618)) :ldur (quote (136)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (136)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8618)) :ldur (quote (136)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (136)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8618)) :ldur (quote (68)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (1091 1091)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (273 273)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (300 300)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (300 300)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (75)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (286)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (286 286)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (300 300)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (553 553)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (79)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (286)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (150)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (150)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (225 225)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (300 300)) :lvel (quote (86 86)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (150 150)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (237)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (237)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (316 316)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (237 237)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (500 500)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (71 71)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (316 316)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (225)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (225)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (150)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (150)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8493)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8493)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8493)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (205)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (136)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (477 477)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8693)) :ldur (quote (136)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8693)) :ldur (quote (68)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8693)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (205)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (205)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (300 300)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (300 300)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (525 525)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (237)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (237)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (316 316)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8668)) :ldur (quote (158)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (158)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8668)) :ldur (quote (158)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (158)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8668)) :ldur (quote (158)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8268)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8268)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8268)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8668)) :ldur (quote (143)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (273)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8668)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8668)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (68 68)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8443)) :ldur (quote (125)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8443)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8443)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (316 316)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (158)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (158)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8518)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8518)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8518)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (205 205)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (600 600)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8718)) :ldur (quote (130)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (130)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8718)) :ldur (quote (130)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (130)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8718)) :ldur (quote (130)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (196)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (196)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8518)) :ldur (quote (130)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8518)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8518)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8318)) :ldur (quote (68)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8318)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8318)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (143 143)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (214)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8243)) :ldur (quote (143)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8243)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8243)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (600)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (300 300)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (273 273)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8668)) :ldur (quote (136)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8668)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8668)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (300 300)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (450 450)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (214)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (214)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (429 429)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (462 462)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (231)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (196)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8243)) :ldur (quote (196)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8243)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8243)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (65 65)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (286 286)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (286 286)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (71 71)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (214)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (214)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (333 333)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468 8468)) :ldur (quote (333 333)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (9 9))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8468)) :ldur (quote (83)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (9))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (3 2 2 2 2 2 -2 4 1.0 3 1)) (1 (4 3 3 -2 3 3 3 3 1)) (1 (2.0 3 -6 7 -1 2)) (1 (3 3 3 3 3 2 2 -3)) (1 (-1 3 3 -3 4 1.0 -2 2 2)))) ((5 4) ((1 (3 3 3 3 -8 2)) (1 (2.0 3 2 2 2 2 -8 1)) (1 (2.0 3 3 3 3 3 -3 2)) (1 (4 3 3 3 3 -4 -1.0)) (1 (3 3 -8 2 2 3)))) ((5 4) ((1 (3 3 3 -3 3 3 -2)) (1 (4 1.0 -8 2 2 -2)) (1 (-1 3 -4 -1.0 4 -1 4 1.0)) (1 (3.0 -4 -1.0 2 2 -3 3 3)) (1 (-3 3 -8 4 1.0)))) ((5 4) ((1 (8 1.0 -7 2 2)) (1 (3 2 -4 -1.0 3 -6)) (1 (-1 4 6 -6 2)) (1 (2.0 -7 2 2 -6 2)) (1 (4 4 4 4 4 -2)))) ((5 4) ((1 (2 3 3 3 3 3 -2 3 3 1)) (1 (2.0 2 2 2 -8 4 1.0)) (1 (2.0 7 -8 2 1)) (1 (8 -2 4 1.0 -3 2)) (1 (3 -3 2 2 -6 3 1)))) ((5 4) ((1 (2.0 2 2 2 2 4 1.0 2 3 2)) (1 (4 3 3 -7 2 3)) (1 (3 3 3 3 -4 -1.0 4)) (1 (3.0 -1 4 -8 4)) (1 (8 4 4 4 3)))) ((5 4) ((1 (4 -8 4 1.0 -2)) (1 (-1 7 -3 3 4 1.0)) (1 (8 4 4 -3)) (1 (-3 4 3 3 3 3 3)) (1 (-6 2 2 -7 3 1)))) ((5 4) ((1 (8 3.0 -4 1)) (1 (7.0 -6 3 3 -1)) (1 (-6 4 1.0 7 -1)) (1 (4 -6 3 3 -2 3)) (1 (3.0 -4 -1.0 4 -2 4 1.0)))) ((5 4) ((1 (4 1.0 3 -3 3 2 2 2 2 1)) (1 (6 3 3 3 3 3 -2)) (1 (-1 6 -1 2 2 -7)) (1 (-1 3 2 2 2 2 2 -6)) (1 (6 -3 4 1.0 -4 -1.0)))) ((5 4) ((1 (-2 4 -7 3 3)) (1 (4 4 4 4 7)) (1 (-3 3 3 -4 -1.0 3 3 1)) (1 (3.0 3 3 3 3 -4 -1.0)) (1 (-2 7 -8 3)))) ((5 4) ((1 (4.0 1.0 -4 -1.0 3 3 -4 1)) (1 (3.0 4 4 4 4 4)) (1 (-6 3 3 -6 3 1)) (1 (2.0 2 2 2 2 -2 4 1.0 -3)) (1 (2 2 -6 4 1.0 -1 3 2)))) ((5 4) ((1 (8 2.0 -3 4 1.0 -2)) (1 (-4 3 4 4 4 2)) (1 (2.0 4 -1 3 3 -4 4 1.0)) (1 (2.0 -4 3 3 -8 1)) (1 (4.0 -2 4 -4 -1.0 3 -2)))) ((5 4) ((1 (-4 -1.0 3 3 -1 3 2 2 2 1)) (1 (2.0 2 -2 3 3 -3 6)) (1 (8 2.0 -4 -1.0 4 2)) (1 (4 -8 2 2 4 1.0)) (1 (-8 4 -6 2)))) ((5 4) ((1 (2.0 3 3 3 3 3 -2 2 2 1)) (1 (4 3 3 3 6 -3)) (1 (-3 3 -8 4 1.0)) (1 (8 2.0 2 3 3 3 2)) (1 (12 3.0 7 -1)))) ((5 4) ((1 (3 3 3 3 3 3 -3)) (1 (-3 3 -2 3 3 -6)) (1 (3 6 -7 2)) (1 (3 2 2 2 2 -4 6)) (1 (6 -8)))) ((5 4) ((1 (-1)) (1 (-1)) (1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (188)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8038)) :ldur (quote (125)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (125)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8038)) :ldur (quote (125)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (125)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8038)) :ldur (quote (125)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8063)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (62)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8063)) :ldur (quote (240)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (180)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8063)) :ldur (quote (180)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (180)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (180)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (180)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (180)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (60)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (500 500)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (143)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8088)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8088)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8088)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (136)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (136)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (286 286)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8513)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8513)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8513)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8438)) :ldur (quote (205)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8438)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8438)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (68)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8313)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8313)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8313)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8438)) :ldur (quote (286)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8438)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8438)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (143)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8138)) :ldur (quote (143)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8138)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8138)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (316 316)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (158)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (158)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (237)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (316 316)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (316 316)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (143)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (143)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (237 237)) :lvel (quote (86 86)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (316 316)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (600 600)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (150)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (150)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (237)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (158)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (237 237)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (316 316)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (474 474)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (158 158)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (143)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (143)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8438)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8438)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8438)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (115)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8538)) :ldur (quote (173)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (173)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8538)) :ldur (quote (173)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (173)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8538)) :ldur (quote (173)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (173)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8063)) :ldur (quote (173)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (58)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8063)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8063)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (286 286)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (525 525)) :lvel (quote (86 86)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (150)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (75)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (600 600)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (300 300)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (150)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (225)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (150)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (150)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8238)) :ldur (quote (75)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (136)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8238)) :ldur (quote (136)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (136)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8238)) :ldur (quote (136)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (273 273)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8313)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8313)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8313)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (136)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8038)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8038)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8038)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (286 286)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (300 300)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (300 300)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (522)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8538)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8538)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8538)) :ldur (quote (316)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (316 316)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (553 553)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (237 237)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (316 316)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (632 632)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (316 316)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (316 316)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (273)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8063)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8063)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8063)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (143)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (143)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (71)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (750 750)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (94 94)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (316 316)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (553 553)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (286 286)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (214 214)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (316 316)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (316 316)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (261)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8438)) :ldur (quote (130)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (130)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8438)) :ldur (quote (130)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (130)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8438)) :ldur (quote (65)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (391)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (474 474)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (158)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (158)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8088)) :ldur (quote (150)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8088)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8088)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (474 474)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (316 316)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (316 316)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (237)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8088)) :ldur (quote (237)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (261)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8088)) :ldur (quote (261)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (261)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8088)) :ldur (quote (261)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (457 457)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8513)) :ldur (quote (214)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (71)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8513)) :ldur (quote (225)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (225)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8513)) :ldur (quote (225)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (225 225)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (525 525)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (225 225)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (71)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8338)) :ldur (quote (261)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (261)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8338)) :ldur (quote (261)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (261)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8338)) :ldur (quote (261)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (205)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (205)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8438)) :ldur (quote (68)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8438)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8438)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (300 300)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (143)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (143)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (286 286)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (143)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (600 600)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (300 300)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8138)) :ldur (quote (286)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (286)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8138)) :ldur (quote (286)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (143)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8138)) :ldur (quote (273)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (205)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (205)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (273 273)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (71 71)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (300 300)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (225)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (205)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (205)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (205)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8488)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8488)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (68)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8488)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (429 429)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (571 571)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (286 286)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (143)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (286)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (143)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (143)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (286 286)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (300 300)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8488)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8488)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8488)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (125)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8313)) :ldur (quote (125)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (62)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8313)) :ldur (quote (273)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8313)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (205 205)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (409 409)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (237 237)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (316 316)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (522)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8063)) :ldur (quote (130)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8063)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8063)) :ldur (quote (130)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (783 783)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (457 457)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (225 225)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (250 250)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (500 500)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (167)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8488)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8488)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8488)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288 8288)) :ldur (quote (429 429)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8288)) :ldur (quote (643)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (-8 4 1.0 -6 1)) (1 (2.0 3 -4 -1.0 4 3 3 2)) (1 (4 1.0 3 -1 3 2 3 3 3)) (1 (3 -8 3 3 -3)) (1 (3 3 -6 6 -2)))) ((5 4) ((1 (-3 4 1.0 -4 -1.0 3 3)) (1 (-1 3 2 2 2 2 2 -6 1)) (1 (3.0 -1 3 3 -4 -1.0 4 1.0 2)) (1 (2.0 -7 4 -6)) (1 (3 3 -3 3 2 2 2 2 2)))) ((5 4) ((1 (8 3 3 3 3 1)) (1 (3.0 -2 3 4 4 4 3)) (1 (4 1.0 -7 2 2 -4)) (1 (2 3 3 3 3 3 -6)) (1 (3 3 -3 3 3 -3 4)))) ((5 4) ((1 (8 3.0 -4)) (1 (3 2 2 3 3 3 3 -1 3)) (1 (12 -2 3 3 2)) (1 (2.0 3 3 3 3 3 -4)) (1 (-3 4 4 4 4 3)))) ((5 4) ((1 (4 3 3 -4 -1.0 4 1.0)) (1 (-7 6 -3 4)) (1 (4.0 -7 2 2 -4 -1.0)) (1 (-2 3 3 3 3 3 3 1)) (1 (4 3 3 3 3 -2 4)))) ((5 4) ((1 (-4 3 3 -7 3 1)) (1 (3.0 -2 3 -8 3 2)) (1 (3 3 3 3 -3 2 2 -1)) (1 (-4 -1.0 6 -4 3 3)) (1 (4 1.0 4 4 4 -4 -1.0)))) ((5 4) ((1 (-2 2 2 3 3 3 3 -4 1)) (1 (2.0 2 2 2 -7 3)) (1 (3 3 -7 6 -2)) (1 (3 -1 2 2 6 -2 2 1)) (1 (2.0 3 3 3 3 -4 2 2 2 1)))) ((5 4) ((1 (2.0 2 2 -8 2 2 -1)) (1 (-2 6 -6 2 2)) (1 (-7 3 2 2 2 2 2)) (1 (16 4.0 3 3 3 3 1)) (1 (3.0 -3 6 -7)))) ((5 4) ((1 (-1 3 3 -2 6 -4 2)) (1 (3 -2 3 2 2 2 2 2 -2)) (1 (-4 4 -8 3)) (1 (3.0 -4 -1.0 4 1.0 -6 2)) (1 (3.0 -4 -1.0 6 3 3 1)))) ((5 4) ((1 (2.0 3 3 3 -3 3 -4 1)) (1 (3.0 4 4 4 4 3)) (1 (4 2 -1 2 2 -6 3)) (1 (4 2 3 -7 3 2)) (1 (8 -4 -1.0 4 -3)))) ((5 4) ((1 (6 -4 -1.0 4 1.0 -4)) (1 (-3 3 3 -1 2 2 2 2 2 2 -2)) (1 (-6 6 -3 3 3)) (1 (-2 4 -3 3 2 2 2 2 2 1)) (1 (2.0 3 -2 4 1.0 -2 3 2 2 1)))) ((5 4) ((1 (2.0 2 2 -8 3 3)) (1 (-6 4 1.0 4 3 2)) (1 (2.0 3 3 3 4 -4)) (1 (-1 2 2 -6 7 -1)) (1 (3 3 3 3 3 3 -2)))) ((5 4) ((1 (-3 7 -6 3 2)) (1 (6 3 2 2 2 2 2 2 -4 -1.0)) (1 (3 3 -6 4 1.0 -1 2)) (1 (4.0 -7 3 2 2 2 2)) (1 (2 -7 2 4 4 3)))) ((5 4) ((1 (4 4 7 -4 2)) (1 (3 3 3 3 3 -2 4 -2)) (1 (-2 4 -4 -1.0 4 1.0 -3)) (1 (-2 3 -3 3 3 3 3 3 1)) (1 (3.0 -4 3 3 -6 4)))) ((5 4) ((1 (4.0 -2 4 1.0 -3 6)) (1 (-4 4 3 3 3 3 1)) (1 (2.0 -6 3 3 3 3 2)) (1 (3 -7 4 1.0 -3 2)) (1 (3 -7 6 -2 2)))) ((5 4) ((1 (4 3 3 3 3 -2 4)) (1 (2.0 -7 1 -12 -3.0)) (1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (300 300)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (75)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (273)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8036)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8036)) :ldur (quote (136)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (261)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8036)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8036)) :ldur (quote (130)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8036)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8036)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (225)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (225)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (225)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (225)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (450 450)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (316 316)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (237)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (237)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8236)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8236)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8236)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (71 71)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (273 273)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (136 136)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (316 316)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8536)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8536)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8536)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (571)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8036)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8036)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8036)) :ldur (quote (71)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8311)) :ldur (quote (261)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (261)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8311)) :ldur (quote (261)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8311)) :ldur (quote (300)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (150)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (150)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (130)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8536)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8536)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8536)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (273 273)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (800 800)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (196 196)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (130)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8061)) :ldur (quote (130)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8061)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8061)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (196 196)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (818 818)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (136)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8311)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8311)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8311)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (273)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8511)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8511)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8511)) :ldur (quote (300)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (225)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (225)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (300 300)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (450 450)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (300 300)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (150)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (150)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8136)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8136)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8136)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (71)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8436)) :ldur (quote (273)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8436)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8436)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (273 273)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (71)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8536)) :ldur (quote (143)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8536)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8536)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (150)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (150)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (429 429)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8136)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8136)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8136)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8486)) :ldur (quote (130)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8486)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8486)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (65)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (167)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (167)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (167)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (250 250)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (429 429)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (237 237)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (158)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (158)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (474 474)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8311)) :ldur (quote (79)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (180)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8311)) :ldur (quote (180)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (180)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8311)) :ldur (quote (180)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (120)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8311)) :ldur (quote (120)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (120)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8311)) :ldur (quote (60)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (158)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8311)) :ldur (quote (158)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (158)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (158)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (500 500)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (167)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (167)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8511)) :ldur (quote (150)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (150)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8511)) :ldur (quote (150)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (150)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8511)) :ldur (quote (150)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (727)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (45)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (474 474)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (429 429)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8136)) :ldur (quote (150)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (150)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8136)) :ldur (quote (150)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (150)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8136)) :ldur (quote (150)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (316 316)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (237 237)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (286 286)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (143 143)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (429 429)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8536)) :ldur (quote (214)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (71)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8536)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8536)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (205 205)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (68)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8261)) :ldur (quote (273)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (273)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8261)) :ldur (quote (273)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (273)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8261)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (300)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (150)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (150)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (150)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (225 225)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (286)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (143)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (214 214)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (143)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (600 600)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (300 300)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (450 450)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (300 300)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (188)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (188)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (125)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8061)) :ldur (quote (125)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (125)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8061)) :ldur (quote (125)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (125)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8061)) :ldur (quote (125)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (429 429)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (261 261)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8336)) :ldur (quote (130)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (130)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8336)) :ldur (quote (130)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (130)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8336)) :ldur (quote (130)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (65)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (273 273)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8236)) :ldur (quote (136)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8236)) :ldur (quote (68)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8236)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (225)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (225)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (300 300)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (300)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8236)) :ldur (quote (225)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (150)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8236)) :ldur (quote (237)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (237)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8236)) :ldur (quote (237)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (316 316)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (158)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (158)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (553 553)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (225)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8436)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8436)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8436)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (500 500)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (143)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (346)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8436)) :ldur (quote (173)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (115)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8436)) :ldur (quote (115)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (115)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8436)) :ldur (quote (115)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (115)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8436)) :ldur (quote (115)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (300 300)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (150 150)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8536)) :ldur (quote (136)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (136)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8536)) :ldur (quote (136)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (136)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8536)) :ldur (quote (136)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8236)) :ldur (quote (273)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (273)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8236)) :ldur (quote (205)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (286)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8236)) :ldur (quote (286)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (500 500)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8036)) :ldur (quote (196)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (196)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8036)) :ldur (quote (196)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (196)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8036)) :ldur (quote (196)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (261 261)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (316 316)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (316 316)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (188 188)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8536)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8536)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8536)) :ldur (quote (62)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (196)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (196)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (261 261)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (300 300)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (450 450)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8336)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8336)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8336)) :ldur (quote (71)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8336)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8336)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (136)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8336)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (300 300)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (150)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (450 450)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8236)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8236)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8236)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286 8286)) :ldur (quote (273 273)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (1 1))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8286)) :ldur (quote (60)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (-4 2 2 -4 -1.0 2 2 -1)) (1 (-2 2 2 2 2 2 2 -8 1)) (1 (3.0 3 3 3 3 3 -2)) (1 (-4 -1.0 4 1.0 -2 4 -4)) (1 (-3 4 -1 3 3 3 3 2)))) ((5 4) ((1 (3 -6 2 2 2 2 2 1)) (1 (8 2 -4 -1.0)) (1 (6 -3 4 -2 4)) (1 (-1 2 2 3 3 4 4 1)) (1 (4 3 3 3 6 -3)))) ((5 4) ((1 (4 1.0 -8 2 3 3)) (1 (3 3 3 -4 3 4 2)) (1 (2.0 4 4 4 -3 4 2 1)) (1 (2.0 2 2 2 -4 6 -3)) (1 (-3 6 -4 -1.0 3 3)))) ((5 4) ((1 (-8 3 3 3 3 2)) (1 (3 -2 2 3 3 3 3 2)) (1 (8 1.0 3 -3 4)) (1 (4.0 -8 3 3 3 1)) (1 (3.0 3 3 -4 -1.0 2 2 -2)))) ((5 4) ((1 (-3 4 -8 -1.0 3 2)) (1 (16 4.0 3 3 3 3)) (1 (3 -7 4 1.0 -1 4)) (1 (4.0 -2 3 3 -7 3)) (1 (8 2.0 2 -7 1)))) ((5 4) ((1 (6.0 -8 2 2 -1)) (1 (-1 4 1.0 4 -1 3 -4)) (1 (-3 3 3 -3 3 3 3 1)) (1 (2.0 3 3 -2 7 -4)) (1 (-3 3 3 -1 7 4)))) ((5 4) ((1 (3.0 -7 4 -4 -1.0 1)) (1 (3.0 3 3 3 3 3 3 -2)) (1 (-2 4 1.0 -8 4)) (1 (-4 -1.0 3 -4 -1.0 4 1.0)) (1 (-1 6 -4 4 -4)))) ((5 4) ((1 (-4 3 2 2 2 2 2 -4)) (1 (-4 3 3 -4 4 1.0 -2)) (1 (-1 2 2 -6 3 3 3)) (1 (3 3 3 -3 4 1.0 -1 3)) (1 (6 2 2 2 2 2 -4 -1.0)))) ((5 4) ((1 (4 1.0 3 3 1 2 2 2 2 2 -3)) (1 (4 4 4 4 4 4)) (1 (4 1.0 3 3 3 3 3)) (1 (4 1.0 3 3 -6 3)) (1 (4 3 3 3 3 -2 4)))) ((5 4) ((1 (8 2.0 3 3 3 2)) (1 (2.0 3 -1 7 -4 -1.0 3 1)) (1 (3.0 -4 -1.0 3 3 -2 2 3)) (1 (4 4 4 4 -6)) (1 (7 3 -3 3 3 2)))) ((5 4) ((1 (4 3 3 -8 -1.0 3)) (1 (4.0 -4 3 2 2 2 2 2 -3)) (1 (-2 4 -4 4 -2 3)) (1 (4 3 3 3 3 6)) (1 (7 3 -2 2 2 2 2 2)))) ((5 4) ((1 (2 2 2 -8 3 3 -1)) (1 (-6 6 -6 1)) (1 (2.0 3 -4 -1.0 3 3 -4 -1.0)) (1 (3 3 -3 2 2 -6)) (1 (3 -4 -1.0 4 -3 4 2)))) ((5 4) ((1 (4 3 3 3 -1 2 3 3 1)) (1 (4 3 -8 6)) (1 (7 4 4 4 3)) (1 (4 1.0 -2 4 1.0 -3 4 1.0)) (1 (12 3.0 2 2 1)))) ((5 4) ((1 (2.0 3 2 2 2 2 -6 3)) (1 (12 3.0 -2 3 2 2 1)) (1 (4 2 -8 4 3)) (1 (4 3 3 3 3 -4 2)) (1 (2 -8 1)))) ((5 4) ((1 (4.0 1.0 -6 7 -2)) (1 (-2 4 -3 2 2 -4 -1.0 1)) (1 (2.0 3 -8 -1.0 2 2 -2)) (1 (4 4 -3 7 -1 1)) (1 (2.0 3 3 3 3 3 -1 2 3 2)))) ((5 4) ((1 (4 3 3 -6 3 3)) (1 (-2 3 3 3 3 3 3 -4)) (1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (167)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (167)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (167)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (167)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (130)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7819)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7819)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7819)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (65)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7644)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7644)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7644)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (300 300)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (300 300)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (273 273)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7994)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7994)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7994)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7644)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7644)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7644)) :ldur (quote (75)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (800)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (200)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (474 474)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (316 316)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (316 316)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (150)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (150)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (300 300)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (300)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8019)) :ldur (quote (75)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (273)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8019)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8019)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (409 409)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (286 286)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7544)) :ldur (quote (214)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7544)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7544)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7569)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7569)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7569)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (250)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8019)) :ldur (quote (125)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (62)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8019)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8019)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (429 429)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (450 450)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (632 632)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (237 237)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (316 316)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7944)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7944)) :ldur (quote (68)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7944)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (286)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (143)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (750)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8044)) :ldur (quote (141)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (141)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8044)) :ldur (quote (141)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (141)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8044)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (300 300)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (300 300)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (205 205)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (600)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (150)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (75 75)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (333 333)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (333 333)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (250 250)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7594)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7594)) :ldur (quote (68)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7594)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (500 500)) :lvel (quote (86 86)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (500 500)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (286 286)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (300 300)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (75)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (196)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (316 316)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (316 316)) :lvel (quote (86 86)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (250 250)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (333 333)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (474 474)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (316 316)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (286 286)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (150)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (150)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7644)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7644)) :ldur (quote (214)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7644)) :ldur (quote (214)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (286 286)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (214 214)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (429)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7569)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7569)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7569)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (240 240)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (180)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7544)) :ldur (quote (180)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (60)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7544)) :ldur (quote (120)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (120)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7544)) :ldur (quote (120)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (120)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7544)) :ldur (quote (120)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (250)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7944)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7944)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7944)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (300)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7569)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7569)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7569)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (300 300)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7544)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7544)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7544)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (273 273)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (571)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7544)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7544)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7544)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (477 477)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (68)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7994)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7994)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7994)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (500 500)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (214 214)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7744)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7744)) :ldur (quote (273)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7744)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (205 205)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7569)) :ldur (quote (125)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (125)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7569)) :ldur (quote (125)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (125)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7569)) :ldur (quote (125)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (316 316)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (316 316)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (237)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7769)) :ldur (quote (273)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7769)) :ldur (quote (205)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7769)) :ldur (quote (205)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (409 409)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (477)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7569)) :ldur (quote (136)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (136)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7569)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7569)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7569)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (474 474)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (79)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (237)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (237)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (214 214)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (286 286)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7844)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7844)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7844)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (130)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8019)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8019)) :ldur (quote (65)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (286)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (8019)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (429 429)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (477)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7769)) :ldur (quote (273)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (273)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7769)) :ldur (quote (273)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7769)) :ldur (quote (300)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (300 300)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (300 300)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (900 900)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (75)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7544)) :ldur (quote (205)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7544)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7544)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (205 205)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (720 720)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (180)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7644)) :ldur (quote (120)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (120)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7644)) :ldur (quote (60)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (286)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7644)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (286 286)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7819)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7819)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7819)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (136 136)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (273 273)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (136 136)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (525 525)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (316 316)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (158)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (158)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (79)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (225)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (300 300)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (300 300)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794 7794)) :ldur (quote (525 525)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (10 10))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (75)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7994)) :ldur (quote (180)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (180)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7994)) :ldur (quote (180)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (180)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7994)) :ldur (quote (180)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (120)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7594)) :ldur (quote (180)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (120)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7594)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7594)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (188)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7744)) :ldur (quote (188)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (188)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7744)) :ldur (quote (188)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (188)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (7744)) :ldur (quote (188)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (10))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (-4 -1.0 4 1.0 -2 2 2 2 2 1)) (1 (3 -4 -1.0 4 3 3 -2 1)) (1 (4.0 1.0 -3 7 -4 -1.0)) (1 (2 2 -8 3 3 -2)) (1 (3 4 1.0 -4 3 3 2)))) ((5 4) ((1 (4 3 3 -1 7 -3 1)) (1 (6.0 -6 4 1.0 -1 2)) (1 (4.0 -4 3 3 -6 1)) (1 (4 -2 4 -8 3)) (1 (3 -7 7 -1 2)))) ((5 4) ((1 (3 -8 2 3 3 3 1)) (1 (3.0 3 -1 2 2 -4 4 1.0)) (1 (8 2.0 -2 4 1.0 -2)) (1 (-4 4 1.0 -4 3 3 2)) (1 (4 3 3 -4 4 -3)))) ((5 4) ((1 (-2 6 -3 2 2 4)) (1 (-1 4 1.0 3 -4 3 3)) (1 (4.0 -7 4 2 2 1)) (1 (4 2 -8 -1.0 3 3)) (1 (-1 2 3 3 3 3 3 -3)))) ((5 4) ((1 (-4 4 2 2 -1 2 2)) (1 (3 -3 6 -7)) (1 (-1 3 3 -8 6)) (1 (-4 -1.0 7 -3 3 2)) (1 (3 3 3 3 3 3 -3 3)))) ((5 4) ((1 (16 4.0 2 3 3 3 1)) (1 (3.0 -1 4 6 -4 2)) (1 (3.0 -8 3 -4 2)) (1 (2.0 3 3 3 3 3 -3)) (1 (7 -4 2 3 3 3)))) ((5 4) ((1 (3 3 -7 4 -3)) (1 (-3 3 3 -1 6 -4)) (1 (-1 4 -3 7 -4)) (1 (-2 2 3 2 2 2 2 -4 1)) (1 (4.0 6 -4 -1.0 4 1.0)))) ((5 4) ((1 (16 2.0 3 2 2 2 2)) (1 (4 -8 2 2 -3)) (1 (-3 4 -2 3 3 -2 4 1)) (1 (2.0 3 3 3 3 -3 3 3 2)) (1 (2.0 -1 2 3 3 3 3 3)))) ((5 4) ((1 (7 3 -4 4 1.0 -2)) (1 (-6 3 3 -8 1)) (1 (4.0 1.0 -6 3 3 2 2 1)) (1 (2 -1 2 3 3 3 3 3 -2 2)) (1 (3 2 2 2 2 -1 7 -2)))) ((5 4) ((1 (-4 -1.0 3 3 -7 2)) (1 (3.0 -7 2 2 -4 2)) (1 (8 2.0 -7 3)) (1 (4.0 -4 4 -7 2)) (1 (3 6 7 -4)))) ((5 4) ((1 (-3 7 -2 4 1.0 -1 2)) (1 (3 -2 2 2 -3 4 1.0 2 1)) (1 (2.0 -8 3 6 1)) (1 (2.0 3 -1 3 3 7 -3)) (1 (-3 3 3 -7 4)))) ((5 4) ((1 (6 3 -3 4 1.0 -3)) (1 (3 -1 4 1.0 2 2 -4 -1.0)) (1 (4 1.0 3 2 2 2 2 2 -1)) (1 (-4 2 2 2 2 2 2 -3)) (1 (-2 3 -2 4 -4 -1.0 2 2)))) ((5 4) ((1 (8 1.0 3 3 3 3 2)) (1 (3 3 3 3 3 -7 1)) (1 (2.0 3 3 3 3 3 -4)) (1 (-3 3 2 2 2 2 2 -1 6)) (1 (7 -6 1)))) ((5 4) ((1 (3.0 -3 3 2 2 2 2 2 -1)) (1 (-6 6 -4 -1.0 3 1)) (1 (2.0 -8 4 -4 2)) (1 (7 3 -7 3)) (1 (12 1.0 -3 3 2 1)))) ((5 4) ((1 (2.0 2 2 2 -2 4 -7)) (1 (-1)) (1 (-1)) (1 (-1)) (1 (-1)))) ((5 4) ((1 (-1)) (1 (-1)) (1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (286 286)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6313)) :ldur (quote (143)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (143)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6313)) :ldur (quote (143)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (71)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6313)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (286 286)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (214)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (214)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (71 71)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (525 525)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (225 225)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (300 300)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6138)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6138)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6138)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (477 477)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (68 68)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (300 300)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (150 150)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (214)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (214)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (71)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (286)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (286 286)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (214)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (525 525)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (150)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (196)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6588)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6588)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (65)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6588)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (150)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (150)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (300 300)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (632 632)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (316 316)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (286 286)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6088)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6088)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6088)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (286 286)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (474 474)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (158)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (158)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (316 316)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (316 316)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (237 237)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (237 237)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (237 237)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (300)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6138)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6138)) :ldur (quote (75)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6138)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (214)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (214)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6188)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6188)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6188)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (353 353)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (176)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (176)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (176)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (176)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (237 237)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (474 474)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (429 429)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (525 525)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6188)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6188)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6188)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (188)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (188)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (188 188)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (750)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6538)) :ldur (quote (94)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (141)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6538)) :ldur (quote (141)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (141)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6538)) :ldur (quote (47)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (300 300)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (450 450)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (150 150)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (225 225)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6363)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6363)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6363)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (477 477)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6588)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6588)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6588)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (300 300)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (450 450)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (316 316)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (553 553)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (150)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6113)) :ldur (quote (225)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6113)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6113)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (75 75)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (450 450)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (300 300)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (828)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6488)) :ldur (quote (155)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (103)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6488)) :ldur (quote (103)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (103)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6488)) :ldur (quote (103)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (316 316)) :lvel (quote (86 86)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (158)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (158)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (273 273)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6363)) :ldur (quote (68)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (180)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6363)) :ldur (quote (180)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (180)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6363)) :ldur (quote (180)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (180)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (180)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (120)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (500)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (214)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (286 286)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (214)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (214)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (71 71)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6363)) :ldur (quote (205)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (136)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6363)) :ldur (quote (136)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (68)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6363)) :ldur (quote (125)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (125)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6088)) :ldur (quote (188)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6088)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6088)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (125)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6188)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6188)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6188)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (500 500)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (150 150)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (150)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (150)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (150 150)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (600 600)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (225 225)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (286 286)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (143)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (450 450)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (525 525)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (525 525)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (300 300)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (150)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (150)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (150)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (300 300)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (150)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (75)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (225 225)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (450 450)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (75)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (205)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (477 477)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (300 300)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (450)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (300 300)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (250 250)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (333 333)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (167)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (167)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (316 316)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (237)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6288)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6288)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6288)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (158)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (158)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (158)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (158)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (158)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (225 225)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (300 300)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (150)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (150)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (522 522)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (196)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (196)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (130)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6363)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6363)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6363)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (65)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6563)) :ldur (quote (130)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (130)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6563)) :ldur (quote (130)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (130)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6563)) :ldur (quote (130)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (391 391)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (750 750)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (107 107)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6288)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6288)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6288)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (429 429)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (214)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (71)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (300 300)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (150 150)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (525)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (225)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (225 225)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (818 818)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6088)) :ldur (quote (136)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (68)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6088)) :ldur (quote (143)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338)) :ldur (quote (143)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6088)) :ldur (quote (143)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6338 6338)) :ldur (quote (286 286)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (-4 4 1.0 -2 4 1.0 -3)) (1 (-4 3 -7 3 1)) (1 (3.0 4 4 4 4 -2)) (1 (-1 6 -7 4 1.0)) (1 (-4 4 1.0 -4 -1.0 3 3 1)))) ((5 4) ((1 (2.0 3 3 3 -6 4 1.0)) (1 (8 3 -8 1)) (1 (6.0 -8 3 3 2)) (1 (4 3 3 -6 6)) (1 (7 -2 7 -4)))) ((5 4) ((1 (-2 3 2 2 2 2 2 -4)) (1 (-2 4 3 3 3 3 2)) (1 (4 2 -4 -1.0 2 3 2 2 2 1)) (1 (2.0 2 2 -7 3 3)) (1 (-7 3 3 -7 1)))) ((5 4) ((1 (3.0 3 -3 4 -4 -1.0 4 1)) (1 (4.0 4 4 4 4 -3)) (1 (3 3 -1 2 2 -7 2)) (1 (4 3 3 3 3 -4 -1.0 3)) (1 (3.0 -2 4 1.0 -7 3)))) ((5 4) ((1 (14 -1 4)) (1 (-2 3 3 -1 4 1.0 -4 -1.0)) (1 (4 4 1.0 6 -3)) (1 (-4 3 3 -8 2)) (1 (4.0 -6 3 2 3 3 2)))) ((5 4) ((1 (3 -8 4 -4 -1.0)) (1 (-2 4 -4 -1.0 6)) (1 (-3 4 -7 3 3)) (1 (-1 3 4 4 4 4 2)) (1 (2.0 -2 3 3 3 3 3 3)))) ((5 4) ((1 (-7 2 2 2 2 2 2 1)) (1 (2.0 3 3 3 3 3 -2 2)) (1 (4.0 1.0 -4 3 3 -4 -1.0)) (1 (3 3 -4 -1.0 3 3 -4)) (1 (-3 3 -8 4 1.0)))) ((5 4) ((1 (6 2 -8 2 2)) (1 (12 3.0 -1 6)) (1 (-4 -1.0 3 4 1.0 -2 4)) (1 (3.0 -8 4 1.0 -1 3)) (1 (2.0 -1 2 2 -7 4 1.0)))) ((5 4) ((1 (-4 4 1.0 -3 3 4 2)) (1 (2.0 4 4 4 -6 3)) (1 (2.0 -7 3 -7)) (1 (4 -3 6 -4 -1.0)) (1 (-2 3 3 -1 4 -7)))) ((5 4) ((1 (7 -7 4 1.0)) (1 (-4 4 1.0 -3 2 3 2 2)) (1 (2 2 -1 4 1.0 -2 4 1.0 -1 1)) (1 (2.0 3 -1 6 4 -3)) (1 (7 -7 6)))) ((5 4) ((1 (8 1.0 -2 2 2 3 3 1)) (1 (3.0 3 3 2 2 2 2 2 -2)) (1 (-4 -1.0 4 1.0 -4 -1.0 4)) (1 (2.0 -2 4 3 3 3 3 3)) (1 (12 3.0 3 -2 4)))) ((5 4) ((1 (2.0 3 3 -4 -1.0 4 -2 2 1)) (1 (2.0 -2 4 1.0 -8 2)) (1 (4.0 -6 2 2 -4 -1.0 1)) (1 (2.0 3 -4 6 -4 -1.0)) (1 (-1 4 3 3 3 3 3 -3)))) ((5 4) ((1 (-4 2 3 3 3 3 3 -2)) (1 (-3 2 2 -8 3 2)) (1 (8 2.0 3 3 3 3 1)) (1 (2.0 -2 3 3 4 -4 3)) (1 (3.0 -8 4 -4)))) ((5 4) ((1 (-3 4 -3 4 -4 2)) (1 (3.0 -8 2 3 3 3)) (1 (3 3 -1 3 3 3 3 3 3)) (1 (8 1.0 -7 3 1)) (1 (3 2 2 2 -8 4 1.0)))) ((5 4) ((1 (3.0 4 -7 7)) (1 (-3 4 -2 6 -3 1)) (1 (2.0 3 1 -8 -3.0)) (1 (-1)) (1 (-1)))) ((5 4) ((1 (-1)) (1 (-1)) (1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (250 250)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6582)) :ldur (quote (83)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6582)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6582)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (474 474)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (286 286)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6357)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (71)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6357)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6357)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (273 273)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (600)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (75 75)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (136)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (273)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (409 409)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (525 525)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (525 525)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (237)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (158)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (158)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (158)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (158)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (158)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (300)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6307)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6307)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6307)) :ldur (quote (150)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (261)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (130)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (130)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (196)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (130)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (130)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (130)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (65)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (158)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (158)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (237)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (237)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (71)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (261 261)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (261)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6532)) :ldur (quote (65)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6532)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6532)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (250)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (188)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (188)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (188)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (188)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (188 188)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (300 300)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (225 225)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (1105 1105)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (237)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (237)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (333 333)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (333 333)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (500 500)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (150 150)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6307)) :ldur (quote (130)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6307)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (130)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6307)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (300 300)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (353 353)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (529 529)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (300 300)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6582)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6582)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6582)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6132)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6132)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6132)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6132)) :ldur (quote (150)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6132)) :ldur (quote (150)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6132)) :ldur (quote (150)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (75)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (143 143)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (237 237)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (450)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (818 818)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (409 409)) :lvel (quote (86 86)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (237 237)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (300 300)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (225 225)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (158)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (158)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (286 286)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6082)) :ldur (quote (286)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6082)) :ldur (quote (261)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (261)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6082)) :ldur (quote (261)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (196 196)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (237 237)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (333 333)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (500 500)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (300 300)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (553 553)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (286 286)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (214)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (158)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (158)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (79)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (237)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (474 474)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (525 525)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (450 450)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (545 545)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6082)) :ldur (quote (136)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6082)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (68)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6082)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (261)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (750)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (188)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (250 250)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (273 273)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (136)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (68)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (158 158)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (75)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (450 450)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (261)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6357)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6357)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6357)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (522)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (65)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (286 286)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (214 214)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (300 300)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (300 300)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (150 150)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (136)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (180)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (180)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (180)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6557)) :ldur (quote (180)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (180)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6557)) :ldur (quote (180)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (180)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6557)) :ldur (quote (180)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (600 600)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6532)) :ldur (quote (75)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6532)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6532)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (273 273)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (286 286)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (500 500)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (474 474)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (79)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (265)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (18))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (88 88)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (18 18))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (-4 -1.0 2 2 2 2 -4 -1.0)) (1 (-2 4 -4 -1.0 4 1.0 3 2)) (1 (3.0 4 1.0 4 1.0 4 1.0 4 1.0)) (1 (-7 3 3 3 3 3)) (1 (3 -7 2 2 -4 -1.0)))) ((5 4) ((1 (-2 3 3 3 3 3 3 -3)) (1 (-1 4 1.0 3 3 -7 2)) (1 (2.0 -2 7 -2 4 -2)) (1 (-1 3 -4 -1.0 6 -3)) (1 (3 -2 4 1.0 4 1.0 -3)))) ((5 4) ((1 (2 2 -4 -1.0 7 -1 3)) (1 (3 3 3 3 3 -4 -1.0)) (1 (3 -3 6 -1 4 1.0)) (1 (6 3 -8 2 2)) (1 (4 1.0 -4 2 2 -6)))) ((5 4) ((1 (2 2 -6 2 2 -1 3 2)) (1 (16 1.0 -1 2)) (1 (2.0 -6 3 -6 3)) (1 (2.0 -2 2 2 2 2 2 2 2 2 -1)) (1 (-1 6 2 2 -4 -1.0 2)))) ((5 4) ((1 (4.0 -4 3 3 3 3)) (1 (-3 2 3 3 3 3 3 -3)) (1 (-2 3 4 4 4 4 1)) (1 (4.0 4 1.0 4 3 3 3 1)) (1 (2.0 3 -8 3 3 3 1)))) ((5 4) ((1 (3.0 3 3 -1 3 3 -3 3)) (1 (4 4 4 4 4 -2 1)) (1 (6.0 -6 6 -2)) (1 (-4 -1.0 2 2 2 2 2 2 -3)) (1 (3 3 -4 4 -2 4)))) ((5 4) ((1 (8 -2 3 4 4 2)) (1 (3.0 4 4 -1 2 2 -4)) (1 (6 -1 6 2 2 1 1 1 1)) (1 (8 2.0 -7 2 2)) (1 (8 1.0 3 3 3 3 2)))) ((5 4) ((1 (8 2.0 -2 2 2 2 2 2 1)) (1 (2.0 3 3 4 1.0 -4 4)) (1 (4.0 4 3 3 3 3 1)) (1 (3.0 -7 3 3 -4 -1.0)) (1 (-2 3 3 3 3 3 3)))) ((5 4) ((1 (-4 7 -8 1)) (1 (4.0 3 3 3 3 3 -2)) (1 (-4 -1.0 3 2 2 2 2 2 -4)) (1 (-2 4 -6 4 -3)) (1 (7 -2 2 2 -1 4 1.0)))) ((5 4) ((1 (7 -4 7 3)) (1 (3 -4 3 -2 3 3 -2)) (1 (-4 -1.0 4 -8 2)) (1 (2 3 3 3 3 -2 4 1.0)) (1 (-4 -1.0 2 3 2 2 2 2 3)))) ((5 4) ((1 (3 3 3 3 3 -4 -1.0)) (1 (2 2 -6 4 1.0 -4)) (1 (-1 4 1.0 -6 3 3 2 1)) (1 (2.0 2 2 -8 3 -2)) (1 (-4 2 3 3 3 3 3 -2)))) ((5 4) ((1 (-1 4 1.0 4 1.0 -4 -1.0 4)) (1 (-2 3 3 3 3 3 3 -3)) (1 (2 2 -4 -1.0 4 4 2 1)) (1 (3 2 2 -4 3 -4 -1.0)) (1 (-3 6 -2 4 -4)))) ((5 4) ((1 (-1 3 2 3 3 3 3 -4)) (1 (3 4 4 4 4 1)) (1 (4.0 6 -7 3)) (1 (4.0 -4 -1.0 3 2 2 2 2 2)) (1 (16 3 3)))) ((5 4) ((1 (-6 3 3 -6 2)) (1 (2.0 3 3 3 3 3 -2 4 1.0)) (1 (16 2.0 3 3 2)) (1 (4 3 3 -3 3 4 1)) (1 (3.0 4 4 4 3 3 2)))) ((5 4) ((1 (4 3 3 3 4 4 1)) (1 (3.0 4 4 -1 6 -3)) (1 (-1 2 2 3 3 3 3 -3 4)) (1 (8 3 3 3 3 3)) (1 (-8 7 -2 3)))) ((5 4) ((1 (7 3 -4 2 2 -2)) (1 (2 3 3 3 3 3 -4)) (1 (-4 3 3 -4 4 -2 1)) (1 (2.0 3 3 3 3 3 1 -3)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (167)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (167)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (167)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (167)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (286)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (286 286)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6132)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6132)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6132)) :ldur (quote (237)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (158)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (158)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (196)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (196)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (196)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (286 286)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (143 143)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (553 553)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (250)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (500 500)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (250 250)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (333 333)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (333 333)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (525 525)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (250 250)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (500 500)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (333 333)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (429)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (158)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (158)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (1200 1200)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (150 150)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (225 225)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (225 225)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (500 500)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (167)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (167)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (167 167)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (130)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (68)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (261 261)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (65)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (65)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (65 65)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (450 450)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (150)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (300 300)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (300 300)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (522)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6132)) :ldur (quote (261)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (261)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6132)) :ldur (quote (130)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (300)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6132)) :ldur (quote (300)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (429 429)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (429 429)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (143)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (71)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (71)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (71)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (71)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (571 571)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (522)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (130)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (522 522)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (130)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (130)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (65)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (286 286)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (286 286)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (286)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (71)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (525 525)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (75)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (136)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (136)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (136)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (136)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (136)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (553 553)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (158)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (158)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (500 500)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (500 500)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (225 225)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6132)) :ldur (quote (143)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6132)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6132)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (286 286)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6557)) :ldur (quote (214)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6557)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6557)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (158)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (158)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (286 286)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (214)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (71)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (158)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (158)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (237 237)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (130)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (196)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (300 300)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (300 300)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (300 300)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (300 300)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (300)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (75)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (237)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (158)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (158)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (237 237)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (474 474)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6557)) :ldur (quote (136)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6557)) :ldur (quote (205)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6557)) :ldur (quote (205)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (300)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (300)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (300)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (300)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (75)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (450 450)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (225 225)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6557)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6557)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6557)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (1091 1091)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6082)) :ldur (quote (188)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (188)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6082)) :ldur (quote (188)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (188)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6082)) :ldur (quote (188)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (250 250)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (923 923)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (173)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (173)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (115)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (286)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6307)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (71)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6307)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6307)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (130)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (273)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6357)) :ldur (quote (273)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (273)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6357)) :ldur (quote (68)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (286)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6357)) :ldur (quote (286)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (429 429)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (125)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6557)) :ldur (quote (125)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6557)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6557)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (250 250)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (522)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (525 525)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (225 225)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (525)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6282)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (286 286)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (11 11))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (71)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (71)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (11))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (-1 6 -3 3 3 3 3 1)) (1 (3.0 3 -7 3 -4)) (1 (-4 2 3 3 3 3 3 -3)) (1 (-4 2 2 -4 4 1.0 -2)) (1 (-4 7 -7 2)))) ((5 4) ((1 (4 -1 6 -7 2)) (1 (3 3 3 3 3 -7)) (1 (6 -3 3 3 -2 2 1)) (1 (16 4.0 2 2 2 2 2)) (1 (-8 3 -8)))) ((5 4) ((1 (3 3 -1 3 2 2 2 2 2 -3)) (1 (-4 3 3 3 3 3 3)) (1 (6 2 2 2 2 2 3 3 1)) (1 (2.0 3 3 3 6 4 1.0)) (1 (4 1.0 6 -6 3)))) ((5 4) ((1 (4.0 -7 3 3 3)) (1 (2.0 -1 6 -4 -1.0 3 3)) (1 (2 2 -3 4 1.0 -7 1)) (1 (4.0 1.0 -7 3 3 -2)) (1 (-4 -1.0 7 2 2 -2)))) ((5 4) ((1 (-2 7 -3 4 -4)) (1 (-2 6 3 3 -4 -1.0 2)) (1 (2 -4 4 1.0 -8 1)) (1 (4.0 1.0 6 -6 4)) (1 (3.0 -4 -1.0 4 1.0 -2 3 3)))) ((5 4) ((1 (-1 2 3 3 3 3 3 -2)) (1 (-3 4 1.0 -2 3 3 4 1.0)) (1 (3.0 -6 3 3 3 3 1)) (1 (3.0 3 -2 3 3 -6)) (1 (7 -1 4 -8 1)))) ((5 4) ((1 (6.0 -2 4 1.0 -1 4 1.0)) (1 (-4 4 1.0 3 3 3 2)) (1 (3 3 -4 3 -7)) (1 (4 -8 4 1.0 -1 1)) (1 (3.0 3 3 3 3 3 -3)))) ((5 4) ((1 (-3 3 3 -4 -1.0 3 -3)) (1 (-1 2 2 3 3 3 3 3 2 1)) (1 (2.0 2 2 2 -8 3 3)) (1 (8 1.0 3 -2 4 1.0 -2)) (1 (-1 3 3 -2 7 -4)))) ((5 4) ((1 (-2 2 2 -6 4 -3)) (1 (-4 -1.0 3 3 3 3 3 2)) (1 (7 -6)) (1 (-2 3 4 -6 3)) (1 (7 2 -6)))) ((5 4) ((1 (4 1.0 -6 4 4 -1)) (1 (2 2 2 2 2 2 -4 4)) (1 (2.0 -6 3 4 4 2)) (1 (2.0 4 4 -6 4 -1)) (1 (-3 4 1.0 -2 4 1.0 -4)))) ((5 4) ((1 (-4 2 2 -7 2 3 1)) (1 (2.0 2 2 2 -8 2 3 1)) (1 (3.0 3 3 3 -8 3)) (1 (3 3 3 3 3 -2 4)) (1 (8 2.0 -4 -1.0 3 3)))) ((5 4) ((1 (-7 6 -6)) (1 (3 4 4 4 4 3)) (1 (2.0 -6 4 3 3 -1 2)) (1 (4 4 -3 4 -4 -1.0)) (1 (4 -7 6 -3)))) ((5 4) ((1 (6 -7 3 3)) (1 (-6 4 -1 2 2 -3)) (1 (-3 7 -3 6)) (1 (-4 4 -6 4 1.0)) (1 (2.0 -6 3 3 3 3 2)))) ((5 4) ((1 (4 -2 2 2 -1 3 3 -3)) (1 (-1 2 2 -7 3 3 2)) (1 (4 3 3 -4 2 3 2)) (1 (3 3 3 -6 2 2 2 1)) (1 (3 2 -3 3 -4 3 1)))) ((5 4) ((1 (2.0 3 3 3 3 -4 4)) (1 (-6 3 3 -8)) (1 (-1)) (1 (-1)) (1 (-1)))) ((5 4) ((1 (-1)) (1 (-1)) (1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (391 391)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (65)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (225 225)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (125)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (158)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (158)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (525 525)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (300)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (450 450)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (450 450)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (75)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (800)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (100)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (100)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (100)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (100)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (100)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (237 237)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6132)) :ldur (quote (130)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (130)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6132)) :ldur (quote (130)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (130)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6132)) :ldur (quote (130)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (391)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6082)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (65)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6082)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6082)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (409 409)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (273 273)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (300 300)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (450 450)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (225 225)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (225 225)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (450 450)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (300 300)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (75 75)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (583 583)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (167)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (167)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (525 525)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (300 300)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (429 429)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (300 300)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (75 75)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (429 429)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (286 286)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (286 286)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (286 286)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (286 286)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (68)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (500 500)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (286 286)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (71 71)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (300 300)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (150)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (225 225)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (79)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (225 225)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (130)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6382)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (130)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (65)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (571)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (286 286)) :lvel (quote (86 86)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (525 525)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6582)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6582)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6582)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (808 808)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (250 250)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (333 333)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (250 250)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (700)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (200)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (300 300)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (300)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (300)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6107)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (300 300)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6132)) :ldur (quote (286)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (286)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6132)) :ldur (quote (143)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (286)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6132)) :ldur (quote (286)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (286 286)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (214)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (71)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6557)) :ldur (quote (205)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (68)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6557)) :ldur (quote (196)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6557)) :ldur (quote (196)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (214)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (214)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6182)) :ldur (quote (214)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (286 286)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (571 571)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (474 474)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6557)) :ldur (quote (273)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (273)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6557)) :ldur (quote (273)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (273)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6557)) :ldur (quote (205)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (286 286)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (300)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (300 300)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (300 300)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (300 300)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (450 450)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (474 474)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (237)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (237)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (333 333)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (167)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (167)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (553 553)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (474 474)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (316 316)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6482)) :ldur (quote (300)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6357)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6357)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6357)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6082)) :ldur (quote (136)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (136)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6082)) :ldur (quote (68)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (237)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6082)) :ldur (quote (158)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (237 237)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (237)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6082)) :ldur (quote (79)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6082)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6082)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332 6332)) :ldur (quote (273 273)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6332)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (-4 -1.0 3 3 -6 4)) (1 (-8 4 1.0 -4 -1.0 2)) (1 (3 3 3 3 3 -2 4 -1)) (1 (-4 -1.0 4 1.0 6 -2 2)) (1 (4 3 3 3 3 3 3 -3)))) ((5 4) ((1 (-1 7 -4 -1.0 4 3 1)) (1 (3.0 3 3 3 -6 2)) (1 (3 -2 4 -1 3 3 3 1)) (1 (2.0 3 3 -7 4 -1)) (1 (4 -3 2 3 3 3 3 2)))) ((5 4) ((1 (2.0 -7 3 4 4 2)) (1 (2.0 4 4 3 3 3 3 2)) (1 (4 -3 2 2 2 2 2 2 -1)) (1 (-6 4 3 3 3 3 1)) (1 (2.0 -4 4 -6 4)))) ((5 4) ((1 (8 2.0 -4 3)) (1 (3 -4 -1.0 6 -6)) (1 (4 1.0 -3 3 3 -3 3)) (1 (4 1.0 3 -8 4)) (1 (8 2.0 2 2 2 2 2)))) ((5 4) ((1 (-4 -1.0 3 3 -1 2 2 3)) (1 (8 2 -2 3 3 3 1)) (1 (4 3 -7 4 1.0 -2)) (1 (-4 6 -4 -1.0 3 3)) (1 (3 3 3 3 3 3 -3 3)))) ((5 4) ((1 (12 -4 6)) (1 (8 2.0 -2 3 3 -2)) (1 (4 4 4 4 4 3)) (1 (14 -2 6)) (1 (6 4 -8 2)))) ((5 4) ((1 (3.0 -4 3 3 2 2 2 2)) (1 (-8 6 -4 -1.0)) (1 (-3 4 -8 4 2)) (1 (4 1.0 3 3 3 -3 3 2)) (1 (16 2 -1 2 2 3)))) ((5 4) ((1 (3 -7 3 -4 2 1)) (1 (2.0 3 3 3 3 -7)) (1 (-1 6 -6 3 4 1)) (1 (3.0 4 4 4 -7)) (1 (3 3 -2 3 3 -1 4 1.0 3)))) ((5 4) ((1 (3 2 2 2 2 4 3 2)) (1 (2.0 3 3 3 3 -7)) (1 (3 3 3 3 3 3 -1 2)) (1 (3 3 3 -4 3 2 2 2 1)) (1 (3 -8 2 2 -3 2)))) ((5 4) ((1 (4.0 -7 4 4)) (1 (3.0 -7 4 1.0 3 2)) (1 (16 2.0 2 2 2 2 2)) (1 (-3 3 -8 2 3 2)) (1 (4 3 3 3 3 -4 1)))) ((5 4) ((1 (2.0 3 -3 3 3 3 3 2)) (1 (2.0 3 -4 6 -4)) (1 (-2 3 2 2 2 2 2 2 2 2)) (1 (-7 2 2 -4 -1.0 3)) (1 (3.0 -1 2 2 -3 2 2 -4)))) ((5 4) ((1 (4 -7 6 -1)) (1 (-4 4 3 3 3 3 1)) (1 (2.0 -6 3 3 -6 1)) (1 (2.0 2 -3 4 1.0 -7 2)) (1 (3 2 2 2 2 2 2 2 2 2 2)))) ((5 4) ((1 (6 -4 -1.0 3 3 3 2)) (1 (3 3 2 2 3 3 3 3 -1)) (1 (-3 7 -6 3 2)) (1 (2 2 2 2 -4 -1.0 4 1.0 -3)) (1 (-2 3 3 -2 2 4 4 2)))) ((5 4) ((1 (3.0 4 4 -6 2 2 1)) (1 (2.0 2 2 2 -4 -1.0 3 3 -2)) (1 (-4 7 -4 4 1.0)) (1 (8 2.0 2 2 2 -4)) (1 (-2 6 -8 3)))) ((5 4) ((1 (2.0 -8 3 3 3 3)) (1 (3 3 -4 7 -4)) (1 (-4 4 -4 3 3 2)) (1 (4 -8 4 -2 3)) (1 (2.0 -8 3 2 2 2 1)))) ((5 4) ((1 (2.0 2 -6 4 -3 3)) (1 (2.0 2 -12)) (1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (286 286)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (300 300)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6476)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6476)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6476)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (273 273)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (300 300)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (450 450)) :lvel (quote (86 86)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (240)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (180)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (180)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (180)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (180)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (180)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (180)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (500 500)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (286)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6576)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (71)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6576)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6576)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (150)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (225)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (300 300)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (75)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (300 300)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (261 261)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (130)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6076)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6076)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6076)) :ldur (quote (130)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6351)) :ldur (quote (273)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (273)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6351)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (250)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6351)) :ldur (quote (250)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6076)) :ldur (quote (188)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (188)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6076)) :ldur (quote (188)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (125)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6076)) :ldur (quote (300)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6101)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6101)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6101)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (261)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6476)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6476)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6476)) :ldur (quote (65)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (300)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (300 300)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (706 706)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (265)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (225)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (450 450)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (300 300)) :lvel (quote (86 86)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (225 225)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (300)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (225)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (300 300)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (600)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6126)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6126)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6126)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (237)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (237)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (158)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (158)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (237 237)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (545)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (136)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6576)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6576)) :ldur (quote (68)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6576)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (286 286)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (429 429)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (188)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6576)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6576)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6576)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (188 188)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (818 818)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (409 409)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (600 600)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (261)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6526)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6526)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6526)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (955 955)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (409 409)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (450 450)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (300 300)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (150 150)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6126)) :ldur (quote (214)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6126)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6126)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (474 474)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (286 286)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (286)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6351)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (273)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6351)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6351)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (205)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (136)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (923)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (115)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (115)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (115)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (173)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (225)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (225 225)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6351)) :ldur (quote (75)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6351)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6351)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (429 429)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6551)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (71)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6551)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6551)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (196)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (196)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (196)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (261 261)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6376)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6376)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6376)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (300)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6301)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6301)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6301)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6376)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6376)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6376)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (196)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (196)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6526)) :ldur (quote (130)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (130)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6526)) :ldur (quote (130)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (65)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6526)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (150)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (150)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (150 150)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (316 316)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (316 316)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (300 300)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (150)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (857)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6301)) :ldur (quote (107)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (107)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6301)) :ldur (quote (107)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (107)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6301)) :ldur (quote (107)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (214 214)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6076)) :ldur (quote (214)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6076)) :ldur (quote (286)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6076)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (71)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6276)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6276)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6276)) :ldur (quote (237)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (474 474)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (214 214)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6076)) :ldur (quote (143)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (143)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6076)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6076)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6076)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (158)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (158)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (237 237)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (158)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (158)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (158)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (158)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (333 333)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (500 500)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (286)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6476)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6476)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6476)) :ldur (quote (71)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (71)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (286 286)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6301)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6301)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6301)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (130)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6351)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6351)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6351)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (409 409)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6301)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6301)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6301)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (130)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (130)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (196)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (500 500)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6476)) :ldur (quote (143)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6476)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6476)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (286 286)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (205)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (205)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6301)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6301)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6301)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (136)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6551)) :ldur (quote (136)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (68)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6551)) :ldur (quote (143)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (143)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6551)) :ldur (quote (143)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (525 525)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (300 300)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (600)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (474 474)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (237 237)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (205)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6101)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6101)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6101)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (500 500)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (300 300)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (150)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (286)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (286 286)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (214 214)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6301)) :ldur (quote (150)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (150)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6301)) :ldur (quote (150)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (75)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6301)) :ldur (quote (150)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (300 300)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326 6326)) :ldur (quote (225 225)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6326)) :ldur (quote (188)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (4 -6 6 -2)) (1 (-2 6 -6 4 1.0)) (1 (6 -6 4 4 1)) (1 (3.0 4 4 4 -7 1)) (1 (4.0 -8 3 2 2 2)))) ((5 4) ((1 (3 2 2 2 -7 2 1)) (1 (2.0 -4 -1.0 2 3 2 2 2 2 -1)) (1 (3 3 3 3 3 3 -2)) (1 (-3 3 3 -6 4 1.0)) (1 (-1 7 -4 -1.0 4 -2)))) ((5 4) ((1 (-6 7 -4 -1.0 2)) (1 (4.0 -1 3 3 -4 3 -2)) (1 (3 -3 6 -4 2)) (1 (4.0 -4 -1.0 2 2 2 2 2 2)) (1 (3 -7 2 3 3 3 1)))) ((5 4) ((1 (2.0 3 -1 3 -8 4)) (1 (-4 -1.0 3 3 4 -2 3)) (1 (4.0 -4 2 3 3 3 3 2)) (1 (8 1.0 3 3 3 3 1)) (1 (2.0 -6 6 -4 -1.0)))) ((5 4) ((1 (4 -4 -1.0 3 -6)) (1 (-2 4 4 1.0 -7 2)) (1 (2 -7 3 3 3 3)) (1 (3 3 -4 7 -3)) (1 (-2 6 -4 6 -2)))) ((5 4) ((1 (-1 4 1.0 -6 3 3 -2)) (1 (-2 3 4 4 4 4 3)) (1 (8 -4 -1.0)) (1 (4 1.0 -1 4 -3 2 2 2 2 1)) (1 (3 2 2 -2 7 -6)))) ((5 4) ((1 (-1 2 2 2 2 2 2 -3 3)) (1 (8 2.0 3 2 2 2 2 -1)) (1 (-7 3 2 2 2 2 2)) (1 (8 2.0 2 4 1.0 -3)) (1 (-3 6 -3 6 -1)))) ((5 4) ((1 (-4 3 3 -4 -1.0 4 1.0)) (1 (-3 7 7 -2)) (1 (2 3 3 3 3 3 -4)) (1 (-4 3 3 -4 -1.0 2 2 -1)) (1 (-4 2 3 3 3 3 3)))) ((5 4) ((1 (-4 -1.0 3 3 3 3 4)) (1 (-3 7 -3 4 1.0 -1)) (1 (-4 6 -4 4 -1)) (1 (-6 4 3 3 3 2)) (1 (4 -7 6 -3)))) ((5 4) ((1 (-3 3 3 -1 3 3 -4 1)) (1 (3.0 3 3 3 3 3 -3 1)) (1 (4.0 -3 4 -6 4)) (1 (4 1.0 -7)) (1 (6 -7 3 3 -1)))) ((5 4) ((1 (-6 6 -4 2 1)) (1 (2.0 3 3 -4 -1.0 2 3 3 2)) (1 (4 3 2 2 -6 3)) (1 (-1 3 3 3 3 3 3 3 1)) (1 (2.0 -2 4 1.0 -7 3)))) ((5 4) ((1 (2.0 7 -3 3 3 -3)) (1 (2 2 7 -2 6)) (1 (4 -3 2 2 -3 3 2)) (1 (6 4 3 3 3 3 1)) (1 (2.0 -6 3 -4 -1.0 2 2)))) ((5 4) ((1 (4 1.0 2 2 -4 -1.0 3 3)) (1 (4 3 3 3 -1 4 3 1)) (1 (3.0 3 3 3 3 2 3 3 1)) (1 (3.0 3 -2 6 3 3 -1)) (1 (-3 4 3 3 3 3 2)))) ((5 4) ((1 (2.0 -8 3 3 -4)) (1 (-3 3 3 3 2 2 2 2 2)) (1 (4 2 2 2 2 2 -6)) (1 (-1 4 1.0 -8 6)) (1 (4 1.0 3 -7 1)))) ((5 4) ((1 (4.0 -8 6 -1)) (1 (-4 -1.0 3 3 -1 3 4 4 1)) (1 (4.0 4 4 -2 3 -4)) (1 (-1)) (1 (-1)))) ((5 4) ((1 (-1)) (1 (-1)) (1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (333 333)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (500 500)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (474 474)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (316 316)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (429 429)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6018)) :ldur (quote (286)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (71)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6018)) :ldur (quote (261)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (261)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6018)) :ldur (quote (261)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (65 65)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (214)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5668)) :ldur (quote (143)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5668)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (237)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5668)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (158)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (158)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (158)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (79)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5968)) :ldur (quote (214)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5968)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5968)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5668)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5668)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5668)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (300 300)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (553 553)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (316 316)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (525 525)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (150 150)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (225)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (225)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (225 225)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (250 250)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (500 500)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (167 167)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6068)) :ldur (quote (143)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (143)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6068)) :ldur (quote (143)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (143)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6068)) :ldur (quote (143)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5843)) :ldur (quote (205)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (205)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5843)) :ldur (quote (205)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (68)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5843)) :ldur (quote (214)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (214 214)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (286 286)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (300 300)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (225 225)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (125)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5768)) :ldur (quote (188)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (188)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5768)) :ldur (quote (188)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (188)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5768)) :ldur (quote (125)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (545)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6043)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6043)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6043)) :ldur (quote (68)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (474 474)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (333 333)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (250 250)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (300 300)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (300 300)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (150)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (143)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5668)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5668)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5668)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (525 525)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (450 450)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (450 450)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (300 300)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (225)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (225)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (188)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5868)) :ldur (quote (250)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (250)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5868)) :ldur (quote (250)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (250)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5868)) :ldur (quote (188)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (923 923)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (273 273)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (273 273)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6018)) :ldur (quote (136)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (136)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6018)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (68)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6018)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6018)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (477 477)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (158)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5568)) :ldur (quote (158)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (158)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5568)) :ldur (quote (158)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (158)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5568)) :ldur (quote (158)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (237 237)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (545)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5793)) :ldur (quote (205)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (136)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5793)) :ldur (quote (136)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (136)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5793)) :ldur (quote (136)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (225)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5593)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5593)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5593)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (600)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (150)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (300 300)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (474 474)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (474 474)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (225)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (225)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (300 300)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (553 553)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (553 553)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5768)) :ldur (quote (214)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5768)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5768)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (225)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (225)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (150)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (150)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5593)) :ldur (quote (214)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5593)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5593)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (214)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (214)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (214)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (214)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (286 286)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (553 553)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (316 316)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (474 474)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (316 316)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (286)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5843)) :ldur (quote (214)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (214)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5843)) :ldur (quote (214)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (143)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5843)) :ldur (quote (300)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (450 450)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (214)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (214)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (214 214)) :lvel (quote (79 79)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (214 214)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (71)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5868)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5868)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5868)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (68 68)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (286 286)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (286 286)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (500 500)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (450 450)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (225)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (225)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (474 474)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (158)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (79)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6068)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6068)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (300)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6068)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (150)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (150)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (225)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (196)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (196)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (196)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (65)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (316 316)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (237 237)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (500 500)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (158)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (158)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (553 553)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (474 474)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (316 316)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (158)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (158)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (237)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (158)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (391 391)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (261)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5843)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5843)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5843)) :ldur (quote (65)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (225 225)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (150)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (150)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (300 300)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (150)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (150)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (225)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5618)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (273)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5618)) :ldur (quote (205)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (205)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5618)) :ldur (quote (205)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (273)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6043)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (68)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6043)) :ldur (quote (188)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (188)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6043)) :ldur (quote (188)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (188)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6043)) :ldur (quote (125)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (188)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6043)) :ldur (quote (188)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (62)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6043)) :ldur (quote (214)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (429 429)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (214)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (214)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (286)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5768)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5768)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5768)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (225)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (225)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5768)) :ldur (quote (136)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (136)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5768)) :ldur (quote (136)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (136)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5768)) :ldur (quote (136)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (300)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (150)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (150)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (150)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (150)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (150)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (300 300)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (450 450)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (375)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (281)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (94 94)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (474 474)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (188)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (188)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5618)) :ldur (quote (250)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (250)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5618)) :ldur (quote (62)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818)) :ldur (quote (286)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5618)) :ldur (quote (286)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (20))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5818 5818)) :ldur (quote (214 214)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (20 20))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (-2 4 -6 3 3 3)) (1 (4 3 3 -1 3 2 2 2 2)) (1 (3 -4 1 3 3 3 3 3)) (1 (-6 6 3 3 -1)) (1 (2 3 3 3 3 3 -3 2)))) ((5 4) ((1 (4.0 1.0 -4 -1.0 4 -6 1)) (1 (2.0 3 -6 6 -1 2)) (1 (3.0 -7 4 -4 -1.0)) (1 (-3 3 -6 4 -3)) (1 (-2 6 -8 4)))) ((5 4) ((1 (3.0 -6 2 3 3 3 3 1)) (1 (3.0 2 2 3 3 3 3 2)) (1 (4.0 1.0 -1 4 -4 2 2 -1)) (1 (-3 3 3 -7 2 2 1)) (1 (3 2 2 2 2 -4 3 4)))) ((5 4) ((1 (4 1.0 4 4 4 -2 2)) (1 (3 -4 -1.0 3 -4 -1.0 3)) (1 (8 -4 2 2 -3)) (1 (-4 4 -4 6)) (1 (3 3 -2 2 2 -6 3)))) ((5 4) ((1 (4 3 3 3 3 -3)) (1 (-1 4 -4 -1.0 4 -3 2)) (1 (4.0 1.0 -2 2 2 -6 3)) (1 (7 -2 2 2 2 2 2 2 -1)) (1 (-3 3 3 2 2 2 2 -3 3)))) ((5 4) ((1 (2.0 -3 2 2 -7 3)) (1 (4.0 -4 -1.0 2 2 -6 1)) (1 (2.0 3 -1 6 -4 -1.0 3 2)) (1 (6 3 -8 -1.0 2 2)) (1 (2 2 2 2 -4 -1.0 7)))) ((5 4) ((1 (-4 6 -7 2)) (1 (4.0 4 1.0 -1 4 -4 2)) (1 (4.0 -4 -1.0 6 -4 -1.0)) (1 (3 3 -6 2 2 2 2 2)) (1 (3 3 3 -3 4 1.0 -1 3 1)))) ((5 4) ((1 (3.0 -3 3 3 -4 -1.0 3 2)) (1 (3 3 3 3 -3 4 -1)) (1 (-6 2 4 4 4)) (1 (4 4 -3 4 1.0 -1 2)) (1 (3 -4 -1.0 4 3 3 3 2)))) ((5 4) ((1 (2.0 3 -7 2 2 -4 -1.0)) (1 (4 -7 3 2 3 3 1)) (1 (2.0 3 -8 3 3 -2 1)) (1 (2.0 3 3 3 3 3 -6)) (1 (3 2 2 2 2 2 -6)))) ((5 4) ((1 (3 3 -8 4 3 1)) (1 (2.0 3 3 3 -2 3 3 -3 2)) (1 (4.0 1.0 -8 -1.0 6)) (1 (-8 3 3 -3 3)) (1 (2.0 -8 3 2 2 2 2 1)))) ((5 4) ((1 (2.0 -8 4 3 -3)) (1 (-3 4 -8 4 1.0)) (1 (-7 4 1.0 3 3 -1 1)) (1 (6.0 3 4 3 3 3 1)) (1 (4 -7 3 2 2 3 1)))) ((5 4) ((1 (2.0 3 3 -8 3 -1)) (1 (-7 3 2 2 2 2 2 -2)) (1 (3 -7 3 3 -3)) (1 (-4 4 1.0 -8 3)) (1 (3.0 -4 3 3 -4 3 1)))) ((5 4) ((1 (2.0 2 2 2 2 -1 3 3 -4)) (1 (-2 7 -2 4 -3)) (1 (-3 3 3 -6 6)) (1 (7 -2 3 -4)) (1 (-1 4 -6 3 -2 4)))) ((5 4) ((1 (8 1.0 4 4 4 1)) (1 (3.0 4 -7 3 2 1 1)) (1 (2 1 -2 3 3 -4 4 -2)) (1 (-1 6 -7 3 3)) (1 (2 2 2 2 -2 2 2 -3 4 2)))) ((5 4) ((1 (4 3 3 3 3 -3)) (1 (-1 3 4 4 4 4 4)) (1 (-1 2 2 -8 -1.0 3 -1)) (1 (-1)) (1 (-1)))) ((5 4) ((1 (-1)) (1 (-1)) (1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (286 286)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (214)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (273)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (205)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5591)) :ldur (quote (136)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5591)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5591)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (65)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5591)) :ldur (quote (196)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5591)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5591)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (474 474)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (237)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (237)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6066)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6066)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6066)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (136 136)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (286 286)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (71)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (225)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (450 450)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (150 150)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (316 316)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (237 237)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (316 316)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (450 450)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (300 300)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (125)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5766)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5766)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5766)) :ldur (quote (62)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (143)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5591)) :ldur (quote (143)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5591)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5591)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (143 143)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (316 316)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (158)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (158)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6066)) :ldur (quote (143)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (71)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6066)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6066)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6066)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5966)) :ldur (quote (273)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (286)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5966)) :ldur (quote (286)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (286)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5966)) :ldur (quote (286)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (143)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (237)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (237 237)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (237 237)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (632 632)) :lvel (quote (47 47)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (158)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (158)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (333 333)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (500 500)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (143)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (143)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6016)) :ldur (quote (316)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (237)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6016)) :ldur (quote (237)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (237)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6016)) :ldur (quote (237)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (316 316)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (316 316)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (158 158)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (225 225)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (477 477)) :lvel (quote (54 54)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5866)) :ldur (quote (136)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5866)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5866)) :ldur (quote (136)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (196)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (196 196)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (158)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (158)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (237 237)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (75)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (409 409)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (409)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5866)) :ldur (quote (136)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5866)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5866)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (525 525)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (474 474)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (158 158)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (300 300)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (300 300)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (150 150)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (450 450)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5841)) :ldur (quote (136)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5841)) :ldur (quote (136)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5841)) :ldur (quote (205)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (273 273)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (68)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (136)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (300 300)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5566)) :ldur (quote (300)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (300)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5566)) :ldur (quote (300)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (316)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5566)) :ldur (quote (316)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (316 316)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (158)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (196)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (261)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5841)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5841)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5841)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (261 261)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6016)) :ldur (quote (130)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6016)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (65)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6016)) :ldur (quote (205)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (68)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6016)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6016)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6016)) :ldur (quote (196)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (237)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6066)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6066)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6066)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (273)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5766)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (68)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5766)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5766)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (188)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (188)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (125 125)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (450 450)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (225)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (225)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (225 225)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5866)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5866)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5866)) :ldur (quote (68)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (300 300)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (225 225)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (300 300)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (300 300)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (300 300)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (225)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (225)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (75 75)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (196 196)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6016)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6016)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (65)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6016)) :ldur (quote (273)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6016)) :ldur (quote (136)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6016)) :ldur (quote (68)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6016)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (225 225)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5591)) :ldur (quote (136)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5591)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5591)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (237 237)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (237)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (237)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (300 300)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (225 225)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5616)) :ldur (quote (71)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5616)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5616)) :ldur (quote (143)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (583 583)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (333 333)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (429 429)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (656 656)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (281 281)) :lvel (quote (57 57)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (300 300)) :lvel (quote (56 56)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (225 225)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (300 300)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (545)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6066)) :ldur (quote (273)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (273)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6066)) :ldur (quote (273)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (68)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6066)) :ldur (quote (286)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (143)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (71)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (71)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (71)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (286 286)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (450 450)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5766)) :ldur (quote (225)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (130)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5766)) :ldur (quote (130)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (130)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5766)) :ldur (quote (130)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (261)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5866)) :ldur (quote (130)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (316)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5866)) :ldur (quote (237)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (237)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5866)) :ldur (quote (237)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (237)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (188)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5841)) :ldur (quote (250)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (250)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5841)) :ldur (quote (250)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (250)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5841)) :ldur (quote (250)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (167)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (167)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (250 250)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (-4 6 -2 4 -3)) (1 (3 2 2 2 2 2 4 1.0 2)) (1 (3 -8 6 -3)) (1 (4 1.0 -7 4 3)) (1 (-2 2 2 2 2 2 2 2 2 -1)))) ((5 4) ((1 (-3 6 -6 4)) (1 (16 4.0 3 3 3 1)) (1 (3.0 3 4 1.0 -1 3 2 2 2 1)) (1 (2.0 2 -7 7 -2)) (1 (-6 4 1.0 -8 1)))) ((5 4) ((1 (2.0 3 -3 3 3 -7)) (1 (6 -7 3 3 1)) (1 (2.0 3 3 3 -3 4 3 1)) (1 (3.0 3 3 3 -6 3 1)) (1 (3.0 4 4 4 4 -2 3)))) ((5 4) ((1 (6 4 4 4 4 1)) (1 (3.0 -8 2 2 -3 1)) (1 (3 2 2 2 2 -4 -1.0 4 1.0)) (1 (-4 4 -3 7 -1)) (1 (-2 7 3 3 -6)))) ((5 4) ((1 (-2 2 3 3 3 3 3 -2 2)) (1 (4.0 -4 -1.0 6 -4 -1.0)) (1 (-2 7 -1 4 1.0 4 1)) (1 (3.0 4 4 4 4 -3)) (1 (4 1.0 -6 3 3 3 1)))) ((5 4) ((1 (2.0 3 3 -1 4 1.0 -3 3 1)) (1 (4.0 1.0 -2 7 -1 4 1.0)) (1 (2.0 -4 2 2 2 2 2 2 -4)) (1 (-1 6 -6 6)) (1 (12 -3 2 2)))) ((5 4) ((1 (-2 7 -8 3 1)) (1 (3.0 -3 4 -2 6 2)) (1 (3 2 2 2 2 -2 3 -4 -1.0)) (1 (4 -4 2 2 6)) (1 (-6 6 -4 -1.0 3 1)))) ((5 4) ((1 (4.0 4 4 4 4 -1 1)) (1 (2.0 3 -6 6 -2 2)) (1 (2.0 3 3 3 3 3 -4 3)) (1 (2.0 -4 4 1.0 -3 4 3 1)) (1 (4 3 3 6 -4 3)))) ((5 4) ((1 (4.0 -1 6 4 3)) (1 (3 3 3 3 3 -2 6)) (1 (7 -6 3)) (1 (3.0 -4 -1.0 2 2 -2 2 3 1)) (1 (3.0 3 3 3 -1 3 3 -3)))) ((5 4) ((1 (-4 -1.0 3 3 -6 3 2)) (1 (16 4 1.0 3)) (1 (3.0 -4 3 3 3 3 3 2)) (1 (4 1.0 2 -7 2 2 3 1)) (1 (2.0 3 3 -4 -1.0 7)))) ((5 4) ((1 (-2 6 4 1.0 -4 -1.0 1)) (1 (2.0 3 -4 -1.0 3 -3 3 2)) (1 (8 2.0 -4 2)) (1 (4 3 3 3 3 -6)) (1 (3 3 3 3 3 3 -3)))) ((5 4) ((1 (-4 3 -8 4 1.0)) (1 (8 2.0 -3 2 2 2 2 1)) (1 (2.0 2 -3 4 1.0 3 3 -3)) (1 (-1 4 2 2 2 2 2 -4 -1.0)) (1 (3 3 -4 3 3 -1 3 -1)))) ((5 4) ((1 (-6 3 3 -6 3 1)) (1 (2.0 -4 3 4 4 4)) (1 (4 1.0 4 -6 4 1.0)) (1 (2.0 7 3 -4 -1.0 2 1)) (1 (16 4.0 2 2 2 2 2)))) ((5 4) ((1 (4 -7)) (1 (4 1.0 -4 2 2 -2 2 2)) (1 (-4 -1.0 3 -3 4 -4)) (1 (-2 6 4 3 3 3 1)) (1 (3.0 3 -8 3 3 -2)))) ((5 4) ((1 (-3 3 -6 4 2 2 2)) (1 (2 2 -6 4 4 4 1)) (1 (3.0 4 4 -4 -1.0 4)) (1 (2 2 -1 4 -6 1 -2)) (1 (-1)))) ((5 4) ((1 (-1)) (1 (-1)) (1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (474 474)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (316 316)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5591)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5591)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5591)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (300 300)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (150)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (225)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (450 450)) :lvel (quote (86 86)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (316 316)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (316 316)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (237)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5841)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5841)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5841)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (158)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (158)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (474 474)) :lvel (quote (77 77)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (316 316)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (800)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (150)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (150)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (150)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (50)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (205)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (273 273)) :lvel (quote (62 62)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6041)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6041)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (68)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6041)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (525 525)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (300 300)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (75)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (450 450)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6041)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (75)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6041)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6041)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (273)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5766)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (68)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5766)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5766)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (68)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (250)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (250)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (250)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (250)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (188 188)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (391)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5766)) :ldur (quote (261)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (261)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5766)) :ldur (quote (261)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (261)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5766)) :ldur (quote (65)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (158)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (158)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (79)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5966)) :ldur (quote (214)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5966)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5966)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (286 286)) :lvel (quote (84 84)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (316 316)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (553 553)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (500 500)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5666)) :ldur (quote (196)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5666)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5666)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (130 130)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (450 450)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (525 525)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (300 300)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (300)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5566)) :ldur (quote (75)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (273)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5566)) :ldur (quote (273)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (273)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5566)) :ldur (quote (273)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (286 286)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5566)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5566)) :ldur (quote (71)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5566)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (286 286)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (214 214)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (71 71)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (525 525)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (300 300)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6041)) :ldur (quote (136)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6041)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6041)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (474 474)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (474 474)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (947 947)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (158)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (158)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (500 500)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (71)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (300 300)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (450 450)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6041)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (143)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6041)) :ldur (quote (143)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (143)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6041)) :ldur (quote (143)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (214 214)) :lvel (quote (50 50)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (333 333)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (167)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (167)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (500 500)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (429 429)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5766)) :ldur (quote (71)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (273)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5766)) :ldur (quote (273)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (273)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5766)) :ldur (quote (273)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (68)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (429 429)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (143)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5866)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5866)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5866)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (188 188)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (273 273)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5616)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (68)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5616)) :ldur (quote (261)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5616)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (391 391)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (196 196)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (500 500)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (333 333)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (250)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6016)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6016)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6016)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (391 391)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (656 656)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (281 281)) :lvel (quote (69 69)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (150)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (150)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (225)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (75)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (1000 1000)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (250 250)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (188 188)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (188)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5666)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5666)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5666)) :ldur (quote (125)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (273)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5841)) :ldur (quote (136)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5841)) :ldur (quote (68)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5841)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (525 525)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (474 474)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (316 316)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (79)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (214 214)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (143)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (750 750)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (188)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (205)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (225 225)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (300 300)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (545 545)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6041)) :ldur (quote (136)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6041)) :ldur (quote (136)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (68)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6041)) :ldur (quote (143)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (286 286)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (300)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5591)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5591)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5591)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (214 214)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (68)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5841)) :ldur (quote (286)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (286)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5841)) :ldur (quote (286)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (300)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5841)) :ldur (quote (300)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (300 300)) :lvel (quote (76 76)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (525 525)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (225 225)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (75)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (800)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6041)) :ldur (quote (100)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (100)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6041)) :ldur (quote (100)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (100)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6041)) :ldur (quote (100)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (545 545)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (316 316)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (158)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (158)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (158)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (158)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (237 237)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (316 316)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (409 409)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5966)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5966)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (68)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5966)) :ldur (quote (205)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (205 205)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (273)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (136)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (130)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (130)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (261)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (261)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (261)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (65)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (300)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5791)) :ldur (quote (300)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (300 300)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (167)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (167)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816 5816)) :ldur (quote (333 333)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (14 14))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5816)) :ldur (quote (83)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (20 (((5 4) ((1 (2 2 -7 2 2 2 2)) (1 (8 2.0 -1 2 2 -4)) (1 (-2 2 3 3 3 3 3 -3 1)) (1 (3.0 -4 -1.0 4 1.0 -6)) (1 (3 3 3 3 3 3 4 1.0)))) ((5 4) ((1 (2.0 -6 3 3 2 2 2 2)) (1 (-8 4 -7)) (1 (6 -1 7 -4)) (1 (-2 3 3 4 1.0 -6)) (1 (4 -6 3 3 -4 1)))) ((5 4) ((1 (2.0 2 -6 3 3 -4 -1.0)) (1 (-2 4 -6 3 2 2 2 2 1)) (1 (6 3 3 3 3 3 -2 2)) (1 (3 2 2 2 2 -4 3 2)) (1 (3 3 3 3 -4 4 2)))) ((5 4) ((1 (7 -3 6 2 2)) (1 (6 3 -8 3 1)) (1 (2.0 -1 4 3 3 3 3 3 -3)) (1 (3 3 -4 -1.0 6 -3)) (1 (-4 -1.0 4 1.0 -1 2 2 -1 4)))) ((5 4) ((1 (6 -7)) (1 (2 2 -1 2 2 -8 1)) (1 (3.0 -3 4 -7 3)) (1 (14 2 -2 4)) (1 (2.0 -4 2 2 2 2 2 2 -1)))) ((5 4) ((1 (-6 2 2 2 2 2 2 -3)) (1 (-4 7 -8 1)) (1 (2.0 3 -4 -1.0 3 4 4 1)) (1 (4.0 4 4 -8 1)) (1 (2.0 3 3 3 3 3 -3)))) ((5 4) ((1 (-3 2 2 -3 6 -3)) (1 (-4 3 -2 4 -2 4 1.0)) (1 (-4 6 -4 2 2)) (1 (-3 4 1.0 -1 1 2 2 2 2 2)) (1 (7 -6 2)))) ((5 4) ((1 (4.0 -4 3 4 4 4 1)) (1 (3.0 4 -4 3 3 -4 -1.0 1)) (1 (4.0 -3 6 -2 2 2)) (1 (4 3 3 3 -4 -1.0 2 1)) (1 (2.0 3 3 3 3 -4 2 2 -1)))) ((5 4) ((1 (-4 -1.0 3 3 3 3 2 2 1)) (1 (3 -4 -1.0 6 6)) (1 (8 3 -2 4 -3 2)) (1 (3 -8 2 2 -4)) (1 (2 2 -7 4 -4)))) ((5 4) ((1 (4 -1 3 3 -7 2)) (1 (4.0 1.0 -2 4 2 2 -4 1)) (1 (4 -4 -1.0 6 -4 1)) (1 (4.0 1.0 -7 6 -1)) (1 (4 1.0 -4 4 1.0 -3 2 1)))) ((5 4) ((1 (4 2 2 2 -7 4 2)) (1 (3.0 4 4 4 4 -2 4)) (1 (2.0 -1 6 -3 4 1.0 -2)) (1 (-6 4 1.0 -4 -1.0 3 2)) (1 (4 1.0 3 3 3 3 3 -2 1)))) ((5 4) ((1 (2.0 3 2 2 2 2 3 -4 1)) (1 (6.0 4 -3 3 3 2)) (1 (2.0 3 3 3 4 1.0 -4)) (1 (2 2 2 3 3 3 3 3 -3)) (1 (-3 3 3 3 3 3 3 2)))) ((5 4) ((1 (3 -4 -1.0 3 3 -2 4 1.0)) (1 (8 1.0 -4 6 -1)) (1 (-1 3 3 2 2 2 2 -3 3)) (1 (4.0 -8 6 -2)) (1 (-1 3 3 7 2 2 2 1)))) ((5 4) ((1 (2.0 2 2 -2 3 2 2 2 2 2)) (1 (-4 -1.0 4 -4 -1.0 4 3)) (1 (4 3 3 3 4 -1 3)) (1 (3.0 3 3 3 3 3 3)) (1 (-8 2 2 -7)))) ((5 4) ((1 (3 2 2 2 2 2 -1 2 2 -2)) (1 (-1 6 3 2 2 2 2 2)) (1 (2 4 1.0 -6 6)) (1 (-6 3 3 1 -7)) (1 (-1)))) ((5 4) ((1 (-1)) (1 (-1)) (1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (158)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (158)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (158)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (158)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (158)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (158)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (632 632)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (158)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (158)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (130)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5964)) :ldur (quote (196)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5964)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5964)) :ldur (quote (196)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (65)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (316 316)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5614)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5614)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5614)) :ldur (quote (196)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (261 261)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5589)) :ldur (quote (205)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (136)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5589)) :ldur (quote (136)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (136)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5589)) :ldur (quote (136)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (316 316)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (500 500)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (583 583)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (237)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (237)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (316 316)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (286 286)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (214)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (214)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (71)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (143)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (214)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (250 250)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (188)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5764)) :ldur (quote (125)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (125)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5764)) :ldur (quote (125)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (125)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5764)) :ldur (quote (62)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (360)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5589)) :ldur (quote (180)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (180)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5589)) :ldur (quote (180)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (180)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5589)) :ldur (quote (180)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (120)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6039)) :ldur (quote (150)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6039)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6039)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (273 273)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (136 136)) :lvel (quote (78 78)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (525 525)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (450 450)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (150)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (150)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (429)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (71)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (240)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6039)) :ldur (quote (180)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (180)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6039)) :ldur (quote (180)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (180)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6039)) :ldur (quote (180)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (225)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (225)) :lvel (quote (72)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (450 450)) :lvel (quote (86 86)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (300 300)) :lvel (quote (67 67)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (150)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (150)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (300 300)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (692 692)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (167)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (167)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (167)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (167)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (83 83)) :lvel (quote (61 61)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (300 300)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (225 225)) :lvel (quote (48 48)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (955)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (136)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (273 273)) :lvel (quote (89 89)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (158)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5789)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5789)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5789)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (143)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6039)) :ldur (quote (143)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6039)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6039)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (525 525)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (75)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (205)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (205)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6064)) :ldur (quote (273)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (273)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6064)) :ldur (quote (68)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (286)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6064)) :ldur (quote (286)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (71)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5964)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5964)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5964)) :ldur (quote (225)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (158)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (158)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (474 474)) :lvel (quote (74 74)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (225 225)) :lvel (quote (86 86)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (300 300)) :lvel (quote (75 75)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (300 300)) :lvel (quote (73 73)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (500 500)) :lvel (quote (80 80)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (167)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (167)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (300 300)) :lvel (quote (64 64)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (75)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5764)) :ldur (quote (150)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5764)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5764)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (700 700)) :lvel (quote (55 55)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (200 200)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (188)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5564)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5564)) :ldur (quote (250)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (62)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5564)) :ldur (quote (261)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (196)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (196)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (65 65)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (474 474)) :lvel (quote (63 63)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (158)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5964)) :ldur (quote (158)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (286)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5964)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5964)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5664)) :ldur (quote (71)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5664)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5664)) :ldur (quote (196)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (130)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (130)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (205)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (205)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (205)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (205)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (136)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (68)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (225)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (450 450)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (450 450)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (545)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (205)) :lvel (quote (71)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (273 273)) :lvel (quote (88 88)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (136)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (237)) :lvel (quote (75)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (158)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (158)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (158)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (158)) :lvel (quote (74)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (316 316)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (300 300)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (225)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (150 150)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (300 300)) :lvel (quote (87 87)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (150)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (150)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (75)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (300)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (450 450)) :lvel (quote (71 71)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (75 75)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (474 474)) :lvel (quote (72 72)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (300 300)) :lvel (quote (85 85)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (300 300)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (150)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5664)) :ldur (quote (75)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (261)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5664)) :ldur (quote (130)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (130)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5664)) :ldur (quote (130)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (261)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6064)) :ldur (quote (130)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (240)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6064)) :ldur (quote (240)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (240)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6064)) :ldur (quote (240)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (240 240)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (474 474)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (316 316)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (286 286)) :lvel (quote (49 49)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (143)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (261)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5564)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5564)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5564)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (65)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (214)) :lvel (quote (73)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (143)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (143)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (143)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (143)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (214 214)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (71 71)) :lvel (quote (83 83)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (286 286)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5789)) :ldur (quote (214)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (143)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5789)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5789)) :ldur (quote (225)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (300 300)) :lvel (quote (81 81)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (125)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6039)) :ldur (quote (125)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (125)) :lvel (quote (68)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6039)) :ldur (quote (188)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (188)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6039)) :ldur (quote (188)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (188)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6039)) :ldur (quote (188)) :lvel (quote (63)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (196)) :lvel (quote (59)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5764)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5764)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5764)) :ldur (quote (196)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (130)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (214)) :lvel (quote (62)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (286 286)) :lvel (quote (82 82)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (600 600)) :lvel (quote (66 66)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (450 450)) :lvel (quote (52 52)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (214)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6064)) :ldur (quote (214)) :lvel (quote (69)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6064)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6064)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (214 214)) :lvel (quote (51 51)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (450 450)) :lvel (quote (46 46)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (214)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (214)) :lvel (quote (67)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (500 500)) :lvel (quote (60 60)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (143)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5614)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5614)) :ldur (quote (71)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5614)) :ldur (quote (143)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (214)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5764)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5764)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5764)) :ldur (quote (143)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (286 286)) :lvel (quote (90 90)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (286)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5614)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (286)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5614)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5614)) :ldur (quote (214)) :lvel (quote (56)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (286 286)) :lvel (quote (68 68)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (214 214)) :lvel (quote (53 53)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (214)) :lvel (quote (57)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6014)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6014)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6014)) :ldur (quote (214)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (158)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (158)) :lvel (quote (65)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (225)) :lvel (quote (60)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5664)) :ldur (quote (150)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (150)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5664)) :ldur (quote (150)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (150)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5664)) :ldur (quote (150)) :lvel (quote (64)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (150)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (150)) :lvel (quote (70)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (450 450)) :lvel (quote (65 65)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (225 225)) :lvel (quote (59 59)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (150)) :lvel (quote (61)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5864)) :ldur (quote (150)) :lvel (quote (66)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5864)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (150)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5864)) :ldur (quote (158)) :lvel (quote (55)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (316 316)) :lvel (quote (70 70)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (474 474)) :lvel (quote (58 58)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814)) :ldur (quote (225)) :lvel (quote (58)) :loffset (quote (0)) :lchan (quote (12))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (5814 5814)) :ldur (quote (75 75)) :lvel (quote (45 45)) :loffset (quote (0 0)) :lchan (quote (12 12))))) (load-port-info thechord (quote (0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.13 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote t) (quote :normal) 1 0 (om-make-point 230 24) (om-make-point 994 704) 0 1000 nil 1 (quote :osc-scoreplayer) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (list (quote gg) (quote gg) (quote gg) (quote gg) (quote gg) (quote gg) (quote gg) (quote gg) (quote gg) (quote gg) (quote gg) (quote gg) (quote gg) (quote gg) (quote gg) (quote gg) (quote gg) (quote gg) (quote gg) (quote gg) (quote gg) (quote gg) (quote gg) (quote gg)) 16 8)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-GESTURES-MULTISEQ-FROM-CLASSES" (quote r-gestures-multiseq-from-classes) (quote ((om-load-inputfun (quote input-funbox) "" "LIST-OF-GESTURE-PATCHES" nil) (om-load-inputfun (quote input-funbox) "" "LIST-OF-R-PASS-5-LISTS" nil))) (om-make-point 206 252) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((9 0 0 0 nil 0) (8 0 0 1 nil 0) (10 1 0 2 nil 0) (7 0 0 3 nil 0) (6 0 0 4 nil 0) (5 0 0 5 nil 0) (4 0 0 6 nil 0) (24 0 2 0 nil 0) (1 0 2 2 nil 0) (11 0 14 0 nil 0) (12 0 14 1 nil 0) (13 0 14 2 nil 0) (16 0 15 1 nil 0) (25 0 16 0 nil 0) (17 0 16 1 nil 0) (15 1 18 0 nil 0) (20 0 18 1 nil 0) (19 0 18 2 nil 0) (21 0 18 3 nil 0) (22 0 18 4 nil 0) (23 0 18 5 nil 0) (18 0 24 1 nil 0) (14 0 25 0 nil 0) (0 0 25 1 nil 0))) nil 6.13))
