; OM File Header - Saved 2020/09/23 20:55:27
; (6.13 :patc (om-make-point 172 160) (om-make-point 268 23) (om-make-point 1012 720) "" 183 0 nil "2020/09/23 20:55:27")
; End File Header
(in-package :om)(load-lib-for (quote ("OMRuben")))(setf *om-current-persistent* (om-load-patch1 "time-variable-filters-demo-omruben" (quote ((let ((box (om-load-boxcall (quote bastype) "list 5" (quote list) (quote nil) (om-make-point 818 398) (om-make-point 23 33) 9 "9" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-APPLY-CHANNEL-MULTISEQ 4" (quote r-apply-channel-multiseq) (quote ((om-load-inputfun (quote input-funbox) "chordseqs-list" "CHORDSEQS-LIST" nil) (om-load-inputfun (quote input-funbox) "channel" "CHANNEL" nil))) (om-make-point 721 443) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 3" (quote list) (quote nil) (om-make-point 617 390) (om-make-point 23 33) 9 "9" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-APPLY-CHANNEL-MULTISEQ 3" (quote r-apply-channel-multiseq) (quote ((om-load-inputfun (quote input-funbox) "chordseqs-list" "CHORDSEQS-LIST" nil) (om-load-inputfun (quote input-funbox) "channel" "CHANNEL" nil))) (om-make-point 520 434) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 2" (quote list) (quote nil) (om-make-point 445 386) (om-make-point 23 33) 9 "9" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-APPLY-CHANNEL-MULTISEQ 2" (quote r-apply-channel-multiseq) (quote ((om-load-inputfun (quote input-funbox) "chordseqs-list" "CHORDSEQS-LIST" nil) (om-load-inputfun (quote input-funbox) "channel" "CHANNEL" nil))) (om-make-point 362 431) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 4" (quote list) (quote nil) (om-make-point 221 367) (om-make-point 23 33) 9 "9" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-APPLY-CHANNEL-MULTISEQ" (quote r-apply-channel-multiseq) (quote ((om-load-inputfun (quote input-funbox) "chordseqs-list" "CHORDSEQS-LIST" nil) (om-load-inputfun (quote input-funbox) "channel" "CHANNEL" nil))) (om-make-point 138 412) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-RANDOM-SPLINE-BPFS" (quote r-random-spline-bpfs) (quote ((om-load-inputfun (quote input-funbox) "y-minmax-list" "Y-MINMAX-LIST" (list 0 1000)) (om-load-inputfun (quote input-funbox) "points-minmax-list" "POINTS-MINMAX-LIST" (list 7 9)) (om-load-inputfun (quote input-funbox) "number-of-bpfs" "NUMBER-OF-BPFS" 3))) (om-make-point 479 61) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-BANDPASS-BPF-MULTISEQ" (quote r-bandpass-bpf-multiseq) (quote ((om-load-inputfun (quote input-funbox) "chordseqs-list" "CHORDSEQS-LIST" (list 0)) (om-load-inputfun (quote input-funbox) "cutoff-mc-lo-minmax-hi-minmax" "CUTOFF-MC-LO-MINMAX-HI-MINMAX" (list 0)) (om-load-inputfun (quote input-funbox) "lo-hi-bpfs-list" "LO-HI-BPFS-LIST" (list 0)))) (om-make-point 53 302) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-BANDREJECT-BPF-MULTISEQ" (quote r-bandreject-bpf-multiseq) (quote ((om-load-inputfun (quote input-funbox) "chordseqs-list" "CHORDSEQS-LIST" (list 0)) (om-load-inputfun (quote input-funbox) "cutoff-mc-lo-minmax-hi-minmax" "CUTOFF-MC-LO-MINMAX-HI-MINMAX" (list 0)) (om-load-inputfun (quote input-funbox) "lo-hi-bpfs-list" "LO-HI-BPFS-LIST" (list 0)))) (om-make-point 286 322) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-HIPASS-BPF-MULTISEQ" (quote r-hipass-bpf-multiseq) (quote ((om-load-inputfun (quote input-funbox) "chordseqs-list" "CHORDSEQS-LIST" (list 0)) (om-load-inputfun (quote input-funbox) "midicent-treshold-minmax" "MIDICENT-TRESHOLD-MINMAX" (list 0)) (om-load-inputfun (quote input-funbox) "bpf-list" "BPF-LIST" (list 0)))) (om-make-point 480 332) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-LOPASS-BPF-MULTISEQ" (quote r-lopass-bpf-multiseq) (quote ((om-load-inputfun (quote input-funbox) "chordseqs-list" "CHORDSEQS-LIST" (list 0)) (om-load-inputfun (quote input-funbox) "midicent-treshold-minmax" "MIDICENT-TRESHOLD-MINMAX" (list 0)) (om-load-inputfun (quote input-funbox) "bpf-list" "BPF-LIST" (list 0)))) (om-make-point 682 337) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ 4" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 90 527) (om-make-point 170 136) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7794) (8286) (8466) (8696) (9094) (9290) (10086) (10480) (10616) (10718) (10942) (9184) (6322) (9278) (9452) (10586) (10084) (9288) (9456) (10364) (9186) (10086) (9286) (9464) (10084) (9446) (6312) (10080) (7054) (10084) (9450) (7056) (9286) (6318) (9452) (6214) (9286) (9764) (10084) (9188) (9442) (9442) (9290) (9284) (9318) (9460) (9442) (9288) (9188) (9442) (9444) (9184) (9440) (8466) (9188) (9188) (9186) (8466) (9188) (9180) (8466) (9188) (8466) (9190) (8468) (6330) (8468) (9096) (9096) (6304) (8468) (9096) (9096) (6320) (5800) (9096) (8470) (6342) (9096) (6322) (9096) (9096) (6288) (7792) (6332) (6360) (6302) (7794) (6346) (7796) (6332) (7796) (7796) (6308) (6350) (7796) (7054) (8286) (8698) (6334) (7796) (7056) (8696) (8698) (8698) (7796) (8698) (7796) (7056) (7796) (6340) (7796) (7056) (7796) (7796) (7796))) :lonset (quote (46 46 46 46 46 46 46 46 46 64 75 81 93 93 110 128 151 197 232 267 273 290 348 360 406 441 459 493 511 540 621 627 633 650 708 743 784 795 818 830 882 1010 1051 1097 1138 1155 1225 1248 1271 1364 1532 1602 1654 1759 1840 2119 2188 2206 2310 2421 2473 2485 2653 2664 2897 2978 3129 3146 3262 3286 3349 3373 3466 3512 3541 3576 3605 3645 3680 3785 3802 3918 4005 4005 4052 4162 4272 4313 4354 4464 4557 4603 4754 4766 4859 4905 4992 4998 5039 5056 5056 5068 5074 5108 5178 5201 5312 5352 5404 5497 5561 5654 5741 5799 5950 6107 6124)) :ldur (quote ((3936) (4894) (1683) (4975) (3071) (29) (35) (1045) (691) (23) (29) (163) (342) (29) (81) (17) (75) (70) (110) (17) (493) (64) (139) (41) (46) (186) (163) (12) (17) (70) (17) (4348) (70) (969) (104) (12) (157) (17) (58) (389) (93) (46) (17) (52) (17) (29) (41) (99) (308) (29) (41) (157) (52) (383) (99) (29) (23) (174) (64) (12) (93) (75) (145) (75) (116) (255) (104) (70) (52) (157) (52) (58) (75) (110) (12) (64) (35) (75) (64) (128) (46) (17) (12) (267) (58) (41) (41) (104) (52) (93) (46) (99) (93) (23) (35) (93) (41) (215) (12) (35) (75) (209) (12) (12) (12) (70) (12) (64) (134) (64) (17) (46) (87) (46) (35) (17))) :lvel (quote ((38) (40) (31) (26) (33) (35) (46) (34) (42) (31) (32) (37) (46) (31) (36) (28) (36) (39) (28) (26) (37) (29) (30) (23) (27) (23) (44) (21) (18) (23) (22) (15) (24) (33) (18) (22) (20) (17) (23) (20) (20) (15) (15) (17) (13) (13) (15) (14) (20) (13) (11) (17) (12) (19) (13) (11) (11) (16) (13) (11) (16) (13) (13) (11) (13) (17) (12) (11) (11) (16) (12) (11) (11) (14) (11) (11) (12) (14) (11) (14) (10) (10) (11) (15) (14) (11) (12) (14) (14) (14) (13) (13) (13) (11) (11) (13) (10) (11) (11) (12) (13) (11) (10) (11) (11) (12) (10) (12) (11) (11) (10) (11) (10) (11) (10) (10))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quote (((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode show-stems scale palette-mode)) (list 8 16 (list (quote ggff)) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil 0 (quote :osc-scoreplayer) 1 nil 1000 0 (om-make-point 742 405) (om-make-point 400 23) 0 1 (quote t) nil 0)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ 3" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 280 531) (om-make-point 170 136) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6322) (6312) (7054) (7056) (6318) (6214) (4164) (4164) (4164) (4164) (6340) (7056) (7796))) :lonset (quote (93 459 511 627 650 743 778 1016 1062 1132 5561 5741 6107 6124)) :ldur (quote ((342) (163) (17) (4348) (969) (12) (12) (12) (23) (3489) (17) (87) (17))) :lvel (quote ((46) (44) (18) (15) (33) (22) (14) (14) (14) (12) (10) (10) (10))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quote (((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode show-stems scale palette-mode cursor-mode)) (list 8 16 (list (quote ggff)) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil 0 (quote :osc-scoreplayer) 1 nil 1000 0 (om-make-point 742 405) (om-make-point 400 23) 0 1 (quote t) nil 0 (quote :normal))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ 2" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 465 529) (om-make-point 170 136) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((10480) (10616) (10718) (10942) (10586) (10084) (10364) (10086) (9464) (10084) (9446) (10080) (10084) (9450) (9286) (9452) (10616) (9286) (9764) (10084) (9442) (10084) (9442) (10086) (9764) (10480) (10480))) :lonset (quote (46 46 64 75 128 151 267 290 360 406 441 493 540 621 633 708 766 784 795 818 882 952 1010 1080 1167 1190 1260 1312)) :ldur (quote ((1045) (691) (23) (29) (17) (75) (17) (64) (41) (46) (186) (12) (70) (17) (70) (104) (12) (157) (17) (58) (93) (58) (46) (52) (23) (52) (52))) :lvel (quote ((34) (42) (31) (32) (28) (36) (26) (29) (23) (27) (23) (21) (23) (22) (24) (18) (14) (20) (17) (23) (20) (20) (15) (16) (11) (12) (13))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9) (9))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quote (((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode show-stems scale palette-mode cursor-mode)) (list 8 16 (list (quote ggff)) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil 0 (quote :osc-scoreplayer) 1 nil 1000 0 (om-make-point 742 405) (om-make-point 400 23) 0 1 (quote t) nil 0 (quote :normal))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 720 264) (om-make-point 84 30) (list 3000 9000) "(3000 9000)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 12" (quote list) (quote nil) (om-make-point 554 292) (om-make-point 91 30) (list 8000 13000) "(8000 13000)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 3" (om-make-point 220 138) (quote "These are standard filters of $pitch range, controlled $by bpfs. Every cutoff has $a minimum to maximum range.$") "" (om-make-point 228 42) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ 6" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 680 535) (om-make-point 170 136) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5810) (6336) (7794) (6322) (4164) (4164) (4164) (4164))) :lonset (quote (46 46 46 93 778 1016 1062 1132 4621)) :ldur (quote ((3419) (12) (3936) (342) (12) (12) (23) (3489))) :lvel (quote ((27) (46) (38) (46) (14) (14) (14) (12))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((9) (9) (9) (9) (9) (9) (9) (9))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quote (((0) (0) (0) (0) (0) (0) (0) (0))))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode show-stems scale palette-mode cursor-mode)) (list 8 16 (list (quote ggff)) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil 0 (quote :osc-scoreplayer) 1 nil 1000 0 (om-make-point 742 405) (om-make-point 400 23) 0 1 (quote t) nil 0 (quote :normal))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPF-LIB" (quote bpf-lib) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of BPF objects" "bpf-list" (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0 100)) (quote (0 100)) (quote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj))))) (om-make-point 440 158) (om-make-point 105 91) (if (find-class (quote bpf-lib) nil) (make-instance (quote bpf-lib) :bpf-list (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 1.5003743 2.998494 4.4943595 5.9879704 7.4793263 8.96843 10.455276 11.939868 13.422207 14.90229 16.38012 17.855694 19.329014 20.80008 22.268889 23.735444 25.199746 26.66179 28.121586 29.579123 31.034405 32.487435 33.938214 35.38673 36.832993 38.277 39.718758 41.158265 42.59551 44.030503 45.46324 46.893723 48.32195 49.747933 51.171647 52.593113 54.01233 55.42928 56.843987 58.25644 59.66663 61.07457 62.48025 63.88368 65.28485 66.68378 68.080445 69.47485 70.86701 72.25692 73.64457 75.02996 76.41309 77.79398 79.172615 80.54899 81.92311 83.29497 84.66459 86.031945 87.39705 88.75989 90.12049 91.478836 92.83492 94.18875 95.54031 96.88963 98.23671 99.58152 100.92408 102.26439 103.60243 104.93823 106.27177 107.60306 108.93208 110.258866 111.58339 112.905655 114.225655 115.54342 116.85892 118.17217 119.48316 120.79191 122.09839 123.40263 124.7046 126.00433 127.3018 128.59702 129.88997 131.18068 132.46913 133.75533 135.03926 136.32096 137.60039 138.87757 140.15248 141.42516 142.69556 143.96372 145.22962 146.49327 147.75467 149.01383 150.2707 151.52533 152.77771 154.02785 155.27571 156.52132 157.76468 159.00579 160.24463 161.48125 162.71558 163.94766 165.17749 166.40508 167.63039 168.85346 170.07428 171.29283 172.50914 173.72318 174.935 176.14452 177.35182 178.55686 179.75963 180.96018 182.15842 183.35445 184.5482 185.73972 186.92896 188.11597 189.3007 190.4832 191.66342 192.8414 194.01714 195.19062 196.36182 197.53078 198.69747 199.86194 201.02413 202.18407 203.34177 204.4972 205.65036 206.80132 207.94998 209.09639 210.24056 211.38246 212.52211 213.65952 214.79465 215.92754 217.05818 218.18657 219.3127 220.43656 221.55815 222.67754 223.79465 224.90952 226.02211 227.13245 228.24053 229.34638 230.44995 231.5513 232.65036 233.74718 234.8417 235.93405 237.02408 238.1119 239.19744 240.28072 241.36176 242.44055 243.51708 244.59137 245.66335 246.73313 247.80063 248.86588 249.92891 250.98961 252.0481 253.10436 254.15834 255.21006 256.25952 257.30676 258.3517 259.39444 260.43488 261.47308 262.50903 263.54272 264.57416 265.60333 266.63025 267.65494 268.67734 269.6975 270.71542 271.73108 272.74448 273.75565 274.76453 275.77115 276.7755 277.77768 278.77753 279.77518 280.7705 281.76364 282.7545 283.74307 284.72943 285.71353 286.69537 287.67496 288.65228 289.62735 290.60016 291.57074 292.53903 293.50513 294.46887 295.43048 296.38974 297.3468 298.30157 299.2541 300.20435 301.1524 302.09814 303.0417 303.9829 304.92194 305.85864 306.79315 307.7254 308.6554 309.58307 310.50858 311.4318 312.35278 313.27148 314.18793 315.10214 316.0141 316.92377 317.83124 318.7364 319.63934 320.53998 321.43842 322.3346 323.22852 324.12018 325.00958 325.89673 326.78162 327.66425 328.54465 329.42276 330.29865 331.17227 332.04364 332.91272 333.7796 334.6442 335.50656 336.36664 337.2245 338.08008 338.9334 339.7845 340.6333 341.47986 342.32416 343.16623 344.00604 344.84357 345.6789 346.5119 347.3427 348.17123 348.9975 349.82153 350.6433 351.46283 352.2801 353.0951 353.90784 354.71832 355.52658 356.33255 357.1363 357.93774 358.737 359.53394 360.32867 361.1211 361.91135 362.69928 363.485 364.26843 365.04962 365.82855 366.60522 367.3796 368.1518 368.92172 369.6894 370.45477 371.21796 371.97882 372.7375 373.49387 374.24802 374.99985 375.75064 376.50137 377.2521 378.00287 378.75363 379.5044 380.25513 381.0059 381.75665 382.5074 383.25815 384.0089 384.75964 385.5104 386.26114 387.0119 387.76263 388.5134 389.26416 390.0149 390.76566 391.5164 392.26712 393.0179 393.76862 394.51938 395.27014 396.0209 396.7716 397.5224 398.27316 399.0239 399.77463 400.5254 401.27615 402.02692 402.77765 403.52838 404.27914 405.0299 405.78064 406.5314 407.28214 408.0329 408.78366 409.53436 410.28513 411.0359 411.78665 412.5374 413.28815 414.03894 414.78964 415.5404 416.29117 417.0419 417.79266 418.5434 419.29413 420.0449 420.79562 421.5464 422.29712 423.0479 423.7986 424.5494 425.30017 426.05093 426.80164 427.5524 428.30316 429.0539 429.80466 430.55542 431.30615 432.0569 432.80768 433.55844 434.30914 435.0599 435.81067 436.5614 437.3122 438.0629 438.81366 439.56442 440.31516 441.06592 441.81665 442.56738 443.3181 444.0689 444.81967 445.5704 446.32114 447.0719 447.82263 448.57343 449.32416 450.07492 450.82565 451.57645 452.32718 453.07788 453.8286 454.5794 455.33017 456.0809 456.8317 457.58243 458.33316 459.08392 459.83466 460.58545 461.33615 462.08688 462.83768 463.5884 464.33917 465.0899 465.84064 466.59143 467.34213 468.09287 468.84366 469.59442 470.34515 471.09595 471.84668 472.5974 473.34818 474.09897 474.8497 475.6004 476.35114 477.10193 477.85266 478.60342 479.35422 480.10495 480.85568 481.60645 482.35712 483.1079 483.85864 484.6094 485.3602 486.11093 486.8617 487.61243 488.36316 489.11395 489.86465 490.61545 491.36618 492.11694 492.86768 493.61847 494.36914 495.1199 495.87064 496.62143 497.37216 498.12293 498.87366 499.62445 500.37518 501.12595 501.87668 502.62747 503.37817 504.1289 504.8797 505.63043 506.38116 507.13193 507.88266 508.63345 509.38416 510.13495 510.88574 511.63644 512.3872 513.13794 513.8887 514.6394 515.3902 516.1409 516.8917 517.64246 518.3932 519.1439 519.89466 520.64545 521.3962 522.147 522.8977 523.64844 524.3992 525.1499 525.9007 526.6514 527.40217 528.15296 528.9037 529.6545 530.4052 531.15595 531.90674 532.6574 533.4082 534.15894 534.90967 535.6604 536.4112 537.162 537.9127 538.66346 539.4142 540.165 540.9157 541.6665 542.41724 543.16797 543.9187 544.6695 545.42017 546.17096 546.9217 547.6725 548.42316 549.17395 549.9247 550.6754 551.4262 552.17695 552.92774 553.67847 554.4292 555.17994 555.93067 556.68146 557.43226 558.183 558.9337 559.68445 560.4352 561.1859 561.9367 562.6875 563.43824 564.18897 564.9397 565.6904 566.4412 567.19196 567.94275 568.6935 569.4442 570.19495 570.9457 571.6964 572.4472 573.198 573.9487 574.69947 575.4502 576.201 576.9517 577.7025 578.45325 579.204 579.9547 580.70545 581.45624 582.207 582.9577 583.7085 584.4592 585.20997 585.9607 586.7115 587.4622 588.21296 588.96375 589.7145 590.4652 591.21595 591.9667 592.71747 593.4682 594.219 594.9697 595.72046 596.4712 597.222 597.9727 598.7235 599.47425 600.225 600.9757 601.72644 602.47724 603.22797 603.97876 604.7295 605.4802 606.23096 606.9817 607.7325 608.4832 609.234 609.98475 610.7355 611.4862 612.23694 612.9877 613.73847 614.48926 615.24 615.9907 616.74146 617.4922 618.2429 618.9937 619.7445 620.49524 621.246 621.9967 622.7475 623.4982 624.24897 624.99976 625.7516 626.50574 627.2622 628.0209 628.78174 629.545 630.3104 631.0781 631.8481 632.6202 633.39466 634.1713 634.9503 635.73157 636.5151 637.3007 638.08875 638.87897 639.6715 640.46625 641.26325 642.06257 642.86396 643.6678 644.47376 645.28205 646.0925 646.90534 647.72034 648.53766 649.3573 650.179 651.0031 651.8294 652.6579 653.4888 654.32184 655.15717 655.9948 656.8346 657.6767 658.5211 659.3677 660.21656 661.0676 661.921 662.7767 663.63446 664.49457 665.357 666.2216 667.08857 667.9577 668.8291 669.70276 670.57874 671.45685 672.3373 673.22 674.10486 674.9921 675.8815 676.77326 677.6672 678.5634 679.4619 680.36255 681.2655 682.1708 683.07825 683.9879 684.8999 685.8142 686.7307 687.6495 688.57044 689.4937 690.4192 691.347 692.27704 693.2093 694.1438 695.0806 696.01966 696.961 697.90455 698.85035 699.79847 700.74866 701.7013 702.6561 703.61316 704.5725 705.5341 706.498 707.4641 708.4325 709.4031 710.3759 711.351 712.3284 713.30805 714.29 715.27405 716.26044 717.24915 718.24 719.23316 720.2285 721.22626 722.22614 723.22834 724.2328 725.23945 726.2484 727.25965 728.2731 729.28876 730.30665 731.32697 732.34937 733.3741 734.4011 735.4303 736.4618 737.49555 738.53156 739.56977 740.61036 741.6531 742.69806 743.74537 744.7949 745.8467 746.9007 747.95704 749.01557 750.07636 751.1394 752.2047 753.2722 754.34205 755.4141 756.48847 757.56507 758.64386 759.725 760.8083 761.8939 762.98175 764.0719 765.1642 766.25885 767.3557 768.45484 769.5563 770.6599 771.76575 772.8739 773.9844 775.09705 776.21186 777.3291 778.4485 779.5701 780.69404 781.8203 782.9487 784.0794 785.21235 786.34754 787.485 788.6247 789.7666 790.9109 792.0574 793.2061 794.35706 795.51026 796.6658 797.82355 798.9835 800.1459 801.31037 802.4771 803.6461 804.8174 805.99097 807.16675 808.3448 809.525 810.70765 811.89246 813.07947 814.2688 815.4604 816.65424 817.85035 819.0486 820.24915 821.452 822.6571 823.8645 825.0741 826.286 827.5001 828.71644 829.93506 831.1559 832.37915 833.6045 834.83216 836.062 837.2942 838.5286 839.76526 841.00415 842.24537 843.4888 844.73444 845.9824 847.23255 848.485 849.73975 850.9967 852.25586 853.51734 854.7811 856.04706 857.3153 858.58576 859.8585 861.13355 862.41077 863.69025 864.97205 866.256 867.5423 868.8308 870.1216 871.41456 872.70997 874.00745 875.30726 876.60926 877.9136 879.2201 880.52894 881.84 883.15326 884.46906 885.7868 887.1068 888.4292 889.7537 891.08075 892.40967 893.7411 895.07477 896.41065 897.7487 899.0891 900.4317 901.7766 903.12384 904.47315 905.8248 907.17865 908.5349 909.8933 911.25385 912.6169 913.98206 915.3495 916.71924 918.0911 919.46534 920.8418 922.2205 923.60144 924.98475 926.3701 927.75794 929.1478 930.5401 931.93464 933.3313 934.73035 936.13166 937.53504 938.94086 940.3489 941.75916 943.1717 944.5864 946.0035 947.4227 948.84436 950.26825 951.6942 953.12244 954.5531 955.986 957.42096 958.8583 960.298 961.73975 963.18384 964.6301 966.07874 967.52967 968.98267 970.438 971.89576 973.3556 974.8178 976.28217 977.7488 979.21766 980.6889 982.16236 983.6378 985.11585 986.59595 988.0784 989.5631 991.05005 992.53925 994.03064 995.52436 997.0203 998.51844 1000.0)) (quote (932.99994 927.7844 922.5886 917.41236 912.2557 907.11847 902.0008 896.90284 891.8244 886.7655 881.7262 876.7064 871.7063 866.72565 861.7645 856.8232 851.90125 846.99897 842.1161 837.2529 832.4093 827.5853 822.7808 817.9959 813.23047 808.48475 803.7585 799.05195 794.3648 789.6973 785.0494 780.421 775.81226 771.22297 766.6533 762.1032 757.5727 753.06177 748.5703 744.09864 739.64637 735.2137 730.80054 726.40705 722.033 717.6787 713.3438 709.02857 704.7329 700.4568 696.20026 691.9632 687.7459 683.54804 679.36976 675.21106 671.07184 666.95234 662.8523 658.77186 654.711 650.66974 646.64795 642.6459 638.6632 634.70026 630.7568 626.8329 622.9286 619.0439 615.17865 611.3331 607.50715 603.7006 599.91376 596.14637 592.3987 588.6704 584.9618 581.27277 577.6033 573.95337 570.32306 566.7122 563.1211 559.54944 555.9973 552.4649 548.952 545.4586 541.9848 538.53064 535.096 531.68085 528.28534 524.9094 521.55304 518.2162 514.89905 511.60132 508.3232 505.06476 501.8257 498.60638 495.40656 492.22626 489.0656 485.92447 482.80292 479.701 476.61853 473.55576 470.51245 467.4888 464.48462 461.50012 458.53506 455.58966 452.66385 449.75754 446.8708 444.00366 441.15607 438.3281 435.51965 432.73077 429.9615 427.21173 424.48157 421.771 419.08 416.4085 413.75662 411.12433 408.51157 405.9184 403.34473 400.79074 398.2563 395.74133 393.24603 390.7703 388.3141 385.87747 383.4604 381.0629 378.685 376.3266 373.98785 371.66864 369.36896 367.0889 364.8284 362.5875 360.36612 358.1643 355.9821 353.81946 351.67633 349.55283 347.44885 345.36447 343.29968 341.25446 339.22876 337.22266 335.23615 333.2691 331.32172 329.3939 327.48563 325.59692 323.72778 321.87827 320.04828 318.23785 316.44702 314.67572 312.924 311.1919 309.4793 307.78632 306.1129 304.45905 302.82474 301.21002 299.61487 298.03925 296.48325 294.9468 293.42993 291.93262 290.4549 288.9967 287.5581 286.13907 284.73962 283.3597 281.9994 280.65863 279.33746 278.03583 276.75378 275.4913 274.2484 273.02502 271.82126 270.6371 269.4724 268.32736 267.20187 266.09595 265.00958 263.9428 262.8956 261.86792 260.85986 259.87134 258.9024 257.95303 257.02322 256.11298 255.22232 254.3512 253.4997 252.66773 251.85532 251.06252 250.28928 249.53559 248.80147 248.08692 247.39196 246.71654 246.0607 245.42443 244.80774 244.2106 243.63301 243.07505 242.53662 242.01779 241.51848 241.03876 240.57862 240.13803 239.71703 239.31562 238.93372 238.57144 238.22872 237.90554 237.60193 237.31792 237.05347 236.80857 236.58325 236.3775 236.19133 236.02474 235.8777 235.75022 235.64229 235.55396 235.48519 235.436 235.40636 235.39632 235.4058 235.4349 235.48357 235.55178 235.63956 235.74692 235.87384 236.02033 236.1864 236.37204 236.57726 236.80199 237.04636 237.31026 237.59375 237.89678 238.2194 238.56159 238.92334 239.30467 239.70558 240.12602 240.56606 241.02565 241.50482 242.00359 242.52187 243.05974 243.6172 244.19422 244.7908 245.40695 246.04267 246.69799 247.37282 248.06723 248.78127 249.51482 250.26793 251.04065 251.83296 252.64476 253.47618 254.32718 255.19774 256.08786 256.99753 257.9268 258.87564 259.84402 260.832 261.8395 262.86664 263.9133 264.97955 266.06534 267.17075 268.2957 269.44022 270.60428 271.78796 272.99118 274.214 275.45633 276.71826 277.99976 279.28803 280.5702 281.84622 283.11618 284.38004 285.63782 286.8895 288.13504 289.3745 290.60788 291.8352 293.05637 294.27145 295.48047 296.68335 297.88013 299.07086 300.2555 301.434 302.60638 303.77274 304.93295 306.08707 307.2351 308.377 309.51285 310.6426 311.76624 312.8838 313.99527 315.10062 316.1999 317.29303 318.3801 319.46106 320.53598 321.60477 322.66745 323.72403 324.7745 325.8189 326.8572 327.88944 328.91553 329.93555 330.94943 331.95728 332.959 333.95462 334.94412 335.92758 336.9049 337.87616 338.84128 339.80035 340.7533 341.70017 342.64093 343.5756 344.50418 345.42664 346.34302 347.2533 348.15747 349.05557 349.94757 350.83347 351.71326 352.58698 353.45453 354.31604 355.1715 356.0208 356.864 357.70117 358.5322 359.35712 360.17596 360.98874 361.79535 362.5959 363.39032 364.1787 364.96094 365.73712 366.5072 367.27118 368.02905 368.78082 369.52652 370.26608 370.99957 371.72696 372.44827 373.16345 373.87262 374.5756 375.2725 375.96332 376.64804 377.3267 377.9992 378.66562 379.32596 379.9802 380.62836 381.2704 381.90637 382.5362 383.15997 383.77762 384.3892 384.99463 385.59406 386.18732 386.7745 387.3556 387.9306 388.49948 389.0623 389.619 390.16956 390.71405 391.2525 391.78485 392.31107 392.83115 393.3452 393.85315 394.35495 394.8507 395.34036 395.82388 396.30133 396.7727 397.23795 397.6971 398.1502 398.59714 399.03803 399.4728 399.9015 400.3241 400.74057 401.15097 401.5553 401.9535 402.3456 402.73163 403.1115 403.48532 403.85303 404.21466 404.5702 404.91965 405.26297 405.60022 405.93137 406.2564 406.57532 406.8882 407.19498 407.49564 407.79016 408.07864 408.36102 408.63727 408.9075 409.1716 409.42957 409.6815 409.92725 410.16693 410.40057 410.62805 410.8495 411.06476 411.27402 411.4771 411.67416 411.8651 412.04993 412.22867 412.4013 412.56787 412.72833 412.88263 413.0309 413.17307 413.30917 413.43912 413.563 413.6808 413.79245 413.89804 413.99753 414.0909 414.17822 414.2594 414.3345 414.40353 414.46643 414.52325 414.57397 414.6186 414.65714 414.68954 414.71588 414.73615 414.75024 414.7583 414.76025 414.7561 414.74585 414.72955 414.7071 414.67856 414.64392 414.6032 414.5564 414.50345 414.44446 414.37933 414.30817 414.23087 414.1475 414.05795 413.96237 413.86072 413.75293 413.63904 413.51904 413.393 413.2608 413.12256 412.97818 412.82773 412.67117 412.50855 412.33978 412.16495 411.984 411.79697 411.60385 411.40463 411.1993 410.9879 410.7704 410.54678 410.3171 410.0813 409.83936 409.59137 409.3373 409.0771 408.81085 408.53842 408.25998 407.9754 407.68472 407.38797 407.0851 406.77615 406.4611 406.13992 405.81274 405.47937 405.13992 404.7944 404.44278 404.08508 403.72122 403.35132 402.9753 402.5932 402.20496 401.81067 401.41028 401.00378 400.5912 400.17252 399.7477 399.31686 398.87988 398.4368 397.9876 397.53235 397.071 396.60355 396.13 395.65033 395.1646 394.6728 394.17484 393.67078 393.16064 392.64447 392.12213 391.59372 391.05917 390.51855 389.9719 389.41907 388.86017 388.29517 387.72406 387.1469 386.5636 385.97424 385.37875 384.7772 384.16953 383.55573 382.93588 382.30994 381.67786 381.0397 380.39548 379.74515 379.08868 378.42615 377.75754 377.0828 376.40198 375.7151 375.02206 374.32294 373.61774 372.90643 372.18906 371.46555 370.73596 370.00027 369.2615 368.52264 367.78375 367.0448 366.3058 365.5667 364.82758 364.08844 363.34918 362.60992 361.87054 361.1312 360.39175 359.65222 358.9127 358.1731 357.4334 356.6937 355.95392 355.2141 354.47427 353.73434 352.99432 352.25427 351.51416 350.77405 350.03384 349.29358 348.55328 347.81293 347.07248 346.33203 345.5915 344.85092 344.11026 343.36957 342.62888 341.88806 341.14722 340.4063 339.66534 338.92435 338.18323 337.4421 336.70096 335.95975 335.21845 334.47714 333.73572 332.9943 332.25278 331.51123 330.7696 330.02795 329.2862 328.54446 327.80264 327.06073 326.31882 325.5768 324.83478 324.09268 323.35053 322.60834 321.8661 321.1238 320.38144 319.63898 318.8965 318.15396 317.4114 316.6688 315.9261 315.18335 314.44052 313.6977 312.9548 312.2118 311.46878 310.72574 309.9826 309.23944 308.4962 307.75287 307.00958 306.26617 305.52274 304.77924 304.03564 303.29205 302.5484 301.80466 301.0609 300.31708 299.5732 298.82925 298.08527 297.34122 296.5971 295.85297 295.10876 294.3645 293.62018 292.87582 292.1314 291.38693 290.64236 289.89783 289.15317 288.40848 287.66373 286.9189 286.17407 285.42917 284.6842 283.9392 283.1941 282.44897 281.70377 280.9586 280.2133 279.46796 278.72256 277.97708 277.2316 276.48602 275.74042 274.99475 274.24902 273.50327 272.75742 272.01154 271.26563 270.5196 269.7736 269.0275 268.28134 267.5351 266.78882 266.0425 265.29614 264.54974 263.80325 263.0567 262.31015 261.5635 260.8168 260.07007 259.32324 258.5764 257.82947 257.08252 256.33548 255.58841 254.8413 254.0941 253.34687 252.59958 251.85224 251.10483 250.35738 249.60988 248.86232 248.11469 247.36705 246.61931 245.87154 245.1237 244.37583 243.62789 242.87989 242.13185 241.38375 240.63556 239.88738 239.13912 238.3908 237.64243 236.89398 236.14548 235.39694 234.64839 233.89974 233.15106 232.4023 231.65349 230.90462 230.15572 229.40676 228.65773 227.90865 227.15952 226.41031 225.66107 224.91179 224.16246 223.41306 222.66359 221.9141 221.16452 220.4149 219.66522 218.9155 218.16573 217.4159 216.666 215.91606 215.16605 214.416 213.6659 212.91576 212.16555 211.41529 210.66497 209.91458 209.16416 208.41367 207.66313 206.91254 206.1619 205.4112 204.66043 203.90964 203.15879 202.40787 201.65689 200.90587 200.15479 199.40366 198.65247 197.90122 197.14994 196.39859 195.64717 194.89572 194.14421 193.39264 192.64104 191.88936 191.13764 190.38584 189.634 188.88213 188.13018 187.37818 186.62613 185.87403 185.12186 184.36965 183.61739 182.86505 182.11267 181.36025 180.60776 179.85523 179.10263 178.34998 177.59726 176.84452 176.0917 175.33885 174.58594 173.83295 173.07993 172.32686 171.57372 170.82053 170.06728 169.314 168.56064 167.80722 167.05377 166.30027 165.54669 164.79308 164.0394 163.28566 162.53189 161.77805 161.02414 160.27022 159.5162 158.76215 158.00804 157.25388 156.49967 155.74539 154.99108 154.2367 153.48227 152.72777 151.97322 151.21863 150.46398 149.70928 148.95453 148.1997 147.44486 146.68993 145.93495 145.17992 144.42484 143.66971 142.9145 142.15926 141.40396 140.64862 139.89322 139.13774 138.38224 137.62667 136.87104 136.11536 135.35964 134.60384 133.84799 133.0921 132.33615 131.58016 130.8241 130.068 129.31183 128.5556 127.79933 127.04301 126.28663 125.53018 124.773705 124.01715 123.26055 122.5039 121.7472 120.99999)) (quote bpf) 10))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 1.5999984 3.1967905 4.790376 6.3807554 7.9679275 9.551893 11.132654 12.710208 14.2845545 15.855698 17.423632 18.98836 20.549881 22.108197 23.663308 25.215207 26.7639 28.309393 29.851675 31.390748 32.92662 34.459282 35.98874 37.514985 39.038033 40.557873 42.074498 43.587925 45.09814 46.605156 48.108963 49.60956 51.10695 52.60114 54.092114 55.579888 57.064457 58.54581 60.02397 61.498925 62.970658 64.43919 65.904526 67.366646 68.825554 70.28127 71.73377 73.18307 74.62916 76.07204 77.51172 78.9482 80.381455 81.811516 83.238365 84.66201 86.08245 87.49968 88.91371 90.32453 91.73213 93.13655 94.53775 95.93574 97.330536 98.722115 100.11049 101.49565 102.877625 104.25637 105.63192 107.004265 108.3734 109.739334 111.10205 112.461586 113.81788 115.17099 116.52088 117.86757 119.21106 120.55134 121.88841 123.22227 124.55294 125.880394 127.20464 128.52567 129.8435 131.15814 132.46958 133.77777 135.08278 136.38459 137.68318 138.97856 140.27075 141.55973 142.84549 144.12805 145.40743 146.68357 147.95652 149.22626 150.49277 151.7561 153.01622 154.27313 155.52684 156.77735 158.02463 159.26873 160.5096 161.74727 162.98174 164.213 165.44106 166.6659 167.88755 169.10599 170.3212 171.53324 172.74204 173.94766 175.15006 176.34926 177.54524 178.73802 179.92761 181.11399 182.29714 183.4771 184.65384 185.8274 186.99773 188.16487 189.3288 190.48952 191.64704 192.80133 193.95244 195.10034 196.24503 197.3865 198.52478 199.65985 200.7917 201.92037 203.0458 204.16806 205.28708 206.40293 207.51557 208.62497 209.73117 210.83417 211.93398 213.03055 214.12395 215.21414 216.30109 217.38489 218.46543 219.54279 220.6169 221.68787 222.7556 223.82012 224.88147 225.93958 226.99448 228.04618 229.09467 230.13997 231.18204 232.22092 233.25659 234.28905 235.31832 236.34436 237.36722 238.38683 239.40328 240.4165 241.42653 242.43334 243.43697 244.43735 245.43453 246.42852 247.4193 248.40686 249.39125 250.37239 251.35036 252.3251 253.29665 254.26497 255.2301 256.19205 257.15076 258.10626 259.05856 260.00766 260.95355 261.89624 262.83572 263.77197 264.70505 265.6349 266.56155 267.48502 268.40524 269.32227 270.2361 271.14673 272.05414 272.95834 273.85934 274.75714 275.65173 276.54312 277.43127 278.31625 279.198 280.07657 280.9519 281.82407 282.693 283.55875 284.42126 285.28058 286.1367 286.9896 287.8393 288.6858 289.52908 290.36914 291.20602 292.03967 292.87015 293.6974 294.52145 295.3423 296.1599 296.97437 297.78558 298.5936 299.3984 300.2001 301.00092 301.8017 302.6025 303.40332 304.20413 305.0049 305.80573 306.6065 307.4073 308.20813 309.0089 309.80972 310.6105 311.41132 312.21213 313.0129 313.81372 314.6145 315.41528 316.21613 317.0169 317.81772 318.6185 319.4193 320.22012 321.0209 321.82172 322.62253 323.42334 324.22412 325.0249 325.8257 326.62653 327.4273 328.22812 329.02893 329.8297 330.63052 331.4313 332.23212 333.03293 333.83368 334.6345 335.4353 336.2361 337.03693 337.8377 338.63852 339.43933 340.2401 341.04092 341.8417 342.64252 343.44333 344.24414 345.04492 345.8457 346.6465 347.44733 348.2481 349.04895 349.84973 350.6505 351.45132 352.25214 353.05292 353.8537 354.6545 355.45535 356.25613 357.05695 357.85773 358.65854 359.45935 360.26013 361.06094 361.8617 362.66254 363.46335 364.26413 365.06494 365.86572 366.6665 367.46735 368.26813 369.0689 369.86972 370.67053 371.4713 372.27213 373.0729 373.87372 374.67453 375.47534 376.27612 377.07694 377.87772 378.67853 379.47934 380.28015 381.08093 381.88174 382.68253 383.48334 384.28415 385.08493 385.88574 386.68655 387.4873 388.28815 389.08893 389.8897 390.69055 391.49136 392.29215 393.09293 393.89374 394.69458 395.49536 396.29614 397.09692 397.89774 398.69855 399.49933 400.30014 401.10095 401.90173 402.70258 403.50336 404.30414 405.10492 405.90573 406.70654 407.50735 408.30817 409.10895 409.90973 410.71057 411.51135 412.31213 413.1129 413.91373 414.71457 415.51538 416.31616 417.11697 417.9178 418.71857 419.51935 420.32016 421.1209 421.92175 422.72253 423.52338 424.32413 425.12497 425.92578 426.72653 427.52734 428.32816 429.12897 429.92975 430.73056 431.53137 432.33215 433.13293 433.93378 434.7346 435.53534 436.33618 437.13696 437.93774 438.7386 439.53937 440.34015 441.14102 441.94174 442.74255 443.54334 444.34415 445.14496 445.94574 446.74655 447.5474 448.34818 449.14893 449.94977 450.75058 451.55136 452.35217 453.15298 453.9537 454.75458 455.55536 456.35617 457.15695 457.95776 458.75855 459.55942 460.36014 461.16095 461.9618 462.7626 463.56332 464.3642 465.16498 465.9658 466.76657 467.56738 468.36816 469.1689 469.96976 470.77057 471.57138 472.37222 473.17297 473.97376 474.7746 475.57535 476.37616 477.177 477.97778 478.77853 479.5794 480.3802 481.181 481.98178 482.7826 483.58337 484.3842 485.18497 485.98578 486.78656 487.58737 488.38815 489.18897 489.9898 490.79062 491.59137 492.3922 493.193 493.9938 494.7946 495.5954 496.39618 497.19693 497.9978 498.79858 499.5994 500.40024 501.20102 502.00177 502.8026 503.60342 504.4042 505.20502 506.00583 506.8066 507.60742 508.4082 509.209 510.0098 510.8106 511.6114 512.41224 513.213 514.0138 514.8146 515.6154 516.41626 517.217 518.01777 518.8186 519.61945 520.4202 521.221 522.02186 522.82264 523.6234 524.42426 525.22504 526.0258 526.82666 527.62745 528.4283 529.229 530.02985 530.83057 531.6315 532.43226 533.23304 534.0338 534.83466 535.63544 536.4363 537.237 538.03785 538.8386 539.6394 540.44025 541.241 542.0418 542.84266 543.64344 544.4442 545.24506 546.04584 546.8466 547.6474 548.44825 549.249 550.04987 550.85065 551.6514 552.4523 553.253 554.0538 554.8547 555.65546 556.45624 557.257 558.0578 558.8586 559.6594 560.4602 561.2611 562.0618 562.8626 563.66346 564.46424 565.2651 566.06586 566.86664 567.6675 568.4682 569.26905 570.0699 570.87067 571.6714 572.4722 573.273 574.07386 574.87464 575.6754 576.47626 577.27704 578.0778 578.8786 579.67945 580.4802 581.28107 582.08185 582.8826 583.6835 584.48426 585.28504 586.0858 586.8867 587.68744 588.4883 589.28907 590.08985 590.8907 591.69147 592.49225 593.2931 594.0938 594.89466 595.69544 596.4962 597.29706 598.09784 598.8987 599.6994 600.50025 601.301 602.10187 602.90265 603.7034 604.5042 605.30506 606.10584 606.9066 607.70746 608.50824 609.3091 610.10987 610.91065 611.7114 612.51227 613.31305 614.1139 614.9147 615.71546 616.51624 617.3171 618.11786 618.91864 619.7195 620.52027 621.32105 622.1218 622.92267 623.7235 624.52424 625.3251 626.12586 626.9267 627.7275 628.52826 629.3291 630.1298 630.93067 631.7315 632.5323 633.33307 634.13385 634.9347 635.7355 636.53626 637.33704 638.1379 638.9386 639.73945 640.5403 641.34107 642.14185 642.9427 643.74347 644.54425 645.3451 646.1459 646.94666 647.7475 648.5483 649.34906 650.1499 650.9507 651.75147 652.55225 653.353 654.1539 654.95466 655.7555 656.5563 657.35706 658.1579 658.9587 659.75946 660.5603 661.3611 662.16187 662.96265 663.7635 664.5643 665.3651 666.1659 666.9667 667.76746 668.56824 669.3691 670.1699 670.97065 671.7715 672.57227 673.37305 674.1738 674.97474 675.7755 676.5763 677.3771 678.17786 678.9787 679.7795 680.58027 681.3811 682.1819 682.98267 683.7835 684.5843 685.38514 686.1859 686.9867 687.7875 688.58826 689.3891 690.18995 690.9907 691.7915 692.5923 693.39307 694.19385 694.9947 695.7955 696.5963 697.3971 698.1979 698.99866 699.7995 700.6012 701.406 702.214 703.0252 703.8396 704.6573 705.4781 706.3022 707.12946 707.95984 708.7936 709.6304 710.4706 711.3138 712.1603 713.00995 713.8629 714.71894 715.5783 716.4408 717.3065 718.1755 719.04767 719.923 720.8015 721.68335 722.56824 723.4564 724.34784 725.2424 726.1402 727.0412 727.9454 728.8528 729.7634 730.67725 731.59424 732.5145 733.438 734.3646 735.29444 736.22754 737.1638 738.1033 739.046 739.9919 740.9409 741.8932 742.84876 743.8075 744.7694 745.73456 746.7029 747.67444 748.6491 749.62714 750.6083 751.5926 752.58027 753.571 754.56495 755.56214 756.56257 757.5661 758.57294 759.583 760.5962 761.6127 762.6322 763.65516 764.68116 765.71045 766.7429 767.77857 768.81745 769.8595 770.9047 771.9533 773.005 774.05994 775.118 776.17926 777.2439 778.3116 779.38257 780.45667 781.53406 782.61457 783.69837 784.78534 785.8755 786.9688 788.0654 789.1652 790.26825 791.37446 792.4839 793.5965 794.71235 795.8313 796.9536 798.079 799.2077 800.3396 801.4746 802.6129 803.7544 804.8991 806.047 807.19806 808.3524 809.5099 810.67066 811.83454 813.0017 814.17194 815.3455 816.52234 817.7023 818.88544 820.0718 821.26136 822.45417 823.65015 824.84937 826.0517 827.2573 828.46607 829.67817 830.89344 832.1119 833.33344 834.55835 835.78626 837.01764 838.2521 839.48975 840.7307 841.97474 843.22205 844.47254 845.7262 846.9831 848.24317 849.50654 850.7731 852.04285 853.3158 854.592 855.8713 857.1539 858.4396 859.7286 861.02076 862.31617 863.61475 864.9165 866.22156 867.5298 868.8411 870.1558 871.47364 872.79474 874.1189 875.4463 876.7771 878.11084 879.448 880.7882 882.1318 883.47846 884.82825 886.18134 887.5377 888.89716 890.26 891.62586 892.995 894.36725 895.7429 897.1217 898.5037 899.88874 901.27717 902.6688 904.06354 905.46155 906.86274 908.2671 909.6747 911.0856 912.49946 913.9167 915.33735 916.76087 918.1878 919.6178 921.051 922.48755 923.9272 925.3701 926.8162 928.26545 929.718 931.17365 932.63257 934.09467 935.56006 937.02857 938.50025 939.9752 941.4535 942.9348 944.41925 945.9071 947.3981 948.8923 950.38965 951.89026 953.39405 954.90107 956.4113 957.92475 959.4414 960.96106 962.48426 964.01044 965.5399 967.0726 968.60846 970.1475 971.6898 973.2353 974.78406 976.3358 977.891 979.44935 981.0108 982.5755 984.1435 985.7146 987.28894 988.8665 990.44727 992.03125 993.61847 995.2088 996.80237 998.3991 1000.0)) (quote (87.0 86.60791 86.23245 85.87361 85.53141 85.20581 84.89685 84.60452 84.328804 84.069725 83.82726 83.601425 83.39221 83.19962 83.02367 82.864334 82.72162 82.595536 82.48608 82.393235 82.31703 82.257454 82.2145 82.18817 82.17845 82.18537 82.208916 82.24908 82.30588 82.37929 82.46934 82.57601 82.6993 82.839226 82.995766 83.16894 83.35873 83.56515 83.7882 84.02787 84.28417 84.55709 84.846634 85.1528 85.4756 85.81502 86.17107 86.54375 86.933045 87.33896 87.76151 88.20068 88.65649 89.12891 89.61796 90.12363 90.64593 91.18486 91.7404 92.312584 92.90138 93.506806 94.12886 94.76754 95.42284 96.094765 96.78332 97.488495 98.2103 98.94872 99.70377 100.47545 101.26376 102.06868 102.890236 103.72841 104.58322 105.45465 106.3427 107.247376 108.168686 109.10661 110.06117 111.03235 112.02016 113.02458 114.04564 115.08333 116.13763 117.20856 118.29613 119.4003 120.521096 121.65852 122.8126 123.983284 125.170586 126.37453 127.59508 128.83228 130.08608 131.3565 132.64357 133.94725 135.26757 136.60449 137.95806 139.32825 140.71506 142.11849 143.53855 144.97524 146.42855 147.89847 149.38504 150.88823 152.40805 153.94449 155.49756 157.06723 158.65355 160.25649 161.87604 163.51224 165.16506 166.83449 168.52057 170.22324 171.94257 173.6785 175.43106 177.20026 178.98609 180.78852 182.60758 184.44327 186.29558 188.16454 190.0501 191.9523 193.8711 195.80655 197.75862 199.72731 201.71263 203.71457 205.73313 207.76833 209.82015 211.8886 213.97367 216.07537 218.19368 220.32865 222.4802 224.64839 226.8332 229.03467 231.25275 233.48741 235.73876 238.00667 240.29129 242.59247 244.9103 247.24474 249.59583 251.9635 254.34784 256.74878 259.16635 261.60056 264.0514 266.51883 269.0029 271.5036 274.02094 276.55487 279.10544 281.67264 284.2565 286.85693 289.474 292.1077 294.75803 297.425 300.10855 302.80878 305.5256 308.25903 311.00913 313.77585 316.55914 319.3591 322.1757 325.0089 327.85873 330.72516 333.60828 336.50797 339.4243 342.35724 345.30682 348.273 351.25586 354.2553 357.2714 360.3041 363.35342 366.4194 369.50198 372.60117 375.71704 378.8495 381.99857 385.16428 388.3466 391.54556 394.76114 397.99335 401.24222 404.50766 407.78976 411.08844 414.4038 417.73575 421.08432 424.44955 427.8314 431.22983 434.64493 438.07666 441.525 444.98996 448.4715 451.9697 455.4846 459.01602 462.5641 466.12885 469.7102 473.30817 476.92273 480.55392 484.20178 487.86624 491.54736 495.24506 498.95944 502.69037 506.43658 510.16702 513.8689 517.5425 521.18757 524.8041 528.3923 531.9519 535.48316 538.98584 542.46015 545.90607 549.32337 552.7123 556.0728 559.4048 562.7083 565.98346 569.23005 572.4483 575.638 578.7992 581.932 585.03644 588.1124 591.15986 594.17884 597.1694 600.13135 603.06495 605.97016 608.84687 611.6951 614.51496 617.3062 620.06916 622.8036 625.5096 628.18696 630.8361 633.4567 636.04877 638.6125 641.1477 643.6545 646.13276 648.58265 651.004 653.397 655.7614 658.0975 660.405 662.68415 664.9348 667.157 669.35077 671.51606 673.65284 675.7612 677.8411 679.89264 681.9156 683.91016 685.8762 687.8139 689.7231 691.6037 693.456 695.2798 697.0752 698.84205 700.58045 702.29047 703.972 705.625 707.2496 708.8457 710.41346 711.95276 713.4635 714.94574 716.3996 717.825 719.222 720.5905 721.93055 723.24207 724.52515 725.7799 727.00605 728.2038 729.3731 730.5139 731.6263 732.71027 733.76575 734.7927 735.7913 736.7614 737.703 738.6163 739.5009 740.3572 741.185 741.9843 742.75525 743.49775 744.2117 744.8972 745.55426 746.1829 746.783 747.35474 747.898 748.4128 748.8992 749.357 749.78644 750.1874 750.55994 750.90394 751.21955 751.5066 751.7653 751.99555 752.19727 752.37067 752.51545 752.6319 752.7197 752.7792 752.81025 752.8128 752.7869 752.7326 752.64985 752.5385 752.3988 752.2306 752.03394 751.8089 751.55536 751.27326 750.9628 750.6239 750.2566 749.8607 749.43647 748.9837 748.5025 747.9928 747.4547 746.8882 746.2931 745.6697 745.0177 744.3373 743.6284 742.89106 742.1253 741.3311 740.5084 739.6573 738.7777 737.86957 736.9331 735.96814 734.97474 733.9528 732.9024 731.82367 730.71644 729.5807 728.4165 727.22394 726.00287 724.7533 723.4753 722.1688 720.834 719.4706 718.0788 716.6585 715.2098 713.73255 712.2269 710.69275 709.1302 707.53925 705.91974 704.2718 702.5954 700.8905 699.15717 697.3954 695.6053 693.78656 691.93946 690.06385 688.15986 686.2273 684.2664 682.2769 680.2591 678.21265 676.13794 674.0347 671.90296 669.74286 667.55426 665.33716 663.09156 660.8177 658.51526 656.1843 653.82496 651.43714 649.0209 646.5762 644.10297 641.60126 639.0712 636.51264 633.92566 631.3102 628.6663 625.99384 623.29297 620.5637 617.80597 615.0198 612.2051 609.362 606.4905 603.5904 600.66187 597.70496 594.7195 591.7057 588.6633 585.59266 582.4933 579.3656 576.2095 573.0249 569.8118 566.5703 563.30036 560.00196 556.67505 553.3259 549.993 546.68244 543.39435 540.1286 536.8853 533.6644 530.46595 527.2899 524.1363 521.005 517.8962 514.8098 511.74582 508.70422 505.68512 502.68832 499.714 496.7621 493.83252 490.9254 488.04077 485.17844 482.33862 479.52115 476.7261 473.95346 471.20328 468.47543 465.77008 463.08707 460.4265 457.78842 455.17264 452.57928 450.00845 447.4599 444.9338 442.43018 439.94894 437.49005 435.05362 432.6396 430.24802 427.87878 425.53198 423.20764 420.9057 418.6261 416.36896 414.13428 411.922 409.7321 407.5646 405.41956 403.29688 401.1966 399.11877 397.0634 395.03033 393.01978 391.03162 389.06583 387.12244 385.20157 383.303 381.4269 379.57318 377.74188 375.93304 374.14655 372.3825 370.64087 368.92166 367.22482 365.55045 363.89847 362.2689 360.66168 359.07697 357.51465 355.97467 354.45718 352.9621 351.4894 350.03912 348.61127 347.2058 345.82278 344.4622 343.12396 341.80817 340.5148 339.2438 337.99524 336.7691 335.56537 334.38406 333.22516 332.08868 330.97458 329.88287 328.81366 327.7668 326.74237 325.74036 324.76074 323.80356 322.86877 321.95642 321.06647 320.19894 319.3538 318.53107 317.73077 316.95288 316.19742 315.46436 314.7537 314.06546 313.39963 312.75623 312.13522 311.53665 310.96045 310.4067 309.87537 309.36642 308.87988 308.41577 307.9741 307.5548 307.15793 306.78348 306.43143 306.10178 305.79456 305.50977 305.24735 305.0074 304.7898 304.59467 304.4219 304.27158 304.14368 304.03815 303.95505 303.89435 303.8561 303.84027 303.8468 303.8758 303.9272 304.00098 304.09717 304.21582 304.3568 304.52026 304.70612 304.91443 305.14508 305.3982 305.6737 305.97162 306.29196 306.6347 306.99988 307.38745 307.79742 308.22986 308.68463 309.16187 309.6615 310.18353 310.72803 311.29492 311.8842 312.4959 313.13 313.78656 314.46548 315.16684 315.89063 316.63678 317.4054 318.19638 319.0098 319.84564 320.70386 321.58453 322.4876 323.4131 324.36096 325.3313 326.324 327.33914 328.37668 329.43665 330.519 331.62378 332.75098 333.9006 335.07263 336.26706 337.4839 338.72314 339.98483 341.26892 342.57544 343.90433 345.25565 346.6294 348.02554 349.44412 350.88507 352.34848 353.8343 355.34247 356.8731 358.42615 360.0016 361.5995 363.21976 364.86243 366.52753 368.21506 369.925 371.65732 373.41208 375.18924 376.98883 378.81082 380.6552 382.52203 384.41126 386.3229 388.25696 390.21344 392.19232 394.1936 396.21735 398.26346 400.33197 402.4229 404.5363 406.67206 408.83026 411.01083 413.21387 415.43927 417.67923 419.91452 422.14417 424.3683 426.5868 428.79977 431.00714 433.20892 435.4052 437.59583 439.78088 441.96036 444.13422 446.30258 448.4653 450.6225 452.77408 454.92004 457.06043 459.19534 461.3246 463.4483 465.56638 467.6789 469.78586 471.88724 473.98303 476.0732 478.1579 480.2369 482.3104 484.3783 486.44058 488.4973 490.54855 492.59406 494.63406 496.66846 498.69736 500.7206 502.73825 504.75037 506.7569 508.75784 510.7532 512.743 514.7272 516.7058 518.6789 520.64637 522.6082 524.5646 526.5153 528.46045 530.4 532.334 534.26246 536.18525 538.10254 540.0142 541.92035 543.8208 545.71576 547.6051 549.4889 551.3671 553.23975 555.1068 556.96827 558.82416 560.67444 562.51917 564.35834 566.1919 568.0199 569.84235 571.6591 573.4704 575.27607 577.0762 578.87067 580.6596 582.443 584.22077 585.993 587.7596 589.52057 591.27607 593.026 594.77027 596.509 598.2421 599.9697 601.6917 603.4081 605.1189 606.82416 608.5238 610.21796 611.90644 613.5894 615.2667 616.9385 618.6047 620.2653 621.92035 623.5698 625.2137 626.852 628.48475 630.1118 631.7334 633.3494 634.95984 636.5647 638.1639 639.75757 641.3457 642.92817 644.5051 646.0764 647.6422 649.2024 650.75696 652.306 653.8495 655.3873 656.9197 658.4464 659.9675 661.48316 662.99305 664.49744 665.9963 667.4895 668.9772 670.4593 671.9358 673.40674 674.8721 676.33185 677.786 679.2346 680.6776 682.1151 683.547 684.9733 686.39405 687.8092 689.2186 690.6227 692.02106 693.4138 694.8011 696.18274 697.55884 698.9293 700.2943 701.6536 703.0073 704.3556 705.6982 707.0352 708.3666 709.6925 711.0128 712.3275 713.63666 714.9402 716.23816 717.5306 718.8174 720.09864 721.37427 722.6443 723.9089 725.1677 726.42115 727.6688 728.911 730.14765 731.37867 732.6041 733.824 735.0383 736.247 737.4501 738.6476 739.8396 741.026 742.2068 743.382 744.5517 745.71576 746.87427 748.02717 749.1745 750.3163 751.45246 752.583 753.70807 754.82746 755.94135 757.0497 758.15235 759.2495 760.341 761.427 762.5074 763.58216 764.6514 765.7151 766.7731 767.8256 768.87256 769.9139 770.9496 771.9798 773.0044 774.0234 775.0368 776.0447 777.047 778.04364 779.0348 780.02027 781.00025 781.9747 782.9434 783.9067 784.8643 785.8164 786.7629 787.7038 788.6391 789.5689 790.49305 791.4117 792.32465 793.23206 794.1339 795.0302 795.9209 796.80597 797.68555 798.5596 799.4279 800.2907 801.1479 802.0)) (quote bpf) 10))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj)) :from-file t)) nil nil (pairlis (quote (picture winpos winsize)) (list nil (om-make-point 10 40) (om-make-point 681 369))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 11" (quote list) (quote nil) (om-make-point 473 13) (om-make-point 63 30) (list 0 1000) "(0 1000)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 10" (quote list) (quote nil) (om-make-point 548 13) (om-make-point 42 30) (list 4 7) "(4 7)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 9" (quote list) (quote nil) (om-make-point 606 31) (om-make-point 21 30) 2 "2" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 8" (quote list) (quote nil) (om-make-point 202 206) (om-make-point 171 30) (list (list 4000 8000) (list 8000 13000)) "((4000 8000)(8000 13000))" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 177 43) (quote "A Tam-tam spectrum") "" (om-make-point 63 2) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 49 34) (om-make-point 170 136) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5810) (6336) (7794) (8286) (8466) (8696) (9094) (9290) (10086) (10480) (10616) (10718) (10942) (9184) (6322) (9278) (9452) (10586) (10084) (9288) (9456) (10364) (9186) (10086) (9286) (9464) (10084) (9446) (6312) (10080) (7054) (10084) (9450) (7056) (9286) (6318) (9452) (6214) (10616) (4164) (9286) (9764) (10084) (9188) (9442) (10084) (9442) (4164) (9290) (4164) (10086) (9284) (4164) (9318) (9460) (9764) (10480) (9442) (9762) (9288) (10480) (9188) (6342) (10084) (9442) (10084) (9444) (9184) (6312) (10086) (9440) (8466) (6348) (9188) (9188) (9186) (8466) (9188) (6322) (9180) (8466) (9188) (6244) (8466) (9190) (6308) (8468) (6330) (8468) (9096) (9096) (6304) (8468) (9096) (9096) (5802) (6320) (5800) (9096) (8470) (6342) (9096) (6322) (9096) (9096) (6288) (7792) (6332) (6360) (6302) (7794) (6346) (7796) (6332) (7796) (7796) (6308) (6350) (7796) (7054) (8286) (8698) (6334) (7796) (7056) (8696) (8698) (8698) (7796) (8698) (7796) (7056) (7796) (6340) (7796) (7056) (7796) (7796) (7796))) :lonset (quote (46 46 46 46 46 46 46 46 46 46 46 64 75 81 93 93 110 128 151 197 232 267 273 290 348 360 406 441 459 493 511 540 621 627 633 650 708 743 766 778 784 795 818 830 882 952 1010 1016 1051 1062 1080 1097 1132 1138 1155 1167 1190 1225 1236 1248 1260 1271 1324 1358 1364 1486 1532 1602 1625 1631 1654 1759 1805 1840 2119 2188 2206 2310 2322 2421 2473 2485 2508 2653 2664 2810 2897 2978 3129 3146 3262 3286 3349 3373 3466 3483 3512 3541 3576 3605 3645 3680 3785 3802 3918 4005 4005 4052 4162 4272 4313 4354 4464 4557 4603 4754 4766 4859 4905 4992 4998 5039 5056 5056 5068 5074 5108 5178 5201 5312 5352 5404 5497 5561 5654 5741 5799 5950 6107 6124)) :ldur (quote ((3419) (12) (3936) (4894) (1683) (4975) (3071) (29) (35) (1045) (691) (23) (29) (163) (342) (29) (81) (17) (75) (70) (110) (17) (493) (64) (139) (41) (46) (186) (163) (12) (17) (70) (17) (4348) (70) (969) (104) (12) (12) (12) (157) (17) (58) (389) (93) (58) (46) (12) (17) (23) (52) (52) (3489) (17) (29) (23) (52) (41) (17) (99) (52) (308) (17) (52) (29) (29) (41) (157) (650) (17) (52) (383) (17) (99) (29) (23) (174) (64) (418) (12) (93) (75) (12) (145) (75) (163) (116) (255) (104) (70) (52) (157) (52) (58) (75) (23) (110) (12) (64) (35) (75) (64) (128) (46) (17) (12) (267) (58) (41) (41) (104) (52) (93) (46) (99) (93) (23) (35) (93) (41) (215) (12) (35) (75) (209) (12) (12) (12) (70) (12) (64) (134) (64) (17) (46) (87) (46) (35) (17))) :lvel (quote ((27) (46) (38) (40) (31) (26) (33) (35) (46) (34) (42) (31) (32) (37) (46) (31) (36) (28) (36) (39) (28) (26) (37) (29) (30) (23) (27) (23) (44) (21) (18) (23) (22) (15) (24) (33) (18) (22) (14) (14) (20) (17) (23) (20) (20) (20) (15) (14) (15) (14) (16) (17) (12) (13) (13) (11) (12) (15) (14) (14) (13) (20) (19) (13) (13) (11) (11) (17) (25) (11) (12) (19) (13) (13) (11) (11) (16) (13) (20) (11) (16) (13) (10) (13) (11) (20) (13) (17) (12) (11) (11) (16) (12) (11) (11) (11) (14) (11) (11) (12) (14) (11) (14) (10) (10) (11) (15) (14) (11) (12) (14) (14) (14) (13) (13) (13) (11) (11) (13) (10) (11) (11) (12) (13) (11) (10) (11) (11) (12) (10) (12) (11) (11) (10) (11) (10) (11) (10) (10))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.13 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quote (((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.13 nil "" (om-make-point 200 200) (om-make-point 400 500))) ((0) (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.13 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj)) "x" nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode show-stems scale palette-mode)) (list 8 16 (list (quote ggff)) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil 0 (quote :osc-scoreplayer) 1 nil 1000 0 (om-make-point 742 405) (om-make-point 400 23) 0 1 (quote t) nil 0)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((12 0 1 0 nil 0) (0 0 1 1 nil 0) (11 0 3 0 nil 0) (2 0 3 1 nil 0) (10 0 5 0 nil 0) (4 0 5 1 nil 0) (9 0 7 0 nil 0) (6 0 7 1 nil 0) (21 0 8 0 nil 0) (22 0 8 1 nil 0) (23 0 8 2 nil 0) (26 1 9 0 nil 0) (24 0 9 1 nil 0) (20 1 9 2 nil 0) (26 1 10 0 nil 0) (24 0 10 1 nil 0) (20 1 10 2 nil 0) (26 1 11 0 nil 0) (17 0 11 1 nil 0) (20 1 11 2 nil 0) (26 1 12 0 nil 0) (16 0 12 1 nil 0) (20 1 12 2 nil 0) (7 0 13 1 nil 0) (5 0 14 1 nil 0) (3 0 15 1 nil 0) (1 0 19 1 nil 0) (8 0 20 1 nil 0))) nil 6.13))
