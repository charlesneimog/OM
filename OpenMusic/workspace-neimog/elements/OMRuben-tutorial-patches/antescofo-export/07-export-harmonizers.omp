; OM File Header - Saved 2020/09/23 20:56:11
; (6.13 :patc (om-make-point 118 110) (om-make-point 330 23) (om-make-point 1279 704) "" 183 0 nil "2020/09/23 20:55:45")
; End File Header
(in-package :om)(load-lib-for (quote ("OMRuben")))(setf *om-current-persistent* (om-load-patch1 "07-export-harmonizers" (quote ((let ((box (om-load-boxcall (quote bastype) "list 13" (quote list) (quote nil) (om-make-point 413 313) (om-make-point 181 30) (list (quote harmfactors1) (quote harmfactors2)) "(harmfactors1 harmfactors2)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 12" (quote list) (quote nil) (om-make-point 724 212) (om-make-point 219 30) (list (quote modulatorharm1) (quote modulatorharm2)) "(modulatorharm1 modulatorharm2)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "TEXTFILE 3" (quote textfile) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "input data or text" "exp-list" nil) (om-load-inputfunmenu1 (quote input-funmenu) "append or supersede" "ed-mode" "supersede" (list (list "append" "append") (list "supersede" "supersede"))) (om-load-inputfunmenu1 (quote input-funmenu) "eval interpretation mode" "eval-mode" "list" (list (list "text" "text") (list "data list" "data") (list "list" "list") (list "value" "value"))))) (om-make-point 862 430) (om-make-point 271 160) (load-buffer-textfile (quote ("(   modulatorharm1 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "(   modulatorharm2 4450 0.7874016 1000 9 0.69571 0.004928 5525 0.7874016 1000 9 0.73561 0.002635 6825 0.7874016 1000 9 0.942771 0.01771 8125 0.7874016 1000 9 0.61978 0.018706 8700 0.7874016 1000 9 0.825729 0.003485 8925 0.7874016 1000 9 0.44971004 3.63E-4 9200 0.7874016 1000 9 0.473559 0.004425 10000 0.7874016 1000 9 0.753714 0.014255 10500 0.7874016 1000 9 0.782839 0.010947 11300 0.7874016 1000 9 0.539858 0.017039)" "(   modulatorharm1 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "(   modulatorharm2 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "(   modulatorharm2 5900 0.7874016 1000 9 12.815683 0.021925 6975 0.7874016 1000 9 9.155567 0.008437 8275 0.7874016 1000 9 12.360097 0.017035 10150 0.7874016 1000 9 11.202328 0.012047 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "(   modulatorharm1 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "(   modulatorharm1 -2550 0.7874016 1000 9 14.044863 0.032039 -1475 0.7874016 1000 9 12.939385 0.031105003 -175 0.7874016 1000 9 12.972356 0.030436 1700 0.7874016 1000 9 19.57471 0.033007 4675 0.7874016 1000 9 13.382391 0.034437 5750 0.7874016 1000 9 17.464865 0.034601 7050 0.7874016 1000 9 18.567496 0.033454 8400 0.7874016 1000 9 18.376292 0.032739 8925 0.7874016 1000 9 13.169439 0.032599 9475 0.7874016 1000 9 17.90753 0.033222)" "(   modulatorharm2 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "(   modulatorharm1 5925 0.7874016 1000 9 13.18682 0.03814 7000 0.7874016 1000 9 13.901391 0.038844 8200 0.7874016 1000 9 13.107667 0.037298 8300 0.7874016 1000 9 12.185412 0.035202 9275 0.7874016 1000 9 12.801415 0.036194 10175 0.7874016 1000 9 13.05376 0.037444 10575 0.7874016 1000 9 12.550918 0.037885 12450 0.7874016 1000 9 12.621179 0.036019 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "(   modulatorharm2 4325 0.7874016 1000 9 8.458071 0.030072 5400 0.7874016 1000 9 10.108397 0.027412 6700 0.7874016 1000 9 9.332008 0.025774 8575 0.7874016 1000 9 15.621312 0.028489 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "(   modulatorharm1 4700 0.7874016 1000 9 10.577701 0.01357 4850 0.7874016 1000 9 10.401911 0.012603 8375 0.7874016 1000 9 10.604241 0.013091 8525 0.7874016 1000 9 10.425196 0.01705 9175 0.7874016 1000 9 10.40952 0.019301 9325 0.7874016 1000 9 10.972573 0.01877 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "(   modulatorharm2 6150 0.7874016 1000 9 8.610577 0.018696 6300 0.7874016 1000 9 8.383332 0.019225 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "(   modulatorharm1 -2300 0.7874016 1000 9 10.739584 0.028388998 -2150 0.7874016 1000 9 15.372003 0.027958 4925 0.7874016 1000 9 10.800669 0.026213 5075 0.7874016 1000 9 12.118223 0.023411 8650 0.7874016 1000 9 9.515065 0.02302 8800 0.7874016 1000 9 11.5859165 0.025598 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "(   modulatorharm2 6175 0.7874016 1000 9 16.989026 0.033903 6325 0.7874016 1000 9 17.475472 0.034389995 8450 0.7874016 1000 9 17.397755 0.029638999 8600 0.7874016 1000 9 19.708447 0.029736 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "(   modulatorharm1 4575 0.7874016 1000 9 18.480389 0.034417 4725 0.7874016 1000 9 14.881466 0.032368 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "(   modulatorharm1 1000 0.7874016 1000 9 17.672745 0.041751 4675 0.7874016 1000 9 18.014176 0.04173 5475 0.7874016 1000 9 17.67882 0.041748997 6650 0.7874016 1000 9 18.322762 0.041681 7725 0.7874016 1000 9 18.479479 0.041775 9300 0.7874016 1000 9 17.55063 0.041719 10325 0.7874016 1000 9 17.691847 0.041732997 11125 0.7874016 1000 9 17.420624 0.041706 11400 0.7874016 1000 9 17.861659 0.041778 12200 0.7874016 1000 9 18.487862 0.041687996)" "(   modulatorharm1 2450 0.7874016 1000 9 9.613249 0.013602 8100 0.7874016 1000 9 7.881854 0.034659 9175 0.7874016 1000 9 8.945808 0.032045 10750 0.7874016 1000 9 10.430344 0.038163 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "(   modulatorharm1 -6000 0.7874016 1000 9 6.169775 0.039206997 -350 0.7874016 1000 9 8.317663 0.036051 725 0.7874016 1000 9 10.68947 0.037662 1225 0.7874016 1000 9 6.156215 0.03753 2300 0.7874016 1000 9 10.603791 0.035904 4950 0.7874016 1000 9 6.801513 0.036972 6875 0.7874016 1000 9 9.981401 0.037492 7950 0.7874016 1000 9 9.292419 0.034879 9525 0.7874016 1000 9 6.78448 0.036604 10600 0.7874016 1000 9 10.090353 0.035327)" "(   modulatorharm1 2475 0.7874016 1000 9 5.663998 0.026301 4750 0.7874016 1000 9 6.8739 0.026043 8125 0.7874016 1000 9 8.249997 0.026246 9200 0.7874016 1000 9 9.033314 0.02794 10400 0.7874016 1000 9 8.28518 0.023062 10775 0.7874016 1000 9 8.434577 0.027424 11475 0.7874016 1000 9 8.053245 0.023039 13050 0.7874016 1000 9 6.4534497 0.024682 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "(   modulatorharm1 875 0.7874016 1000 9 13.92234 0.020961 6525 0.7874016 1000 9 13.76258 0.02561 7600 0.7874016 1000 9 9.786603 0.024631998 9175 0.7874016 1000 9 13.558765 0.025198 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "(   modulatorharm2 6200 0.7874016 1000 9 8.278574 0.029786999 6375 0.7874016 1000 9 17.76792 0.033830997 8825 0.7874016 1000 9 8.211326 0.031387 9875 0.7874016 1000 9 5.116137 0.025558 10050 0.7874016 1000 9 12.490467 0.033859 10675 0.7874016 1000 9 10.229589 0.027274998 10850 0.7874016 1000 9 15.880816 0.025899 12500 0.7874016 1000 9 13.602382 0.035016 13300 0.7874016 1000 9 17.302775 0.027878 6000 0.0 100 1 10 0.0)" "(   modulatorharm2 7650 0.7874016 1000 9 9.763434 0.04002 7825 0.7874016 1000 9 17.920817 0.035421 10275 0.7874016 1000 9 14.310637 0.040786 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "(   modulatorharm2 -800 0.7874016 1000 9 17.190863 0.017245 -625 0.7874016 1000 9 14.621093 0.037914 1825 0.7874016 1000 9 18.0148 0.024437 6425 0.7874016 1000 9 13.296815 0.036738 6600 0.7874016 1000 9 16.435378 0.037146997 9050 0.7874016 1000 9 18.466925 0.031552 10150 0.7874016 1000 9 13.719258 0.023951 10325 0.7874016 1000 9 16.052449 0.015597 12775 0.7874016 1000 9 16.583218 0.017454 6000 0.0 100 1 10 0.0)" "(   modulatorharm2 7675 0.7874016 1000 9 13.562417 0.031915 7850 0.7874016 1000 9 9.61744 0.025342 9950 0.7874016 1000 9 10.529412 0.035717 10125 0.7874016 1000 9 8.34143 0.031625 10300 0.7874016 1000 9 11.765437 0.027166 12575 0.7874016 1000 9 7.277301 0.036205 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "(   modulatorharm1 6075 0.7874016 1000 9 4.707811 0.027488 6250 0.7874016 1000 9 7.34588 0.024375 8700 0.7874016 1000 9 8.60425 0.025603 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "(   modulatorharm1 1975 0.7874016 1000 9 11.286554 0.02163 3400 0.7874016 1000 9 16.246926 0.012416 5650 0.7874016 1000 9 15.705989 0.015566 6450 0.7874016 1000 9 14.449103 0.017095 7075 0.7874016 1000 9 13.496454 0.018105 7875 0.7874016 1000 9 15.980624 0.022898 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "(   modulatorharm2 3425 0.7874016 1000 9 8.503465 0.018805 4850 0.7874016 1000 9 11.875311 0.014815 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "(   modulatorharm1 -5025 0.7874016 1000 9 7.604375 0.02026 -3600 0.7874016 1000 9 11.059088 0.018765 2200 0.7874016 1000 9 8.884074 0.0047789994 3625 0.7874016 1000 9 6.573323 0.014133 5925 0.7874016 1000 9 8.131104 0.015216 7350 0.7874016 1000 9 9.836671 0.021093 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "(   modulatorharm1 3450 0.7874016 1000 9 20.314757 0.024714 4875 0.7874016 1000 9 21.527136 0.017018 5725 0.7874016 1000 9 17.622056 0.01811 7150 0.7874016 1000 9 16.650984 0.02046 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "(   modulatorharm1 1850 0.7874016 1000 9 11.25753 0.036541 3275 0.7874016 1000 9 18.909867 0.035655 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0 6000 0.0 100 1 10 0.0)" "" "" "")) (quote textfile) "supersede" "list") "x" nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 5" (om-make-point 409 98) (quote "These harmonizers have additional lfo settings, selected by bpfs within given ranges. To use this, make sure the max patch splits the list in 6, not 4 like the other 2. ") "" (om-make-point 827 587) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 11" (quote list) (quote nil) (om-make-point 1197 74) (om-make-point 27 30) 2 "2" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 10" (quote list) (quote nil) (om-make-point 1150 49) (om-make-point 45 30) (list 7 45) "(7 45)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 9" (quote list) (quote nil) (om-make-point 1058 59) (om-make-point 59 30) (list 0 1000) "(0 1000)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-RANDOM-SPLINE-BPFS 2" (quote r-random-spline-bpfs) (quote ((om-load-inputfun (quote input-funbox) "y-minmax-list" "Y-MINMAX-LIST" (list 0 1000)) (om-load-inputfun (quote input-funbox) "points-minmax-list" "POINTS-MINMAX-LIST" (list 7 9)) (om-load-inputfun (quote input-funbox) "number-of-bpfs" "NUMBER-OF-BPFS" 3))) (om-make-point 1082 114) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 8" (quote list) (quote nil) (om-make-point 1017 77) (om-make-point 27 30) 2 "2" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 7" (quote list) (quote nil) (om-make-point 970 52) (om-make-point 45 30) (list 7 45) "(7 45)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 6" (quote list) (quote nil) (om-make-point 878 62) (om-make-point 59 30) (list 0 1000) "(0 1000)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 5" (quote list) (quote nil) (om-make-point 1073 270) (om-make-point 77 30) (list 0.0 0.05) "(.000 .05)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 4" (quote list) (quote nil) (om-make-point 999 271) (om-make-point 49 30) (list 0.1 25) "(.1 25)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPF-LIB" (quote bpf-lib) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of BPF objects" "bpf-list" (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0 100)) (quote (0 100)) (quote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj))))) (om-make-point 962 209) (om-make-point 40 60) (if (find-class (quote bpf-lib) nil) (make-instance (quote bpf-lib) :bpf-list (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 1.9312685 3.8264387 5.6855097 7.5084825 9.295357 11.046134 12.760813 14.439391 16.081871 17.688256 19.258538 20.792725 22.29081 23.752797 25.178689 26.568478 27.92217 29.239762 30.52126 31.766655 32.975953 34.149155 35.286255 36.387257 37.452164 38.48097 39.473675 40.448334 41.422997 42.39765 43.372307 44.346966 45.321625 46.296284 47.27094 48.2456 49.220257 50.194916 51.169575 52.144234 53.11889 54.09355 55.06821 56.04287 57.017525 57.992184 58.966843 59.941498 60.916157 61.890816 62.865475 63.84013 64.81479 65.78945 66.76411 67.73877 68.71343 69.688095 70.66276 71.63741 72.612076 73.58674 74.5614 75.53606 76.51073 77.48538 78.460045 79.43471 80.40936 81.38403 82.35869 83.33335 84.308014 85.28267 86.25734 87.231995 88.20666 89.18132 90.155976 91.130646 92.1053 93.07996 94.05462 95.02928 96.003945 96.97861 97.95328 98.927925 99.90259 100.87725 101.85192 102.826584 103.80125 104.7759 105.750565 106.72522 107.69988 108.674546 109.64921 110.62388 111.59854 112.5732 113.54786 114.52252 115.49717 116.47184 117.4465 118.421166 119.39582 120.37047 121.34512 122.319786 123.29443 124.269104 125.24377 126.21841 127.19307 128.16773 129.14237 130.11702 131.09168 132.06633 133.04099 134.01564 134.9903 135.96495 136.9396 137.91426 138.88892 139.86359 140.83823 141.8129 142.78754 143.7622 144.73685 145.7115 146.68618 147.66082 148.63547 149.61013 150.58478 151.55945 152.5341 153.50875 154.4834 155.45806 156.43271 157.40737 158.38202 159.35669 160.33133 161.30599 162.28064 163.2553 164.22995 165.2046 166.17926 167.15392 168.12857 169.10323 170.07788 171.05254 172.02719 173.00185 173.9765 174.95116 175.92583 176.90047 177.87512 178.8498 179.82444 180.7991 181.77375 182.7484 183.72306 184.69773 185.67238 186.64704 187.62168 188.59632 189.57099 190.54564 191.5203 192.49495 193.4696 194.44426 195.41892 196.39357 197.36823 198.34288 199.31754 200.2922 201.26685 202.24149 203.21616 204.19081 205.16547 206.14012 207.11478 208.08943 209.06409 210.03876 211.0134 211.98807 212.9627 213.93737 214.91202 215.88668 216.86133 217.83599 218.81064 219.78531 220.75995 221.73459 222.70926 223.68393 224.65859 225.63321 226.6079 227.58254 228.55719 229.53188 230.50652 231.48117 232.45583 233.4305 234.40512 235.37978 236.35446 237.3291 238.30376 239.27841 240.25308 241.2277 242.2024 243.17705 244.15169 245.12635 246.10097 247.07566 248.0503 249.02495 249.99964 250.97426 251.94893 252.92359 253.89826 254.87288 255.84754 256.8222 257.79688 258.7715 259.74616 260.72083 261.6955 262.67014 263.6448 264.61945 265.59412 266.56876 267.5434 268.51807 269.49274 270.4674 271.44202 272.4167 273.39136 274.366 275.34064 276.3153 277.28998 278.26462 279.2393 280.21393 281.1886 282.16324 283.1379 284.11258 285.08722 286.06186 287.0365 288.0112 288.98584 289.96048 290.93515 291.90982 292.88446 293.8591 294.83374 295.8084 296.78308 297.75775 298.7324 299.70703 300.6817 301.65634 302.63098 303.60565 304.5803 305.55496 306.52963 307.50427 308.4789 309.45358 310.4282 311.4029 312.37756 313.3522 314.32684 315.3015 316.27618 317.25082 318.2255 319.20013 320.17477 321.1494 322.12408 323.09876 324.07343 325.04807 326.0227 326.99738 327.97202 328.9467 329.92136 330.896 331.87064 332.8453 333.81995 334.79462 335.76926 336.7439 337.71857 338.69324 339.6679 340.64255 341.61722 342.59186 343.5665 344.54114 345.51584 346.49048 347.46512 348.4398 349.41443 350.3891 351.36377 352.3384 353.31305 354.28772 355.2624 356.23703 357.2117 358.18634 359.16098 360.13568 361.11032 362.08496 363.0596 364.0343 365.00894 365.9836 366.95822 367.9329 368.90756 369.88223 370.85684 371.83148 372.80618 373.7808 374.7555 375.73016 376.7048 377.67944 378.6541 379.62875 380.6034 381.57806 382.55273 383.5274 384.50204 385.4767 386.45136 387.426 388.40067 389.3753 390.34998 391.32462 392.29932 393.27393 394.2486 395.22324 396.1979 397.17252 398.14722 399.12186 400.09656 401.07117 402.04584 403.02048 403.99512 404.9698 405.94443 406.9191 407.89374 408.8684 409.84305 410.81772 411.7924 412.76703 413.7417 414.71634 415.69098 416.66565 417.6403 418.61493 419.5896 420.56424 421.53894 422.51358 423.48822 424.46292 425.43753 426.4122 427.38684 428.3615 429.33618 430.31085 431.28546 432.26013 433.23477 434.20944 435.1841 436.15875 437.1334 438.10812 439.08276 440.05737 441.03207 442.00678 442.98135 443.95602 444.93066 445.9053 446.87997 447.8546 448.82928 449.804 450.77863 451.75324 452.72794 453.70258 454.67725 455.65183 456.62653 457.6012 458.5759 459.55048 460.52515 461.4998 462.4745 463.44916 464.4238 465.39844 466.3731 467.34775 468.32242 469.29706 470.2717 471.24637 472.22095 473.19565 474.17032 475.14496 476.11963 477.09433 478.0689 479.0436 480.01828 480.99292 481.9676 482.94223 483.91687 484.89154 485.86624 486.84082 487.8155 488.79013 489.76483 490.7395 491.71408 492.68875 493.66345 494.63803 495.61276 496.58746 497.56204 498.5367 499.5114 500.486 501.46066 502.43536 503.40997 504.38467 505.3593 506.33395 507.30862 508.28326 509.25793 510.2325 511.2072 512.1819 513.15656 514.1312 515.1059 516.0805 517.0552 518.02985 519.00446 519.9791 520.9538 521.9284 522.9031 523.8778 524.85236 525.827 526.8017 527.77637 528.751 529.7257 530.7003 531.675 532.64966 533.6243 534.59894 535.5736 536.5483 537.52295 538.49756 539.4722 540.4469 541.4215 542.39624 543.37085 544.3455 545.3202 546.2948 547.2695 548.24415 549.2188 550.1935 551.1681 552.14277 553.1174 554.09205 555.0667 556.0414 557.01606 557.99067 558.9654 559.94 560.9147 561.88935 562.86396 563.8386 564.81324 565.78797 566.7626 567.7373 568.7119 569.6866 570.6612 571.63587 572.6105 573.5852 574.5598 575.5345 576.50916 577.48377 578.4585 579.4331 580.4078 581.3824 582.35706 583.3317 584.3064 585.281 586.2557 587.23035 588.205 589.1797 590.1543 591.12897 592.10364 593.0783 594.053 595.0276 596.00226 596.97687 597.95154 598.9262 599.9009 600.87555 601.85016 602.8248 603.7995 604.7741 605.7488 606.72345 607.6981 608.6727 609.6474 610.6221 611.5967 612.57135 613.546 614.5207 615.4953 616.47 617.4446 618.4193 619.3939 620.3685 621.34327 622.31794 623.2926 624.2673 625.2419 626.2165 627.19117 628.1659 629.14045 630.1151 631.08985 632.06446 633.0391 634.0138 634.9884 635.9631 636.93775 637.91236 638.8871 639.8617 640.8363 641.811 642.78565 643.7603 644.735 645.7096 646.68427 647.65894 648.6336 649.6082 650.5829 651.55756 652.5322 653.50684 654.4815 655.4562 656.43085 657.40546 658.3801 659.3548 660.32947 661.3041 662.27875 663.2534 664.228 665.2027 666.17737 667.15204 668.1267 669.1014 670.076 671.05066 672.02527 672.99994 673.9746 674.9493 675.92395 676.89856 677.8732 678.8479 679.8225 680.79725 681.77186 682.7465 683.7212 684.6958 685.67054 686.64515 687.61976 688.5944 689.56916 690.54377 691.51844 692.4931 693.4678 694.4424 695.417 696.3917 697.36634 698.341 699.3156 700.29035 701.26496 702.2397 703.21424 704.1889 705.1636 706.1383 707.11286 708.08765 709.0622 710.0369 711.0115 711.98615 712.9608 713.9355 714.91016 715.8848 716.85944 717.8341 718.8088 719.78345 720.7581 721.7327 722.7074 723.68207 724.65674 725.6313 726.60596 727.5807 728.55536 729.52997 730.5046 731.47925 732.4539 733.4286 734.40326 735.3779 736.3526 737.3272 738.3019 739.2765 740.2512 741.2258 742.2005 743.1752 744.1498 745.12446 746.0991 747.0737 748.04847 749.0231 749.99775 750.9724 751.947 752.9217 753.8963 754.87104 755.84565 756.82026 757.79505 758.7696 759.74427 760.719 761.6936 762.6683 763.6429 764.61756 765.59217 766.5669 767.54157 768.51624 769.49085 770.46546 771.4402 772.4148 773.3895 774.36414 775.33875 776.3135 777.2881 778.2627 779.2374 780.21204 781.18665 782.1614 783.13605 784.1106 785.0854 786.06 787.03467 788.0093 788.98395 789.9586 790.9332 791.9079 792.88257 793.85724 794.8319 795.8065 796.78125 797.75586 798.73047 799.7052 800.6798 801.6544 802.62915 803.6037 804.57837 805.55304 806.5277 807.5023 808.477 809.4517 810.42634 811.40094 812.3757 813.3503 814.3249 815.29957 816.27424 817.24884 818.2236 819.1982 820.17286 821.1475 822.12214 823.0968 824.0715 825.04615 826.0209 826.9955 827.9701 828.94477 829.9194 830.89405 831.8688 832.8434 833.818 834.7927 835.7674 836.742 837.7167 838.6913 839.666 840.6406 841.6153 842.58997 843.56464 844.5392 845.5139 846.4885 847.4632 848.43787 849.41254 850.3872 851.3619 852.3365 853.31116 854.28577 855.26044 856.23517 857.20984 858.1845 859.1591 860.1338 861.10846 862.0831 863.05774 864.0324 865.0071 865.9817 866.95636 867.9311 868.9057 869.8803 870.855 871.8296 872.8043 873.77894 874.75367 875.7283 876.7029 877.67756 878.6522 879.62684 880.60157 881.57624 882.55085 883.5255 884.50007 885.47486 886.44947 887.42414 888.3988 889.3734 890.3482 891.32276 892.29737 893.27204 894.2467 895.2213 896.1961 897.17066 898.1454 899.11994 900.0946 901.06934 902.044 903.0187 903.9933 904.9681 905.9426 906.91724 907.8919 908.8666 909.8412 910.81586 911.7905 912.76526 913.7398 914.7145 915.68915 916.6639 917.6384 918.61316 919.5877 920.5625 921.5371 922.51166 923.4863 924.4611 925.4357 926.4104 927.3851 928.3596 929.3342 930.309 931.2836 932.2583 933.233 934.2076 935.18226 936.1569 937.13154 938.1062 939.0809 940.05555 941.03016 942.00495 942.9795 943.9541 944.9289 945.9035 946.87806 947.8527 948.8274 949.8021 950.7768 951.75147 952.7261 953.7006 954.6754 955.65 956.6246 957.59937 958.574 959.5485 960.5233 961.51587 962.54456 963.6094 964.71027 965.8472 967.02027 968.2295 969.4748 970.75617 972.07355 973.4273 974.81684 976.24274 977.70466 979.2025 980.7366 982.30665 983.91297 985.5553 987.23377 988.9484 990.69904 992.48566 994.30866 996.16767 998.0626 1000.0)) (quote (807.0 749.1763 693.631 640.3642 589.3758 540.66596 494.23456 450.08163 408.20706 368.61108 331.29352 296.2544 263.49377 233.0116 204.8079 178.88269 155.23593 133.86763 114.777794 97.966416 83.4335 71.17905 61.20305 53.505513 48.08644 44.94583 44.08367 45.499985 48.294217 51.56582 55.31478 59.541115 64.24481 69.42587 75.084305 81.22009 87.83325 94.92378 102.49167 110.53693 119.059555 128.05954 137.5369 147.49161 157.9237 168.83315 180.21997 192.08417 204.4257 217.24462 230.5409 244.31455 258.56555 273.2939 288.49966 303.35498 317.03198 329.53067 340.85104 350.99304 359.95673 367.74207 374.3491 379.77777 384.0281 387.1002 388.99387 389.70923 389.24622 387.60495 384.7853 380.7873 375.61102 369.25638 361.72342 353.0121 343.12247 332.05447 319.80817 306.38358 291.78058 275.99927 260.37927 246.25997 233.64134 222.52342 212.90622 204.78968 198.17385 193.0587 189.44426 187.33049 186.71744 187.60506 189.9934 193.88242 199.27213 206.16252 214.55362 224.44542 235.83792 248.7311 263.12497 279.01956 296.4148 315.31076 335.70743 357.60477 381.00278 404.38318 426.2286 446.5391 465.31458 482.55508 498.26068 512.4313 525.0669 536.1675 545.7332 553.7639 560.25965 565.22046 568.6463 570.5371 570.893 569.7139 566.9998 562.7508 556.9668 549.6478 540.79395 530.405 518.4812 505.02237 490.02856 473.49976 456.58627 440.4382 425.0555 410.43826 396.5865 383.50012 371.17914 359.62366 348.83356 338.80887 329.54962 321.0558 313.32742 306.36444 300.16693 294.7348 290.0681 286.16687 283.031 280.6606 279.05563 278.21606 278.14194 278.83325 280.28998 282.51215 285.4997 288.94547 292.54215 296.28973 300.18817 304.23752 308.4378 312.7889 317.29095 321.94385 326.74765 331.70236 336.80795 342.0644 347.47177 353.03003 358.73917 364.5992 370.61014 376.77197 383.08466 389.54828 396.16278 402.92813 409.84442 416.91156 424.12964 431.49854 438.83807 445.96777 452.8875 459.59735 466.09738 472.3875 478.4678 484.33814 489.99872 495.44937 500.69012 505.72107 510.54205 515.1532 519.5545 523.74585 527.7274 531.499 535.0608 538.4127 541.55475 544.4869 547.2091 549.72156 552.02405 554.1167 555.9995 557.8609 559.88965 562.08576 564.4492 566.98 569.6781 572.54364 575.5766 578.77674 582.1443 585.67926 589.3815 593.2511 597.288 601.4924 605.864 610.4031 615.10944 619.98316 625.02424 630.23267 635.6084 641.1515 646.86207 652.73987 658.78504 664.99756 670.8922 675.98304 680.27 683.75324 686.43256 688.30805 689.3797 689.6476 689.1115 687.7716 685.6279 682.6805 678.9291 674.37397 669.0149 662.85206 655.8854 648.11475 639.54047 630.1623 619.9803 608.9944 597.2047 584.61115 571.2138 557.0126 542.0075 527.1874 513.54285 501.07385 489.78043 479.6626 470.72034 462.95364 456.36255 450.947 446.707 443.6426 441.75378 441.0405 441.50287 443.14075 445.95422 449.94327 455.10794 461.44806 468.96387 477.6552 487.52216 498.56464 510.7827 524.17634 538.74555 554.49036 570.19336 584.63434 597.8134 609.73047 620.3855 629.77857 637.90967 644.7787 650.38575 654.73084 657.8139 659.635 660.1942 659.4913 657.52637 654.29957 649.81067 644.05976 637.04694 628.7721 619.2353 608.4364 596.3756 583.05274 568.46796 552.6211 535.5123 518.20655 501.77188 486.20822 471.5156 457.69403 444.7436 432.6641 421.4557 411.11835 401.65204 393.05676 385.33258 378.4794 372.4973 367.38623 363.14624 359.77728 357.27936 355.6525 354.8967 355.0119 355.9982 357.85553 360.58392 364.18335 368.65387 373.9954 379.78412 385.59473 391.42737 397.28192 403.15845 409.0569 414.97726 420.91965 426.88394 432.87015 438.87836 444.90848 450.9606 457.03458 463.13058 469.24844 475.3884 481.5502 487.73395 493.9397 500.16736 506.41696 512.68854 518.98206 525.2975 531.6349 537.99427 543.9573 549.1041 553.4347 556.94916 559.6474 561.5295 562.5954 562.84516 562.2787 560.8961 558.69727 555.6822 551.8511 547.20374 541.7402 535.4605 528.3646 520.4525 511.72427 502.1798 491.8192 480.6424 468.64944 455.84027 442.21497 427.77344 412.51572 397.50284 383.7999 371.40698 360.32407 350.55118 342.08826 334.93536 329.0925 324.55957 321.33667 319.42383 318.82092 319.52808 321.5452 324.8723 329.50946 335.4566 342.71375 351.28088 361.15802 372.34518 384.84235 398.6495 413.76666 430.19385 447.931 466.97818 486.42706 505.3637 523.78876 541.7022 559.1039 575.99396 592.3724 608.23914 623.59424 638.43775 652.7695 666.58967 679.89814 692.69495 704.9801 716.7536 728.0155 738.7657 749.0043 758.73114 767.9464 776.64997 784.8419 792.52216 799.6908 806.3478 812.49305 817.9631 822.59375 826.3848 829.33655 831.4486 832.7212 833.1543 832.7479 831.502 829.4166 826.49176 822.72736 818.1235 812.68006 806.3972 799.27485 791.3129 782.5116 772.8706 762.39026 751.0704 738.911 725.9121 712.0738 697.3959 681.8785 665.5216 649.1147 633.4512 618.5312 604.35474 590.9217 578.2322 566.2862 555.0835 544.6244 534.9088 525.93665 517.70795 510.2228 503.48105 497.48282 492.22815 487.71686 483.949 480.92477 478.64392 477.1066 476.31265 476.26224 476.95532 478.39188 480.57193 483.4954 486.4976 488.90994 490.73242 491.96506 492.6079 492.66086 492.124 490.99722 489.2806 486.9742 484.078 480.59186 476.51587 471.85007 466.59445 460.74896 454.31363 447.28845 439.67343 431.46857 422.67386 413.2893 403.3149 392.75067 381.59656 369.85266 357.51886 345.47122 334.59088 324.87793 316.3323 308.954 302.7431 297.6995 293.82324 291.11438 289.57278 289.19858 289.9917 291.95218 295.08 299.37512 304.83765 311.46747 319.2647 328.22922 338.36108 349.6603 362.1269 375.76077 390.56204 406.53064 423.66657 441.96985 460.55853 478.545 495.92932 512.7114 528.89136 544.4691 559.4446 573.818 587.5891 600.7581 613.32496 625.2895 636.6519 647.41205 657.5701 667.126 676.0796 684.431 692.18036 699.32734 705.87226 711.81495 717.1554 721.89374 726.02985 729.5638 732.49555 735.1552 737.87525 740.6557 743.49646 746.3976 749.3591 752.3809 755.463 758.60566 761.8085 765.0718 768.3954 771.7793 775.2237 778.7284 782.2934 785.9188 789.6045 793.35065 797.15717 801.0239 804.95105 808.9386 812.9865 817.0947 821.2633 825.4923 829.3504 832.4033 834.65094 836.09345 836.7307 836.5628 835.5896 833.8113 831.2277 827.839 823.64496 818.6458 812.84144 806.23175 798.817 790.59705 781.5718 771.74134 761.1057 749.665 737.4189 724.3676 710.5112 695.8495 680.3826 664.1106 647.0333 630.1928 614.639 600.37177 587.3913 575.6975 565.2904 556.17 548.3363 541.78925 536.5289 532.5552 529.86817 528.46784 528.3542 529.5273 531.98707 535.73346 540.7666 547.08637 554.6929 563.586 573.76587 585.2324 597.9856 612.0255 627.35206 643.96534 660.47516 675.48017 688.98047 700.9758 711.4665 720.4524 727.93354 733.9098 738.3813 741.348 742.8099 742.7671 741.2194 738.167 733.60975 727.54767 719.9809 710.9093 700.3329 688.2518 674.6658 659.575 642.9795 624.8791 605.2739 584.16407 561.5493 538.9078 517.72986 498.01563 479.76495 462.97797 447.65454 433.79486 421.39877 410.46634 400.9975 392.99234 386.4508 381.37293 377.75864 375.60803 374.92102 375.6977 377.938 381.6419 386.80945 393.44064 401.5355 411.094 422.1161 434.60184 448.55118 463.9642 479.8269 495.1162 509.83206 523.9746 537.5437 550.5394 562.9618 574.81086 586.08637 596.7886 606.9175 616.47284 625.4549 633.86365 641.6989 648.9608 655.6493 661.76447 667.3063 672.2746 676.6696 680.4912 683.7394 686.41425 688.5157 690.0437 690.9984 691.4227 691.36017 690.8105 689.7739 688.25037 686.23987 683.7423 680.75794 677.2865 673.3281 668.8828 663.9505 658.53125 652.62494 646.2318 639.3516 631.9845 624.13044 615.7894 606.96137 597.64637 587.8444 577.55555 566.7796 555.51685 543.767 531.5302 519.61597 508.84168 499.2072 490.71277 483.35815 477.1434 472.06866 468.13376 465.33878 463.68372 463.1686 463.79334 465.55804 468.4626 472.50705 477.6915 484.0158 491.48 500.08414 509.82813 520.7121 532.73597 545.89966 560.20337 575.647 592.23047 609.9538 627.8611 644.9865 661.32996 676.89155 691.6712 705.66907 718.885 731.31904 742.9712 753.8415 763.9299 773.2364 781.7609 789.5038 796.4645 802.64344 808.0406 812.6557 816.489 819.5404 821.80994 823.29755 824.00336 823.9271 823.06916 821.4292 819.00745 816.28266 813.73896 811.37635 809.19477 807.19434 805.375 803.73664 802.27936 801.0032 799.908 798.99396 798.261 797.70905 797.33826 797.14844 797.13965 797.312 797.6655 798.19996 798.9155 799.81214 800.88984 802.14856 803.58844 805.20936 807.01136 808.9943 810.6189 811.3395 811.156 810.0686 808.0772 805.1819 801.3825 796.67926 791.07196 784.5608 777.1455 768.8264 759.6032 749.4761 738.445 726.5099 713.67084 699.92786 685.2809 669.73 653.2751 635.91614 617.6533 598.48645 578.41565 557.44086 535.56214 513.9532 493.8011 475.10568 457.8671 442.08536 427.76035 414.89212 403.48065 393.52597 385.02805 377.98694 372.40262 368.27506 365.60428 364.3903 364.63306 366.3326 369.48892 374.10205 380.17194 387.6986 396.68207 407.12228 419.0193 432.37305 447.18362 463.451 479.90064 495.24323 509.4789 522.60755 534.6293 545.54395 555.3517 564.05237 571.6461 578.1329 583.51264 587.7854 590.95124 593.01 593.9618 593.80665 592.54444 590.17536 586.69916 582.116 576.4259 569.62885 561.72474 552.7136 542.5956 531.3705 519.0385 506.35483 494.08414 482.22632 470.7813 459.7493 449.1301 438.92383 429.13046 419.74994 410.78235 402.22763 394.08582 386.35684 379.04083 372.13763 365.64743 359.57007 353.90555 348.65396 343.8153 339.38947 335.3766 331.77655 328.58942 325.8152 323.45383 321.50537 320.0448 319.14798 318.81497 319.04572 319.84027 321.19858 323.1207 325.6066 328.65625 332.2697 336.44696 341.18796 346.49274 352.36133 358.7937 365.7898 373.34973 381.47345 390.1609 399.41217 409.22723 419.60605 430.54868 442.05505 454.12527 466.75925 479.99997)) (quote bpf) 10))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 1.910379 3.7976716 5.6618776 7.502999 9.3210335 11.115981 12.887842 14.636619 16.362309 18.064913 19.74443 21.400862 23.034205 24.64446 26.231637 27.795718 29.336718 30.854634 32.349465 33.8212 35.269856 36.695427 38.097908 39.477307 40.83362 42.16684 43.47698 44.76403 46.027996 47.268876 48.48667 49.681378 50.853 52.001534 53.126984 54.229348 55.30862 56.364815 57.397923 58.407937 59.39487 60.36034 61.3213 62.28226 63.24322 64.204186 65.165146 66.126114 67.08707 68.04803 69.00899 69.96995 70.930916 71.89188 72.85284 73.81379 74.77475 75.73571 76.69668 77.65763 78.61859 79.57955 80.54051 81.50147 82.46243 83.4234 84.38435 85.345314 86.306275 87.267235 88.228196 89.189156 90.150116 91.11108 92.07204 93.033 93.99396 94.95492 95.91588 96.87683 97.8378 98.79875 99.75972 100.72068 101.68164 102.64259 103.60355 104.56452 105.52548 106.48644 107.4474 108.40835 109.369316 110.33028 111.291245 112.2522 113.213166 114.17413 115.135086 116.09604 117.05701 118.01796 118.97893 119.93989 120.90084 121.86181 122.82276 123.78373 124.7447 125.705635 126.6666 127.62757 128.58853 129.54949 130.51045 131.4714 132.43238 133.39334 134.3543 135.31525 136.27622 137.23717 138.19812 139.15909 140.12006 141.08103 142.04198 143.00293 143.9639 144.92485 145.88582 146.84677 147.80774 148.7687 149.72966 150.69062 151.65158 152.61254 153.5735 154.53447 155.49542 156.45639 157.41736 158.37831 159.33927 160.30023 161.26119 162.22214 163.1831 164.14406 165.10503 166.066 167.02695 167.9879 168.94887 169.90982 170.87079 171.83176 172.79271 173.75366 174.71463 175.6756 176.63655 177.5975 178.55847 179.51944 180.4804 181.44136 182.40232 183.36327 184.32425 185.2852 186.24617 187.20714 188.16809 189.12905 190.09 191.05095 192.01194 192.9729 193.93386 194.8948 195.85576 196.81673 197.7777 198.73865 199.69962 200.66056 201.62152 202.58249 203.54346 204.50443 205.46538 206.42632 207.38729 208.34825 209.3092 210.27017 211.23114 212.1921 213.15305 214.11402 215.07498 216.03594 216.99689 217.95786 218.91883 219.87978 220.84073 221.8017 222.76267 223.72362 224.68457 225.64554 226.6065 227.56748 228.52841 229.48938 230.45032 231.41129 232.37226 233.33319 234.29416 235.25513 236.2161 237.17704 238.138 239.09897 240.05994 241.02089 241.98184 242.94281 243.90378 244.86473 245.8257 246.78667 247.74764 248.70858 249.66956 250.63051 251.59148 252.55245 253.51342 254.47432 255.43532 256.39627 257.3572 258.31818 259.27914 260.2401 261.20108 262.16202 263.123 264.08395 265.04492 266.00586 266.96686 267.9278 268.88873 269.8497 270.81067 271.77164 272.7326 273.69354 274.6545 275.61548 276.57645 277.53738 278.49835 279.45932 280.4203 281.38126 282.3422 283.30316 284.26413 285.2251 286.18604 287.147 288.10797 289.0689 290.0299 290.99084 291.9518 292.91278 293.87372 294.8347 295.79565 296.7566 297.7176 298.67853 299.6395 300.60043 301.5614 302.52237 303.4833 304.4443 305.40527 306.3662 307.3272 308.28815 309.24908 310.21005 311.17102 312.13196 313.09293 314.0539 315.01486 315.9758 316.93677 317.89774 318.8587 319.81967 320.78058 321.7416 322.70255 323.66348 324.62448 325.58542 326.5464 327.50732 328.46832 329.42926 330.39023 331.3512 332.31213 333.2731 334.23407 335.19504 336.15598 337.11694 338.07788 339.03888 339.99982 340.9608 341.92178 342.88272 343.8437 344.80466 345.7656 346.72656 347.68753 348.6485 349.60947 350.5704 351.53137 352.4923 353.4533 354.41425 355.3752 356.33618 357.29715 358.25806 359.21906 360.18 361.141 362.10193 363.06293 364.02387 364.9848 365.94577 366.90674 367.86768 368.82864 369.7896 370.75058 371.71155 372.6725 373.63348 374.59442 375.5554 376.51636 377.4773 378.43823 379.39923 380.3602 381.32114 382.2821 383.24307 384.204 385.16498 386.12595 387.0869 388.04788 389.00885 389.9698 390.93076 391.8917 392.85266 393.81366 394.7746 395.73553 396.6965 397.65747 398.6184 399.57938 400.54034 401.5013 402.46228 403.42325 404.38422 405.34515 406.30612 407.26706 408.22803 409.189 410.14996 411.1109 412.07187 413.03284 413.9938 414.95477 415.9157 416.87668 417.83765 418.7986 419.75955 420.72052 421.6815 422.64243 423.6034 424.56433 425.5253 426.4863 427.44727 428.4082 429.36914 430.3301 431.29108 432.252 433.21298 434.17398 435.13492 436.0959 437.05685 438.01782 438.97876 439.9397 440.90067 441.86163 442.8226 443.78357 444.7445 445.7055 446.6664 447.62738 448.58835 449.54932 450.51025 451.47125 452.43222 453.39316 454.35413 455.3151 456.27606 457.23703 458.198 459.1589 460.11993 461.08084 462.0418 463.00278 463.96375 464.9247 465.88562 466.8466 467.80762 468.76846 469.7295 470.69046 471.65137 472.61234 473.57336 474.5342 475.49518 476.45627 477.4171 478.37808 479.33905 480.30002 481.261 482.22195 483.18292 484.1439 485.10486 486.06577 487.02673 487.9877 488.94867 489.90964 490.8706 491.83157 492.79254 493.75348 494.71445 495.6754 496.63638 497.59735 498.55832 499.51926 500.4802 501.4412 502.40213 503.3631 504.3241 505.28503 506.246 507.20697 508.16794 509.12885 510.0898 511.05078 512.0117 512.9727 513.93366 514.89466 515.8556 516.8166 517.77747 518.73847 519.6994 520.6604 521.62134 522.5823 523.5433 524.5043 525.4652 526.42615 527.3871 528.3481 529.309 530.27 531.23096 532.1919 533.1529 534.11384 535.0748 536.03577 536.9967 537.9577 538.91864 539.87964 540.8406 541.8015 542.7625 543.7234 544.6844 545.6453 546.6063 547.5673 548.52826 549.4892 550.4502 551.4111 552.3721 553.333 554.294 555.255 556.21595 557.1769 558.1379 559.0988 560.0598 561.02076 561.9817 562.9426 563.9036 564.8646 565.82557 566.7865 567.74744 568.70844 569.66944 570.6304 571.5913 572.55225 573.5132 574.4742 575.4352 576.3961 577.35706 578.318 579.27894 580.2399 581.2009 582.16187 583.1228 584.08374 585.04474 586.0057 586.9667 587.9276 588.88855 589.84955 590.81055 591.7715 592.7325 593.69336 594.65436 595.6153 596.57624 597.53724 598.49817 599.4591 600.4201 601.3811 602.34205 603.303 604.2639 605.2249 606.1859 607.14686 608.1078 609.0687 610.0297 610.99067 611.95166 612.9126 613.87354 614.83454 615.7955 616.7565 617.7174 618.67835 619.6393 620.60035 621.5612 622.5222 623.48316 624.4441 625.4051 626.366 627.327 628.28797 629.2489 630.20984 631.17084 632.1317 633.09284 634.0538 635.0147 635.97565 636.93665 637.8976 638.8585 639.81946 640.78046 641.74146 642.7024 643.6633 644.6243 645.5852 646.5462 647.5072 648.46814 649.4291 650.39 651.351 652.312 653.27295 654.2339 655.1948 656.1558 657.1168 658.07776 659.0387 659.99964 660.9607 661.9216 662.8826 663.8437 664.8046 665.7656 666.72657 667.6876 668.6486 669.6096 670.5707 671.53156 672.49256 673.4536 674.41456 675.3756 676.33655 677.2976 678.2586 679.2196 680.1806 681.1416 682.1026 683.0636 684.02454 684.9856 685.94666 686.9076 687.8686 688.8296 689.7905 690.7516 691.7125 692.6736 693.6346 694.5956 695.5565 696.5176 697.4786 698.4396 699.4005 700.3616 701.3225 702.28357 703.24457 704.20557 705.16657 706.12757 707.08857 708.04957 709.0105 709.9715 710.93256 711.89356 712.8545 713.81556 714.7765 715.7375 716.6985 717.65955 718.62055 719.58155 720.5425 721.50354 722.4645 723.42554 724.38654 725.34754 726.3085 727.2695 728.23047 729.19147 730.15247 731.1135 732.07447 733.0355 733.99646 734.9575 735.91846 736.8795 737.84046 738.80146 739.76246 740.72345 741.68445 742.64545 743.60645 744.56745 745.52845 746.4895 747.45044 748.41144 749.3725 750.33344 751.2944 752.25544 753.21644 754.1774 755.1384 756.09937 757.0604 758.0215 758.98237 759.9434 760.9044 761.8654 762.8264 763.7874 764.7484 765.70936 766.6704 767.6314 768.5924 769.5534 770.5144 771.4754 772.4364 773.39747 774.3584 775.3194 776.2804 777.2414 778.2024 779.16346 780.12446 781.0854 782.0464 783.0074 783.96845 784.9294 785.8904 786.85144 787.8124 788.7734 789.7344 790.6954 791.65644 792.61744 793.57837 794.5394 795.50037 796.46137 797.4224 798.38337 799.34436 800.3054 801.26636 802.2274 803.18836 804.14936 805.11036 806.0714 807.03235 807.99335 808.9544 809.9154 810.8764 811.8374 812.79834 813.7594 814.72034 815.6814 816.6424 817.6034 818.5644 819.5254 820.4863 821.44745 822.40845 823.36945 824.3303 825.2913 826.2523 827.2134 828.1744 829.1354 830.0964 831.0574 832.0184 832.9794 833.94037 834.90137 835.86237 836.82337 837.78437 838.74537 839.70636 840.66736 841.62836 842.58936 843.55036 844.51136 845.47236 846.43335 847.39435 848.35535 849.31635 850.2773 851.2383 852.19935 853.1603 854.12134 855.08234 856.04334 857.00434 857.96534 858.92634 859.8873 860.8483 861.8093 862.7703 863.73127 864.69227 865.6533 866.61426 867.57526 868.53626 869.4973 870.4583 871.4193 872.3803 873.3413 874.30237 875.2633 876.22425 877.18525 878.1463 879.10724 880.06824 881.0293 881.9904 882.9513 883.91224 884.8732 885.8343 886.79517 887.7562 888.7172 889.6783 890.6393 891.6003 892.56134 893.5222 894.4833 895.44416 896.4053 897.3662 898.3272 899.28827 900.24915 901.2102 902.1713 903.1322 904.09327 905.05426 906.0152 906.9763 907.9373 908.89826 909.85926 910.8202 911.7812 912.7422 913.70325 914.66425 915.62525 916.5863 917.5472 918.50824 919.46924 920.43024 921.3912 922.3522 923.31324 924.2741 925.2352 926.19617 927.15717 928.1182 929.0792 930.04017 931.00116 931.96216 932.9232 933.8841 934.8452 935.80616 936.76716 937.7282 938.6891 939.65015 940.6158 941.603 942.6133 943.6469 944.70325 945.78296 946.88544 948.0113 949.1601 950.332 951.52704 952.7452 953.9864 955.2506 956.53785 957.8485 959.18195 960.53864 961.91846 963.3212 964.7471 966.1961 967.6682 969.16327 970.68146 972.2229 973.78724 975.3748 976.9854 978.6191 980.2759 981.9557 983.6586 985.3847 987.134 988.9061 990.7014 992.5198 994.36127 996.2258 998.11347 1000.0)) (quote (607.0 612.0849 616.86506 621.34034 625.51105 629.377 632.93805 636.19465 639.1463 641.7933 644.13556 646.173 647.90577 649.33374 650.4571 651.27564 651.7894 651.9985 651.90284 651.50245 650.7973 649.7874 648.47284 646.8535 644.9294 642.70057 640.167 637.3287 634.18567 630.7379 626.9854 622.9282 618.56617 613.8995 608.92804 603.65186 598.0709 592.1853 585.9949 579.4997 572.6998 565.5952 558.22565 551.0065 544.04816 537.3507 530.9141 524.73847 518.82367 513.16974 507.7766 502.64444 497.77313 493.16266 488.8131 484.7244 480.89658 477.32956 474.0235 470.97833 468.19397 465.6705 463.4079 461.40622 459.66538 458.18536 456.96628 456.00803 455.31067 454.87427 454.69864 454.78387 455.13 455.73697 456.6049 457.7336 459.1233 460.7738 462.68515 464.85745 467.29056 469.98456 472.9394 476.15515 479.60434 483.21988 486.99884 490.94107 495.04666 499.31552 503.7478 508.34335 513.1023 518.02454 523.1101 528.359 533.7713 539.3468 545.08576 550.98804 557.0536 563.28254 569.6748 576.23035 582.9493 589.83155 596.87714 604.08606 611.4583 618.9939 626.6929 634.5551 642.5807 650.76966 659.1219 667.6375 676.3164 685.1587 694.1643 703.33326 712.6655 722.16114 731.82007 741.64234 751.6279 761.77137 771.64246 780.9712 789.75727 798.0008 805.70197 812.8605 819.4765 825.55005 831.08094 836.06946 840.5154 844.4187 847.7796 850.59797 852.8737 854.60706 855.7979 856.4461 856.5519 856.11506 855.13575 853.6139 851.54957 848.9426 845.79334 842.10126 837.8669 833.0899 827.7703 821.9083 815.5038 808.5567 801.06714 793.035 784.4603 775.3432 765.6835 755.48127 744.7365 733.4492 721.61945 709.3371 697.14307 685.1273 673.29 661.631 650.1503 638.84797 627.72394 616.7783 606.011 595.422 585.01136 574.77906 564.7251 554.84955 545.1523 535.6333 526.2927 517.13044 508.14655 499.34097 490.71375 482.26486 473.99432 465.90207 457.98816 450.25266 442.69547 435.31662 428.11612 421.09393 414.25012 407.58466 401.0975 394.78864 388.6582 382.7061 376.9323 371.33682 365.91974 360.68097 355.6205 350.7844 346.24567 342.0054 338.06345 334.41995 331.0748 328.02808 325.27966 322.8297 320.67813 318.82492 317.2701 316.0137 315.05566 314.396 314.03473 313.97186 314.2074 314.74127 315.57358 316.70428 318.13333 319.8608 321.88663 324.21088 326.8335 329.75452 332.97388 336.4917 340.30786 344.42242 348.8354 353.5467 358.55646 363.86456 369.47107 375.37595 381.57922 388.0809 394.88095 401.9794 409.35672 416.58365 423.48453 430.05923 436.30792 442.23053 447.827 453.09735 458.0417 462.65994 466.95203 470.91806 474.55798 477.87183 480.85956 483.5212 485.8568 487.8663 489.54968 490.907 491.93817 492.64328 493.0223 493.07526 492.80203 492.2028 491.27747 490.02603 488.44846 486.54486 484.31512 481.75937 478.8774 475.6694 472.1354 468.2752 464.08893 459.57666 454.73816 449.57367 444.083 438.26627 432.20187 426.18488 420.2434 414.37756 408.5873 402.87268 397.2337 391.67026 386.18246 380.77026 375.4337 370.1727 364.9873 359.87756 354.84338 349.88486 345.0019 340.19458 335.46283 330.8067 326.2262 321.72128 317.29196 312.9383 308.6602 304.45767 300.3308 296.27954 292.3039 288.40384 284.57938 280.83054 277.15732 273.5597 270.03766 266.59125 263.22046 259.92526 256.70566 253.56166 250.4933 247.50054 244.79306 242.5808 240.86379 239.64192 238.91529 238.68384 238.94756 239.70652 240.96067 242.71004 244.95456 247.69428 250.92922 254.65935 258.88467 263.6052 268.82092 274.53183 280.73798 287.4393 294.6358 302.3275 310.5144 319.19653 328.37384 338.04633 348.21402 358.8769 370.035 381.6883 393.8368 406.48044 419.61932 433.25342 447.38272 462.00714 477.12683 492.7417 508.85175 525.45704 542.5575 560.0562 576.9398 592.93866 608.0527 622.28205 635.6266 648.08637 659.6613 670.3515 680.157 689.0776 697.11347 704.2645 710.53095 715.91254 720.4092 724.0212 726.7484 728.5909 729.5485 729.62146 728.8096 727.11286 724.5315 721.0652 716.71424 711.4785 705.3579 698.3526 690.4626 681.6877 672.028 661.48365 650.05445 637.74054 624.54175 610.4583 595.49 579.6369 562.8991 545.2764 526.76905 507.85403 489.69846 472.35553 455.82532 440.1077 425.20267 411.11023 397.83054 385.3634 373.7089 362.86707 352.83783 343.62125 335.2173 327.62595 320.84726 314.88116 309.72772 305.38696 301.85876 299.14322 297.24033 296.15006 295.8724 296.40738 297.755 299.91525 302.88812 306.67365 311.2718 316.68256 322.90595 329.942 337.79065 346.45197 355.92587 366.21246 377.31165 389.22348 401.9479 415.48505 429.82517 444.22205 458.2062 471.77768 484.93652 497.68268 510.0162 521.9371 533.44526 544.54065 555.2236 565.4937 575.35126 584.7961 593.8283 602.4478 610.6547 618.4489 625.8304 632.7993 639.3555 645.499 651.2299 656.54816 661.4537 665.9466 670.02686 673.6943 676.9492 679.7914 682.221 684.23786 685.8421 687.0337 687.81257 688.17884 688.1324 687.6732 686.8015 685.51716 683.82007 681.7103 679.2695 676.9882 674.94806 673.14924 671.5917 670.2753 669.20026 668.36646 667.77387 667.4225 667.3124 667.4436 667.81604 668.4297 669.28455 670.3808 671.7182 673.2969 675.1167 677.1779 679.48035 682.024 684.80896 687.8351 691.10254 694.6112 698.3611 702.3523 706.58466 711.05835 715.77326 720.72944 725.9268 731.3655 737.0454 742.96656 749.12897 755.53266 762.17756 769.0637 776.19117 783.5598 790.80494 797.34534 803.17365 808.2897 812.6934 816.3851 819.36445 821.63166 823.18665 824.0294 824.16 823.57837 822.2844 820.27845 817.5602 814.12964 809.987 805.13215 799.56507 793.2858 786.29425 778.59064 770.1746 761.0465 751.2063 740.65375 729.389 717.41205 704.72284 691.3215 677.20795 662.3822 646.8442 630.59394 613.6316 595.957 577.5701 558.4711 538.66 518.1365 496.90088 474.99417 453.32233 432.2566 411.7968 391.94305 372.6953 354.0536 336.01785 318.5881 301.7644 285.5467 269.93503 254.92938 240.52971 226.73606 213.54843 200.96677 188.99115 177.62155 166.85796 156.70037 147.14879 138.20323 129.86367 122.13013 115.0026 108.48107 102.56556 97.25606 92.55256 88.45508 84.96361 82.07815 79.7987 78.12526 77.05783 76.59642 76.74101 77.491616 78.848236 80.81086 83.3795 86.435456 89.53195 92.626145 95.718026 98.80761 101.89487 104.979836 108.06248 111.142815 114.220856 117.296585 120.36999 123.44109 126.509896 129.57639 132.64057 135.70244 138.762 141.81926 144.87419 147.92684 150.97716 154.02518 157.07089 160.1143 163.1554 166.19417 169.23065 172.26482 175.29668 178.32624 181.35349 184.37842 187.40103 190.42136 193.43936 196.45505 199.46845 202.47954 205.48831 208.49478 211.49893 214.59767 217.88816 221.37029 225.04402 228.90941 232.96643 237.21504 241.65532 246.28723 251.11075 256.12592 261.3327 266.7311 272.32117 278.10284 284.07617 290.2411 296.59766 303.14587 309.8857 316.81717 323.94025 331.25497 338.76132 346.4593 354.3489 362.43015 370.703 379.16754 387.82367 396.6714 405.71082 414.94183 424.36447 433.97876 443.78467 453.78223 463.9714 474.3522 484.92462 495.68866 506.61282 517.3697 527.8726 538.1215 548.1165 557.8575 567.34455 576.57764 585.5567 594.28186 602.753 610.9703 618.9335 626.6427 634.098 641.2994 648.2467 654.94007 661.3795 667.56495 673.49646 679.174 684.59754 689.7672 694.68274 699.3445 703.75214 707.9058 711.80555 715.45136 718.8432 721.981 724.86487 727.4948 729.8707 731.99274 733.8607 735.4748 736.8349 737.9409 738.7931 739.3913 739.69074 739.5828 739.06275 738.1306 736.7863 735.02997 732.8615 730.2808 727.2881 723.88324 720.0663 715.83716 711.19587 706.1426 700.6771 694.79957 688.50977 681.808 674.6941 667.16797 659.2298 650.8796 642.11707 632.94257 623.3559 613.3571 602.9462 592.12317 580.88807 569.2408 557.1814 544.7099 531.8263 518.5305 504.82266 490.7027 476.17056 461.22632 445.87003 430.10153 413.92096 397.33743 381.02225 365.39044 350.44202 336.17703 322.59546 309.69727 297.48245 285.95108 275.1031 264.93854 255.45737 246.65958 238.54523 231.11426 224.36669 218.30255 212.9218 208.22446 204.21051 200.87996 198.23282 196.2691 194.98876 194.39183 194.4783 195.24819 196.70148 198.83817 201.65825 205.16173 209.34864 214.21895 219.77265 226.00975 232.93025 240.53417 248.82147 257.7922 267.44632 277.78384 288.8048 300.35822 311.56073 322.26852 332.4817 342.2002 351.424 360.15323 368.38773 376.12756 383.37277 390.1233 396.37918 402.14047 407.40695 412.1789 416.45615 420.2387 423.52664 426.3199 428.6185 430.42242 431.73172 432.54633 432.8663 432.69162 432.02228 430.85825 429.19962 427.04623 424.3983 421.2556 417.61835 413.48636 408.8597 403.73843 398.12247 392.01187 385.40662 378.3067 370.7121 362.62286 354.03894 345.3101 336.97794 329.04868 321.52228 314.39877 307.67816 301.36044 295.44562 289.93366 284.8246 280.11838 275.81506 271.91467 268.4171 265.32248 262.6307 260.34183 258.45584 256.97272 255.8925 255.21517 254.94074 255.06916 255.60047 256.53467 257.87177 259.6117 261.75455 264.3003 267.24893 270.60043 274.35483 278.5121 283.07227 288.0353 293.40125 299.17007 305.34177 311.91635 318.89383 326.27417 334.03363 341.68192 349.02493 356.06253 362.79486 369.22186 375.34348 381.15976 386.67072 391.87634 396.7766 401.37155 405.66116 409.64548 413.32434 416.69794 419.7662 422.52914 424.9867 427.13892 428.9858 430.5274 431.7636 432.6945 433.32004 433.64023 433.65512 433.3647 432.76886 431.8677 430.6612 429.14935 427.3322 425.20972 422.7819 420.0487 417.0102 413.66635 410.01715 406.06262 401.80277 397.23755 392.50314 388.09177 384.04813 380.37213 377.0638 374.1232 371.55023 369.34494 367.50732 366.03738 364.93515 364.20056 363.83365 363.83438 364.20285 364.93897 366.0428 367.51422 369.3534 371.5602 374.13474 377.0769 380.38672 384.06427 388.10947 392.52234 397.3029 402.4511 407.96704 413.85065 420.10187 426.72076 433.7074 441.06168 448.7836 456.87326 465.33057 474.15558 483.34818 492.90857 502.8366 513.0)) (quote bpf) 10))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj)) :from-file t)) nil nil (pairlis (quote (winsize winpos picture)) (list (om-make-point 335 275) (om-make-point 10 40) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-RANDOM-SPLINE-BPFS" (quote r-random-spline-bpfs) (quote ((om-load-inputfun (quote input-funbox) "y-minmax-list" "Y-MINMAX-LIST" (list 0 1000)) (om-load-inputfun (quote input-funbox) "points-minmax-list" "POINTS-MINMAX-LIST" (list 7 9)) (om-load-inputfun (quote input-funbox) "number-of-bpfs" "NUMBER-OF-BPFS" 3))) (om-make-point 902 117) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-CHORDS-TO-ANTESCOFO-HARMONIZERS-LFO" (quote r-chords-to-antescofo-harmonizers-lfo) (quote ((om-load-inputfun (quote input-funbox) "list-of-chords" "LIST-OF-CHORDS" nil) (om-load-inputfun (quote input-funbox) "list-of-harmonizer-sends" "LIST-OF-HARMONIZER-SENDS" nil) (om-load-inputfun (quote input-funbox) "number-of-harmonizer-units" "NUMBER-OF-HARMONIZER-UNITS" nil) (om-load-inputfun (quote input-funbox) "indexes-of-silence" "INDEXES-OF-SILENCE" nil) (om-load-inputfun (quote input-funbox) "2-lfo-freq-minmax-bpfs" "2-LFO-FREQ-MINMAX-BPFS" nil) (om-load-inputfun (quote input-funbox) "lfo-freq-minmax-list" "LFO-FREQ-MINMAX-LIST" nil) (om-load-inputfun (quote input-funbox) "2-lfo-amp-minmax-bpfs" "2-LFO-AMP-MINMAX-BPFS" nil) (om-load-inputfun (quote input-funbox) "lfo-amp-minmax-list" "LFO-AMP-MINMAX-LIST" nil))) (om-make-point 881 347) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD-SEQ 2" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 1000)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 100 8) (om-make-point 565 178) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((4450 5525 6825 8125 8700 8925 9200 10000 10500 11300 12375 13175) (5900 6975 8275 10150) (-2550 -1475 -175 1700 4675 5750 7050 8400 8925 9475 10775 12650) (5925 7000 8200 8300 9275 10175 10575 12450) (4325 5400 6700 8575) (4700 4850 8375 8525 9175 9325) (6150 6300) (-2300 -2150 4925 5075 8650 8800) (6175 6325 8450 8600) (4575 4725) (1000 4675 5475 6650 7725 9300 10325 11125 11400 12200 12975 13775) (2450 8100 9175 10750) (-6000 -350 725 1225 2300 4950 6875 7950 9525 10600 11675 13250) (2475 4750 8125 9200 10400 10775 11475 13050) (875 6525 7600 9175) (6200 6375 8825 9875 10050 10675 10850 12500 13300) (7650 7825 10275) (-800 -625 1825 6425 6600 9050 10150 10325 12775) (7675 7850 9950 10125 10300 12575) (6075 6250 8700) (1975 3400 5650 6450 7075 7875) (3425 4850) (-5025 -3600 2200 3625 5925 7350) (3450 4875 5725 7150) (1850 3275))) :lonset (quote (0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000 15000 16000 17000 18000 19000 20000 21000 22000 23000 24000 25000)) :ldur (quote ((1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000) (1000 1000 1000 1000) (1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000 1000 1000 1000) (1000 1000 1000 1000) (1000 1000 1000 1000 1000 1000) (1000 1000) (1000 1000 1000 1000 1000 1000) (1000 1000 1000 1000) (1000 1000) (1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000) (1000 1000 1000 1000) (1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000 1000 1000 1000) (1000 1000 1000 1000) (1000 1000 1000 1000 1000 1000 1000 1000 1000) (1000 1000 1000) (1000 1000 1000 1000 1000 1000 1000 1000 1000) (1000 1000 1000 1000 1000 1000) (1000 1000 1000) (1000 1000 1000 1000 1000 1000) (1000 1000) (1000 1000 1000 1000 1000 1000) (1000 1000 1000 1000) (1000 1000))) :lvel (quoteloffset (quote ((0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0) (0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0) (0 0 0 0 0 0) (0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0))) :lchan (quote ((9 9 9 9 9 9 9 9 9 9 9 9) (9 9 9 9) (9 9 9 9 9 9 9 9 9 9 9 9) (9 9 9 9 9 9 9 9) (9 9 9 9) (9 9 9 9 9 9) (9 9) (9 9 9 9 9 9) (9 9 9 9) (9 9) (9 9 9 9 9 9 9 9 9 9 9 9) (9 9 9 9) (9 9 9 9 9 9 9 9 9 9 9 9) (9 9 9 9 9 9 9 9) (9 9 9 9) (9 9 9 9 9 9 9 9 9) (9 9 9) (9 9 9 9 9 9 9 9 9) (9 9 9 9 9 9) (9 9 9) (9 9 9 9 9 9) (9 9) (9 9 9 9 9 9) (9 9 9 9) (9 9))) :legato 0)))) (load-port-info newobj (quote ((0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0) (0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0) (0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0) (0 0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0) (0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0) (0 0 0 0 0 0) (0 0) (0 0 0 0 0 0) (0 0 0 0) (0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.13 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 8 24 (quote ggff) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :osc-scoreplayer) 1 nil 1000 0 (om-make-point 1098 619) (om-make-point 90 23) 0 0 (quote :normal) (quote t) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 4" (om-make-point 243 43) (quote "'r-chords-to-antescofo-harmonizer-factors'") "" (om-make-point 658 243) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 3" (om-make-point 307 62) (quote "Similar, but generates transposition factor from an estimated performed note.") "" (om-make-point 461 597) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "TEXTFILE 2" (quote textfile) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "input data or text" "exp-list" nil) (om-load-inputfunmenu1 (quote input-funmenu) "append or supersede" "ed-mode" "supersede" (list (list "append" "append") (list "supersede" "supersede"))) (om-load-inputfunmenu1 (quote input-funmenu) "eval interpretation mode" "eval-mode" "list" (list (list "text" "text") (list "data list" "data") (list "list" "list") (list "value" "value"))))) (om-make-point 491 434) (om-make-point 271 160) (load-buffer-textfile (quote ("(   harmfactors1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors2 0.40847886 0.7874016 1000 9 0.7600503 0.7874016 1000 9 1.6104903 0.7874016 1000 9 3.4125102 0.7874016 1000 9 4.756829 0.7874016 1000 9 5.417022 0.7874016 1000 9 6.3496046 0.7874016 1000 9 10.079369 0.7874016 1000 9 13.454344 0.7874016 1000 9 21.357439 0.7874016 1000 9)" "(   harmfactors2 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors2 0.94387436 0.7874016 1000 9 1.7562522 0.7874016 1000 9 3.7213693 0.7874016 1000 9 10.991629 0.7874016 1000 9 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors2 0.0071640946 0.7874016 1000 9 0.01333012 0.7874016 1000 9 0.028245535 0.7874016 1000 9 0.08342749 0.7874016 1000 9 0.46517116 0.7874016 1000 9 0.8655366 0.7874016 1000 9 1.8340082 0.7874016 1000 9 4.0 0.7874016 1000 9 5.417022 0.7874016 1000 9 7.4427376 0.7874016 1000 9)" "(   harmfactors1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors1 0.95760334 0.7874016 1000 9 1.7817977 0.7874016 1000 9 3.5635953 0.7874016 1000 9 3.7754975 0.7874016 1000 9 6.6307254 0.7874016 1000 9 11.151507 0.7874016 1000 9 14.050017 0.7874016 1000 9 41.498867 0.7874016 1000 9 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors2 0.38002515 0.7874016 1000 9 0.7071068 0.7874016 1000 9 1.4983071 0.7874016 1000 9 4.4254785 0.7874016 1000 9 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors1 0.47193718 0.7874016 1000 9 0.5146511 0.7874016 1000 9 3.9426532 0.7874016 1000 9 4.2994933 0.7874016 1000 9 6.2585716 0.7874016 1000 9 6.8250203 0.7874016 1000 9 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors2 1.0905079 0.7874016 1000 9 1.1892072 0.7874016 1000 9 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors2 0.008277057 0.7874016 1000 9 0.009026195 0.7874016 1000 9 0.53743667 0.7874016 1000 9 0.5860789 0.7874016 1000 9 4.6214113 0.7874016 1000 9 5.039685 0.7874016 1000 9 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors1 1.1063696 0.7874016 1000 9 1.2065046 0.7874016 1000 9 4.117209 0.7874016 1000 9 4.4898486 0.7874016 1000 9 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors2 0.43906304 0.7874016 1000 9 0.47880167 0.7874016 1000 9 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors2 0.055681184 0.7874016 1000 9 0.46517116 0.7874016 1000 9 0.73841316 0.7874016 1000 9 1.4556533 0.7874016 1000 9 2.708511 0.7874016 1000 9 6.727172 0.7874016 1000 9 12.160805 0.7874016 1000 9 19.304072 0.7874016 1000 9 22.627419 0.7874016 1000 9 35.918786 0.7874016 1000 9)" "(   harmfactors1 0.1286628 0.7874016 1000 9 3.363586 0.7874016 1000 9 6.2585716 0.7874016 1000 9 15.544511 0.7874016 1000 9 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors2 9.765625E-4 0.7874016 1000 9 0.025529933 0.7874016 1000 9 0.04750314 0.7874016 1000 9 0.0634091 0.7874016 1000 9 0.11798431 0.7874016 1000 9 0.54525394 0.7874016 1000 9 1.6576814 0.7874016 1000 9 3.0844219 0.7874016 1000 9 7.6608267 0.7874016 1000 9 14.254379 0.7874016 1000 9)" "(   harmfactors2 0.13053423 0.7874016 1000 9 0.485766 0.7874016 1000 9 3.4125102 0.7874016 1000 9 6.3496046 0.7874016 1000 9 12.69921 0.7874016 1000 9 15.770613 0.7874016 1000 9 23.629221 0.7874016 1000 9 58.688263 0.7874016 1000 9 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors1 0.05180254 0.7874016 1000 9 1.3542556 0.7874016 1000 9 2.5198424 0.7874016 1000 9 6.2585716 0.7874016 1000 9 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors2 1.1224622 0.7874016 1000 9 1.2418579 0.7874016 1000 9 5.112988 0.7874016 1000 9 9.377262 0.7874016 1000 9 10.374717 0.7874016 1000 9 14.885475 0.7874016 1000 9 16.468838 0.7874016 1000 9 42.714875 0.7874016 1000 9 67.80565 0.7874016 1000 9 1.0 0.0 100 1)" "(   harmfactors1 2.5936792 0.7874016 1000 9 2.8695679 0.7874016 1000 9 11.8146105 0.7874016 1000 9 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors1 0.01968627 0.7874016 1000 9 0.021780285 0.7874016 1000 9 0.089674 0.7874016 1000 9 1.2782471 0.7874016 1000 9 1.4142137 0.7874016 1000 9 5.822613 0.7874016 1000 9 10.991629 0.7874016 1000 9 12.160805 0.7874016 1000 9 50.068577 0.7874016 1000 9 1.0 0.0 100 1)" "(   harmfactors1 2.631405 0.7874016 1000 9 2.9113067 0.7874016 1000 9 9.792429 0.7874016 1000 9 10.834044 0.7874016 1000 9 11.986456 0.7874016 1000 9 44.60602 0.7874016 1000 9 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors1 1.0442739 0.7874016 1000 9 1.1553527 0.7874016 1000 9 4.756829 0.7874016 1000 9 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors1 0.09779019 0.7874016 1000 9 0.22272468 0.7874016 1000 9 0.8169578 0.7874016 1000 9 1.2968396 0.7874016 1000 9 1.8606844 0.7874016 1000 9 2.9536527 0.7874016 1000 9 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors2 0.22596433 0.7874016 1000 9 0.5146511 0.7874016 1000 9 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors1 0.00171509 0.7874016 1000 9 0.00390625 0.7874016 1000 9 0.11136234 0.7874016 1000 9 0.25363633 0.7874016 1000 9 0.95760334 0.7874016 1000 9 2.1810158 0.7874016 1000 9 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors1 0.22925103 0.7874016 1000 9 0.5221369 0.7874016 1000 9 0.85312754 0.7874016 1000 9 1.943064 0.7874016 1000 9 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors2 0.09097832 0.7874016 1000 9 0.20721019 0.7874016 1000 9 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "(   harmfactors1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1 1.0 0.0 100 1)" "" "" "")) (quote textfile) "supersede" "list") "x" nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "NOTE" (quote note) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitch (midicents)" "midic" 6000) (om-load-inputfun (quote input-funbox) "velocity (0-127)" "vel" 80) (om-load-inputfun (quote input-funbox) "duration (ms)" "dur" 1000) (om-load-inputfun (quote input-funbox) "MIDI channel (1-16)" "chan" 1))) (om-make-point 513 226) (om-make-point 136 85) (if (find-class (quote note) nil) (let ((newobj (make-instance (quote note) :midic 6000 :vel 80 :dur 1000 :chan 1 :from-file t))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) "x" nil (pairlis (quote (scale show-stems cursor-mode obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list nil (quote t) (quote :normal) 0 0 (om-make-point 300 20) (om-make-point 370 280) 0 1000 nil 1 (quote :osc-scoreplayer) nil nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote g) 24 8)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-CHORDS-TO-ANTESCOFO-HARMONIZER-FACTORS" (quote r-chords-to-antescofo-harmonizer-factors) (quote ((om-load-inputfun (quote input-funbox) "list-of-chords" "LIST-OF-CHORDS" nil) (om-load-inputfun (quote input-funbox) "estimated-live-note" "ESTIMATED-LIVE-NOTE" nil) (om-load-inputfun (quote input-funbox) "list-of-harmonizer-sends" "LIST-OF-HARMONIZER-SENDS" nil) (om-load-inputfun (quote input-funbox) "number-of-harmonizer-units" "NUMBER-OF-HARMONIZER-UNITS" nil) (om-load-inputfun (quote input-funbox) "indexes-of-silence" "INDEXES-OF-SILENCE" nil))) (om-make-point 488 352) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 3" (quote list) (quote nil) (om-make-point 322 307) (om-make-point 34 30) 10 "10" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 2" (quote list) (quote nil) (om-make-point 363 296) (om-make-point 80 30) (list 0 2 3 5 7) "(0 2 3 5 7)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-CHORDS-TO-ANTESCOFO-HARMONIZERS 2" (quote r-chords-to-antescofo-harmonizers) (quote ((om-load-inputfun (quote input-funbox) "list-of-chords" "LIST-OF-CHORDS" nil) (om-load-inputfun (quote input-funbox) "list-of-harmonizer-sends" "LIST-OF-HARMONIZER-SENDS" nil) (om-load-inputfun (quote input-funbox) "number-of-harmonizer-units" "NUMBER-OF-HARMONIZER-UNITS" nil) (om-load-inputfun (quote input-funbox) "indexes-of-silence" "INDEXES-OF-SILENCE" nil))) (om-make-point 175 351) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 243 90) (quote "This version exports absolute midicents. Create a variation with relative transpositions from an input midicent note!") "" (om-make-point 91 603) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "TEXTFILE" (quote textfile) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "input data or text" "exp-list" nil) (om-load-inputfunmenu1 (quote input-funmenu) "append or supersede" "ed-mode" "supersede" (list (list "append" "append") (list "supersede" "supersede"))) (om-load-inputfunmenu1 (quote input-funmenu) "eval interpretation mode" "eval-mode" "list" (list (list "text" "text") (list "data list" "data") (list "list" "list") (list "value" "value"))))) (om-make-point 92 438) (om-make-point 271 160) (load-buffer-textfile (quote ("(   harmonizers1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1)" "(   harmonizers2 4450 0.7874016 1000 9 5525 0.7874016 1000 9 6825 0.7874016 1000 9 8125 0.7874016 1000 9 8700 0.7874016 1000 9 8925 0.7874016 1000 9 9200 0.7874016 1000 9 10000 0.7874016 1000 9 10500 0.7874016 1000 9 11300 0.7874016 1000 9)" "(   harmonizers2 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1)" "(   harmonizers2 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1)" "(   harmonizers1 5900 0.7874016 1000 9 6975 0.7874016 1000 9 8275 0.7874016 1000 9 10150 0.7874016 1000 9 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1)" "(   harmonizers1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1)" "(   harmonizers2 -2550 0.7874016 1000 9 -1475 0.7874016 1000 9 -175 0.7874016 1000 9 1700 0.7874016 1000 9 4675 0.7874016 1000 9 5750 0.7874016 1000 9 7050 0.7874016 1000 9 8400 0.7874016 1000 9 8925 0.7874016 1000 9 9475 0.7874016 1000 9)" "(   harmonizers2 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1)" "(   harmonizers1 5925 0.7874016 1000 9 7000 0.7874016 1000 9 8200 0.7874016 1000 9 8300 0.7874016 1000 9 9275 0.7874016 1000 9 10175 0.7874016 1000 9 10575 0.7874016 1000 9 12450 0.7874016 1000 9 6000 0.0 100 1 6000 0.0 100 1)" "(   harmonizers1 4325 0.7874016 1000 9 5400 0.7874016 1000 9 6700 0.7874016 1000 9 8575 0.7874016 1000 9 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1)" "(   harmonizers1 4700 0.7874016 1000 9 4850 0.7874016 1000 9 8375 0.7874016 1000 9 8525 0.7874016 1000 9 9175 0.7874016 1000 9 9325 0.7874016 1000 9 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1)" "(   harmonizers1 6150 0.7874016 1000 9 6300 0.7874016 1000 9 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1)" "(   harmonizers1 -2300 0.7874016 1000 9 -2150 0.7874016 1000 9 4925 0.7874016 1000 9 5075 0.7874016 1000 9 8650 0.7874016 1000 9 8800 0.7874016 1000 9 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1)" "(   harmonizers1 6175 0.7874016 1000 9 6325 0.7874016 1000 9 8450 0.7874016 1000 9 8600 0.7874016 1000 9 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1)" "(   harmonizers2 4575 0.7874016 1000 9 4725 0.7874016 1000 9 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1)" "(   harmonizers2 1000 0.7874016 1000 9 4675 0.7874016 1000 9 5475 0.7874016 1000 9 6650 0.7874016 1000 9 7725 0.7874016 1000 9 9300 0.7874016 1000 9 10325 0.7874016 1000 9 11125 0.7874016 1000 9 11400 0.7874016 1000 9 12200 0.7874016 1000 9)" "(   harmonizers2 2450 0.7874016 1000 9 8100 0.7874016 1000 9 9175 0.7874016 1000 9 10750 0.7874016 1000 9 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1)" "(   harmonizers1 -6000 0.7874016 1000 9 -350 0.7874016 1000 9 725 0.7874016 1000 9 1225 0.7874016 1000 9 2300 0.7874016 1000 9 4950 0.7874016 1000 9 6875 0.7874016 1000 9 7950 0.7874016 1000 9 9525 0.7874016 1000 9 10600 0.7874016 1000 9)" "(   harmonizers2 2475 0.7874016 1000 9 4750 0.7874016 1000 9 8125 0.7874016 1000 9 9200 0.7874016 1000 9 10400 0.7874016 1000 9 10775 0.7874016 1000 9 11475 0.7874016 1000 9 13050 0.7874016 1000 9 6000 0.0 100 1 6000 0.0 100 1)" "(   harmonizers1 875 0.7874016 1000 9 6525 0.7874016 1000 9 7600 0.7874016 1000 9 9175 0.7874016 1000 9 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1)" "(   harmonizers1 6200 0.7874016 1000 9 6375 0.7874016 1000 9 8825 0.7874016 1000 9 9875 0.7874016 1000 9 10050 0.7874016 1000 9 10675 0.7874016 1000 9 10850 0.7874016 1000 9 12500 0.7874016 1000 9 13300 0.7874016 1000 9 6000 0.0 100 1)" "(   harmonizers1 7650 0.7874016 1000 9 7825 0.7874016 1000 9 10275 0.7874016 1000 9 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1)" "(   harmonizers1 -800 0.7874016 1000 9 -625 0.7874016 1000 9 1825 0.7874016 1000 9 6425 0.7874016 1000 9 6600 0.7874016 1000 9 9050 0.7874016 1000 9 10150 0.7874016 1000 9 10325 0.7874016 1000 9 12775 0.7874016 1000 9 6000 0.0 100 1)" "(   harmonizers1 7675 0.7874016 1000 9 7850 0.7874016 1000 9 9950 0.7874016 1000 9 10125 0.7874016 1000 9 10300 0.7874016 1000 9 12575 0.7874016 1000 9 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1)" "(   harmonizers2 6075 0.7874016 1000 9 6250 0.7874016 1000 9 8700 0.7874016 1000 9 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1)" "(   harmonizers1 1975 0.7874016 1000 9 3400 0.7874016 1000 9 5650 0.7874016 1000 9 6450 0.7874016 1000 9 7075 0.7874016 1000 9 7875 0.7874016 1000 9 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1)" "(   harmonizers2 3425 0.7874016 1000 9 4850 0.7874016 1000 9 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1)" "(   harmonizers1 -5025 0.7874016 1000 9 -3600 0.7874016 1000 9 2200 0.7874016 1000 9 3625 0.7874016 1000 9 5925 0.7874016 1000 9 7350 0.7874016 1000 9 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1)" "(   harmonizers1 3450 0.7874016 1000 9 4875 0.7874016 1000 9 5725 0.7874016 1000 9 7150 0.7874016 1000 9 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1)" "(   harmonizers1 1850 0.7874016 1000 9 3275 0.7874016 1000 9 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1 6000 0.0 100 1)" "" "" "")) (quote textfile) "supersede" "list") "x" nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 171 289) (om-make-point 175 30) (list (quote harmonizers1) (quote harmonizers2)) "(harmonizers1 harmonizers2)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-CHORDSEQ-TO-LIST-OF-CHORDS" (quote r-chordseq-to-list-of-chords) (quote ((om-load-inputfun (quote input-funbox) "chord-seq" "CHORD-SEQ-SELF" nil))) (om-make-point 50 225) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 243 43) (quote "'r-chords-to-antescofo-harmonizers'") "" (om-make-point 167 216) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((15 0 2 1 nil 0) (6 0 7 0 nil 0) (5 0 7 1 nil 0) (4 0 7 2 nil 0) (14 0 13 1 nil 0) (10 0 14 0 nil 0) (9 0 14 1 nil 0) (8 0 14 2 nil 0) (28 0 15 0 nil 0) (1 0 15 1 nil 0) (22 0 15 2 nil 0) (23 0 15 3 nil 0) (13 1 15 4 nil 0) (12 0 15 5 nil 0) (7 0 15 6 nil 0) (11 0 15 7 nil 0) (21 0 19 1 nil 0) (28 0 21 0 nil 0) (20 1 21 1 nil 0) (0 0 21 2 nil 0) (22 0 21 3 nil 0) (23 0 21 4 nil 0) (28 0 24 0 nil 0) (27 0 24 1 nil 0) (22 0 24 2 nil 0) (23 0 24 3 nil 0) (24 0 26 1 nil 0) (16 0 28 0 nil 0))) nil 6.13))
