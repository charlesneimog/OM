; OM File Header - Saved 2020/09/23 20:55:44
; (6.13 :patc (om-make-point 10 10) (om-make-point 80 23) (om-make-point 1200 675) "" 183 0 nil "2020/09/23 20:55:44")
; End File Header
(in-package :om)(load-lib-for (quote ("OMRuben")))(setf *om-current-persistent* (om-load-patch1 "recursive-pitch-loop-omruben" (quote ((let ((box (om-load-boxcall (quote bastype) "list 22" (quote list) (quote nil) (om-make-point 726 424) (om-make-point 20 25) 9 "9" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-APPLY-CHANNEL-MULTISEQ" (quote r-apply-channel-multiseq) (quote ((om-load-inputfun (quote input-funbox) "chordseqs-list" "CHORDSEQS-LIST" nil) (om-load-inputfun (quote input-funbox) "channel" "CHANNEL" nil))) (om-make-point 648 460) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 100 60) (quote "CIRCLES$material") "" (om-make-point 993 33) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 143 195) (quote "This concerns only precompositional  pitch materials. The piece involved detailed plannings of textures, register and instrumental sound, not described here.") "" (om-make-point 18 185) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 196 141) (quote "With some interval filtering (attempted formalization of $what what done intuitively) , $tempo variation and dynamics the result sounds slightly better.") "" (om-make-point 905 412) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 193 125) (quote "The initial chord-seq sounds mechanical.") "" (om-make-point 185 517) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 182 133) (quote "Recursive pitchloops used$to generate raw materials $for the piece Circles. The results were used very freely, pitches were spontanously grouped and described.") "" (om-make-point 445 13) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 20" (quote list) (quote nil) (om-make-point 552 423) (om-make-point 41 30) 200 "200" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 19" (quote list) (quote nil) (om-make-point 136 418) (om-make-point 41 30) 200 "200" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 672 540) (om-make-point 214 105) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7350) (7150) (7750) (9250) (5250) (3650) (10050) (3700) (8800) (6000) (6100) (10400) (5100) (3800) (9850) (8250) (5250) (9400) (3450) (10600) (4600) (3450) (4050) (7200) (4050) (9350) (8800) (7650) (6750) (4900) (8000) (3950) (9850) (6400) (6700) (8400) (5600) (8900) (2600) (7900) (4800) (7450) (5700) (7550) (3350) (8650) (4050) (6400) (7550) (2700) (3750) (9950) (3500) (6300) (3350) (4950) (8000) (3800) (8200) (6150) (7250) (4600) (4850) (3750) (5800) (3900) (7450) (6250) (7100) (2500) (2350) (7750) (3200) (4050) (6400) (4850) (7900) (8400) (8250) (2400) (9000) (2300) (8100) (8200) (8350) (7700) (8700) (7250) (8500) (4100) (7550) (5050) (2900) (3900) (2600) (7700) (7450) (3300) (5850) (5850) (4950) (2450) (5300) (2400) (4450) (5100) (5950) (3550) (4800) (9250) (6350) (3550) (8850) (7950) (8650) (8450) (6250) (8100) (4700) (4700) (8700) (8100) (8450) (5800) (2700) (4300) (9250) (4900) (8200) (7750) (2650) (4750) (8700) (4250) (7400) (9250) (4050) (3850) (3500) (5550) (8600) (4750) (5000) (8200) (4800) (2700) (7500) (7350) (5350) (6900) (6050) (7200) (3950) (7650) (7250) (8800) (3850) (2450) (8500) (5250) (6350) (7800) (4900) (8100) (2400) (2400) (2500) (2550) (4350) (3200) (2400) (8400) (7900) (2500) (8950) (2650) (4200) (8300) (7100) (5200) (5300) (2650) (7900) (8450) (5000) (7200) (5950) (5700) (4500) (7600) (3800) (4500) (5300) (6950) (5250) (6150) (9350) (7100) (5600) (3950) (9350) (8700) (8650) (7250) (2600) (6050) (4800) (2250) (2950) (3550) (7200) (2750) (4500) (3050) (6600) (2350) (7850) (3400) (6800) (3800) (5650) (7450) (2250) (5050) (5550) (4850) (5650) (9350) (6800) (7300) (2400) (4850) (2900) (8500) (9050) (6700) (7000) (6800) (9250) (6250) (9050) (7300) (9000) (4850) (4150) (2650) (5350) (7100) (2650) (7200) (2300) (2450) (3100) (3400) (4200) (3900) (4450) (3950) (4450) (3500) (9300) (2550) (9150) (3650) (5900) (2450) (7200) (5950) (7350) (4950) (9300) (8500) (5200) (8200) (7650) (7050) (4600) (8350) (5850) (6800) (6700) (7000) (5450) (7150) (3850) (8450) (5700) (4200) (3800) (2850) (7300) (2800) (7050) (6500) (3600) (3050) (4300) (9250) (5050) (5900) (3100) (6800) (3350) (2350) (4750) (6900) (4550) (7700) (2550) (3650) (5100) (5750) (5850) (7350) (3500) (6900) (8050) (4450) (7150) (4300) (8550) (9250) (7700) (8700) (8150) (9350) (7000) (3900) (2400) (3200) (4900) (4350) (3650) (7050) (8450) (2750) (7950) (4350) (4750) (4500) (3450) (4400) (4900) (6150) (5300) (4550) (4250) (4150) (4850) (3350) (3700) (6100) (3450) (8900) (7300) (7450) (5700) (4150) (3600) (6600) (8250) (7850) (8050) (6300) (2500) (5950) (7550) (8750) (9300) (6850) (7200) (4050) (2250) (7400) (6050) (4300) (4550) (4900) (2400) (4200) (7100) (6700) (4600) (4750) (5650) (9350) (5800) (7950) (5400) (8200) (3400) (2550) (5750) (8600) (5900) (7800) (3300) (5700) (7400) (7150) (5900) (7550) (4500) (8600) (2200) (4550) (7900) (6350) (3650) (3450) (7750) (8900) (9150) (3850) (8350) (4000) (3150) (5250) (7200) (5750) (3700) (7250) (2250) (4450) (9300) (4450) (5500) (6550) (5750) (5800) (4950) (6350) (6300) (6250) (5600) (4250) (5600) (5400) (6000) (7500) (3500) (9100) (8300) (9150) (7050) (4250) (4350) (8650) (3350) (9250) (8100) (6500) (3500) (7650) (8900) (8850) (2850) (8900) (2300) (5450) (2300) (7600) (7050) (5900) (5000) (3150) (6250) (2200) (8100) (4650) (4950) (6650) (3850) (7150) (8050) (6150) (3050) (5700) (3950) (5800) (8800) (6900) (2300) (4650) (5800) (8150) (9200) (8200) (8950) (4550) (8800) (3200) (6250) (9250) (6450))) :lonset (quoteldur (quote ((332) (384) (414) (432) (436) (416) (382) (336) (282) (262) (290) (364) (444) (454) (400) (290) (198) (148) (132) (146) (172) (218) (276) (320) (336) (328) (638) (360) (416) (448) (448) (420) (376) (362) (368) (396) (420) (438) (450) (454) (450) (440) (422) (420) (448) (494) (544) (546) (506) (430) (380) (376) (414) (468) (470) (432) (362) (322) (340) (412) (502) (558) (580) (570) (558) (546) (532) (516) (486) (448) (394) (354) (328) (316) (318) (332) (760) (440) (472) (502) (514) (486) (414) (310) (226) (190) (190) (212) (222) (216) (200) (186) (176) (168) (174) (192) (232) (280) (308) (294) (244) (184) (160) (170) (214) (266) (328) (396) (448) (450) (400) (306) (246) (242) (296) (374) (412) (414) (380) (366) (392) (452) (512) (510) (446) (326) (248) (238) (296) (392) (458) (498) (514) (526) (538) (550) (560) (554) (538) (508) (486) (476) (474) (484) (490) (500) (508) (510) (504) (486) (458) (414) (352) (280) (246) (270) (352) (450) (494) (480) (416) (344) (290) (244) (432) (232) (266) (300) (316) (316) (316) (340) (394) (470) (530) (564) (566) (554) (538) (528) (516) (506) (498) (490) (480) (466) (442) (416) (398) (400) (418) (446) (476) (506) (536) (558) (574) (580) (572) (522) (438) (320) (224) (168) (154) (182) (232) (308) (410) (492) (540) (558) (550) (534) (516) (494) (478) (474) (486) (488) (462) (392) (296) (210) (164) (152) (178) (228) (304) (398) (458) (450) (382) (280) (198) (148) (124) (118) (128) (150) (180) (192) (194) (182) (164) (152) (142) (142) (178) (260) (374) (476) (500) (466) (394) (364) (388) (456) (526) (562) (568) (546) (496) (418) (312) (214) (152) (126) (128) (148) (188) (250) (314) (374) (432) (482) (512) (522) (512) (482) (434) (368) (288) (244) (224) (238) (602) (404) (488) (514) (478) (386) (296) (262) (272) (322) (374) (430) (490) (540) (558) (552) (524) (480) (424) (352) (302) (308) (360) (450) (514) (544) (548) (530) (496) (444) (382) (322) (264) (214) (172) (142) (128) (126) (160) (226) (324) (416) (466) (482) (470) (468) (482) (502) (512) (484) (420) (342) (312) (346) (428) (500) (486) (404) (274) (194) (180) (224) (288) (336) (376) (406) (442) (480) (524) (542) (506) (426) (316) (262) (278) (352) (440) (496) (524) (526) (508) (466) (408) (352) (332) (340) (372) (400) (424) (438) (444) (424) (386) (330) (294) (272) (270) (272) (264) (248) (234) (256) (312) (408) (480) (476) (404) (282) (200) (172) (194) (240) (280) (320) (356) (372) (368) (346) (316) (292) (266) (250) (240) (246) (264) (272) (264) (230) (186) (154) (146) (154) (182) (232) (300) (376) (434) (462) (466) (456) (454) (454) (454) (444) (422) (384) (342) (292) (238) (188) (180) (214) (294) (384) (450) (492) (516) (528) (532) (526) (502) (460) (398) (324) (284) (292) (338) (400) (442) (468) (482) (474) (454) (416) (386) (388) (886) (514) (550) (570) (580) (580) (566) (542) (490) (414) (314) (236) (228) (296) (406) (484) (500) (458) (412) (400) (430) (486) (532) (556) (554) (542) (536) (530) (520) (490) (442) (382) (1528))) :lvel (quote ((50) (83) (96) (80) (69) (67) (68) (70) (69) (51) (36) (35) (28) (30) (57) (58) (28) (22) (26) (24) (25) (32) (40) (37) (26) (48) (84) (104) (90) (63) (78) (80) (44) (39) (51) (49) (58) (79) (79) (83) (103) (78) (33) (29) (45) (62) (69) (59) (32) (28) (52) (90) (99) (70) (74) (81) (45) (34) (61) (89) (100) (92) (91) (87) (56) (57) (94) (81) (49) (43) (64) (91) (82) (72) (79) (80) (75) (67) (66) (72) (87) (96) (90) (64) (39) (43) (64) (83) (60) (33) (36) (40) (44) (65) (75) (64) (59) (70) (101) (117) (106) (66) (27) (15) (34) (62) (64) (58) (53) (41) (28) (23) (42) (72) (88) (78) (50) (55) (80) (97) (73) (30) (54) (79) (69) (75) (82) (57) (57) (82) (67) (60) (96) (76) (25) (33) (46) (38) (29) (36) (75) (95) (95) (105) (97) (57) (27) (28) (68) (82) (66) (89) (97) (52) (32) (42) (58) (79) (95) (69) (41) (53) (71) (76) (47) (38) (66) (52) (17) (9) (15) (32) (68) (86) (65) (49) (40) (25) (12) (14) (60) (105) (102) (86) (65) (37) (35) (63) (54) (38) (56) (58) (46) (83) (111) (94) (90) (95) (86) (68) (53) (76) (108) (113) (76) (25) (24) (34) (39) (69) (104) (109) (92) (69) (76) (74) (39) (24) (26) (22) (45) (94) (111) (96) (60) (57) (75) (63) (68) (103) (118) (118) (117) (88) (50) (66) (72) (31) (17) (31) (50) (69) (85) (96) (93) (72) (59) (56) (51) (51) (61) (85) (105) (106) (97) (80) (48) (23) (15) (11) (20) (59) (73) (60) (79) (88) (59) (67) (99) (97) (68) (36) (60) (83) (43) (42) (72) (47) (41) (90) (110) (89) (46) (23) (29) (38) (37) (25) (17) (27) (64) (67) (29) (33) (60) (81) (99) (113) (116) (92) (45) (45) (73) (90) (85) (62) (40) (48) (91) (78) (33) (33) (59) (88) (99) (85) (49) (24) (14) (10) (21) (43) (37) (21) (22) (45) (75) (81) (82) (89) (88) (80) (72) (62) (54) (65) (78) (80) (72) (63) (69) (71) (65) (72) (71) (36) (16) (17) (11) (8) (19) (45) (69) (69) (57) (43) (28) (38) (83) (85) (52) (36) (37) (52) (69) (67) (30) (23) (50) (70) (90) (113) (123) (119) (107) (104) (110) (103) (88) (72) (65) (58) (37) (31) (53) (86) (106) (94) (64) (36) (32) (31) (23) (26) (46) (84) (92) (69) (65) (61) (41) (40) (50) (41) (55) (88) (61) (33) (68) (65) (27) (27) (47) (65) (60) (52) (63) (56) (34) (53) (84) (98) (108) (104) (70) (68) (100) (78) (48) (61) (62) (46) (41) (62) (104) (121) (115) (100) (80) (56) (32) (29) (55) (68) (69) (78) (76) (65) (83) (85) (38) (22) (43) (66) (88) (106) (100) (75) (42) (52) (91) (81) (72) (99) (118) (113) (82) (74) (92) (80) (59) (52) (43) (40) (69) (88) (82) (85) (91) (87) (63) (36) (47) (57) (45) (62) (90) (84) (59) (30) (25) (44) (72) (55) (8))) :loffset (quotelchan (quotelegato 200)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 8 24 (list (quote ggff)) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :osc-scoreplayer) 1 nil 1000 0 (om-make-point 860 592) (om-make-point 240 26) 0 1 (quote :normal) (quote t) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 18" (quote list) (quote nil) (om-make-point 682 293) (om-make-point 63 30) (list 0.5 3.4) "(.5 3.4)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 17" (quote list) (quote nil) (om-make-point 787 311) (om-make-point 48 30) 1000 "1000" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "FIRST 6" (quote first) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 760 255) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 16" (quote list) (quote nil) (om-make-point 868 44) (om-make-point 73 30) (list 99 567) "( 99 567)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 7" (quote list) (quote nil) (om-make-point 812 71) (om-make-point 69 30) (list 0 1000) "(0 1000)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 5" (quote list) (quote nil) (om-make-point 917 73) (om-make-point 27 30) 1 "1" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-ATONAL-PRECISE-MULTISEQ" (quote r-atonal-precise-multiseq) (quote ((om-load-inputfun (quote input-funbox) "chordseqs-list" "CHORDSEQS-LIST" (list 0)) (om-load-inputfun (quote input-funbox) "forbidden-triads-lists" "FORBIDDEN-TRIADS-LISTS" (list 0)))) (om-make-point 668 164) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LIST 2" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 463 558) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LIST" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 40 548) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPF-LIB" (quote bpf-lib) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of BPF objects" "bpf-list" (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0 100)) (quote (0 100)) (quote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj))))) (om-make-point 837 225) (om-make-point 84 90) (if (find-class (quote bpf-lib) nil) (make-instance (quote bpf-lib) :bpf-list (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 1.8431535 3.3816948 4.6156235 5.624906 6.6226354 7.6203656 8.618094 9.615825 10.613554 11.611283 12.609013 13.606742 14.604471 15.602203 16.599932 17.597662 18.595395 19.593125 20.590855 21.588583 22.586314 23.584044 24.581776 25.579504 26.577237 27.574967 28.572697 29.570427 30.568158 31.565886 32.563618 33.561348 34.55908 35.55681 36.55454 37.55227 38.550003 39.54773 40.545464 41.54319 42.54092 43.53865 44.53638 45.53411 46.53184 47.52957 48.5273 49.525032 50.522767 51.520493 52.518223 53.515957 54.51368 55.51141 56.509137 57.50687 58.504605 59.50233 60.500065 61.49779 62.49552 63.493248 64.49098 65.48871 66.48644 67.48417 68.4819 69.47964 70.47737 71.4751 72.472824 73.47056 74.46829 75.46602 76.463745 77.46148 78.459206 79.45694 80.45467 81.45241 82.450135 83.44786 84.44559 85.44331 86.441056 87.438774 88.43651 89.43424 90.43197 91.4297 92.42743 93.42516 94.42288 95.42062 96.41835 97.416085 98.41381 99.411545 100.40927 101.40701 102.40474 103.402466 104.4002 105.397934 106.39566 107.393395 108.39111 109.388855 110.38657 111.3843 112.382035 113.37977 114.37749 115.37522 116.372956 117.37069 118.36842 119.36616 120.36389 121.36161 122.359345 123.35706 124.3548 125.35253 126.350266 127.34799 128.34574 129.34346 130.34119 131.33892 132.33664 133.33437 134.3321 135.32984 136.32758 137.3253 138.32303 139.32076 140.31848 141.31623 142.31395 143.31168 144.3094 145.30713 146.30487 147.30261 148.30033 149.29808 150.29579 151.29352 152.29126 153.28899 154.28672 155.28446 156.28218 157.2799 158.27765 159.27538 160.27309 161.27083 162.26857 163.2663 164.26403 165.26175 166.25949 167.25722 168.25495 169.25267 170.2504 171.24814 172.24587 173.24359 174.24134 175.23905 176.23679 177.23451 178.23224 179.22997 180.22769 181.22544 182.22316 183.22089 184.21863 185.21634 186.21408 187.2118 188.20955 189.20726 190.20499 191.20273 192.20046 193.1982 194.19593 195.19365 196.1914 197.18912 198.18686 199.18459 200.18231 201.18004 202.17778 203.1755 204.17324 205.17096 206.1687 207.16641 208.16417 209.16188 210.1596 211.15735 212.15506 213.1528 214.15053 215.14827 216.146 217.1437 218.14145 219.13918 220.13689 221.13465 222.13236 223.13011 224.12779 225.12555 226.12326 227.12102 228.1187 229.11647 230.1142 231.11194 232.10967 233.10739 234.10514 235.10285 236.1006 237.0983 238.09604 239.09378 240.0915 241.08922 242.08698 243.08469 244.08245 245.08016 246.0779 247.07563 248.07335 249.07109 250.0688 251.06656 252.06427 253.06203 254.05974 255.05748 256.0552 257.05292 258.05066 259.04837 260.0461 261.04385 262.04157 263.0393 264.03702 265.03476 266.03247 267.0302 268.02792 269.0257 270.0234 271.02115 272.0189 273.01663 274.01434 275.01205 276.0098 277.00754 278.00528 279.003 280.0007 280.99844 281.9962 282.9939 283.99164 284.98938 285.9871 286.98483 287.98257 288.9803 289.97803 290.97577 291.9735 292.97122 293.96893 294.96668 295.96442 296.96216 297.95987 298.9576 299.95535 300.95306 301.95078 302.94852 303.94626 304.94397 305.9417 306.93945 307.9372 308.9349 309.93265 310.93036 311.9281 312.9258 313.92358 314.9213 315.919 316.91675 317.9145 318.91223 319.90997 320.90768 321.9054 322.90314 323.90088 324.8986 325.89633 326.89404 327.89178 328.8895 329.88724 330.88495 331.88272 332.88043 333.87817 334.87592 335.87363 336.87137 337.86908 338.8668 339.86456 340.86224 341.86 342.85773 343.85547 344.8532 345.85092 346.84866 347.84637 348.8441 349.84183 350.83957 351.83728 352.83505 353.83276 354.83048 355.8282 356.82596 357.82367 358.8214 359.81912 360.81686 361.81458 362.81235 363.81006 364.8078 365.8055 366.80325 367.80096 368.7987 369.79642 370.79416 371.79187 372.78964 373.78735 374.7851 375.78284 376.78055 377.77826 378.776 379.77374 380.77148 381.7692 382.76694 383.76468 384.76242 385.76013 386.75787 387.75558 388.7533 389.75107 390.74875 391.74652 392.74423 393.74194 394.7397 395.73743 396.73517 397.73288 398.73062 399.7284 400.72607 401.72382 402.7216 403.71927 404.71704 405.71472 406.71246 407.7102 408.70795 409.7057 410.7034 411.70114 412.69885 413.6966 414.6943 415.69208 416.68976 417.68753 418.68524 419.68298 420.6807 421.6784 422.6761 423.67377 424.6715 425.66922 426.66693 427.66464 428.66235 429.66003 430.6577 431.65546 432.65314 433.65088 434.64856 435.64627 436.64398 437.64172 438.6394 439.63712 440.6348 441.63254 442.6302 443.62793 444.62564 445.6233 446.62103 447.61868 448.61642 449.61414 450.6118 451.60956 452.60724 453.60495 454.60263 455.60028 456.59802 457.59567 458.59345 459.5912 460.5889 461.5866 462.5843 463.58194 464.57968 465.5774 466.5751 467.57278 468.5705 469.5682 470.56595 471.56366 472.56134 473.55905 474.55676 475.55447 476.55222 477.54984 478.5476 479.54526 480.54297 481.5407 482.53842 483.53613 484.5338 485.53146 486.5292 487.52686 488.52463 489.52237 490.52008 491.51773 492.51547 493.51318 494.51086 495.5085 496.50626 497.50397 498.50174 499.4994 500.49713 501.49478 502.49252 503.49023 504.48788 505.48563 506.48328 507.48105 508.4788 509.47644 510.47415 511.47183 512.46955 513.4673 514.46497 515.46265 516.4604 517.45807 518.4558 519.4535 520.4512 521.44886 522.4466 523.44434 524.442 525.43976 526.43744 527.4352 528.4328 529.43055 530.4283 531.42597 532.4237 533.4214 534.41907 535.41675 536.4145 537.4122 538.41 539.40766 540.40534 541.403 542.4007 543.39844 544.3961 545.3938 546.39155 547.3893 548.38697 549.3847 550.3824 551.38007 552.3778 553.3755 554.3732 555.3709 556.3686 557.3663 558.364 559.36176 560.35944 561.3571 562.35486 563.35254 564.35016 565.34797 566.3456 567.3433 568.34107 569.33875 570.3365 571.3342 572.3319 573.3296 574.3273 575.325 576.3227 577.32044 578.3182 579.3158 580.31354 581.3113 582.30896 583.30665 584.3043 585.30207 586.2998 587.2975 588.29517 589.29285 590.2906 591.28827 592.286 593.2837 594.28144 595.2791 596.27686 597.2746 598.2722 599.26996 600.26764 601.2654 602.263 603.26075 604.2585 605.2561 606.2539 607.2515 608.24927 609.24695 610.2447 611.2424 612.2401 613.23786 614.2355 615.2333 616.2309 617.2286 618.2263 619.224 620.22175 621.2194 622.21717 623.2148 624.21247 625.2102 626.208 627.2057 628.20337 629.2011 630.1988 631.19654 632.1942 633.1919 634.18964 635.1874 636.18506 637.18274 638.1804 639.1781 640.17585 641.1736 642.1712 643.16895 644.1666 645.1643 646.1621 647.15986 648.15754 649.1552 650.15296 651.15064 652.1483 653.14606 654.14374 655.1415 656.13916 657.13685 658.1345 659.1322 660.12995 661.1277 662.12537 663.12305 664.1208 665.1185 666.1162 667.1139 668.11164 669.1093 670.107 671.10474 672.1025 673.10016 674.09784 675.0955 676.09327 677.09095 678.0886 679.08637 680.08405 681.0818 682.0794 683.0772 684.0749 685.07264 686.0703 687.068 688.06574 689.0634 690.06116 691.05884 692.0565 693.0543 694.05195 695.0497 696.04737 697.04505 698.0427 699.04047 700.0382 701.0359 702.03357 703.03125 704.029 705.02674 706.0244 707.0221 708.0198 709.0175 710.0152 711.01294 712.0107 713.0083 714.0061 715.0038 716.00147 716.99915 717.9969 718.9945 719.99225 720.99 721.98774 722.9854 723.9831 724.98084 725.9785 726.9762 727.97394 728.97156 729.96936 730.96705 731.9648 732.96247 733.96015 734.9578 735.95557 736.95325 737.9509 738.9486 739.9464 740.9441 741.9418 742.9395 743.93726 744.93494 745.9326 746.93036 747.92804 748.9257 749.92347 750.92115 751.9188 752.91657 753.9143 754.9119 755.90967 756.90735 757.9051 758.9028 759.90046 760.8982 761.89594 762.8937 763.89136 764.88904 765.8867 766.88446 767.88215 768.8798 769.8776 770.87525 771.8729 772.87067 773.8683 774.866 775.8638 776.8614 777.85914 778.85694 779.8546 780.85236 781.85004 782.8477 783.84546 784.84314 785.8408 786.8386 787.8363 788.834 789.83167 790.82935 791.8271 792.82477 793.82245 794.8202 795.8179 796.8156 797.8133 798.811 799.80866 800.8064 801.80414 802.8019 803.79957 804.79725 805.795 806.7926 807.7904 808.788 809.78577 810.7835 811.7812 812.7789 813.77655 814.7743 815.772 816.7697 817.76746 818.76514 819.7628 820.7605 821.7582 822.756 823.75367 824.75135 825.749 826.74677 827.7445 828.7422 829.73987 830.73755 831.73536 832.73304 833.7307 834.7284 835.72614 836.7239 837.72156 838.7193 839.71705 840.71467 841.7124 842.7102 843.7078 844.7055 845.70325 846.70087 847.6986 848.69635 849.69404 850.6918 851.6894 852.68714 853.6848 854.68256 855.6803 856.67804 857.67566 858.6734 859.67115 860.66877 861.66657 862.6642 863.6619 864.65967 865.65735 866.655 867.6527 868.6504 869.6482 870.6459 871.6435 872.64124 873.6389 874.6366 875.6344 876.6321 877.6298 878.62757 879.62525 880.623 881.62067 882.6184 883.61615 884.6137 885.61145 886.6092 887.6069 888.6045 889.60224 890.6 891.59766 892.5953 893.59314 894.5908 895.58857 896.5862 897.58387 898.5816 899.5792 900.57697 901.57465 902.5725 903.5701 904.5678 905.56556 906.56324 907.56086 908.5586 909.55634 910.554 911.5519 912.5495 913.5471 914.5448 915.54255 916.5403 917.53785 918.5357 919.5334 920.5311 921.5289 922.5265 923.5243 924.5219 925.51966 926.51734 927.5152 928.5128 929.5104 930.50824 931.5059 932.50354 933.50116 934.4989 935.4967 936.4943 937.49207 938.4898 939.4875 940.4852 941.483 942.4805 943.4784 944.4761 945.4737 946.47156 947.4692 948.46686 949.4645 950.46235 951.46 952.45765 953.4554 954.45307 955.4507 956.44855 957.4462 958.44385 959.4417 960.4394 961.437 962.43476 963.4325 964.4302 965.4279 966.4256 967.4232 968.42096 969.4187 970.4164 971.414 972.41175 973.4095 974.40705 975.4049 976.40265 977.4002 978.3981 979.39576 980.3934 981.3911 982.38886 983.38654 984.3843 985.382 986.3797 987.3773 988.3752 989.37275 990.3706 991.3682 992.36585 993.3635 994.36127 995.36945 996.5991 998.1334 1000.0)) (quote (392.0 634.285 752.9717 748.0602 659.0197 591.0288 549.7895 533.1297 524.9562 522.0024 524.2488 530.85547 541.3771 555.8135 557.9912 524.2099 454.26257 361.80423 298.5521 269.50855 271.5268 266.73907 244.05474 203.68065 190.69318 239.3185 349.55655 471.55817 501.3561 435.70563 295.50586 196.03606 154.91658 169.9379 191.00963 197.35398 188.97089 178.3271 179.41646 192.25043 215.16274 243.24266 276.1696 310.43 316.36047 287.24338 224.2217 195.7535 242.04088 363.08383 520.2498 650.70527 753.57 820.24286 814.5189 732.3616 582.52094 489.02023 492.0866 591.5368 678.3819 660.2708 537.20374 365.8603 276.91888 275.5962 346.62766 395.36554 405.51386 379.0897 373.76233 415.97287 505.7212 599.71564 643.6391 637.32166 603.76484 617.999 685.8297 794.26447 817.35834 723.37867 513.70594 314.40152 207.56285 193.18994 242.28812 302.60803 373.08798 448.37665 503.37473 534.88355 542.12684 511.95642 439.65445 325.2303 224.3417 189.81969 221.6642 309.399 426.32782 571.12684 729.7092 803.4112 773.1825 642.35346 535.2046 514.7423 580.96674 657.3211 636.8043 518.6951 342.67246 252.19029 260.2326 360.026 475.5027 585.3867 689.5237 763.399 789.2704 767.1379 721.5798 701.60547 708.56934 729.7031 698.0708 603.9868 453.5387 372.24 409.8791 566.456 726.0741 765.1085 683.52735 523.9973 406.7234 338.9447 321.15903 357.3272 448.30374 592.39826 703.3367 732.7151 680.53345 596.5752 558.14576 566.1356 608.07605 633.91407 638.4067 622.52527 599.0481 571.93567 541.21766 517.4036 508.96945 515.9152 538.60987 577.86695 633.71564 700.29645 743.14545 756.6329 740.5155 688.5471 597.9893 468.84186 347.01715 287.35184 289.95178 344.76764 420.47644 514.8275 619.0778 653.6262 599.3441 457.49445 322.42325 252.78649 248.58415 281.2258 301.48657 308.51135 310.21738 341.9751 408.03464 504.52197 570.956 586.5896 551.447 501.78436 470.29797 456.98776 469.73788 527.7601 631.922 771.2535 873.03797 923.92896 923.72864 865.91547 747.3284 567.96747 375.2152 232.20317 139.24568 99.3685 123.01762 211.07584 354.94843 464.38574 515.2864 507.96597 480.7854 460.2229 446.27835 431.02744 399.36475 350.924 289.92645 237.42057 196.28647 168.08194 182.1549 249.63803 370.5313 502.78494 603.8131 673.6155 704.43024 675.3489 585.21405 448.0343 369.0309 369.81656 449.11877 550.8501 644.93805 731.3826 771.4908 707.9189 540.1366 315.7299 216.96067 261.73706 436.38458 573.53425 623.6243 586.97516 539.52826 539.61915 587.2479 646.1678 639.9623 566.17847 445.92572 397.08777 437.9193 563.03205 647.36817 638.49286 536.4062 437.40118 450.88596 576.97004 750.74396 778.83234 648.3681 384.44107 201.9621 150.16555 227.23984 320.15808 361.8101 352.19577 310.70053 269.2049 228.17528 200.21392 238.98001 350.54425 527.8823 669.5878 742.41034 746.4268 735.0876 754.2284 803.84937 851.2726 820.34455 707.9497 528.30005 370.65366 250.5715 169.24687 161.72356 244.24251 416.80368 593.0763 663.46705 627.59675 529.1714 512.32947 588.4193 740.83924 806.17524 742.7862 552.00904 362.40863 258.65598 240.751 281.64435 332.05762 390.9531 458.6533 536.6886 625.25684 720.21235 749.9026 688.3388 535.5298 381.8742 314.25278 332.6655 411.963 487.36633 555.5924 609.89026 602.3395 523.57514 376.57364 275.90582 280.28726 389.718 515.4811 532.15754 438.84445 268.9271 144.45581 76.65709 62.933178 73.628655 100.35649 143.19657 215.7717 328.05493 480.04623 628.7048 687.27466 653.2855 544.2495 453.09314 393.44226 363.77368 331.97415 285.16757 223.35395 159.12395 106.07434 64.21009 55.14958 140.45917 323.92038 586.714 776.9575 861.49927 841.5475 781.1003 716.4586 647.62244 569.62384 474.66193 362.64227 252.9477 224.27413 284.9903 425.19992 512.4102 505.10403 403.52536 304.39246 286.63318 350.2475 449.5962 482.9715 446.6246 362.328 359.7616 460.3802 658.90564 816.31965 871.0148 822.9909 739.14344 700.32605 706.71625 741.3165 750.5669 730.5489 682.5091 617.96717 539.7232 448.53928 404.04123 443.7131 567.55494 727.41675 839.48365 902.24164 908.96564 829.2589 659.4169 408.31372 217.1963 135.04303 161.81711 225.81017 261.56012 269.067 273.94614 339.29095 468.0164 646.39197 782.1678 858.1981 874.8492 844.572 773.47034 661.54395 556.10096 520.9633 556.4764 630.027 627.6386 539.49994 375.938 247.38567 183.70522 184.51674 200.2956 196.40782 172.85343 164.35802 237.9668 395.36847 613.3798 774.72175 863.0827 879.10376 835.1814 736.08045 581.8013 445.1579 401.06506 449.52658 549.796 590.5866 565.57325 489.12384 471.12128 534.4883 677.36567 813.969 897.631 928.35144 928.10187 929.946 934.2135 927.10236 854.91736 712.2681 510.19846 387.18448 384.8733 502.76544 606.02564 589.3285 452.67435 259.4719 145.52388 115.36879 159.0919 220.29344 290.07 368.05746 445.49207 518.6392 587.49884 649.78284 702.843 746.6756 773.0111 756.7903 696.2963 597.9918 518.5308 471.133 455.4363 447.2675 432.01498 409.67877 389.81766 388.43994 405.79675 443.13226 505.84637 594.56525 706.0964 792.8755 839.0164 844.536 824.8311 793.3822 750.1893 690.0769 600.756 481.70203 341.03848 230.96442 160.78287 129.63645 111.07923 92.61522 74.244416 84.34857 159.73317 300.54892 473.48486 566.4276 570.26465 496.72577 464.6728 505.04144 616.9035 701.30164 691.6542 587.961 458.8503 432.0026 510.29215 666.7964 770.75586 804.8102 770.07435 686.6132 561.8615 395.82028 274.8633 284.1162 423.57898 618.8503 674.0555 578.8248 363.17252 246.15375 271.64813 435.37793 561.3425 557.2836 423.2014 271.2897 264.0061 402.68436 640.542 802.4221 871.65467 850.6357 767.7172 631.1116 441.1894 272.5378 181.15468 167.03993 204.53063 240.64804 273.78284 300.4513 301.65408 274.52197 220.45365 170.49932 137.41542 121.20195 143.84284 229.75452 378.95364 544.76587 590.89557 508.58624 318.72202 195.55951 178.18668 265.30313 381.44016 482.66415 568.97504 644.79535 717.25684 786.4562 849.2665 892.63746 915.13 914.22437 854.6661 725.1096 525.7354 354.0901 292.14917 339.9126 459.06625 561.9041 644.98206 704.6176 718.1625 681.74866 596.6559 498.8911 404.85465 314.54648 271.84183 331.41034 493.4131 700.31134 765.5667 674.8873 447.99136 274.46652 201.79138 229.43115 309.79282 412.0581 536.227 659.4946 740.9829 779.87586 774.579 717.65516 608.1628 450.03503 309.32712 209.63019 150.94086 116.62736 90.98208 74.005036 74.29763 113.68892 193.25234 301.2757 356.1157 342.0759 261.05 182.99306 143.24411 141.80315 179.67905 258.27704 377.60638 518.2844 610.4514 647.8129 635.2898 627.921 641.0576 674.5377 703.01374 708.1879 690.06055 656.53034 623.31415 590.8436 558.3584 521.88025 480.83502 436.68246 419.42255 440.93665 501.22473 569.55396 613.1914 632.129 628.1685 606.3804 567.06934 514.9642 487.65768 493.25314 530.99024 562.1212 564.91724 539.3784 509.72772 513.57154 551.3425 602.5138 584.6769 489.1986 323.8508 190.91558 122.1066 117.293236 129.81664 122.02094 93.906166 59.597363 50.26458 67.029686 110.367424 183.07395 285.60663 415.78244 517.345 565.5931 560.527 523.1696 478.67886 427.10443 369.7752 310.84177 250.6035 196.6401 218.18119 331.90375 536.04865 697.7489 734.1792 645.3396 491.57474 377.08475 303.69894 269.57596 266.46155 293.35968 348.99338 413.3028 479.3831 547.2083 573.84717 520.42145 386.93106 223.20264 151.13785 176.28772 285.5181 391.31534 477.53912 544.8284 614.50556 696.9519 792.1677 881.5209 940.05805 967.65046 966.6646 945.3127 904.29407 847.2391 812.5803 810.6371 841.1133 866.8862 862.18055 826.9962 770.4186 709.86915 645.77784 581.62977 534.9218 508.067 499.1476 471.5749 411.37976 318.56226 239.38553 221.07163 263.6217 356.13525 469.0423 600.68396 742.27314 827.1914 841.64557 786.3435 693.26056 579.6721 445.57816 320.5169 248.6245 230.32599 250.89452 253.44384 232.31862 190.5971 166.45954 171.3093 205.17369 275.0197 386.24957 538.8632 690.3251 750.15394 715.378 605.0278 526.5133 496.65283 512.8541 513.67774 473.11743 391.17337 311.49902 284.24084 309.45807 365.36053 386.37042 368.04706 320.4457 330.90625 419.66043 584.653 692.27265 662.31916 494.7923 295.2593 239.28496 329.55212 517.916 596.9171 542.72577 365.9477 222.74629 164.92234 192.4247 263.18753 340.6612 424.84576 498.78543 522.4897 494.27774 426.17523 394.85333 413.86307 480.55676 514.70954 478.67752 372.46082 268.03778 258.04813 342.84973 493.8563 615.5387 700.218 750.43244 791.6445 830.4332 866.41504 860.1443 785.2732 641.80195 495.72876 468.97876 564.2364 741.9164 811.2296 747.0708 558.71814 410.95557 364.41568 419.0957 495.01376 513.9824 476.0017 402.5662 349.87094 320.85022 319.5512 375.25372 493.77765 673.0705 830.4408 922.8462 950.2864 933.049 900.29554 852.2562 789.77704 716.00324 631.2311 536.1854 439.35175 343.17056 247.8525 193.70685 210.77123 299.04556 420.9913 499.6533 532.7372 529.11084 536.75495 562.854 605.6169 625.8683 607.62525 550.8878 505.6165 526.86274 614.6587 722.51197 715.6067 585.3888 352.85324 191.56714 140.17185 197.41503 292.44357 384.30304 472.99356 559.90125 647.24585 735.0565 814.0548 845.8008 826.0966 756.35657 656.13404 531.6778 383.14615 289.02673 314.77118 460.3796 656.02497 742.97236 715.08905 597.31324 541.75525 574.1843 691.5577 809.7153 890.5902 934.18226 932.3359 874.96607 762.0449 624.56574 562.2967 582.7952 674.2943 724.764 706.3539 619.7604 524.9815 460.58804 426.58002 407.5917 376.27408 332.09393 287.98773 303.84784 387.18964 532.37134 645.8546 694.46607 678.21827 644.8896 639.2433 661.2794 698.1266 717.34565 717.36396 695.5863 634.07544 529.40986 383.92865 282.35126 267.1766 338.40466 432.15076 460.0915 421.66913 347.14398 344.80005 424.29172 575.49244 686.33106 725.77326 694.0019 618.3861 518.5364 394.45297 270.90662 196.84009 173.57126 200.32042 273.0405 391.15228 546.55524 575.14637 412.38397 52.0)) (quote bpf) 10))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj)) :from-file t)) nil nil (pairlis (quote (winsize winpos picture)) (list (om-make-point 335 275) (om-make-point 10 40) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-BPFS-DYN-MULTISEQ" (quote r-bpfs-dyn-multiseq) (quote ((om-load-inputfun (quote input-funbox) "chordseqs-list" "CHORDSEQS-LIST" (list 0)) (om-load-inputfun (quote input-funbox) "1000x1000-bpfs-list" "1000X1000-BPFS-LIST" (list 0)))) (om-make-point 776 418) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-TIME-SCALER" (quote r-time-scaler) (quote ((om-load-inputfun (quote input-funbox) "chordseqs-list" "CHORDSEQS-LIST" nil) (om-load-inputfun (quote input-funbox) "scaling-factor-minmax" "SCALING-FACTOR-MINMAX" nil) (om-load-inputfun (quote input-funbox) "scaling-bpf-1000x1000" "SCALING-BPF-1000X1000" nil) (om-load-inputfun (quote input-funbox) "window-resolution" "WINDOW-RESOLUTION" nil))) (om-make-point 710 336) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-RANDOM-SPLINE-BPFS" (quote r-random-spline-bpfs) (quote ((om-load-inputfun (quote input-funbox) "y-minmax-list" "Y-MINMAX-LIST" (list 0 1000)) (om-load-inputfun (quote input-funbox) "points-minmax-list" "POINTS-MINMAX-LIST" (list 7 9)) (om-load-inputfun (quote input-funbox) "number-of-bpfs" "NUMBER-OF-BPFS" 3))) (om-make-point 811 126) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-FORBIDDEN-INTERVALS" (quote r-forbidden-intervals) (quote ((om-load-inputfun (quote input-funbox) "" "NOTHING" nil))) (om-make-point 686 36) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "FIRST 5" (quote first) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 385 457) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "FIRST 4" (quote first) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 353 458) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "FIRST 3" (quote first) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 329 454) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD-SEQ 2" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 1000)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 470 479) (om-make-point 130 70) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7350) (7150) (7750) (9250) (5250) (3650) (10050) (3700) (8800) (6000) (6100) (10400) (5100) (3800) (9850) (8250) (5250) (9400) (3450) (10600) (4600) (3450) (4050) (7200) (4050) (9350) (8800) (7750) (7650) (6750) (4900) (8000) (3950) (9850) (6400) (6700) (8400) (5600) (8900) (2600) (7900) (4800) (7450) (5700) (7550) (3350) (8650) (4050) (6400) (7550) (2700) (3750) (9950) (3500) (6300) (3350) (4950) (8000) (3800) (8200) (6150) (7250) (4600) (4850) (3750) (5800) (3900) (7450) (6250) (7100) (2500) (2350) (7750) (3200) (4050) (6400) (4850) (7900) (8600) (8400) (8250) (2400) (9000) (2300) (8100) (8200) (8350) (7700) (8700) (7250) (8500) (4100) (7550) (5050) (2900) (3900) (2600) (7700) (7450) (3300) (5850) (5850) (4950) (2450) (5300) (2400) (4450) (5100) (5950) (3550) (4800) (9250) (6350) (3550) (8850) (7950) (8650) (8450) (6250) (8100) (4700) (4700) (8700) (8100) (8450) (5800) (2700) (4300) (9250) (4900) (8200) (7750) (2650) (4750) (8700) (4250) (7400) (9250) (4050) (3850) (3500) (5550) (8600) (4750) (5000) (8200) (4800) (2700) (7500) (7350) (5350) (6900) (6050) (7200) (3950) (7650) (7250) (8800) (3850) (2450) (8500) (5250) (6350) (7800) (4900) (8100) (2400) (2900) (2400) (2500) (2550) (4350) (3200) (2400) (8400) (7900) (2500) (8950) (2650) (4200) (8300) (7100) (5200) (5300) (2650) (7900) (8450) (5000) (7200) (5950) (5700) (4500) (7600) (3800) (4500) (5300) (6950) (5250) (6150) (9350) (7100) (5600) (3950) (9350) (8700) (8650) (7250) (2600) (6050) (4800) (2250) (2950) (3550) (7200) (2750) (4500) (3050) (6600) (2350) (7850) (3400) (6800) (3800) (5650) (7450) (2250) (5050) (5550) (4850) (5650) (9350) (6800) (7300) (2400) (4850) (2900) (8500) (9050) (6700) (7000) (6800) (9250) (6250) (9050) (7300) (9000) (4850) (4150) (2650) (5350) (7100) (2650) (7200) (2300) (2450) (3100) (3400) (4200) (3900) (4450) (3950) (4450) (3500) (9300) (2550) (9150) (3650) (5900) (2450) (7200) (5950) (7350) (4950) (9300) (8500) (5200) (8200) (7650) (7050) (4600) (8350) (5850) (6800) (6700) (7000) (5450) (7150) (3850) (8450) (5700) (4700) (4200) (3800) (2850) (7300) (2800) (7050) (6500) (3600) (3050) (4300) (9250) (5050) (5900) (3100) (6800) (3350) (2350) (4750) (6900) (4550) (7700) (2550) (3650) (5100) (5750) (5850) (7350) (3500) (6900) (8050) (4450) (7150) (4300) (8550) (9250) (7700) (8700) (8150) (9350) (7000) (3900) (2400) (3200) (4900) (4350) (3650) (7050) (8450) (2750) (7950) (4350) (4750) (4500) (3450) (4400) (4900) (6150) (5300) (4550) (4250) (4150) (4850) (3350) (3700) (6100) (3450) (8900) (7300) (7450) (5700) (4150) (3600) (6600) (8250) (7850) (8050) (6300) (2500) (5950) (7550) (8750) (9300) (6850) (7200) (4050) (2250) (7400) (6050) (4300) (4550) (4900) (2400) (4200) (7100) (6700) (4600) (4750) (5650) (9350) (5800) (7950) (5400) (8200) (3400) (2550) (5750) (8600) (5900) (7800) (3300) (5700) (7400) (7150) (5900) (7550) (4500) (8600) (2200) (4550) (7900) (6350) (3650) (3450) (7750) (8900) (9150) (3850) (8350) (4000) (3150) (5250) (7200) (5750) (3700) (7250) (2250) (4450) (9300) (4450) (5500) (6550) (5750) (5800) (4950) (6350) (6300) (6250) (5600) (4250) (5600) (5400) (6000) (7500) (3500) (9100) (8300) (9150) (7050) (4250) (4350) (8650) (3350) (9250) (8100) (6500) (3500) (7650) (8900) (8850) (2850) (8900) (2300) (5450) (2300) (7600) (7050) (6000) (5900) (5000) (3150) (6250) (2200) (8100) (4650) (4950) (6650) (3850) (7150) (8050) (6150) (3050) (5700) (3950) (5800) (8800) (6900) (2300) (4650) (5800) (8150) (9200) (8200) (8950) (4550) (8800) (3200) (6250) (9250) (6450))) :lonset (quote (0 90 180 270 360 450 540 630 720 810 900 990 1080 1170 1260 1350 1440 1530 1620 1710 1800 1890 1980 2070 2160 2250 2340 2430 2520 2610 2700 2790 2880 2970 3060 3150 3240 3330 3420 3510 3600 3690 3780 3870 3960 4050 4140 4230 4320 4410 4500 4590 4680 4770 4860 4950 5040 5130 5220 5310 5400 5490 5580 5670 5760 5850 5940 6030 6120 6210 6300 6390 6480 6570 6660 6750 6840 6930 7020 7110 7200 7290 7380 7470 7560 7650 7740 7830 7920 8010 8100 8190 8280 8370 8460 8550 8640 8730 8820 8910 9000 9090 9180 9270 9360 9450 9540 9630 9720 9810 9900 9990 10080 10170 10260 10350 10440 10530 10620 10710 10800 10890 10980 11070 11160 11250 11340 11430 11520 11610 11700 11790 11880 11970 12060 12150 12240 12330 12420 12510 12600 12690 12780 12870 12960 13050 13140 13230 13320 13410 13500 13590 13680 13770 13860 13950 14040 14130 14220 14310 14400 14490 14580 14670 14760 14850 14940 15030 15120 15210 15300 15390 15480 15570 15660 15750 15840 15930 16020 16110 16200 16290 16380 16470 16560 16650 16740 16830 16920 17010 17100 17190 17280 17370 17460 17550 17640 17730 17820 17910 18000 18090 18180 18270 18360 18450 18540 18630 18720 18810 18900 18990 19080 19170 19260 19350 19440 19530 19620 19710 19800 19890 19980 20070 20160 20250 20340 20430 20520 20610 20700 20790 20880 20970 21060 21150 21240 21330 21420 21510 21600 21690 21780 21870 21960 22050 22140 22230 22320 22410 22500 22590 22680 22770 22860 22950 23040 23130 23220 23310 23400 23490 23580 23670 23760 23850 23940 24030 24120 24210 24300 24390 24480 24570 24660 24750 24840 24930 25020 25110 25200 25290 25380 25470 25560 25650 25740 25830 25920 26010 26100 26190 26280 26370 26460 26550 26640 26730 26820 26910 27000 27090 27180 27270 27360 27450 27540 27630 27720 27810 27900 27990 28080 28170 28260 28350 28440 28530 28620 28710 28800 28890 28980 29070 29160 29250 29340 29430 29520 29610 29700 29790 29880 29970 30060 30150 30240 30330 30420 30510 30600 30690 30780 30870 30960 31050 31140 31230 31320 31410 31500 31590 31680 31770 31860 31950 32040 32130 32220 32310 32400 32490 32580 32670 32760 32850 32940 33030 33120 33210 33300 33390 33480 33570 33660 33750 33840 33930 34020 34110 34200 34290 34380 34470 34560 34650 34740 34830 34920 35010 35100 35190 35280 35370 35460 35550 35640 35730 35820 35910 36000 36090 36180 36270 36360 36450 36540 36630 36720 36810 36900 36990 37080 37170 37260 37350 37440 37530 37620 37710 37800 37890 37980 38070 38160 38250 38340 38430 38520 38610 38700 38790 38880 38970 39060 39150 39240 39330 39420 39510 39600 39690 39780 39870 39960 40050 40140 40230 40320 40410 40500 40590 40680 40770 40860 40950 41040 41130 41220 41310 41400 41490 41580 41670 41760 41850 41940 42030 42120 42210 42300 42390 42480 42570 42660 42750 42840 42930 43020 43110 43200 43290 43380 43470 43560 43650 43740 43830 43920 44010 44100 44190 44280 44370 44460 44550 44640 44730 44820 44910 45090)) :ldur (quotelvel (quoteloffset (quotelchan (quotelegato 200)))) (load-port-info newobj (quoteinit-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 8 24 (quote ggff) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :osc-scoreplayer) 1 nil 1000 0 (om-make-point 700 470) (om-make-point 400 23) 0 1 (quote :normal) (quote t) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "FIRST 2" (quote first) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 302 450) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "FIRST" (quote first) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 266 447) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD-SEQ" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 1000)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 33 471) (om-make-point 130 70) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5050) (7350) (8850) (5750) (9850) (9750) (6150) (5200) (7200) (8700) (5900) (9200) (9400) (5600) (5150) (6850) (8150) (6800) (5450) (5400) (10100) (8550) (8350) (7300) (5350) (5650) (6300) (5650) (8550) (9350) (3900) (6700) (8050) (2550) (8100) (9900) (6600) (9500) (4500) (6400) (8200) (4000) (7250) (6300) (4850) (3950) (7950) (3750) (8700) (5850) (6300) (5150) (6050) (4000) (5700) (9050) (9550) (8600) (4000) (6900) (7250) (8950) (4300) (3950) (3750) (6200) (8500) (7050) (10350) (7900) (5400) (3850) (8450) (5700) (4750) (8300) (7150) (4500) (5900) (8200) (6750) (5500) (4400) (6700) (8000) (7800) (6350) (4300) (3700) (7250) (8100) (3700) (7550) (8350) (6100) (5000) (6200) (7000) (4550) (9100) (8650) (10750) (10050) (5450) (8100) (6600) (4450) (3700) (8750) (8450) (7600) (5250) (10250) (4250) (6250) (5450) (7550) (7650) (9750) (6600) (7300) (7700) (5800) (8500) (6550) (9300) (10700) (4700) (6850) (3900) (6500) (4250) (9750) (9750) (7900) (10750) (7700) (4150) (4950) (5050) (5300) (9150) (10600) (7650) (9500) (8400) (10200) (5200) (5900) (8850) (10750) (9100) (8650) (4800) (8450) (6850) (9350) (6200) (4050) (3750) (7700) (3650) (9650) (6900) (7100) (4300) (4900) (6500) (5400) (5400) (3650) (4650) (5700) (6400) (6300) (4100) (9900) (5550) (6750) (10800) (6800) (6300) (3800) (10800) (6150) (6800) (10750) (7400) (7300) (10650) (9300) (10600) (5800) (5200) (4400) (10700) (7750) (6750) (6250) (5150) (9500) (9400) (3950) (4050) (7500) (7450) (8750) (4900) (5950) (7600) (5050) (6450) (4250) (7900) (10650) (4500) (5850) (9400) (5150) (4150) (9000) (7700) (5600) (9350) (7650) (3950) (3950) (10550) (3950) (9050) (9850) (5600) (7200) (7000) (10150) (5000) (4900) (7150) (9400) (9000) (7900) (9950) (6150) (5450) (9300) (6000) (10250) (9250) (6350) (10750) (8900) (4850) (4800) (10100) (4850) (6300) (4400) (3700) (9500) (4550) (4950) (4350) (4000) (9900) (9850) (5350) (5750) (9100) (5450) (6200) (10250) (8750) (3850) (5400) (10700) (7200) (6300) (8950) (7950) (10500) (5050) (10350) (9300) (9300) (7700) (6550) (5250) (10650) (8150) (9300) (10400) (9200) (5200) (6050) (8700) (4700) (4950) (5900) (3700) (6350) (10700) (5850) (8350) (10300) (5800) (9200) (4150) (9650) (7650) (7600) (4850) (7300) (5350) (9750) (3900) (10350) (10150) (7350) (8500) (5500) (6450) (4950) (7850) (10800) (4850) (6950) (8400) (7300) (6550) (9850) (5400) (10600) (7000) (4600) (10200) (9050) (5350) (9050) (7550) (4750) (4050) (8050) (9750) (4900) (4350) (10700) (8500) (10050) (10800) (4250) (10450) (7850) (7550) (3950) (5700) (8900) (4450) (4500) (8900) (8650) (10300) (10550) (8400) (5800) (6250) (8750) (6950) (8800) (3700) (10250) (8550) (7250) (5400) (5150) (5200) (10450) (7150) (7600) (9050) (9100) (4450) (4000) (6400) (10500) (4900) (5700) (9900) (4650) (9350) (5750) (7600) (8250) (10700) (7800) (4100) (9450) (6650) (5900) (10700) (7200) (4600) (7700) (8800) (8950) (10100) (7150) (7500) (3800) (5100) (4850) (7100) (8750) (9750) (5550) (8350) (7100) (5550) (8150) (4050) (10500) (6250) (9750) (7900) (7650) (5300) (8850) (6550) (10250) (9900) (7950) (9000) (10050) (9250) (9300) (8450) (9850) (9800) (9750) (9100) (7750) (6800) (9100) (10600) (7500) (4400) (4300) (7900) (6950) (8950) (10450) (7650) (3750) (3950) (7350) (6900) (8600) (9900) (8550) (7200) (7150) (4650) (10300) (10100) (9050) (7100) (7400) (8050) (7400) (10300) (3900) (5650) (8450) (9800) (4300) (9850) (4450) (8350) (4050) (6250) (8150) (9950) (5750) (9000) (8050) (6600) (5700) (9700) (5500) (10450) (7600) (8050) (6900) (7800) (5750) (7450) (10800) (4100) (10350) (5750) (8650))) :lonset (quote (0 90 180 270 360 450 540 630 720 810 900 990 1080 1170 1260 1350 1440 1530 1620 1710 1800 1890 1980 2070 2160 2250 2340 2430 2520 2610 2700 2790 2880 2970 3060 3150 3240 3330 3420 3510 3600 3690 3780 3870 3960 4050 4140 4230 4320 4410 4500 4590 4680 4770 4860 4950 5040 5130 5220 5310 5400 5490 5580 5670 5760 5850 5940 6030 6120 6210 6300 6390 6480 6570 6660 6750 6840 6930 7020 7110 7200 7290 7380 7470 7560 7650 7740 7830 7920 8010 8100 8190 8280 8370 8460 8550 8640 8730 8820 8910 9000 9090 9180 9270 9360 9450 9540 9630 9720 9810 9900 9990 10080 10170 10260 10350 10440 10530 10620 10710 10800 10890 10980 11070 11160 11250 11340 11430 11520 11610 11700 11790 11880 11970 12060 12150 12240 12330 12420 12510 12600 12690 12780 12870 12960 13050 13140 13230 13320 13410 13500 13590 13680 13770 13860 13950 14040 14130 14220 14310 14400 14490 14580 14670 14760 14850 14940 15030 15120 15210 15300 15390 15480 15570 15660 15750 15840 15930 16020 16110 16200 16290 16380 16470 16560 16650 16740 16830 16920 17010 17100 17190 17280 17370 17460 17550 17640 17730 17820 17910 18000 18090 18180 18270 18360 18450 18540 18630 18720 18810 18900 18990 19080 19170 19260 19350 19440 19530 19620 19710 19800 19890 19980 20070 20160 20250 20340 20430 20520 20610 20700 20790 20880 20970 21060 21150 21240 21330 21420 21510 21600 21690 21780 21870 21960 22050 22140 22230 22320 22410 22500 22590 22680 22770 22860 22950 23040 23130 23220 23310 23400 23490 23580 23670 23760 23850 23940 24030 24120 24210 24300 24390 24480 24570 24660 24750 24840 24930 25020 25110 25200 25290 25380 25470 25560 25650 25740 25830 25920 26010 26100 26190 26280 26370 26460 26550 26640 26730 26820 26910 27000 27090 27180 27270 27360 27450 27540 27630 27720 27810 27900 27990 28080 28170 28260 28350 28440 28530 28620 28710 28800 28890 28980 29070 29160 29250 29340 29430 29520 29610 29700 29790 29880 29970 30060 30150 30240 30330 30420 30510 30600 30690 30780 30870 30960 31050 31140 31230 31320 31410 31500 31590 31680 31770 31860 31950 32040 32130 32220 32310 32400 32490 32580 32670 32760 32850 32940 33030 33120 33210 33300 33390 33480 33570 33660 33750 33840 33930 34020 34110 34200 34290 34380 34470 34560 34650 34740 34830 34920 35010 35100 35190 35280 35370 35460 35550 35640 35730 35820 35910 36000 36090 36180 36270 36360 36450 36540 36630 36720 36810 36900 36990 37080 37170 37260 37350 37440 37530 37620 37710 37800 37890 37980 38070 38160 38250 38340 38430 38520 38610 38700 38790 38880 38970 39060 39150 39240 39330 39420 39510 39600 39690 39780 39870 39960 40050 40140 40230 40320 40410 40500 40590 40680 40770 40860 40950 41040 41130 41220 41310 41400 41490 41580 41670 41760 41850 41940 42030 42120 42210 42300 42390 42480 42570 42660 42750 42840 42930 43020 43110 43200 43290 43380 43470 43560 43650 43740 43830 43920 44010 44100 44190 44280 44370 44460 44550 44640 44730 44820 44910 45000)) :ldur (quotelvel (quoteloffset (quotelchan (quotelegato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.13 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 8 24 (quote ggff) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :osc-scoreplayer) 1 nil 1000 0 (om-make-point 601 407) (om-make-point 400 23) 0 1 (quote :normal) (quote t) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-MULTISEQ-EXTRACT-PARAM" (quote r-multiseq-extract-param) (quote ((om-load-inputfun (quote input-funbox) "numbers" "CHORDSEQS-LIST" nil))) (om-make-point 250 357) nil nil nil nil 7))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 15" (quote list) (quote nil) (om-make-point 434 235) (om-make-point 27 30) 1 "1" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 14" (quote list) (quote nil) (om-make-point 326 233) (om-make-point 34 30) 90 "90" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 13" (quote list) (quote nil) (om-make-point 389 239) (om-make-point 41 30) 100 "100" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 12" (quote list) (quote nil) (om-make-point 353 214) (om-make-point 27 30) 1 "1" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 11" (quote list) (quote nil) (om-make-point 278 232) (om-make-point 34 30) 50 "50" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-RANDOM-MULTISEQ" (quote r-random-multiseq) (quote ((om-load-inputfun (quote input-funbox) "pitch-minmax-list" "PITCH-MINMAX-LIST" (list 0)) (om-load-inputfun (quote input-funbox) "intervalsize-cent" "INTERVALSIZE-CENT" 0) (om-load-inputfun (quote input-funbox) "number-of-chordseqs" "NUMBER-OF-CHORDSEQS" 0) (om-load-inputfun (quote input-funbox) "number-of-notes" "NUMBER-OF-NOTES" 0) (om-load-inputfun (quote input-funbox) "ms-speed" "MS-SPEED" 0) (om-load-inputfun (quote input-funbox) "velocity-midi" "VELOCITY-MIDI" 0) (om-load-inputfun (quote input-funbox) "midi-channel" "MIDI-CHANNEL" 0))) (om-make-point 293 284) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 10" (quote list) (quote nil) (om-make-point 523 179) (om-make-point 27 30) 6 "6" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 9" (quote list) (quote nil) (om-make-point 464 180) (om-make-point 48 30) 1200 "1200" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 3" (quote list) (quote nil) (om-make-point 400 69) (om-make-point 41 30) 500 "500" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-CIRCLES-MATERIAL 2" (quote r-circles-material) (quote ((om-load-inputfun (quote input-funbox) "" "NOTHING" nil))) (om-make-point 287 18) nil nil nil nil 3))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 8" (quote list) (quote nil) (om-make-point 179 183) (om-make-point 97 30) (list 2200 10800) "(2200 10800)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-CIRCLES-MATERIAL" (quote r-circles-material) (quote ((om-load-inputfun (quote input-funbox) "" "NOTHING" nil))) (om-make-point 137 25) nil nil nil nil 3))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-WRAP-TO-RANGE 2" (quote r-wrap-to-range) (quote ((om-load-inputfun (quote input-funbox) "midicents-lists" "MIDICENTS-LISTS" nil) (om-load-inputfun (quote input-funbox) "minmax-midicents" "MINMAX-MIDICENTS" nil) (om-load-inputfun (quote input-funbox) "wrapping-interval" "WRAPPING-INTERVAL" nil) (om-load-inputfun (quote input-funbox) "number-of-wrapping-intervals" "NUMBER-OF-WRAPPING-INTERVALS" nil))) (om-make-point 457 239) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-WRAP-TO-RANGE" (quote r-wrap-to-range) (quote ((om-load-inputfun (quote input-funbox) "midicents-lists" "MIDICENTS-LISTS" nil) (om-load-inputfun (quote input-funbox) "minmax-midicents" "MINMAX-MIDICENTS" nil) (om-load-inputfun (quote input-funbox) "wrapping-interval" "WRAPPING-INTERVAL" nil) (om-load-inputfun (quote input-funbox) "number-of-wrapping-intervals" "NUMBER-OF-WRAPPING-INTERVALS" nil))) (om-make-point 170 260) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-FEEDBACK-A-B+C" (quote r-feedback-a-b+c) (quote ((om-load-inputfun (quote input-funbox) "midicentsA" "MIDICENTSA" nil) (om-load-inputfun (quote input-funbox) "midicentsB" "MIDICENTSB" nil) (om-load-inputfun (quote input-funbox) "midicentsC" "MIDICENTSC" nil) (om-load-inputfun (quote input-funbox) "number-of-notes" "NUMBER-OF-NOTES" nil))) (om-make-point 232 115) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-FEEDBACK-A+B-C" (quote r-feedback-a+b-c) (quote ((om-load-inputfun (quote input-funbox) "midicentsA" "MIDICENTSA" nil) (om-load-inputfun (quote input-funbox) "midicentsB" "MIDICENTSB" nil) (om-load-inputfun (quote input-funbox) "midicentsC" "MIDICENTSC" nil) (om-load-inputfun (quote input-funbox) "number-of-notes" "NUMBER-OF-NOTES" nil))) (om-make-point 144 119) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 4" (quote list) (quote nil) (om-make-point 251 40) (om-make-point 41 30) 500 "500" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((20 0 1 0 nil 0) (0 0 1 1 nil 0) (1 0 9 1 nil 0) (19 1 12 0 nil 0) (17 0 16 0 nil 0) (23 0 16 1 nil 0) (27 0 17 0 nil 0) (30 0 18 0 nil 0) (22 0 19 1 nil 0) (21 0 20 0 nil 0) (19 1 20 1 nil 0) (16 0 21 0 nil 0) (10 0 21 1 nil 0) (12 0 21 2 nil 0) (11 0 21 3 nil 0) (14 0 22 0 nil 0) (13 0 22 1 nil 0) (15 0 22 2 nil 0) (31 5 24 0 nil 0) (31 4 25 0 nil 0) (31 3 26 0 nil 0) (44 0 27 1 nil 0) (29 0 27 2 nil 0) (28 0 27 3 nil 0) (26 0 27 4 nil 0) (25 0 27 5 nil 0) (24 0 27 6 nil 0) (7 0 27 7 nil 0) (31 2 28 0 nil 0) (31 1 29 0 nil 0) (45 0 30 1 nil 0) (29 0 30 2 nil 0) (28 0 30 3 nil 0) (26 0 30 4 nil 0) (25 0 30 5 nil 0) (24 0 30 6 nil 0) (8 0 30 7 nil 0) (37 0 31 0 nil 0) (42 0 37 0 nil 0) (36 0 37 1 nil 0) (35 0 37 2 nil 0) (48 0 37 3 nil 0) (33 0 37 4 nil 0) (34 0 37 5 nil 0) (32 0 37 6 nil 0) (46 0 44 0 nil 0) (42 0 44 1 nil 0) (39 0 44 2 nil 0) (38 0 44 3 nil 0) (47 0 45 0 nil 0) (42 0 45 1 nil 0) (39 0 45 2 nil 0) (38 0 45 3 nil 0) (41 0 46 0 nil 0) (41 1 46 1 nil 0) (41 2 46 2 nil 0) (40 0 46 3 nil 0) (43 0 47 0 nil 0) (43 1 47 1 nil 0) (43 2 47 2 nil 0) (48 0 47 3 nil 0))) nil 6.13))
