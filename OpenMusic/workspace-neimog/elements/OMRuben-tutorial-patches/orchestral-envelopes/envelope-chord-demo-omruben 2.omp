; OM File Header - Saved 2020/09/23 20:55:25
; (6.13 :patc (om-make-point 388 160) (om-make-point 254 23) (om-make-point 1244 720) "" 183 0 nil "2020/09/23 20:55:25")
; End File Header
(in-package :om)(load-lib-for (quote ("OMRuben")))(setf *om-current-persistent* (om-load-patch1 "envelope-chord-demo-omruben 2" (quote ((let ((box (om-load-boxcall (quote genfun) "X-APPEND" (quote x-append) (quote ((om-load-inputfun (quote input-funbox) "first element" "L1?" nil) (om-load-inputfun (quote input-funbox) "second element" "L2?" nil))) (om-make-point 625 186) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 17" (quote list) (quote nil) (om-make-point 822 19) (om-make-point 59 30) (list 0 1000) "(0 1000)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPF 2" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "x-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "y-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "precision (integer) [0 - 10]" "decimals" 0))) (om-make-point 818 71) (om-make-point 99 90) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0 290 898 1000)) (quote (0 596 184 1000)) (quote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) "x" nil (pairlis (quote (winsize winpos picture)) (list (om-make-point 335 275) (om-make-point 10 40) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 16" (quote list) (quote nil) (om-make-point 669 18) (om-make-point 59 30) (list 0 1000) "(0 1000)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPF" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "x-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "y-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "precision (integer) [0 - 10]" "decimals" 0))) (om-make-point 665 70) (om-make-point 99 90) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0 205 386 411 762 1000)) (quote (0 460 325 933 190 1000)) (quote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) "x" nil (pairlis (quote (winsize winpos picture)) (list (om-make-point 335 275) (om-make-point 10 40) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 10" (quote list) (quote nil) (om-make-point 218 565) (om-make-point 24 30) 14 "14" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-APPLY-CHANNEL-MULTISEQ" (quote r-apply-channel-multiseq) (quote ((om-load-inputfun (quote input-funbox) "chordseqs-list" "CHORDSEQS-LIST" nil) (om-load-inputfun (quote input-funbox) "channel" "CHANNEL" nil))) (om-make-point 115 608) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 246 73) (quote "A tam-tam spectrum is orchestrated$using attack and decay envelopes.") "" (om-make-point 678 213) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 15" (quote list) (quote nil) (om-make-point 386 204) (om-make-point 31 30) 0.5 ".5" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 9" (quote list) (quote nil) (om-make-point 239 147) (om-make-point 34 30) 12 "12" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "SECOND" (quote second) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 333 192) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "FIRST" (quote first) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 278 173) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "R-ATTACK-DECAY-LINE->ATTACKS" (quote r-attack-decay-line->attacks) (quote ((om-load-inputfun (quote input-funbox) "NUMBER-OF-VOICES" "NUMBER-OF-VOICES" nil) (om-load-inputfun (quote input-funbox) "ATTACK-BPF" "ATTACK-BPF" nil) (om-load-inputfun (quote input-funbox) "ATTACK-PERCENT" "ATTACK-PERCENT" nil) (om-load-inputfun (quote input-funbox) "DECAY-BPF" "DECAY-BPF" nil) (om-load-inputfun (quote input-funbox) "DECAY-PERCENT" "DECAY-PERCENT" nil))) (om-make-point 239 245) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPF-LIB 2" (quote bpf-lib) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of BPF objects" "bpf-list" (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0 100)) (quote (0 100)) (quote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj))))) (om-make-point 151 300) (om-make-point 40 60) (if (find-class (quote bpf-lib) nil) (make-instance (quote bpf-lib) :bpf-list (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 1.5999984 3.1967905 4.790376 6.3807554 7.9679275 9.551893 11.132654 12.710208 14.2845545 15.855698 17.423632 18.98836 20.549881 22.108197 23.663308 25.215207 26.7639 28.309393 29.851675 31.390748 32.92662 34.459282 35.98874 37.514985 39.038033 40.557873 42.074498 43.587925 45.09814 46.605156 48.108963 49.60956 51.10695 52.60114 54.092114 55.579888 57.064457 58.54581 60.02397 61.498925 62.970658 64.43919 65.904526 67.366646 68.825554 70.28127 71.73377 73.18307 74.62916 76.07204 77.51172 78.9482 80.381455 81.811516 83.238365 84.66201 86.08245 87.49968 88.91371 90.32453 91.73213 93.13655 94.53775 95.93574 97.330536 98.722115 100.11049 101.49565 102.877625 104.25637 105.63192 107.004265 108.3734 109.739334 111.10205 112.461586 113.81788 115.17099 116.52088 117.86757 119.21106 120.55134 121.88841 123.22227 124.55294 125.880394 127.20464 128.52567 129.8435 131.15814 132.46958 133.77777 135.08278 136.38459 137.68318 138.97856 140.27075 141.55973 142.84549 144.12805 145.40743 146.68357 147.95652 149.22626 150.49277 151.7561 153.01622 154.27313 155.52684 156.77735 158.02463 159.26873 160.5096 161.74727 162.98174 164.213 165.44106 166.6659 167.88755 169.10599 170.3212 171.53324 172.74204 173.94766 175.15006 176.34926 177.54524 178.73802 179.92761 181.11399 182.29714 183.4771 184.65384 185.8274 186.99773 188.16487 189.3288 190.48952 191.64704 192.80133 193.95244 195.10034 196.24503 197.3865 198.52478 199.65985 200.7917 201.92037 203.0458 204.16806 205.28708 206.40293 207.51557 208.62497 209.73117 210.83417 211.93398 213.03055 214.12395 215.21414 216.30109 217.38489 218.46543 219.54279 220.6169 221.68787 222.7556 223.82012 224.88147 225.93958 226.99448 228.04618 229.09467 230.13997 231.18204 232.22092 233.25659 234.28905 235.31832 236.34436 237.36722 238.38683 239.40328 240.4165 241.42653 242.43334 243.43697 244.43735 245.43453 246.42852 247.4193 248.40686 249.39125 250.37239 251.35036 252.3251 253.29665 254.26497 255.2301 256.19205 257.15076 258.10626 259.05856 260.00766 260.95355 261.89624 262.83572 263.77197 264.70505 265.6349 266.56155 267.48502 268.40524 269.32227 270.2361 271.14673 272.05414 272.95834 273.85934 274.75714 275.65173 276.54312 277.43127 278.31625 279.198 280.07657 280.9519 281.82407 282.693 283.55875 284.42126 285.28058 286.1367 286.9896 287.8393 288.6858 289.52908 290.36914 291.20602 292.03967 292.87015 293.6974 294.52145 295.3423 296.1599 296.97437 297.78558 298.5936 299.3984 300.2001 301.00092 301.8017 302.6025 303.40332 304.20413 305.0049 305.80573 306.6065 307.4073 308.20813 309.0089 309.80972 310.6105 311.41132 312.21213 313.0129 313.81372 314.6145 315.41528 316.21613 317.0169 317.81772 318.6185 319.4193 320.22012 321.0209 321.82172 322.62253 323.42334 324.22412 325.0249 325.8257 326.62653 327.4273 328.22812 329.02893 329.8297 330.63052 331.4313 332.23212 333.03293 333.83368 334.6345 335.4353 336.2361 337.03693 337.8377 338.63852 339.43933 340.2401 341.04092 341.8417 342.64252 343.44333 344.24414 345.04492 345.8457 346.6465 347.44733 348.2481 349.04895 349.84973 350.6505 351.45132 352.25214 353.05292 353.8537 354.6545 355.45535 356.25613 357.05695 357.85773 358.65854 359.45935 360.26013 361.06094 361.8617 362.66254 363.46335 364.26413 365.06494 365.86572 366.6665 367.46735 368.26813 369.0689 369.86972 370.67053 371.4713 372.27213 373.0729 373.87372 374.67453 375.47534 376.27612 377.07694 377.87772 378.67853 379.47934 380.28015 381.08093 381.88174 382.68253 383.48334 384.28415 385.08493 385.88574 386.68655 387.4873 388.28815 389.08893 389.8897 390.69055 391.49136 392.29215 393.09293 393.89374 394.69458 395.49536 396.29614 397.09692 397.89774 398.69855 399.49933 400.30014 401.10095 401.90173 402.70258 403.50336 404.30414 405.10492 405.90573 406.70654 407.50735 408.30817 409.10895 409.90973 410.71057 411.51135 412.31213 413.1129 413.91373 414.71457 415.51538 416.31616 417.11697 417.9178 418.71857 419.51935 420.32016 421.1209 421.92175 422.72253 423.52338 424.32413 425.12497 425.92578 426.72653 427.52734 428.32816 429.12897 429.92975 430.73056 431.53137 432.33215 433.13293 433.93378 434.7346 435.53534 436.33618 437.13696 437.93774 438.7386 439.53937 440.34015 441.14102 441.94174 442.74255 443.54334 444.34415 445.14496 445.94574 446.74655 447.5474 448.34818 449.14893 449.94977 450.75058 451.55136 452.35217 453.15298 453.9537 454.75458 455.55536 456.35617 457.15695 457.95776 458.75855 459.55942 460.36014 461.16095 461.9618 462.7626 463.56332 464.3642 465.16498 465.9658 466.76657 467.56738 468.36816 469.1689 469.96976 470.77057 471.57138 472.37222 473.17297 473.97376 474.7746 475.57535 476.37616 477.177 477.97778 478.77853 479.5794 480.3802 481.181 481.98178 482.7826 483.58337 484.3842 485.18497 485.98578 486.78656 487.58737 488.38815 489.18897 489.9898 490.79062 491.59137 492.3922 493.193 493.9938 494.7946 495.5954 496.39618 497.19693 497.9978 498.79858 499.5994 500.40024 501.20102 502.00177 502.8026 503.60342 504.4042 505.20502 506.00583 506.8066 507.60742 508.4082 509.209 510.0098 510.8106 511.6114 512.41224 513.213 514.0138 514.8146 515.6154 516.41626 517.217 518.01777 518.8186 519.61945 520.4202 521.221 522.02186 522.82264 523.6234 524.42426 525.22504 526.0258 526.82666 527.62745 528.4283 529.229 530.02985 530.83057 531.6315 532.43226 533.23304 534.0338 534.83466 535.63544 536.4363 537.237 538.03785 538.8386 539.6394 540.44025 541.241 542.0418 542.84266 543.64344 544.4442 545.24506 546.04584 546.8466 547.6474 548.44825 549.249 550.04987 550.85065 551.6514 552.4523 553.253 554.0538 554.8547 555.65546 556.45624 557.257 558.0578 558.8586 559.6594 560.4602 561.2611 562.0618 562.8626 563.66346 564.46424 565.2651 566.06586 566.86664 567.6675 568.4682 569.26905 570.0699 570.87067 571.6714 572.4722 573.273 574.07386 574.87464 575.6754 576.47626 577.27704 578.0778 578.8786 579.67945 580.4802 581.28107 582.08185 582.8826 583.6835 584.48426 585.28504 586.0858 586.8867 587.68744 588.4883 589.28907 590.08985 590.8907 591.69147 592.49225 593.2931 594.0938 594.89466 595.69544 596.4962 597.29706 598.09784 598.8987 599.6994 600.50025 601.301 602.10187 602.90265 603.7034 604.5042 605.30506 606.10584 606.9066 607.70746 608.50824 609.3091 610.10987 610.91065 611.7114 612.51227 613.31305 614.1139 614.9147 615.71546 616.51624 617.3171 618.11786 618.91864 619.7195 620.52027 621.32105 622.1218 622.92267 623.7235 624.52424 625.3251 626.12586 626.9267 627.7275 628.52826 629.3291 630.1298 630.93067 631.7315 632.5323 633.33307 634.13385 634.9347 635.7355 636.53626 637.33704 638.1379 638.9386 639.73945 640.5403 641.34107 642.14185 642.9427 643.74347 644.54425 645.3451 646.1459 646.94666 647.7475 648.5483 649.34906 650.1499 650.9507 651.75147 652.55225 653.353 654.1539 654.95466 655.7555 656.5563 657.35706 658.1579 658.9587 659.75946 660.5603 661.3611 662.16187 662.96265 663.7635 664.5643 665.3651 666.1659 666.9667 667.76746 668.56824 669.3691 670.1699 670.97065 671.7715 672.57227 673.37305 674.1738 674.97474 675.7755 676.5763 677.3771 678.17786 678.9787 679.7795 680.58027 681.3811 682.1819 682.98267 683.7835 684.5843 685.38514 686.1859 686.9867 687.7875 688.58826 689.3891 690.18995 690.9907 691.7915 692.5923 693.39307 694.19385 694.9947 695.7955 696.5963 697.3971 698.1979 698.99866 699.7995 700.6012 701.406 702.214 703.0252 703.8396 704.6573 705.4781 706.3022 707.12946 707.95984 708.7936 709.6304 710.4706 711.3138 712.1603 713.00995 713.8629 714.71894 715.5783 716.4408 717.3065 718.1755 719.04767 719.923 720.8015 721.68335 722.56824 723.4564 724.34784 725.2424 726.1402 727.0412 727.9454 728.8528 729.7634 730.67725 731.59424 732.5145 733.438 734.3646 735.29444 736.22754 737.1638 738.1033 739.046 739.9919 740.9409 741.8932 742.84876 743.8075 744.7694 745.73456 746.7029 747.67444 748.6491 749.62714 750.6083 751.5926 752.58027 753.571 754.56495 755.56214 756.56257 757.5661 758.57294 759.583 760.5962 761.6127 762.6322 763.65516 764.68116 765.71045 766.7429 767.77857 768.81745 769.8595 770.9047 771.9533 773.005 774.05994 775.118 776.17926 777.2439 778.3116 779.38257 780.45667 781.53406 782.61457 783.69837 784.78534 785.8755 786.9688 788.0654 789.1652 790.26825 791.37446 792.4839 793.5965 794.71235 795.8313 796.9536 798.079 799.2077 800.3396 801.4746 802.6129 803.7544 804.8991 806.047 807.19806 808.3524 809.5099 810.67066 811.83454 813.0017 814.17194 815.3455 816.52234 817.7023 818.88544 820.0718 821.26136 822.45417 823.65015 824.84937 826.0517 827.2573 828.46607 829.67817 830.89344 832.1119 833.33344 834.55835 835.78626 837.01764 838.2521 839.48975 840.7307 841.97474 843.22205 844.47254 845.7262 846.9831 848.24317 849.50654 850.7731 852.04285 853.3158 854.592 855.8713 857.1539 858.4396 859.7286 861.02076 862.31617 863.61475 864.9165 866.22156 867.5298 868.8411 870.1558 871.47364 872.79474 874.1189 875.4463 876.7771 878.11084 879.448 880.7882 882.1318 883.47846 884.82825 886.18134 887.5377 888.89716 890.26 891.62586 892.995 894.36725 895.7429 897.1217 898.5037 899.88874 901.27717 902.6688 904.06354 905.46155 906.86274 908.2671 909.6747 911.0856 912.49946 913.9167 915.33735 916.76087 918.1878 919.6178 921.051 922.48755 923.9272 925.3701 926.8162 928.26545 929.718 931.17365 932.63257 934.09467 935.56006 937.02857 938.50025 939.9752 941.4535 942.9348 944.41925 945.9071 947.3981 948.8923 950.38965 951.89026 953.39405 954.90107 956.4113 957.92475 959.4414 960.96106 962.48426 964.01044 965.5399 967.0726 968.60846 970.1475 971.6898 973.2353 974.78406 976.3358 977.891 979.44935 981.0108 982.5755 984.1435 985.7146 987.28894 988.8665 990.44727 992.03125 993.61847 995.2088 996.80237 998.3991 1000.0)) (quote (736.0 735.4714 734.9425 734.41364 733.8844 733.3549 732.8254 732.29566 731.7656 731.23554 730.7051 730.1746 729.64374 729.11286 728.5817 728.05036 727.5189 726.98725 726.45527 725.9232 725.3909 724.85846 724.3258 723.79297 723.2599 722.7267 722.1932 721.6596 721.12574 720.5918 720.0576 719.5232 718.9885 718.4538 717.9189 717.3836 716.84827 716.31275 715.777 715.2411 714.70496 714.16864 713.63215 713.09534 712.55854 712.0214 711.48414 710.94666 710.409 709.87116 709.33307 708.79487 708.2565 707.7178 707.17896 706.63996 706.10077 705.56134 705.0217 704.48194 703.9421 703.40186 702.8615 702.3209 701.7802 701.23926 700.6981 700.1568 699.6153 699.07355 698.5317 697.9896 697.4473 696.9049 696.3622 695.81934 695.27625 694.73304 694.1896 693.6459 693.10206 692.5581 692.01386 691.4695 690.9249 690.3801 689.8352 689.29 688.74457 688.1991 687.65326 687.10737 686.5612 686.01484 685.46845 684.9217 684.3748 683.8277 683.28046 682.7329 682.18525 681.63746 681.0893 680.5411 679.9927 679.444 678.89515 678.3462 677.79694 677.24756 676.69794 676.1482 675.5982 675.04804 674.4977 673.94715 673.39637 672.84546 672.29425 671.743 671.19147 670.6397 670.0878 669.5357 668.98346 668.43097 667.8783 667.32544 666.77234 666.2191 665.66565 665.11207 664.5582 664.0042 663.45 662.8956 662.341 661.78626 661.2312 660.676 660.12067 659.5651 659.00934 658.4534 657.8973 657.34095 656.7845 656.2277 655.6709 655.1137 654.55646 653.99897 653.4413 652.8834 652.3254 651.76716 651.2087 650.65 650.0912 649.5322 648.97297 648.4136 647.85395 647.2941 646.73426 646.1741 645.61365 645.0531 644.49244 643.9314 643.3703 642.80896 642.24744 641.68567 641.1238 640.5617 639.9994 639.4369 638.8742 638.31134 637.7483 637.18506 636.6216 636.058 635.49415 634.93006 634.3659 633.8015 633.23694 632.67206 632.10706 631.54194 630.97657 630.411 629.8452 629.2793 628.71314 628.14686 627.5803 627.0136 626.4467 625.8795 625.31226 624.7448 624.1771 623.60926 623.0412 622.47297 621.9045 621.3359 620.76697 620.198 619.6288 619.0594 618.48975 617.92 617.35 616.7798 616.2095 615.63886 615.0681 614.49714 613.926 613.3547 612.78315 612.2114 611.6395 611.06745 610.4951 609.9226 609.35 608.7771 608.204 607.63074 607.0573 606.48365 605.90986 605.3358 604.7616 604.1872 603.61255 603.03785 602.46277 601.8876 601.31226 600.7367 600.1609 599.58497 599.0088 598.4325 597.85584 597.278 596.6986 596.11756 595.53486 594.95057 594.3645 593.7769 593.1877 592.59675 592.0042 591.4101 590.81434 590.2169 589.6178 589.0171 588.4148 587.8108 587.20527 586.598 585.9891 585.3786 584.7665 584.1527 583.5373 582.9202 582.3016 581.68116 581.05927 580.43567 579.8104 579.18354 578.5551 577.925 577.29316 576.6598 576.0248 575.38807 574.7498 574.10987 573.46827 572.8251 572.18024 571.53376 570.8856 570.23584 569.5845 568.93146 568.2768 567.6205 566.9625 566.303 565.6418 564.97895 564.3145 563.6484 562.98066 562.3112 561.64026 560.96766 560.29334 559.6174 558.9398 558.2607 557.5798 556.89734 556.21326 555.52747 554.84015 554.1512 553.4606 552.76825 552.07435 551.37885 550.6817 549.9828 549.28235 548.58027 547.87665 547.1712 546.46424 545.7556 545.04535 544.33344 543.61994 542.9048 542.188 541.46955 540.74946 540.0278 539.3044 538.5794 537.85285 537.1246 536.3947 535.66315 534.93 534.1952 533.4588 532.72077 531.981 531.23975 530.49677 529.7522 529.0059 528.25806 527.50855 526.7574 526.00464 525.2502 524.4942 523.7365 522.9772 522.21625 521.4536 520.6894 519.9236 519.15607 518.3869 517.61615 516.84375 516.0697 515.29407 514.5168 513.7378 512.9573 512.17505 511.3912 510.6057 509.8186 509.02985 508.23944 507.4474 506.65372 505.8585 505.06152 504.26297 503.4628 502.66095 501.85748 501.05234 500.2456 499.4373 498.62726 497.8156 497.00238 496.1874 495.37085 494.5527 493.73285 492.91135 492.08832 491.26358 490.4372 489.60922 488.77954 487.9483 487.11542 486.28088 485.44464 484.6069 483.76746 482.92633 482.08365 481.2393 480.3933 479.5457 478.69644 477.84552 476.99298 476.13886 475.28305 474.4256 473.56656 472.7058 471.84354 470.97955 470.1139 469.2466 468.3778 467.5073 466.6351 465.76135 464.8859 464.00882 463.13016 462.24985 461.3679 460.4843 459.59903 458.71216 457.82364 456.9335 456.04175 455.14835 454.25336 453.3566 452.45828 451.55835 450.65677 449.75354 448.84872 447.94217 447.03412 446.12433 445.21295 444.29996 443.38522 442.46893 441.551 440.6314 439.7102 438.78735 437.8629 436.93677 436.00903 435.07965 434.1486 433.21594 432.28168 431.34573 430.4082 429.469 428.52814 427.58572 426.64157 425.69586 424.74847 423.7995 422.84882 421.8965 420.94263 419.9871 419.0299 418.0711 417.1106 416.14853 415.1848 414.21945 413.25244 412.28384 411.31354 410.34164 409.3681 408.39294 407.41614 406.43768 405.45764 404.4759 403.49255 402.5079 401.5243 400.54202 399.56113 398.5816 397.60342 396.62665 395.65118 394.6771 393.70438 392.73303 391.76303 390.7944 389.8271 388.8612 387.89667 386.93347 385.97168 385.01123 384.0521 383.09442 382.138 381.183 380.22937 379.2771 378.3262 377.37662 376.4284 375.48163 374.5361 373.59204 372.6493 371.70792 370.76788 369.82925 368.89197 367.95602 367.02145 366.0883 365.1564 364.22595 363.29684 362.36908 361.44272 360.51767 359.594 358.67172 357.7508 356.8312 355.913 354.99616 354.08066 353.16653 352.25378 351.34238 350.4323 349.52365 348.61636 347.7104 346.80585 345.90265 345.00076 344.10025 343.2011 342.30334 341.40695 340.5119 339.61823 338.72586 337.83493 336.94534 336.05713 335.17026 334.28473 333.40057 332.5178 331.6364 330.75635 329.87766 329.00034 328.12436 327.24973 326.37653 325.5046 324.63413 323.76492 322.89716 322.03076 321.16568 320.30197 319.43964 318.57864 317.71902 316.86078 316.00394 315.1484 314.29422 313.44144 312.58997 311.7399 310.8912 310.04385 309.19785 308.3532 307.50995 306.66806 305.82755 304.98837 304.15054 303.31412 302.479 301.64526 300.81293 299.98193 299.1523 298.32404 297.49713 296.67157 295.84738 295.02454 294.2031 293.383 292.56427 291.74692 290.93088 290.11627 289.30298 288.49106 287.6805 286.87134 286.06345 285.25702 284.4519 283.64813 282.84576 282.04477 281.24512 280.44684 279.6499 278.8543 278.06012 277.26727 276.4758 275.6857 274.89694 274.10956 273.32352 272.53885 271.75555 270.97363 270.19302 269.41382 268.636 267.8595 267.08435 266.31058 265.5382 264.76715 263.99747 263.22916 262.46222 261.69666 260.9324 260.16956 259.40808 258.64792 257.88913 257.13174 256.3757 255.62099 254.86768 254.11568 253.36515 252.61588 251.86801 251.1215 250.37636 249.63257 248.89015 248.14911 247.40941 246.67111 245.93412 245.19852 244.46428 243.73137 242.99987 242.26972 241.5409 240.81348 240.08742 239.36269 238.63939 237.91739 237.19678 236.47751 235.75963 235.0431 234.3279 233.6141 232.90167 232.19058 231.48091 230.77256 230.06554 229.35993 228.65569 227.95278 227.25122 226.55106 225.8522 225.15477 224.45871 223.76395 223.07062 222.37862 221.688 220.99869 220.31079 219.62424 218.93906 218.25524 217.57277 216.89167 216.21193 215.53357 214.85657 214.18091 213.50664 212.8337 212.16216 211.49193 210.8231 210.15564 209.48954 208.8248 208.1614 207.4994 206.83873 206.17945 205.52152 204.86493 204.20975 203.55588 202.9034 202.25229 201.60254 200.95415 200.3071 199.66144 199.01659 198.37111 197.72499 197.07822 196.43079 195.78267 195.13393 194.48451 193.83444 193.18372 192.53234 191.88031 191.2276 190.57425 189.92023 189.26558 188.61026 187.95426 187.29764 186.64034 185.98238 185.32376 184.6645 184.00457 183.344 182.68274 182.02083 181.35829 180.69507 180.0312 179.36667 178.70149 178.03565 177.36916 176.702 176.03418 175.36573 174.69657 174.02678 173.35636 172.68524 172.01349 171.34108 170.668 169.99427 169.31989 168.64484 167.96912 167.29277 166.61576 165.9381 165.25975 164.58077 163.90113 163.22083 162.53984 161.85825 161.17595 160.49304 159.80944 159.1252 158.44028 157.75473 157.0685 156.38164 155.6941 155.0059 154.31707 153.62754 152.93741 152.24657 151.55509 150.86296 150.17015 149.47672 148.78261 148.08783 147.39243 146.69635 145.9996 145.30222 144.60416 143.90546 143.20609 142.50608 141.80539 141.10405 140.40206 139.69939 138.9961 138.29213 137.58751 136.88224 136.17629 135.4697 134.76242 134.05452 133.34595 132.63674 131.92685 131.21631 130.50511 129.79326 129.08075 128.36757 127.65375 126.93927 126.22413 125.50832 124.791886 124.07476 123.356995 122.638565 121.919495 121.19974 120.47934 119.758286 119.036576 118.3142 117.59116 116.86748 116.143135 115.41814 114.69247 113.96616 113.23918 112.511566 111.78327 111.05433 110.32473 109.594475 108.863556 108.13197 107.39974 106.66686 105.93331 105.19911 104.46425 103.72874 102.99256 102.25573 101.51824 100.7801 100.04129 99.30183 98.56171 97.82094 97.079506 96.33741 95.59466 94.85126 94.10719 93.362465 92.617096 91.87106 91.124375 90.37702 89.62903 88.88035 88.13103 87.38105 86.63042 85.87913 85.12717 84.374565 83.62131 82.86737 82.11279 81.35756 80.60167 79.845116 79.08791 78.33004 77.57151 76.81233 76.0525 75.292 74.530846 73.769036 73.00657 72.24345 71.47967 70.715226 69.95013 69.18437 68.41796 67.650894 66.88316 66.114785 65.34575 64.57605 63.80569 63.03468 62.26301 61.490685 60.717694 59.944058 59.16976 58.3948 57.619187 56.84292 56.06599 55.288403 54.510163 53.73126 52.951706 52.171486 51.390614 50.609085 49.8269 49.044056 48.26056 47.47639 46.69158 45.906105 45.119976 44.333188 43.545746 42.757645 41.96888 41.179463 40.38939 39.598656 38.80727 38.01522 37.222516 36.429158 35.63514 34.84046 34.045128 33.249138 32.45249 31.655186 30.857222 30.058604 29.259327 28.45939 27.658804 26.857554 26.055647 25.253085 24.449864 23.645985 22.84145 22.036257 21.230408 20.4239 19.616736 18.808913 18.0)) (quote bpf) 10))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj)) :from-file t)) "x" nil (pairlis (quote (winsize winpos picture)) (list (om-make-point 335 275) (om-make-point 10 40) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPF-LIB" (quote bpf-lib) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of BPF objects" "bpf-list" (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0 100)) (quote (0 100)) (quote bpf) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj))))) (om-make-point 428 62) (om-make-point 40 60) (if (find-class (quote bpf-lib) nil) (make-instance (quote bpf-lib) :bpf-list (list (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 1.5999984 3.1967905 4.790376 6.3807554 7.9679275 9.551893 11.132654 12.710208 14.2845545 15.855698 17.423632 18.98836 20.549881 22.108197 23.663308 25.215207 26.7639 28.309393 29.851675 31.390748 32.92662 34.459282 35.98874 37.514985 39.038033 40.557873 42.074498 43.587925 45.09814 46.605156 48.108963 49.60956 51.10695 52.60114 54.092114 55.579888 57.064457 58.54581 60.02397 61.498925 62.970658 64.43919 65.904526 67.366646 68.825554 70.28127 71.73377 73.18307 74.62916 76.07204 77.51172 78.9482 80.381455 81.811516 83.238365 84.66201 86.08245 87.49968 88.91371 90.32453 91.73213 93.13655 94.53775 95.93574 97.330536 98.722115 100.11049 101.49565 102.877625 104.25637 105.63192 107.004265 108.3734 109.739334 111.10205 112.461586 113.81788 115.17099 116.52088 117.86757 119.21106 120.55134 121.88841 123.22227 124.55294 125.880394 127.20464 128.52567 129.8435 131.15814 132.46958 133.77777 135.08278 136.38459 137.68318 138.97856 140.27075 141.55973 142.84549 144.12805 145.40743 146.68357 147.95652 149.22626 150.49277 151.7561 153.01622 154.27313 155.52684 156.77735 158.02463 159.26873 160.5096 161.74727 162.98174 164.213 165.44106 166.6659 167.88755 169.10599 170.3212 171.53324 172.74204 173.94766 175.15006 176.34926 177.54524 178.73802 179.92761 181.11399 182.29714 183.4771 184.65384 185.8274 186.99773 188.16487 189.3288 190.48952 191.64704 192.80133 193.95244 195.10034 196.24503 197.3865 198.52478 199.65985 200.7917 201.92037 203.0458 204.16806 205.28708 206.40293 207.51557 208.62497 209.73117 210.83417 211.93398 213.03055 214.12395 215.21414 216.30109 217.38489 218.46543 219.54279 220.6169 221.68787 222.7556 223.82012 224.88147 225.93958 226.99448 228.04618 229.09467 230.13997 231.18204 232.22092 233.25659 234.28905 235.31832 236.34436 237.36722 238.38683 239.40328 240.4165 241.42653 242.43334 243.43697 244.43735 245.43453 246.42852 247.4193 248.40686 249.39125 250.37239 251.35036 252.3251 253.29665 254.26497 255.2301 256.19205 257.15076 258.10626 259.05856 260.00766 260.95355 261.89624 262.83572 263.77197 264.70505 265.6349 266.56155 267.48502 268.40524 269.32227 270.2361 271.14673 272.05414 272.95834 273.85934 274.75714 275.65173 276.54312 277.43127 278.31625 279.198 280.07657 280.9519 281.82407 282.693 283.55875 284.42126 285.28058 286.1367 286.9896 287.8393 288.6858 289.52908 290.36914 291.20602 292.03967 292.87015 293.6974 294.52145 295.3423 296.1599 296.97437 297.78558 298.5936 299.3984 300.2001 301.00092 301.8017 302.6025 303.40332 304.20413 305.0049 305.80573 306.6065 307.4073 308.20813 309.0089 309.80972 310.6105 311.41132 312.21213 313.0129 313.81372 314.6145 315.41528 316.21613 317.0169 317.81772 318.6185 319.4193 320.22012 321.0209 321.82172 322.62253 323.42334 324.22412 325.0249 325.8257 326.62653 327.4273 328.22812 329.02893 329.8297 330.63052 331.4313 332.23212 333.03293 333.83368 334.6345 335.4353 336.2361 337.03693 337.8377 338.63852 339.43933 340.2401 341.04092 341.8417 342.64252 343.44333 344.24414 345.04492 345.8457 346.6465 347.44733 348.2481 349.04895 349.84973 350.6505 351.45132 352.25214 353.05292 353.8537 354.6545 355.45535 356.25613 357.05695 357.85773 358.65854 359.45935 360.26013 361.06094 361.8617 362.66254 363.46335 364.26413 365.06494 365.86572 366.6665 367.46735 368.26813 369.0689 369.86972 370.67053 371.4713 372.27213 373.0729 373.87372 374.67453 375.47534 376.27612 377.07694 377.87772 378.67853 379.47934 380.28015 381.08093 381.88174 382.68253 383.48334 384.28415 385.08493 385.88574 386.68655 387.4873 388.28815 389.08893 389.8897 390.69055 391.49136 392.29215 393.09293 393.89374 394.69458 395.49536 396.29614 397.09692 397.89774 398.69855 399.49933 400.30014 401.10095 401.90173 402.70258 403.50336 404.30414 405.10492 405.90573 406.70654 407.50735 408.30817 409.10895 409.90973 410.71057 411.51135 412.31213 413.1129 413.91373 414.71457 415.51538 416.31616 417.11697 417.9178 418.71857 419.51935 420.32016 421.1209 421.92175 422.72253 423.52338 424.32413 425.12497 425.92578 426.72653 427.52734 428.32816 429.12897 429.92975 430.73056 431.53137 432.33215 433.13293 433.93378 434.7346 435.53534 436.33618 437.13696 437.93774 438.7386 439.53937 440.34015 441.14102 441.94174 442.74255 443.54334 444.34415 445.14496 445.94574 446.74655 447.5474 448.34818 449.14893 449.94977 450.75058 451.55136 452.35217 453.15298 453.9537 454.75458 455.55536 456.35617 457.15695 457.95776 458.75855 459.55942 460.36014 461.16095 461.9618 462.7626 463.56332 464.3642 465.16498 465.9658 466.76657 467.56738 468.36816 469.1689 469.96976 470.77057 471.57138 472.37222 473.17297 473.97376 474.7746 475.57535 476.37616 477.177 477.97778 478.77853 479.5794 480.3802 481.181 481.98178 482.7826 483.58337 484.3842 485.18497 485.98578 486.78656 487.58737 488.38815 489.18897 489.9898 490.79062 491.59137 492.3922 493.193 493.9938 494.7946 495.5954 496.39618 497.19693 497.9978 498.79858 499.5994 500.40024 501.20102 502.00177 502.8026 503.60342 504.4042 505.20502 506.00583 506.8066 507.60742 508.4082 509.209 510.0098 510.8106 511.6114 512.41224 513.213 514.0138 514.8146 515.6154 516.41626 517.217 518.01777 518.8186 519.61945 520.4202 521.221 522.02186 522.82264 523.6234 524.42426 525.22504 526.0258 526.82666 527.62745 528.4283 529.229 530.02985 530.83057 531.6315 532.43226 533.23304 534.0338 534.83466 535.63544 536.4363 537.237 538.03785 538.8386 539.6394 540.44025 541.241 542.0418 542.84266 543.64344 544.4442 545.24506 546.04584 546.8466 547.6474 548.44825 549.249 550.04987 550.85065 551.6514 552.4523 553.253 554.0538 554.8547 555.65546 556.45624 557.257 558.0578 558.8586 559.6594 560.4602 561.2611 562.0618 562.8626 563.66346 564.46424 565.2651 566.06586 566.86664 567.6675 568.4682 569.26905 570.0699 570.87067 571.6714 572.4722 573.273 574.07386 574.87464 575.6754 576.47626 577.27704 578.0778 578.8786 579.67945 580.4802 581.28107 582.08185 582.8826 583.6835 584.48426 585.28504 586.0858 586.8867 587.68744 588.4883 589.28907 590.08985 590.8907 591.69147 592.49225 593.2931 594.0938 594.89466 595.69544 596.4962 597.29706 598.09784 598.8987 599.6994 600.50025 601.301 602.10187 602.90265 603.7034 604.5042 605.30506 606.10584 606.9066 607.70746 608.50824 609.3091 610.10987 610.91065 611.7114 612.51227 613.31305 614.1139 614.9147 615.71546 616.51624 617.3171 618.11786 618.91864 619.7195 620.52027 621.32105 622.1218 622.92267 623.7235 624.52424 625.3251 626.12586 626.9267 627.7275 628.52826 629.3291 630.1298 630.93067 631.7315 632.5323 633.33307 634.13385 634.9347 635.7355 636.53626 637.33704 638.1379 638.9386 639.73945 640.5403 641.34107 642.14185 642.9427 643.74347 644.54425 645.3451 646.1459 646.94666 647.7475 648.5483 649.34906 650.1499 650.9507 651.75147 652.55225 653.353 654.1539 654.95466 655.7555 656.5563 657.35706 658.1579 658.9587 659.75946 660.5603 661.3611 662.16187 662.96265 663.7635 664.5643 665.3651 666.1659 666.9667 667.76746 668.56824 669.3691 670.1699 670.97065 671.7715 672.57227 673.37305 674.1738 674.97474 675.7755 676.5763 677.3771 678.17786 678.9787 679.7795 680.58027 681.3811 682.1819 682.98267 683.7835 684.5843 685.38514 686.1859 686.9867 687.7875 688.58826 689.3891 690.18995 690.9907 691.7915 692.5923 693.39307 694.19385 694.9947 695.7955 696.5963 697.3971 698.1979 698.99866 699.7995 700.6012 701.406 702.214 703.0252 703.8396 704.6573 705.4781 706.3022 707.12946 707.95984 708.7936 709.6304 710.4706 711.3138 712.1603 713.00995 713.8629 714.71894 715.5783 716.4408 717.3065 718.1755 719.04767 719.923 720.8015 721.68335 722.56824 723.4564 724.34784 725.2424 726.1402 727.0412 727.9454 728.8528 729.7634 730.67725 731.59424 732.5145 733.438 734.3646 735.29444 736.22754 737.1638 738.1033 739.046 739.9919 740.9409 741.8932 742.84876 743.8075 744.7694 745.73456 746.7029 747.67444 748.6491 749.62714 750.6083 751.5926 752.58027 753.571 754.56495 755.56214 756.56257 757.5661 758.57294 759.583 760.5962 761.6127 762.6322 763.65516 764.68116 765.71045 766.7429 767.77857 768.81745 769.8595 770.9047 771.9533 773.005 774.05994 775.118 776.17926 777.2439 778.3116 779.38257 780.45667 781.53406 782.61457 783.69837 784.78534 785.8755 786.9688 788.0654 789.1652 790.26825 791.37446 792.4839 793.5965 794.71235 795.8313 796.9536 798.079 799.2077 800.3396 801.4746 802.6129 803.7544 804.8991 806.047 807.19806 808.3524 809.5099 810.67066 811.83454 813.0017 814.17194 815.3455 816.52234 817.7023 818.88544 820.0718 821.26136 822.45417 823.65015 824.84937 826.0517 827.2573 828.46607 829.67817 830.89344 832.1119 833.33344 834.55835 835.78626 837.01764 838.2521 839.48975 840.7307 841.97474 843.22205 844.47254 845.7262 846.9831 848.24317 849.50654 850.7731 852.04285 853.3158 854.592 855.8713 857.1539 858.4396 859.7286 861.02076 862.31617 863.61475 864.9165 866.22156 867.5298 868.8411 870.1558 871.47364 872.79474 874.1189 875.4463 876.7771 878.11084 879.448 880.7882 882.1318 883.47846 884.82825 886.18134 887.5377 888.89716 890.26 891.62586 892.995 894.36725 895.7429 897.1217 898.5037 899.88874 901.27717 902.6688 904.06354 905.46155 906.86274 908.2671 909.6747 911.0856 912.49946 913.9167 915.33735 916.76087 918.1878 919.6178 921.051 922.48755 923.9272 925.3701 926.8162 928.26545 929.718 931.17365 932.63257 934.09467 935.56006 937.02857 938.50025 939.9752 941.4535 942.9348 944.41925 945.9071 947.3981 948.8923 950.38965 951.89026 953.39405 954.90107 956.4113 957.92475 959.4414 960.96106 962.48426 964.01044 965.5399 967.0726 968.60846 970.1475 971.6898 973.2353 974.78406 976.3358 977.891 979.44935 981.0108 982.5755 984.1435 985.7146 987.28894 988.8665 990.44727 992.03125 993.61847 995.2088 996.80237 998.3991 1000.0)) (quote (192.0 194.29438 196.58089 198.85956 201.13036 203.3933 205.64839 207.89565 210.135 212.36653 214.59023 216.80605 219.01396 221.21407 223.4063 225.59072 227.76725 229.93592 232.09674 234.24971 236.3948 238.53209 240.66146 242.78302 244.89672 247.00254 249.1005 251.19063 253.27292 255.34732 257.41388 259.47256 261.5234 263.56638 265.6015 267.62878 269.64822 271.65976 273.66345 275.65933 277.64734 279.62747 281.59976 283.56418 285.52078 287.46948 289.41037 291.34335 293.2685 295.1858 297.0952 298.99686 300.89056 302.77643 304.65448 306.52463 308.38693 310.24133 312.08795 313.9267 315.7576 317.5806 319.3958 321.20313 323.00253 324.7942 326.57794 328.35382 330.12186 331.88205 333.63437 335.37885 337.11545 338.84418 340.56512 342.27814 343.98337 345.6807 347.37018 349.0518 350.72556 352.39148 354.0495 355.69974 357.34207 358.97656 360.6032 362.222 363.8329 365.436 367.03122 368.6186 370.19803 371.76968 373.3335 374.8894 376.4375 377.9777 379.5101 381.03458 382.5512 384.06006 385.56097 387.05408 388.5393 390.0167 391.4862 392.94788 394.4017 395.84766 397.28574 398.716 400.1384 401.5529 402.9596 404.35843 405.74933 407.13248 408.50772 409.87512 411.23468 412.5863 413.93018 415.26614 416.59427 417.91452 419.22693 420.5315 421.8282 423.11707 424.398 425.67114 426.9364 428.1938 429.4434 430.6851 431.91895 433.14496 434.36307 435.5734 436.77582 437.97037 439.1571 440.3359 441.50696 442.6701 443.82538 444.9728 446.11243 447.24408 448.368 449.48407 450.59213 451.6925 452.7849 453.8695 454.9463 456.0151 457.07617 458.12936 459.17462 460.2121 461.24173 462.26346 463.2774 464.2834 465.28152 466.27185 467.25436 468.2289 469.19577 470.1547 471.10568 472.04883 472.98422 473.91168 474.8313 475.743 476.647 477.543 478.4312 479.31158 480.18405 481.0487 481.9055 482.75436 483.59543 484.42865 485.25403 486.07153 486.88116 487.68295 488.47687 489.26294 490.0412 490.81152 491.57407 492.32867 493.0755 493.81445 494.5455 495.2687 495.98416 496.69162 497.3913 498.08313 498.7671 499.4432 500.1114 500.7718 501.42432 502.069 502.70578 503.33478 503.95584 504.56915 505.17456 505.7721 506.36176 506.9436 507.5175 508.08368 508.64194 509.19232 509.73486 510.2696 510.7964 511.3154 511.8265 512.32984 512.8252 513.31275 513.7924 514.2643 514.7283 515.18445 515.6327 516.0731 516.50574 516.9304 517.3473 517.7563 518.1575 518.5508 518.93616 519.3137 519.6835 520.04535 520.39936 520.74555 521.08405 521.4194 521.7534 522.0861 522.4175 522.7476 523.07636 523.4038 523.73 524.0549 524.37836 524.7005 525.0214 525.341 525.6593 525.97626 526.2919 526.6062 526.9191 527.2309 527.54126 527.8503 528.158 528.4644 528.76954 529.07337 529.3759 529.67707 529.97687 530.27546 530.57264 530.8685 531.16315 531.4564 531.7484 532.03907 532.3284 532.61646 532.9031 533.18854 533.4726 533.7554 534.03687 534.3169 534.59577 534.8733 535.1495 535.4243 535.69794 535.97016 536.24115 536.5107 536.779 537.046 537.3117 537.57605 537.8391 538.1008 538.36127 538.6203 538.8782 539.13465 539.3898 539.64356 539.8961 540.1474 540.3972 540.6459 540.89307 541.13904 541.3837 541.6271 541.869 542.10975 542.3491 542.58716 542.8239 543.0594 543.2935 543.5263 543.7578 543.9879 544.21686 544.44434 544.6707 544.89557 545.1192 545.34144 545.56244 545.7821 546.0005 546.21747 546.43317 546.64765 546.8607 547.07245 547.2829 547.49207 547.6999 547.90644 548.11164 548.3155 548.51807 548.71936 548.9193 549.1179 549.31525 549.5112 549.70594 549.8993 550.0914 550.2821 550.4715 550.65967 550.8464 551.0319 551.21607 551.3989 551.58045 551.7607 551.93964 552.1172 552.29346 552.46845 552.64216 552.81446 552.9855 553.15516 553.3236 553.49067 553.6564 553.8208 553.984 554.1458 554.3063 554.4655 554.62336 554.77997 554.9352 555.0891 555.24176 555.393 555.54297 555.6917 555.83905 555.9851 556.1298 556.27326 556.41535 556.55616 556.6956 556.83374 556.9706 557.10614 557.24036 557.3732 557.5048 557.6351 557.76404 557.8917 558.018 558.14307 558.2667 558.3891 558.51014 558.6299 558.74836 558.8655 558.9813 559.09577 559.209 559.3208 559.4314 559.54065 559.6485 559.7551 559.8604 559.96436 560.067 560.1684 560.26844 560.3671 560.46454 560.56067 560.6554 560.7489 560.841 560.9319 561.02137 561.10956 561.1964 561.28205 561.3663 561.4492 561.5309 561.6112 561.6902 561.7678 561.8442 561.9193 561.99305 562.0654 562.13654 562.20636 562.2748 562.342 562.40784 562.4724 562.5356 562.5975 562.6581 562.7174 562.7754 562.83204 562.8873 562.94135 562.994 563.0454 563.0955 563.1443 563.1917 563.23786 563.28266 563.3262 563.36835 563.40925 563.4488 563.48707 563.524 563.5596 563.5939 563.6269 563.65857 563.6889 563.71796 563.74567 563.7721 563.7972 563.821 563.84345 563.8646 563.8844 563.90296 563.92017 563.93604 563.9507 563.9639 563.9759 563.9865 563.99585 564.0043 564.01447 564.0268 564.04145 564.0581 564.077 564.09815 564.12134 564.14686 564.17444 564.2043 564.2363 564.27045 564.30677 564.3453 564.38605 564.42896 564.47406 564.52124 564.57074 564.6223 564.6761 564.73206 564.7902 564.8505 564.9131 564.9778 565.0447 565.1137 565.18494 565.25837 565.3339 565.41175 565.4917 565.57386 565.6582 565.7446 565.8334 565.92426 566.0173 566.1124 566.20984 566.30945 566.41126 566.5152 566.6213 566.72956 566.84 566.95276 567.06757 567.1846 567.30384 567.42524 567.54877 567.6745 567.8024 567.93256 568.0648 568.1993 568.33594 568.4748 568.6158 568.759 568.90436 569.0519 569.20166 569.3535 569.5076 569.6639 569.8224 569.98304 570.1458 570.3108 570.47797 570.64734 570.81885 570.9926 571.16846 571.3465 571.5268 571.7092 571.89386 572.08057 572.2696 572.4608 572.65406 572.8496 573.0473 573.24726 573.4493 573.6535 573.8599 574.06855 574.2793 574.4923 574.7074 574.92475 575.1442 575.36597 575.58985 575.8158 576.04407 576.2744 576.507 576.7418 576.97876 577.21784 577.4592 577.70264 577.9483 578.19617 578.4462 578.6984 578.9528 579.20936 579.46814 579.729 579.9921 580.25745 580.5249 580.79456 581.0664 581.3404 581.6166 581.89496 582.17554 582.45826 582.74317 583.0303 583.31946 583.61097 583.9046 584.20044 584.4984 584.7986 585.10096 585.4055 585.71216 586.0211 586.3322 586.64545 586.9609 587.2785 587.59827 587.9203 588.2444 588.5708 588.8993 589.23 589.56287 589.89795 590.23517 590.5746 590.9162 591.26 591.60596 591.9541 592.3044 592.6569 593.0116 593.36847 593.7275 594.08875 594.4521 594.81775 595.1855 595.5554 595.92756 596.3019 596.67835 597.057 597.43787 597.8209 598.20606 598.5935 598.9831 599.3748 599.76874 600.16486 600.5631 600.9636 601.3663 601.7711 602.1781 602.5873 602.9987 603.41224 603.82795 604.2459 604.66596 605.08826 605.5127 605.93934 606.36817 606.7992 607.23237 607.66767 608.1052 608.5449 608.9868 609.4309 609.8772 610.3256 610.77625 611.22907 611.684 612.1412 612.6005 613.062 613.52576 613.99164 614.4597 614.92994 615.40235 615.87696 616.35376 616.83277 617.31385 617.7972 618.2827 618.7704 619.26026 619.7523 620.24646 620.7429 621.2415 621.74225 622.24524 622.75037 623.2577 623.76716 624.2788 624.79267 625.3087 625.8269 626.3473 626.8699 627.39466 627.9216 628.4507 628.98194 629.51545 630.05115 630.5889 631.1289 631.67115 632.21546 632.7621 633.3108 633.8617 634.41614 634.97754 635.54596 636.1214 636.704 637.2936 637.8902 638.49384 639.1046 639.7224 640.3473 640.9792 641.61817 642.26416 642.9173 643.5774 644.24457 644.91877 645.6001 646.28846 646.98377 647.6862 648.39576 649.11237 649.83594 650.5666 651.3043 652.0491 652.8009 653.5597 654.32575 655.09876 655.8787 656.6659 657.45997 658.2612 659.06946 659.88477 660.70716 661.5366 662.37305 663.2166 664.0672 664.92475 665.78956 666.66126 667.54004 668.4259 669.3188 670.2188 671.1258 672.03986 672.96094 673.8892 674.8244 675.7667 676.71607 677.6724 678.6359 679.6064 680.584 681.56855 682.5603 683.5589 684.5647 685.5776 686.5974 687.6244 688.6583 689.69947 690.7475 691.8027 692.8649 693.93415 695.0105 696.0939 697.18427 698.28174 699.3862 700.49787 701.6165 702.7422 703.87494 705.0147 706.1616 707.3155 708.47644 709.6445 710.8196 712.0017 713.19086 714.3871 715.59034 716.8007 718.0181 719.24256 720.47406 721.71265 722.95826 724.2109 725.47065 726.7374 728.0112 729.2922 730.5801 731.87507 733.1772 734.4862 735.80237 737.1256 738.4558 739.7932 741.1376 742.489 743.8474 745.21296 746.5856 747.9652 749.3519 750.74567 752.1464 753.5543 754.96924 756.3912 757.8202 759.2563 760.6994 762.1496 763.6068 765.07117 766.5425 768.0209 769.50635 770.9988 772.4984 774.00495 775.5187 777.0394 778.5672 780.10206 781.6439 783.1928 784.74884 786.3118 787.88196 789.4591 791.04334 792.6346 794.2329 795.83826 797.45075 799.0702 800.6968 802.3303 803.971 805.6187 807.27344 808.9353 810.6041 812.27997 813.963 815.653 817.3501 819.0542 820.7654 822.48365 824.20887 825.9413 827.68067 829.4271 831.18067 832.94117 834.7088 836.4835 838.26514 840.05396 841.8498 843.6527 845.46265 847.27967 849.10364 850.9348 852.7729 854.61817 856.47046 858.3297 860.1961 862.0695 863.9501 865.8375 867.7322 869.6338 871.5425 873.45826 875.3811 877.3109 879.2479 881.19184 883.1428 885.1008 887.06604 889.0382 891.0175 893.0038 894.9971 896.9975 899.005 901.01954 903.041 905.06965 907.10535 909.14814 911.19776 913.25477 915.31855 917.38947 919.4676 921.55256 923.64466 925.74384 927.85 929.96326 932.0836 934.21094 936.34546 938.48694 940.6355 942.791 944.95374 947.1234 949.3002 951.48395 953.67487 955.87275 958.0777 960.2898 962.5088 964.735 966.96814 969.2083 971.4556 973.70997 975.97144 978.2399 980.51545 982.798 985.0875 987.3843 989.688 992.0)) (quote bpf) 10))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 1.5003743 2.998494 4.4943595 5.9879704 7.4793263 8.96843 10.455276 11.939868 13.422207 14.90229 16.38012 17.855694 19.329014 20.80008 22.268889 23.735444 25.199746 26.66179 28.121586 29.579123 31.034405 32.487435 33.938214 35.38673 36.832993 38.277 39.718758 41.158265 42.59551 44.030503 45.46324 46.893723 48.32195 49.747933 51.171647 52.593113 54.01233 55.42928 56.843987 58.25644 59.66663 61.07457 62.48025 63.88368 65.28485 66.68378 68.080445 69.47485 70.86701 72.25692 73.64457 75.02996 76.41309 77.79398 79.172615 80.54899 81.92311 83.29497 84.66459 86.031945 87.39705 88.75989 90.12049 91.478836 92.83492 94.18875 95.54031 96.88963 98.23671 99.58152 100.92408 102.26439 103.60243 104.93823 106.27177 107.60306 108.93208 110.258866 111.58339 112.905655 114.225655 115.54342 116.85892 118.17217 119.48316 120.79191 122.09839 123.40263 124.7046 126.00433 127.3018 128.59702 129.88997 131.18068 132.46913 133.75533 135.03926 136.32096 137.60039 138.87757 140.15248 141.42516 142.69556 143.96372 145.22962 146.49327 147.75467 149.01383 150.2707 151.52533 152.77771 154.02785 155.27571 156.52132 157.76468 159.00579 160.24463 161.48125 162.71558 163.94766 165.17749 166.40508 167.63039 168.85346 170.07428 171.29283 172.50914 173.72318 174.935 176.14452 177.35182 178.55686 179.75963 180.96018 182.15842 183.35445 184.5482 185.73972 186.92896 188.11597 189.3007 190.4832 191.66342 192.8414 194.01714 195.19062 196.36182 197.53078 198.69747 199.86194 201.02413 202.18407 203.34177 204.4972 205.65036 206.80132 207.94998 209.09639 210.24056 211.38246 212.52211 213.65952 214.79465 215.92754 217.05818 218.18657 219.3127 220.43656 221.55815 222.67754 223.79465 224.90952 226.02211 227.13245 228.24053 229.34638 230.44995 231.5513 232.65036 233.74718 234.8417 235.93405 237.02408 238.1119 239.19744 240.28072 241.36176 242.44055 243.51708 244.59137 245.66335 246.73313 247.80063 248.86588 249.92891 250.98961 252.0481 253.10436 254.15834 255.21006 256.25952 257.30676 258.3517 259.39444 260.43488 261.47308 262.50903 263.54272 264.57416 265.60333 266.63025 267.65494 268.67734 269.6975 270.71542 271.73108 272.74448 273.75565 274.76453 275.77115 276.7755 277.77768 278.77753 279.77518 280.7705 281.76364 282.7545 283.74307 284.72943 285.71353 286.69537 287.67496 288.65228 289.62735 290.60016 291.57074 292.53903 293.50513 294.46887 295.43048 296.38974 297.3468 298.30157 299.2541 300.20435 301.1524 302.09814 303.0417 303.9829 304.92194 305.85864 306.79315 307.7254 308.6554 309.58307 310.50858 311.4318 312.35278 313.27148 314.18793 315.10214 316.0141 316.92377 317.83124 318.7364 319.63934 320.53998 321.43842 322.3346 323.22852 324.12018 325.00958 325.89673 326.78162 327.66425 328.54465 329.42276 330.29865 331.17227 332.04364 332.91272 333.7796 334.6442 335.50656 336.36664 337.2245 338.08008 338.9334 339.7845 340.6333 341.47986 342.32416 343.16623 344.00604 344.84357 345.6789 346.5119 347.3427 348.17123 348.9975 349.82153 350.6433 351.46283 352.2801 353.0951 353.90784 354.71832 355.52658 356.33255 357.1363 357.93774 358.737 359.53394 360.32867 361.1211 361.91135 362.69928 363.485 364.26843 365.04962 365.82855 366.60522 367.3796 368.1518 368.92172 369.6894 370.45477 371.21796 371.97882 372.7375 373.49387 374.24802 374.99985 375.75064 376.50137 377.2521 378.00287 378.75363 379.5044 380.25513 381.0059 381.75665 382.5074 383.25815 384.0089 384.75964 385.5104 386.26114 387.0119 387.76263 388.5134 389.26416 390.0149 390.76566 391.5164 392.26712 393.0179 393.76862 394.51938 395.27014 396.0209 396.7716 397.5224 398.27316 399.0239 399.77463 400.5254 401.27615 402.02692 402.77765 403.52838 404.27914 405.0299 405.78064 406.5314 407.28214 408.0329 408.78366 409.53436 410.28513 411.0359 411.78665 412.5374 413.28815 414.03894 414.78964 415.5404 416.29117 417.0419 417.79266 418.5434 419.29413 420.0449 420.79562 421.5464 422.29712 423.0479 423.7986 424.5494 425.30017 426.05093 426.80164 427.5524 428.30316 429.0539 429.80466 430.55542 431.30615 432.0569 432.80768 433.55844 434.30914 435.0599 435.81067 436.5614 437.3122 438.0629 438.81366 439.56442 440.31516 441.06592 441.81665 442.56738 443.3181 444.0689 444.81967 445.5704 446.32114 447.0719 447.82263 448.57343 449.32416 450.07492 450.82565 451.57645 452.32718 453.07788 453.8286 454.5794 455.33017 456.0809 456.8317 457.58243 458.33316 459.08392 459.83466 460.58545 461.33615 462.08688 462.83768 463.5884 464.33917 465.0899 465.84064 466.59143 467.34213 468.09287 468.84366 469.59442 470.34515 471.09595 471.84668 472.5974 473.34818 474.09897 474.8497 475.6004 476.35114 477.10193 477.85266 478.60342 479.35422 480.10495 480.85568 481.60645 482.35712 483.1079 483.85864 484.6094 485.3602 486.11093 486.8617 487.61243 488.36316 489.11395 489.86465 490.61545 491.36618 492.11694 492.86768 493.61847 494.36914 495.1199 495.87064 496.62143 497.37216 498.12293 498.87366 499.62445 500.37518 501.12595 501.87668 502.62747 503.37817 504.1289 504.8797 505.63043 506.38116 507.13193 507.88266 508.63345 509.38416 510.13495 510.88574 511.63644 512.3872 513.13794 513.8887 514.6394 515.3902 516.1409 516.8917 517.64246 518.3932 519.1439 519.89466 520.64545 521.3962 522.147 522.8977 523.64844 524.3992 525.1499 525.9007 526.6514 527.40217 528.15296 528.9037 529.6545 530.4052 531.15595 531.90674 532.6574 533.4082 534.15894 534.90967 535.6604 536.4112 537.162 537.9127 538.66346 539.4142 540.165 540.9157 541.6665 542.41724 543.16797 543.9187 544.6695 545.42017 546.17096 546.9217 547.6725 548.42316 549.17395 549.9247 550.6754 551.4262 552.17695 552.92774 553.67847 554.4292 555.17994 555.93067 556.68146 557.43226 558.183 558.9337 559.68445 560.4352 561.1859 561.9367 562.6875 563.43824 564.18897 564.9397 565.6904 566.4412 567.19196 567.94275 568.6935 569.4442 570.19495 570.9457 571.6964 572.4472 573.198 573.9487 574.69947 575.4502 576.201 576.9517 577.7025 578.45325 579.204 579.9547 580.70545 581.45624 582.207 582.9577 583.7085 584.4592 585.20997 585.9607 586.7115 587.4622 588.21296 588.96375 589.7145 590.4652 591.21595 591.9667 592.71747 593.4682 594.219 594.9697 595.72046 596.4712 597.222 597.9727 598.7235 599.47425 600.225 600.9757 601.72644 602.47724 603.22797 603.97876 604.7295 605.4802 606.23096 606.9817 607.7325 608.4832 609.234 609.98475 610.7355 611.4862 612.23694 612.9877 613.73847 614.48926 615.24 615.9907 616.74146 617.4922 618.2429 618.9937 619.7445 620.49524 621.246 621.9967 622.7475 623.4982 624.24897 624.99976 625.7516 626.50574 627.2622 628.0209 628.78174 629.545 630.3104 631.0781 631.8481 632.6202 633.39466 634.1713 634.9503 635.73157 636.5151 637.3007 638.08875 638.87897 639.6715 640.46625 641.26325 642.06257 642.86396 643.6678 644.47376 645.28205 646.0925 646.90534 647.72034 648.53766 649.3573 650.179 651.0031 651.8294 652.6579 653.4888 654.32184 655.15717 655.9948 656.8346 657.6767 658.5211 659.3677 660.21656 661.0676 661.921 662.7767 663.63446 664.49457 665.357 666.2216 667.08857 667.9577 668.8291 669.70276 670.57874 671.45685 672.3373 673.22 674.10486 674.9921 675.8815 676.77326 677.6672 678.5634 679.4619 680.36255 681.2655 682.1708 683.07825 683.9879 684.8999 685.8142 686.7307 687.6495 688.57044 689.4937 690.4192 691.347 692.27704 693.2093 694.1438 695.0806 696.01966 696.961 697.90455 698.85035 699.79847 700.74866 701.7013 702.6561 703.61316 704.5725 705.5341 706.498 707.4641 708.4325 709.4031 710.3759 711.351 712.3284 713.30805 714.29 715.27405 716.26044 717.24915 718.24 719.23316 720.2285 721.22626 722.22614 723.22834 724.2328 725.23945 726.2484 727.25965 728.2731 729.28876 730.30665 731.32697 732.34937 733.3741 734.4011 735.4303 736.4618 737.49555 738.53156 739.56977 740.61036 741.6531 742.69806 743.74537 744.7949 745.8467 746.9007 747.95704 749.01557 750.07636 751.1394 752.2047 753.2722 754.34205 755.4141 756.48847 757.56507 758.64386 759.725 760.8083 761.8939 762.98175 764.0719 765.1642 766.25885 767.3557 768.45484 769.5563 770.6599 771.76575 772.8739 773.9844 775.09705 776.21186 777.3291 778.4485 779.5701 780.69404 781.8203 782.9487 784.0794 785.21235 786.34754 787.485 788.6247 789.7666 790.9109 792.0574 793.2061 794.35706 795.51026 796.6658 797.82355 798.9835 800.1459 801.31037 802.4771 803.6461 804.8174 805.99097 807.16675 808.3448 809.525 810.70765 811.89246 813.07947 814.2688 815.4604 816.65424 817.85035 819.0486 820.24915 821.452 822.6571 823.8645 825.0741 826.286 827.5001 828.71644 829.93506 831.1559 832.37915 833.6045 834.83216 836.062 837.2942 838.5286 839.76526 841.00415 842.24537 843.4888 844.73444 845.9824 847.23255 848.485 849.73975 850.9967 852.25586 853.51734 854.7811 856.04706 857.3153 858.58576 859.8585 861.13355 862.41077 863.69025 864.97205 866.256 867.5423 868.8308 870.1216 871.41456 872.70997 874.00745 875.30726 876.60926 877.9136 879.2201 880.52894 881.84 883.15326 884.46906 885.7868 887.1068 888.4292 889.7537 891.08075 892.40967 893.7411 895.07477 896.41065 897.7487 899.0891 900.4317 901.7766 903.12384 904.47315 905.8248 907.17865 908.5349 909.8933 911.25385 912.6169 913.98206 915.3495 916.71924 918.0911 919.46534 920.8418 922.2205 923.60144 924.98475 926.3701 927.75794 929.1478 930.5401 931.93464 933.3313 934.73035 936.13166 937.53504 938.94086 940.3489 941.75916 943.1717 944.5864 946.0035 947.4227 948.84436 950.26825 951.6942 953.12244 954.5531 955.986 957.42096 958.8583 960.298 961.73975 963.18384 964.6301 966.07874 967.52967 968.98267 970.438 971.89576 973.3556 974.8178 976.28217 977.7488 979.21766 980.6889 982.16236 983.6378 985.11585 986.59595 988.0784 989.5631 991.05005 992.53925 994.03064 995.52436 997.0203 998.51844 1000.0)) (quote (194.0 195.02559 196.04833 197.06818 198.08518 199.09929 200.11054 201.11894 202.12445 203.1271 204.1269 205.12381 206.11786 207.10904 208.09734 209.0828 210.06536 211.04509 212.02191 212.9959 213.96701 214.93523 215.9006 216.86312 217.82274 218.77951 219.73342 220.68447 221.63262 222.5779 223.52031 224.45989 225.39655 226.33042 227.26139 228.18946 229.1147 230.03702 230.95652 231.87314 232.78688 233.69779 234.6058 235.51093 236.41321 237.31266 238.20919 239.10288 239.99367 240.8816 241.76668 242.64888 243.52825 244.4047 245.2783 246.14902 247.01692 247.88193 248.74404 249.60332 250.45972 251.31324 252.1639 253.01169 253.85662 254.69867 255.53784 256.37418 257.2076 258.03824 258.86594 259.6908 260.5128 261.33188 262.14813 262.96152 263.77203 264.57968 265.38443 266.18634 266.9854 267.7816 268.57486 269.36533 270.1529 270.93756 271.71945 272.4984 273.2745 274.0477 274.81808 275.58557 276.35022 277.112 277.87088 278.6269 279.38007 280.13034 280.87778 281.62235 282.364 283.10284 283.8388 284.5719 285.3021 286.02942 286.75394 287.47553 288.19428 288.91016 289.62317 290.3333 291.0406 291.745 292.44653 293.1452 293.84103 294.5339 295.22403 295.9112 296.59552 297.277 297.9556 298.63135 299.3042 299.97418 300.6413 301.30557 301.96695 302.6255 303.28113 303.93393 304.58386 305.2309 305.8751 306.51642 307.15488 307.79044 308.42316 309.053 309.68 310.30408 310.92532 311.54373 312.15918 312.77185 313.38162 313.98853 314.59256 315.1937 315.79202 316.38745 316.97998 317.5697 318.15656 318.7405 319.32163 319.89987 320.4752 321.0477 321.6173 322.18405 322.748 323.30896 323.86713 324.42242 324.97482 325.52435 326.07108 326.61487 327.15582 327.6939 328.22913 328.76144 329.29092 329.8175 330.34125 330.86212 331.38016 331.8953 332.40756 332.91696 333.4235 333.92715 334.42795 334.92587 335.42093 335.91315 336.40247 336.88892 337.37256 337.8532 338.33112 338.8061 339.2782 339.74744 340.21384 340.67737 341.138 341.5958 342.05072 342.50272 342.95197 343.39825 343.8417 344.28226 344.71997 345.15482 345.5868 346.0159 346.44214 346.86548 347.286 347.7036 348.1184 348.5303 348.93933 349.34546 349.74878 350.1492 350.54675 350.94144 351.3333 351.72223 352.10834 352.49155 352.87192 353.2494 353.62402 353.99576 354.36465 354.73065 355.0938 355.45407 355.8115 356.16602 356.51773 356.86652 357.21246 357.55554 357.89578 358.23306 358.56757 358.89914 359.2279 359.55374 359.87677 360.19687 360.51416 360.82852 361.14008 361.44873 361.75452 362.05743 362.3575 362.6547 362.949 363.24045 363.52905 363.8148 364.09763 364.37762 364.65472 364.92896 365.20038 365.46887 365.7345 365.99728 366.2572 366.51422 366.7684 367.0197 367.26816 367.51373 367.7564 367.99628 368.23322 368.46732 368.69855 368.9269 369.1524 369.37503 369.59482 369.81168 370.02573 370.23688 370.4452 370.65057 370.85315 371.05283 371.2497 371.4436 371.6347 371.8229 372.00824 372.19074 372.37036 372.5471 372.72098 372.89197 373.06012 373.22537 373.38782 373.54733 373.70404 373.8578 374.0088 374.1568 374.302 374.44434 374.5838 374.7204 374.85416 374.985 375.113 375.2381 375.36038 375.47974 375.59628 375.70993 375.82074 375.92865 376.0337 376.13586 376.2352 376.33163 376.42523 376.51593 376.6038 376.68875 376.77087 376.8501 376.9265 376.99994 377.07205 377.14417 377.21622 377.28836 377.36044 377.43262 377.50473 377.57687 377.64902 377.72116 377.79334 377.8655 377.93765 378.0099 378.0821 378.1543 378.22653 378.29874 378.371 378.4432 378.51547 378.58774 378.66003 378.73233 378.80463 378.87692 378.94922 379.02155 379.09387 379.16623 379.23856 379.3109 379.38327 379.45566 379.52805 379.60043 379.67285 379.7452 379.81766 379.89008 379.96252 380.03494 380.10745 380.17987 380.25235 380.32486 380.3973 380.46985 380.54236 380.61487 380.68738 380.75995 380.8325 380.90503 380.9776 381.05017 381.12274 381.1953 381.2679 381.34055 381.41318 381.48578 381.5584 381.63107 381.70374 381.7764 381.84903 381.92172 381.99445 382.0671 382.13983 382.2126 382.28528 382.358 382.43076 382.5035 382.57626 382.64908 382.72183 382.79462 382.8674 382.94025 383.01303 383.08588 383.1587 383.23154 383.30438 383.37723 383.4501 383.52298 383.5959 383.6688 383.7417 383.81458 383.8875 383.96048 384.0334 384.10635 384.1793 384.2523 384.32526 384.39825 384.47125 384.54425 384.61725 384.69028 384.7633 384.8364 384.90942 384.98248 385.0555 385.12863 385.20172 385.2748 385.34793 385.42102 385.49414 385.5673 385.6404 385.71356 385.7867 385.8599 385.93304 386.00623 386.07944 386.15265 386.22583 386.2991 386.37228 386.44553 386.5188 386.59204 386.66534 386.73862 386.8119 386.88516 386.95847 387.03183 387.1051 387.17844 387.2518 387.32517 387.3985 387.47183 387.54523 387.61862 387.69202 387.7654 387.83884 387.91223 387.9857 388.0591 388.13254 388.20602 388.27948 388.35294 388.42642 388.49994 388.57343 388.64694 388.72046 388.794 388.86752 388.94107 389.01465 389.08817 389.16177 389.23535 389.30896 389.38254 389.45618 389.5298 389.6034 389.67703 389.75067 389.8243 389.898 389.9717 390.04535 390.11905 390.19278 390.26645 390.34018 390.41394 390.48764 390.56134 390.63513 390.70892 390.78268 390.85645 390.93024 391.00403 391.07785 391.15167 391.2255 391.29932 391.37317 391.44702 391.5209 391.59473 391.66864 391.7425 391.8164 391.89032 391.96426 392.03818 392.11212 392.18604 392.26 392.33392 392.40796 392.48193 392.5559 392.6299 392.7039 392.77792 392.85193 392.926 393.00003 393.0741 393.14813 393.2222 393.29626 393.3704 393.4445 393.5186 393.59265 393.66678 393.74097 393.8151 393.88922 393.96338 394.03757 394.11176 394.18594 394.26013 394.33432 394.40857 394.48276 394.55698 394.63123 394.70548 394.77975 394.854 394.9283 395.00256 395.0769 395.15118 395.22553 395.2998 395.37415 395.4485 395.52283 395.59717 395.67157 395.74594 395.8203 395.8947 395.96912 396.04352 396.11795 396.19238 396.26685 396.34125 396.4157 396.49017 396.56467 396.63916 396.71365 396.78815 396.86267 396.9372 397.01172 397.08624 397.1608 397.23535 397.30994 397.3845 397.45908 397.53366 397.60828 397.68286 397.7575 397.83212 397.90674 397.98138 398.05606 398.13074 398.20538 398.2801 398.35477 398.42947 398.50418 398.57892 398.65363 398.7284 398.8031 398.87787 398.95264 399.0274 399.10217 399.17697 399.25177 399.3266 399.4014 399.47623 399.55106 399.62592 399.70074 399.77564 399.85053 399.9254 400.00027 400.0752 400.1501 400.22498 400.29993 400.37488 400.4498 400.52478 400.59973 400.67468 400.7497 400.82465 400.89966 400.97467 401.04968 401.1247 401.19977 401.27478 401.34985 401.42493 401.49997 401.57632 401.6552 401.73666 401.8207 401.9073 401.9964 402.088 402.18228 402.27902 402.37836 402.4802 402.58466 402.69162 402.80115 402.91327 403.0279 403.1451 403.26483 403.38715 403.512 403.63937 403.76932 403.90183 404.03687 404.17447 404.31467 404.45737 404.6026 404.75043 404.90085 405.05374 405.2092 405.36725 405.52783 405.69092 405.85663 406.02487 406.19565 406.36902 406.5449 406.72333 406.90433 407.08786 407.27402 407.46265 407.65384 407.8476 408.0439 408.24277 408.4442 408.64816 408.8547 409.06372 409.2754 409.48953 409.70627 409.92557 410.14743 410.37177 410.59872 410.82825 411.06024 411.2949 411.532 411.7717 412.01398 412.2588 412.50613 412.75604 413.0085 413.2635 413.52112 413.7812 414.04388 414.30908 414.57684 414.84723 415.1201 415.39548 415.6735 415.95404 416.23712 416.52277 416.81097 417.10168 417.395 417.69086 417.98926 418.29022 418.59372 418.89978 419.20837 419.51956 419.83325 420.14957 420.46838 420.78973 421.1137 421.44016 421.76917 422.10074 422.4349 422.77158 423.11084 423.45258 423.79697 424.14386 424.4933 424.84528 425.19986 425.55695 425.91663 426.27884 426.64355 427.01093 427.3808 427.7532 428.12817 428.5057 428.8858 429.26837 429.6536 430.04132 430.43158 430.82443 431.21982 431.6178 432.01828 432.42133 432.8269 433.23508 433.6458 434.05905 434.47485 434.89322 435.31415 435.73758 436.1636 436.5922 437.0233 437.45697 437.8932 438.33197 438.77332 439.2172 439.66364 440.1126 440.56418 441.01828 441.4749 441.9341 442.3959 442.86014 443.3271 443.79642 444.26837 444.74286 445.21997 445.6996 446.18176 446.66647 447.15375 447.6436 448.1359 448.6309 449.1284 449.6284 450.13098 450.63614 451.14386 451.65402 452.1669 452.68222 453.20004 453.72055 454.2436 454.76913 455.29727 455.82788 456.36108 456.89685 457.4352 457.97604 458.51953 459.06546 459.61404 460.16507 460.71872 461.27493 461.83362 462.39496 462.95877 463.52518 464.09412 464.6656 465.2397 465.81625 466.39545 466.97717 467.5614 468.1482 468.73755 469.32947 469.92395 470.521 471.12054 471.7227 472.32733 472.93457 473.54437 474.15674 474.7716 475.389 476.00903 476.6316 477.25665 477.8843 478.51453 479.14728 479.7826 480.42047 481.06088 481.70386 482.34937 482.99744 483.648 484.30118 484.9569 485.61527 486.27606 486.9394 487.60535 488.27387 488.94492 489.6185 490.29465 490.97333 491.65457 492.33835 493.02472 493.71362 494.4051 495.0991 495.7957 496.49475 497.1964 497.90064 498.60742 499.3168 500.02863 500.74307 501.46002 502.17957 502.90167 503.62628 504.35345 505.08328 505.81555 506.55038 507.2878 508.02774 508.7703 509.5153 510.26294 511.0131 511.76575 512.52106 513.2788 514.03925 514.8021 515.5676 516.33564 517.1062 517.8794 518.655 519.4333 520.21405 520.9974 521.7833 522.5717 523.36274 524.15625 524.9524 525.75104 526.55225 527.356 528.16236 528.9712 529.7826 530.5966 531.4131 532.2322 533.0538 533.8779 534.7047 535.53394 536.3658 537.2002 538.0371 538.87665 539.7186 540.5633 541.4104 542.26014 543.11237 543.96717 544.8245 545.68445 546.5469 547.4119 548.2795 549.1496 550.0223 550.89747 551.77527 552.6556 553.5385 554.4239 555.3119 556.20246 557.0955 557.99115 558.88935 559.7901 560.6934 561.59925 562.5077 563.41864 564.33216 565.24817 566.1668 567.08796 568.0)) (quote bpf) 10))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj)) :from-file t)) "x" nil (pairlis (quote (winsize winpos picture)) (list (om-make-point 335 275) (om-make-point 10 40) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-SPLINE-ASCENDING-BPFS" (quote r-spline-ascending-bpfs) (quote ((om-load-inputfun (quote input-funbox) "y-minmax-list" "Y-MINMAX-LIST" (list 0 1000)) (om-load-inputfun (quote input-funbox) "points-minmax-list" "POINTS-MINMAX-LIST" (list 7 9)) (om-load-inputfun (quote input-funbox) "number-of-bpfs" "NUMBER-OF-BPFS" 3))) (om-make-point 261 57) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 8" (quote list) (quote nil) (om-make-point 381 5) (om-make-point 27 30) 2 "2" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 3" (quote list) (quote nil) (om-make-point 327 7) (om-make-point 48 30) (list 5 7) "(5 7)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 2" (quote list) (quote nil) (om-make-point 254 12) (om-make-point 69 30) (list 0 1000) "(0 1000)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "FIRST 2" (quote first) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 83 318) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 14" (quote list) (quote nil) (om-make-point 205 184) (om-make-point 27 30) 1 "1" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 13" (quote list) (quote nil) (om-make-point 168 167) (om-make-point 48 30) (list 5 7) "(5 7)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 12" (quote list) (quote nil) (om-make-point 97 169) (om-make-point 69 30) (list 0 1000) "(0 1000)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-SPLINE-DESCENDING-BPFS" (quote r-spline-descending-bpfs) (quote ((om-load-inputfun (quote input-funbox) "y-minmax-list" "Y-MINMAX-LIST" (list 0 1000)) (om-load-inputfun (quote input-funbox) "points-minmax-list" "POINTS-MINMAX-LIST" (list 7 9)) (om-load-inputfun (quote input-funbox) "number-of-bpfs" "NUMBER-OF-BPFS" 3))) (om-make-point 92 216) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD 3" (quote chord) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (list of midicents)" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "velocities (list of values 0-127)" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (list of values in ms)" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "durations (list of values in ms)" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "MIDI channels (list of values 0-16)" "lchan" (list 1)))) (om-make-point 146 389) (om-make-point 100 170) (let ((thechord (make-instance (quote chord) :lmidic (quote (9186 9094 8696 8466 8466 8466 7794 7056 6322 6322 6318 6312 5810 4164)) :ldur (quote (493 3071 4975 1683 1683 1683 3936 4348 342 342 969 650 3419 3489)) :lvel (quote (37 33 26 31 31 31 38 15 46 46 33 25 27 12)) :loffset (quote (0 0 0 0 0 0 0 0 0 0 0 0 0 0)) :lchan (quote (1 1 1 1 1 1 1 1 1 1 1 1 1 1))))) (load-port-info thechord (quote (0 0 0 0 0 0 0 0 0 0 0 0 0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode cursor-mode show-stems scale)) (list 8 24 (quote ggff) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil nil (quote :osc-scoreplayer) 1 nil 1000 0 (om-make-point 622 468) (om-make-point 400 23) 0 0 (quote :normal) (quote t) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-MULTISEQ-ENV-POLY" (quote r-multiseq-env-poly) (quote ((om-load-inputfun (quote input-funbox) "chordseqs-list" "CHORDSEQS-LIST" (list 0)) (om-load-inputfun (quote input-funbox) "tempo" "TEMPO" 0) (om-load-inputfun (quote input-funbox) "attack-decay-bpfs" "ATTACK-DECAY-BPFS" (list 0)) (om-load-inputfun (quote input-funbox) "attack-decay-percent-list" "ATTACK-DECAY-PERCENT-LIST" (list 0)) (om-load-inputfun (quote input-funbox) "time-signature-list" "TIME-SIGNATURES-LIST" (list 0)) (om-load-inputfun (quote input-funbox) "seconds-duration" "SECONDS-DURATION" 0) (om-load-inputfun (quote input-funbox) "multiplication-factor " "MULTIPLICATION-FACTOR" 0))) (om-make-point 432 196) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-PROFILE-PITCH-CHORD" (quote r-profile-pitch-chord) (quote ((om-load-inputfun (quote input-funbox) "chordseqs-list" "CHORD-SELF" (list 0)) (om-load-inputfun (quote input-funbox) "bpfs-list" "BPF-SELF" (list 0)))) (om-make-point 0 386) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-CHORD-TO-MULTISEQ" (quote r-chord-to-multiseq) (quote ((om-load-inputfun (quote input-funbox) "chord-self" "CHORD-SELF" (list 0)))) (om-make-point 30 479) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "R-MULTISEQ-TO-CHORD" (quote r-multiseq-to-chord) (quote ((om-load-inputfun (quote input-funbox) "chordseqs-list" "CHORDSEQS-LIST" (list 0)))) (om-make-point 0 145) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 11" (quote list) (quote nil) (om-make-point 509 118) (om-make-point 63 30) (list 1000 0) "(1000 0)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 7" (quote list) (quote nil) (om-make-point 509 154) (om-make-point 34 30) 12 "12" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 6" (quote list) (quote nil) (om-make-point 395 138) (om-make-point 50 30) (list 0.5 0.5) "(.5 .5)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 5" (quote list) (quote nil) (om-make-point 455 132) (om-make-point 52 30) (list (list 3 8)) "((3 8))" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 4" (quote list) (quote nil) (om-make-point 559 152) (om-make-point 27 30) 1 "1" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 359 143) (om-make-point 28 30) 40 "40" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 144 45) (quote "STABLE partials of a Tam-tam") "" (om-make-point 71 2) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ 2" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 76 42) (om-make-point 88 120) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5810) (7794) (8286) (8466) (8696) (9094) (10480) (10616) (6322) (9186) (7056) (6318) (9188) (4164) (9188) (6312) (8466) (6322))) :lonset (quote (46 46 46 46 46 46 46 46 93 273 627 650 830 1132 1271 1625 1759 2322 5021)) :ldur (quote ((3419) (3936) (4894) (1683) (4975) (3071) (1045) (691) (342) (493) (4348) (969) (389) (3489) (308) (650) (383) (418))) :lvel (quote ((27) (38) (40) (31) (26) (33) (34) (42) (46) (37) (15) (33) (20) (12) (20) (25) (19) (20))) :loffset (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))) :lchan (quote ((1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1) (1))) :legato 0)))) (load-port-info newobj (quote ((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quote (((0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0) (0))))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.13 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj)) "x" nil (pairlis (quote (cursor-mode palette-mode scale show-stems obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list (quote :normal) 0 nil (quote t) 1 0 (om-make-point 538 43) (om-make-point 742 405) 0 1000 nil 1 (quote :osc-scoreplayer) 0 nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (list (quote ggff)) 16 8)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "CHORD" (quote chord) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (list of midicents)" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "velocities (list of values 0-127)" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (list of values in ms)" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "durations (list of values in ms)" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "MIDI channels (list of values 0-16)" "lchan" (list 1)))) (om-make-point 8 229) (om-make-point 72 95) (let ((thechord (make-instance (quote chord) :lmidic (quote (5810 7794 8286 8466 8696 9094 10480 10616 6322 9186 7056 6318 9188 4164 9188 6312 8466 6322)) :ldur (quote (3419 3936 4894 1683 4975 3071 1045 691 342 493 4348 969 389 3489 308 650 383 418)) :lvel (quote (27 38 40 31 26 33 34 42 46 37 15 33 20 12 20 25 19 20)) :loffset (quote (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)) :lchan (quote (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))))) (load-port-info thechord (quote (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) nil nil (pairlis (quote (palette-mode scale show-stems obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list 0 nil (quote t) 0 0 (om-make-point 400 23) (om-make-point 629 445) 0 1000 nil 1 (quote :osc-scoreplayer) 0 nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (quote ggff) 16 8)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "MULTI-SEQ" (quote multi-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of CHORD-SEQ objects" "chord-seqs" (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6000))) :lonset (quote (0 1000)) :ldur (quote ((1000))) :lvel (quote ((100))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 11 614) (om-make-point 96 86) (if (find-class (quote multi-seq) nil) (let ((newobj (make-instance (quote multi-seq) :chord-seqs (list (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((9186))) :lonset (quote (0 493)) :ldur (quote ((493))) :lvel (quote ((37))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((9094))) :lonset (quote (0 3071)) :ldur (quote ((3071))) :lvel (quote ((33))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8696))) :lonset (quote (0 4975)) :ldur (quote ((4975))) :lvel (quote ((26))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8466))) :lonset (quote (0 1683)) :ldur (quote ((1683))) :lvel (quote ((31))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8466))) :lonset (quote (0 1683)) :ldur (quote ((1683))) :lvel (quote ((31))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((8466))) :lonset (quote (0 1683)) :ldur (quote ((1683))) :lvel (quote ((31))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7794))) :lonset (quote (0 3936)) :ldur (quote ((3936))) :lvel (quote ((38))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((7056))) :lonset (quote (0 4348)) :ldur (quote ((4348))) :lvel (quote ((15))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6322))) :lonset (quote (0 342)) :ldur (quote ((342))) :lvel (quote ((46))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6322))) :lonset (quote (0 342)) :ldur (quote ((342))) :lvel (quote ((46))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6318))) :lonset (quote (0 969)) :ldur (quote ((969))) :lvel (quote ((33))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6312))) :lonset (quote (0 650)) :ldur (quote ((650))) :lvel (quote ((25))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5810))) :lonset (quote (0 3419)) :ldur (quote ((3419))) :lvel (quote ((27))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((4164))) :lonset (quote (0 3489)) :ldur (quote ((3489))) :lvel (quote ((12))) :loffset (quote ((0))) :lchan (quote ((1))) :legato 0)))) (load-port-info newobj (quote ((0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quote (((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0)) ((0))))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (palette-mode scale show-stems obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx cursor-mode)) (list 0 nil (quote t) 1 0 (om-make-point 574 23) (om-make-point 706 720) 0 1000 nil 1 (quote :osc-scoreplayer) 0 nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1 1 1 1 1 1 1 1 1 1 1 1 1 1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (list (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g) (quote g)) 16 8 (quote :normal))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "POLY 2" (quote poly) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "list of VOICE objects" "voices" (list (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (1 (((4 4) (1 1 1 1))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (6000)) :ldur (quote (1000)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6000)) :ldur (quote (1000)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6000)) :ldur (quote (1000)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord) (let ((thechord (make-instance (quote chord) :lmidic (quote (6000)) :ldur (quote (1000)) :lvel (quote (100)) :loffset (quote (0)) :lchan (quote (1))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 60) nil)) :legato 100 :ties (quote (nil nil nil nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj))))) (om-make-point 269 293) (om-make-point 576 425) (if (find-class (quote poly) nil) (let ((newobj (make-instance (quote poly) :voices (list (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (9/4 (((3 8) ((1 (-1)) (1 (-1)) (1 (-1)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1 2)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0 -2)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (9186)) :ldur (quote (500)) :lvel (quote (37)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (9/4 (((3 8) ((1 (-1)) (1 (-1)) (1 (-1)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1)))) ((3 8) ((1 (-2 1)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (2.0 -1)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (9094)) :ldur (quote (250)) :lvel (quote (33)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (9/4 (((3 8) ((1 (-1)) (1 (-1)) (1 (-1)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1 2)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0 -2)) (1 (-1)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (8696)) :ldur (quote (500)) :lvel (quote (26)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (9/4 (((3 8) ((1 (-1)) (1 (-1)) (1 (-1)))) ((3 8) ((1 (-1)) (1 (-1 2)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0 -2)) (1 (-1)) (1 (-1)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (8466)) :ldur (quote (500)) :lvel (quote (31)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (9/4 (((3 8) ((1 (-1)) (1 (-1)) (1 (-1)))) ((3 8) ((1 (-1)) (1 (-2 1)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0 -2)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (8466)) :ldur (quote (250)) :lvel (quote (31)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (9/4 (((3 8) ((1 (-1)) (1 (-1)) (1 (-1)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1 2)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (2.0 -1)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (8466)) :ldur (quote (500)) :lvel (quote (31)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (9/4 (((3 8) ((1 (-1)) (1 (-1 2)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0 -2)) (1 (-1)) (1 (-1)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (7794)) :ldur (quote (500)) :lvel (quote (38)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (9/4 (((3 8) ((1 (-1)) (1 (-1)) (1 (-2 1)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (2.0 -1)) (1 (-1)) (1 (-1)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (7056)) :ldur (quote (250)) :lvel (quote (15)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (9/4 (((3 8) ((1 (-1)) (1 (-1)) (1 (-1)))) ((3 8) ((1 (-2 1)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (2.0 -1)) (1 (-1)) (1 (-1)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (6322)) :ldur (quote (250)) :lvel (quote (46)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (9/4 (((3 8) ((1 (-1)) (1 (-1)) (1 (-1)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1 2)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0 -2)) (1 (-1)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (6322)) :ldur (quote (500)) :lvel (quote (46)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (9/4 (((3 8) ((1 (-1)) (1 (-1)) (1 (-1)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1)))) ((3 8) ((1 (-1 2)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (2.0 -1)) (1 (-1)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (6318)) :ldur (quote (500)) :lvel (quote (33)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (9/4 (((3 8) ((1 (-1)) (1 (-1)) (1 (-1)))) ((3 8) ((1 (-1)) (1 (-1 2)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0 -2)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (6312)) :ldur (quote (500)) :lvel (quote (25)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (9/4 (((3 8) ((1 (-1)) (1 (-1)) (1 (-1 2)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (2.0 -1)) (1 (-1)) (1 (-1)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (5810)) :ldur (quote (500)) :lvel (quote (27)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) (let ((newobj (when (find-class (quote voice) nil) (make-instance (quote voice) :tree (quote (9/4 (((3 8) ((1 (1)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0)))) ((3 8) ((1 (1.0)) (1 (1.0)) (1 (1.0 -2)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1)))) ((3 8) ((1 (-1)) (1 (-1)) (1 (-1))))))) :chords (load-obj-list-from-save (quote ((let ((thechord (make-instance (quote chord) :lmidic (quote (4164)) :ldur (quote (750)) :lvel (quote (12)) :loffset (quote (0)) :lchan (quote (14))))) (load-port-info thechord (quote (0))) (init-mus-color thechord (quote nil)) (set-extra-pairs thechord (quote nil)) (set-tonalite thechord nil) thechord)))) :tempo (quote ((1/4 40) nil)) :legato 100 :ties (quote (nil)))))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) :from-file t))) (load-port-info newobj (quote (nil nil nil nil nil nil nil nil nil nil nil nil nil nil))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj)) nil nil (pairlis (quote (cursor-mode palette-mode scale show-stems obj-mode score-mode winpos winsize mode grillestep notechancolor? zoom player inport outport deltapict cmnpref staff fontsize approx)) (list (quote :normal) 0 nil (quote t) 1 0 (om-make-point 163 23) (om-make-point 1094 720) 0 1000 nil 1 (quote :osc-scoreplayer) 0 nil (om-make-point 0 0) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1 1 1 1 1 1 1 1 1 1 1 1 1 1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (list (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff) (quote ggff)) 12 8)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((4 0 0 0 nil 0) (2 0 0 1 nil 0) (1 0 2 1 nil 0) (1 0 2 2 nil 0) (3 0 4 1 nil 0) (3 0 4 2 nil 0) (38 1 6 0 nil 0) (5 0 6 1 nil 0) (14 1 10 0 nil 0) (14 1 11 0 nil 0) (9 0 12 0 nil 0) (11 0 12 1 nil 0) (8 0 12 2 nil 0) (10 0 12 3 nil 0) (8 0 12 4 nil 0) (23 0 13 1 nil 0) (15 0 14 1 nil 0) (18 0 15 0 nil 0) (17 0 15 1 nil 0) (16 0 15 2 nil 0) (13 1 19 0 nil 0) (22 0 23 0 nil 0) (21 0 23 1 nil 0) (20 0 23 2 nil 0) (26 0 24 0 nil 0) (6 0 25 0 nil 0) (34 0 25 1 nil 0) (0 0 25 2 nil 0) (31 0 25 3 nil 0) (32 0 25 4 nil 0) (30 0 25 5 nil 0) (33 0 25 6 nil 0) (37 0 26 0 nil 0) (19 0 26 1 nil 0) (24 0 27 0 nil 0) (36 1 28 0 nil 0) (28 0 37 0 nil 0) (27 0 38 1 nil 0) (25 0 39 1 nil 0))) nil 6.13))
