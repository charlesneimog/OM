; OM File Header - Saved 2013/09/17 23:36:00
; (6.0602 :patc (om-make-point 496 10) (om-make-point 50 25) (om-make-point 1146 620) "" 183 0 "2013/08/01 23:14:53" "2013/09/17 23:19:19")
; End File Header
; External resources 
; (list (list (quote :abstraction) "../../../2012 e antes/pratica/OpenMusic 6 - User Manual /2011/experimento do radinho de pilha.omp"))
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "experimento do radinho de pilha (2)" (quote ((om-load-boxcomment "comment 2" (om-make-point 229 49) (quote "<- Dur de cad'acorde$(em ms e entre parenteses)") "" (om-make-point 327 92) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 100 40) (quote "<- freq fundamental") "" (om-make-point 171 87) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "list 4" (quote list) (quote nil) (om-make-point 745 171) (om-make-point 59 24) (list 1 2 3 4) "(1 2 3 4)" nil) (om-load-boxcall (quote bastype) "aux31 2" (quote t) (quote nil) (om-make-point 693 197) (om-make-point 28 30) 78 "78" nil) (om-load-boxcall (quote genfun) "PGMOUT 2" (quote pgmout) (quote ((om-load-inputfun (quote input-funbox) "program number" "PROG" 1) (om-load-inputfun (quote input-funbox) "channel" "CHANS" 1) (om-load-inputfun (quote input-funbox) "optional port" "PORT" 0))) (om-make-point 743 231) nil nil nil nil 1) (om-load-boxcall (quote genfun) "PITCHWHEEL 2" (quote pitchwheel) (quote ((om-load-inputfun (quote input-funbox) "wheel value" "VALUES" 0) (om-load-inputfun (quote input-funbox) "channel" "CHANS" 1) (om-load-inputfun (quote input-funbox) "optional port" "PORT" 0))) (om-make-point 687 94) (om-make-point 163 53) nil nil nil 1) (om-load-boxcall (quote bastype) "aux3 2" (quote t) (quote nil) (om-make-point 620 45) (om-make-point 108 27) (list 0 1024 2048 3072) "(0 1024 2048 3072)" nil) (om-load-boxcall (quote bastype) "aux4 2" (quote t) (quote nil) (om-make-point 742 47) (om-make-point 58 29) (list 1 2 3 4) "(1 2 3 4)" nil) (om-load-boxcomment "comment3 2" (om-make-point 132 19) (quote " if  pitchbend setup  range = 1") "" (om-make-point 711 150) nil (om-make-color 0 0 0) (om-make-font "Helvetica" 9 :family "Helvetica" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux11 2" (quote t) (quote nil) (om-make-point 806 46) (om-make-point 23 28) 0 "0" nil) (om-load-editor-box1 "CHORD-SEQ" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "SELF" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "LMIDIC" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "LONSET" (list 0 1000)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "LDUR" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "LVEL" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "LOFFSET" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "LCHAN" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "LEGATO" 0))) (om-make-point 13 383) (om-make-point 516 135) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((3100 4300 5002 5500 5886 6202 6468 6700 6904 7086 7252 7402 7540 7668 7788) (4300 5002 5500 5886 6202 6468 6700 6904 7086 7252 7402 7540 7668 7788 7900) (5002 5500 5886 6202 6468 6700 6904 7086 7252 7402 7540 7668 7788 7900 8004) (5500 5886 6202 6468 6700 6904 7086 7252 7402 7540 7668 7788 7900 8004 8104) (5886 6202 6468 6700 6904 7086 7252 7402 7540 7668 7788 7900 8004 8104 8198) (6202 6468 6700 6904 7086 7252 7402 7540 7668 7788 7900 8004 8104 8198 8286) (6468 6700 6904 7086 7252 7402 7540 7668 7788 7900 8004 8104 8198 8286 8370) (6700 6904 7086 7252 7402 7540 7668 7788 7900 8004 8104 8198 8286 8370 8452) (6904 7086 7252 7402 7540 7668 7788 7900 8004 8104 8198 8286 8370 8452 8528) (7086 7252 7402 7540 7668 7788 7900 8004 8104 8198 8286 8370 8452 8528 8602) (7252 7402 7540 7668 7788 7900 8004 8104 8198 8286 8370 8452 8528 8602 8672) (7402 7540 7668 7788 7900 8004 8104 8198 8286 8370 8452 8528 8602 8672 8740) (7540 7668 7788 7900 8004 8104 8198 8286 8370 8452 8528 8602 8672 8740 8806) (7668 7788 7900 8004 8104 8198 8286 8370 8452 8528 8602 8672 8740 8806 8868) (7788 7900 8004 8104 8198 8286 8370 8452 8528 8602 8672 8740 8806 8868 8930) (7900 8004 8104 8198 8286 8370 8452 8528 8602 8672 8740 8806 8868 8930 8988) (8004 8104 8198 8286 8370 8452 8528 8602 8672 8740 8806 8868 8930 8988 9046) (8104 8198 8286 8370 8452 8528 8602 8672 8740 8806 8868 8930 8988 9046 9100) (8198 8286 8370 8452 8528 8602 8672 8740 8806 8868 8930 8988 9046 9100 9154) (8286 8370 8452 8528 8602 8672 8740 8806 8868 8930 8988 9046 9100 9154 9204) (8370 8452 8528 8602 8672 8740 8806 8868 8930 8988 9046 9100 9154 9204 9256) (8452 8528 8602 8672 8740 8806 8868 8930 8988 9046 9100 9154 9204 9256 9304))) :lonset (quote (0 1500 3000 4500 6000 7500 9000 10500 12000 13500 15000 16500 18000 19500 21000 22500 24000 25500 27000 28500 30000 31500 33000)) :ldur (quotelvel (quote ((100 100 100 100 100 100 100 100 100 100 100 100 100 100 100) (100 100 100 100 100 100 100 100 100 100 100 100 100 100 100) (100 100 100 100 100 100 100 100 100 100 100 100 100 100 100) (100 100 100 100 100 100 100 100 100 100 100 100 100 100 100) (100 100 100 100 100 100 100 100 100 100 100 100 100 100 100) (100 100 100 100 100 100 100 100 100 100 100 100 100 100 100) (100 100 100 100 100 100 100 100 100 100 100 100 100 100 100) (100 100 100 100 100 100 100 100 100 100 100 100 100 100 100) (100 100 100 100 100 100 100 100 100 100 100 100 100 100 100) (100 100 100 100 100 100 100 100 100 100 100 100 100 100 100) (100 100 100 100 100 100 100 100 100 100 100 100 100 100 100) (100 100 100 100 100 100 100 100 100 100 100 100 100 100 100) (100 100 100 100 100 100 100 100 100 100 100 100 100 100 100) (100 100 100 100 100 100 100 100 100 100 100 100 100 100 100) (100 100 100 100 100 100 100 100 100 100 100 100 100 100 100) (100 100 100 100 100 100 100 100 100 100 100 100 100 100 100) (100 100 100 100 100 100 100 100 100 100 100 100 100 100 100) (100 100 100 100 100 100 100 100 100 100 100 100 100 100 100) (100 100 100 100 100 100 100 100 100 100 100 100 100 100 100) (100 100 100 100 100 100 100 100 100 100 100 100 100 100 100) (100 100 100 100 100 100 100 100 100 100 100 100 100 100 100) (100 100 100 100 100 100 100 100 100 100 100 100 100 100 100))) :loffset (quote ((0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))) :lchan (quote ((1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))) :legato 0)))) (load-port-info newobj (quote ((0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode show-stems scale palette-mode)) (list 8 24 (quote gf) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil 0 (quote :midishare) 1 nil 1000 0 (om-make-point 627 359) (om-make-point 400 20) 0 1 (quote t) nil 0)) t nil nil nil) (om-load-boxcall (quote bastype) "list 2" (quote list) (quote nil) (om-make-point 275 97) (om-make-point 52 30) (list 1500) "(1500)" nil) (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 144 90) (om-make-point 28 30) 49 "49" nil) (om-load-boxcall (quote patch-box) "experimento do radinho de pilha" (quote ("elements" "2012 e antes" "pratica" "OpenMusic 6 - User Manual " "2011" "experimento do radinho de pilha")) (quote ((om-load-inputfun (quote input-funbox) "" "FREQ 0" nil) (om-load-inputfun (quote input-funbox) "" "DUR de cada acorde (em ms), entre parenteses" nil))) (om-make-point 44 223) (om-make-point 381 67) (list (list (list 3100 4300 5002 5500 5886 6202 6468 6700 6904 7086 7252 7402 7540 7668 7788) (list 4300 5002 5500 5886 6202 6468 6700 6904 7086 7252 7402 7540 7668 7788 7900) (list 5002 5500 5886 6202 6468 6700 6904 7086 7252 7402 7540 7668 7788 7900 8004) (list 5500 5886 6202 6468 6700 6904 7086 7252 7402 7540 7668 7788 7900 8004 8104) (list 5886 6202 6468 6700 6904 7086 7252 7402 7540 7668 7788 7900 8004 8104 8198) (list 6202 6468 6700 6904 7086 7252 7402 7540 7668 7788 7900 8004 8104 8198 8286) (list 6468 6700 6904 7086 7252 7402 7540 7668 7788 7900 8004 8104 8198 8286 8370) (list 6700 6904 7086 7252 7402 7540 7668 7788 7900 8004 8104 8198 8286 8370 8452) (list 6904 7086 7252 7402 7540 7668 7788 7900 8004 8104 8198 8286 8370 8452 8528) (list 7086 7252 7402 7540 7668 7788 7900 8004 8104 8198 8286 8370 8452 8528 8602) (list 7252 7402 7540 7668 7788 7900 8004 8104 8198 8286 8370 8452 8528 8602 8672) (list 7402 7540 7668 7788 7900 8004 8104 8198 8286 8370 8452 8528 8602 8672 8740) (list 7540 7668 7788 7900 8004 8104 8198 8286 8370 8452 8528 8602 8672 8740 8806) (list 7668 7788 7900 8004 8104 8198 8286 8370 8452 8528 8602 8672 8740 8806 8868) (list 7788 7900 8004 8104 8198 8286 8370 8452 8528 8602 8672 8740 8806 8868 8930) (list 7900 8004 8104 8198 8286 8370 8452 8528 8602 8672 8740 8806 8868 8930 8988) (list 8004 8104 8198 8286 8370 8452 8528 8602 8672 8740 8806 8868 8930 8988 9046) (list 8104 8198 8286 8370 8452 8528 8602 8672 8740 8806 8868 8930 8988 9046 9100) (list 8198 8286 8370 8452 8528 8602 8672 8740 8806 8868 8930 8988 9046 9100 9154) (list 8286 8370 8452 8528 8602 8672 8740 8806 8868 8930 8988 9046 9100 9154 9204) (list 8370 8452 8528 8602 8672 8740 8806 8868 8930 8988 9046 9100 9154 9204 9256) (list 8452 8528 8602 8672 8740 8806 8868 8930 8988 9046 9100 9154 9204 9256 9304)) (list 0 1500) (list 1500)) nil nil 3))) (quote ((3 0 4 0 nil 0) (2 0 4 1 nil 0) (6 0 5 0 nil 0) (7 0 5 1 nil 0) (9 0 5 2 nil 0) (13 0 10 1 nil 0) (13 1 10 2 nil 0) (13 2 10 3 nil 0) (12 0 13 0 nil 0) (11 0 13 1 nil 0))) nil 6.0602))
