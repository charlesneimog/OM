; OM File Header - Saved 2013/09/20 0:53:36
; (6.0602 :patc (om-make-point 388 10) (om-make-point 50 50) (om-make-point 1137 583) "" 183 0 "2013/09/20 0:16:58" "2013/09/20 0:53:20")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "benade p. 562-563 - multifonicos de clarinete" (quote ((om-load-boxcall (quote bastype) "list 25" (quote list) (quote nil) (om-make-point 741 264) (om-make-point 114 30) (list 1 2 1 2 1 2 1 1) "(1 2 1 2 1 2 1 1)" nil) (om-load-boxcall (quote genfun) "OM-SCALE 4" (quote om-scale) (quote ((om-load-inputfun (quote input-funbox) "number or list" "SELF" 1) (om-load-inputfun (quote input-funbox) "a number" "MINOUT" 0) (om-load-inputfun (quote input-funbox) "a number" "MAXOUT" 0))) (om-make-point 777 332) nil nil nil nil 1) (om-load-boxcall (quote bastype) "list 24" (quote list) (quote nil) (om-make-point 810 292) (om-make-point 34 30) 10 "10" nil) (om-load-boxcall (quote bastype) "list 23" (quote list) (quote nil) (om-make-point 847 292) (om-make-point 34 30) 90 "90" nil) (om-load-boxcall (quote lispfun) "LIST 22" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 713 379) nil nil nil nil 1) (om-load-boxcall (quote bastype) "list 21" (quote list) (quote nil) (om-make-point 663 214) (om-make-point 233 30) (list 214 230 575 580 697 720 764 1822) "(214 230 575 580 697 720 764 1822)" nil) (om-load-boxcall (quote lispfun) "LIST 20" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 689 345) nil nil nil nil 1) (om-load-editor-box1 "CHORD-SEQ 4" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 1000)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 648 428) (om-make-point 148 147) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5652 5776 7364 7378 7696 7752 7856 9360))) :lonset (quote (0 1000)) :ldur (quote ((1000 1000 1000 1000 1000 1000 1000 1000))) :lvel (quote ((10 90 10 90 10 90 10 10))) :loffset (quote ((0 0 0 0 0 0 0 0))) :lchan (quote ((1 1 1 1 1 1 1 1))) :legato 0)))) (load-port-info newobj (quote ((0 0 0 0 0 0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode show-stems scale palette-mode)) (list 8 24 (quote ggf) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil 0 (quote :midishare) 1 nil 1000 0 (om-make-point 699 380) (om-make-point 400 22) 0 1 (quote t) nil 0)) t nil nil nil) (om-load-boxcall (quote genfun) "F->MC 4" (quote f->mc) (quote ((om-load-inputfun (quote input-funbox) "frequency (Hz)" "FREQ" 440))) (om-make-point 660 278) nil nil nil nil 1) (om-load-boxcomment "comment 4" (om-make-point 218 41) (quote "=> Multifonico com todos os furos fechados (p. 574)") "" (om-make-point 670 175) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "list 19" (quote list) (quote nil) (om-make-point 471 154) (om-make-point 201 30) (list 3.5 8 26 4 3 17 5 4 22 7.5 3 6) "(3.5 8 26 4 3 17 5 4 22 7.5 3 6)" nil) (om-load-boxcall (quote genfun) "OM-SCALE 3" (quote om-scale) (quote ((om-load-inputfun (quote input-funbox) "number or list" "SELF" 1) (om-load-inputfun (quote input-funbox) "a number" "MINOUT" 0) (om-load-inputfun (quote input-funbox) "a number" "MAXOUT" 0))) (om-make-point 505 219) nil nil nil nil 1) (om-load-boxcall (quote bastype) "list 18" (quote list) (quote nil) (om-make-point 548 183) (om-make-point 34 30) 10 "10" nil) (om-load-boxcall (quote bastype) "list 17" (quote list) (quote nil) (om-make-point 585 183) (om-make-point 34 30) 90 "90" nil) (om-load-boxcall (quote lispfun) "LIST 16" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 485 280) nil nil nil nil 1) (om-load-boxcall (quote bastype) "list 15" (quote list) (quote nil) (om-make-point 259 122) (om-make-point 209 30) (list 31 2 2 6 2 6 3 1 2 3 1 1 1 1 1 1) "(31 2 2 6 2 6 3 1 2 3 1 1 1 1 1 1)" nil) (om-load-boxcall (quote genfun) "OM-SCALE 2" (quote om-scale) (quote ((om-load-inputfun (quote input-funbox) "number or list" "SELF" 1) (om-load-inputfun (quote input-funbox) "a number" "MINOUT" 0) (om-load-inputfun (quote input-funbox) "a number" "MAXOUT" 0))) (om-make-point 309 217) nil nil nil nil 1) (om-load-boxcall (quote bastype) "list 14" (quote list) (quote nil) (om-make-point 336 159) (om-make-point 34 30) 10 "10" nil) (om-load-boxcall (quote bastype) "list 13" (quote list) (quote nil) (om-make-point 372 159) (om-make-point 34 30) 90 "90" nil) (om-load-boxcall (quote lispfun) "LIST 12" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 321 290) nil nil nil nil 1) (om-load-boxcall (quote bastype) "list 11" (quote list) (quote nil) (om-make-point 77 114) (om-make-point 172 30) (list 28 2 2 8 12 2 5 2 2 2 2 2) "(28 2 2 8 12 2 5 2 2 2 2 2)" nil) (om-load-boxcall (quote genfun) "OM-SCALE" (quote om-scale) (quote ((om-load-inputfun (quote input-funbox) "number or list" "SELF" 1) (om-load-inputfun (quote input-funbox) "a number" "MINOUT" 0) (om-load-inputfun (quote input-funbox) "a number" "MAXOUT" 0))) (om-make-point 127 201) nil nil nil nil 1) (om-load-boxcall (quote bastype) "list 10" (quote list) (quote nil) (om-make-point 144 151) (om-make-point 34 30) 10 "10" nil) (om-load-boxcall (quote bastype) "list 8" (quote list) (quote nil) (om-make-point 180 151) (om-make-point 34 30) 90 "90" nil) (om-load-boxcall (quote lispfun) "LIST 7" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 139 265) nil nil nil nil 1) (om-load-boxcall (quote bastype) "list 6" (quote list) (quote nil) (om-make-point 405 88) (om-make-point 471 30) (list 250.9 367.2 501.8 618.1 752.7 869 985.3 1119.9 1236.2 1370.8 1487.1 1738) "(250.9 367.2 501.8 618.1 752.7 869 985.3 1119.9 1236.2 1370.8 1487.1 1738)" nil) (om-load-boxcomment "comment 3" (om-make-point 245 26) (quote "=> Multifonico no. 1 [oboé] (p. 564)") "" (om-make-point 516 60) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote lispfun) "LIST 5" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 461 246) nil nil nil nil 1) (om-load-editor-box1 "CHORD-SEQ 3" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 1000)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 420 329) (om-make-point 148 147) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5928 6586 7128 7488 7830 8078 8296 8518 8688 8868 9008 9278))) :lonset (quote (0 1000)) :ldur (quote ((1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000))) :lvel (quote ((12 27 90 13 10 59 17 13 76 26 10 20))) :loffset (quote ((0 0 0 0 0 0 0 0 0 0 0 0))) :lchan (quote ((1 1 1 1 1 1 1 1 1 1 1 1))) :legato 0)))) (load-port-info newobj (quote ((0 0 0 0 0 0 0 0 0 0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode show-stems scale palette-mode)) (list 8 24 (quote ggf) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil 0 (quote :midishare) 1 nil 1000 0 (om-make-point 699 380) (om-make-point 400 22) 0 1 (quote t) nil 0)) t nil nil nil) (om-load-boxcall (quote genfun) "F->MC 3" (quote f->mc) (quote ((om-load-inputfun (quote input-funbox) "frequency (Hz)" "FREQ" 440))) (om-make-point 449 178) nil nil nil nil 1) (om-load-boxcomment "comment 2" (om-make-point 205 26) (quote "=> Multifonico no. 33 (p. 563)") "" (om-make-point 266 8) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux11" (quote t) (quote nil) (om-make-point 1175 19) (om-make-point 23 28) 0 "0" nil) (om-load-boxcomment "comment3" (om-make-point 132 19) (quote " if  pitchbend setup  range = 1") "" (om-make-point 1080 123) nil (om-make-color 0 0 0) (om-make-font "Helvetica" 9 :family "Helvetica" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux4" (quote t) (quote nil) (om-make-point 1111 20) (om-make-point 58 29) (list 1 2 3 4) "(1 2 3 4)" nil) (om-load-boxcall (quote bastype) "aux3" (quote t) (quote nil) (om-make-point 989 18) (om-make-point 108 27) (list 0 1024 2048 3072) "(0 1024 2048 3072)" nil) (om-load-boxcall (quote genfun) "PITCHWHEEL" (quote pitchwheel) (quote ((om-load-inputfun (quote input-funbox) "wheel value" "VALUES" 0) (om-load-inputfun (quote input-funbox) "channel" "CHANS" 1) (om-load-inputfun (quote input-funbox) "optional port" "PORT" 0))) (om-make-point 1056 67) (om-make-point 163 53) nil nil nil 1) (om-load-boxcall (quote genfun) "PGMOUT" (quote pgmout) (quote ((om-load-inputfun (quote input-funbox) "program number" "PROG" 1) (om-load-inputfun (quote input-funbox) "channel" "CHANS" 1) (om-load-inputfun (quote input-funbox) "optional port" "PORT" 0))) (om-make-point 1112 204) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux31" (quote t) (quote nil) (om-make-point 1062 170) (om-make-point 27 30) 0 "0" nil) (om-load-boxcall (quote bastype) "list 9" (quote list) (quote nil) (om-make-point 1114 144) (om-make-point 59 24) (list 1 2 3 4) "(1 2 3 4)" nil) (om-load-boxcall (quote bastype) "list 4" (quote list) (quote nil) (om-make-point 152 30) (om-make-point 496 30) (list 286 409 572 695 858 981 1267 1553 1676 1839 1962 2125 2248 2534 2820 3106) "(286 409 572 695 858 981 1267 1553 1676 1839 1962 2125 2248 2534 2820 3106)" nil) (om-load-boxcall (quote genfun) "F->MC 2" (quote f->mc) (quote ((om-load-inputfun (quote input-funbox) "frequency (Hz)" "FREQ" 440))) (om-make-point 229 214) nil nil nil nil 1) (om-load-editor-box1 "CHORD-SEQ 2" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 1000)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 250 365) (om-make-point 148 147) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((6154 6774 7354 7692 8056 8288 8732 9084 9216 9376 9488 9626 9724 9932 10116 10284))) :lonset (quote (0 1000)) :ldur (quote ((1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000))) :lvel (quote ((90 13 13 23 13 23 15 10 13 15 10 10 10 10 10 10))) :loffset (quote ((0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))) :lchan (quote ((1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))) :legato 0)))) (load-port-info newobj (quote ((0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode show-stems scale palette-mode)) (list 8 24 (quote ggf) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil 0 (quote :midishare) 1 nil 1000 0 (om-make-point 699 380) (om-make-point 400 22) 0 1 (quote t) nil 0)) t nil nil nil) (om-load-boxcall (quote lispfun) "LIST 3" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 239 293) nil nil nil nil 1) (om-load-boxcall (quote lispfun) "LIST 2" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 52 348) nil nil nil nil 1) (om-load-editor-box1 "CHORD-SEQ" (quote chord-seq) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "pitches (mc): list or list of lists" "lmidic" (list 6000)) (om-load-inputfun (quote input-funbox) "onsets (ms): list" "lonset" (list 0 1000)) (om-load-inputfun (quote input-funbox) "durations (ms): list or list of lists" "ldur" (list 1000)) (om-load-inputfun (quote input-funbox) "velocities (0-127): list or list of lists" "lvel" (list 100)) (om-load-inputfun (quote input-funbox) "offsets (ms): list or list of lists" "loffset" (list 0)) (om-load-inputfun (quote input-funbox) "MIDI channels (1-16): list or list of lists" "lchan" (list 1)) (om-load-inputfun (quote input-funbox) "relative chords duration (0-100)" "legato" 0))) (om-make-point 34 312) (om-make-point 134 122) (let ((newobj (when (find-class (quote chord-seq) nil) (make-instance (quote chord-seq) :lmidic (quote ((5762 6586 6958 7422 7982 8406 8746 8924 9184 9406 9718 9884))) :lonset (quote (0 1000)) :ldur (quote ((1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000))) :lvel (quote ((90 10 10 28 41 10 19 10 10 10 10 10))) :loffset (quote ((0 0 0 0 0 0 0 0 0 0 0 0))) :lchan (quote ((1 1 1 1 1 1 1 1 1 1 1 1))) :legato 0)))) (load-port-info newobj (quote ((0 0 0 0 0 0 0 0 0 0 0 0)))) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote ((nil (om-load-patch-abs1 "patch" (quote nil) (quote nil) 6.0602 nil "" (om-make-point 200 200) (om-make-point 400 500)))))) (set-name newobj nil) (set-tonalite newobj nil) newobj) nil nil (pairlis (quote (approx fontsize staff cmnpref deltapict outport inport player zoom notechancolor? grillestep mode winsize winpos score-mode obj-mode show-stems scale palette-mode)) (list 8 24 (quote gg) (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) (om-make-point 0 0) nil 0 (quote :midishare) 1 nil 1000 0 (om-make-point 699 380) (om-make-point 400 22) 0 1 (quote t) nil 0)) t nil nil nil) (om-load-boxcomment "comment" (om-make-point 216 27) (quote "=> Multifonico no. 4 LJL (p. 562)") "" (om-make-point 18 55) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote genfun) "F->MC" (quote f->mc) (quote ((om-load-inputfun (quote input-funbox) "frequency (Hz)" "FREQ" 440))) (om-make-point 44 216) nil nil nil nil 1) (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 6 78) (om-make-point 375 30) (list 228 367 455 595 822 1050 1278 1417 1645 1872 2240 2467) "(228 367 455 595 822 1050 1278 1417 1645 1872 2240 2467)" nil))) (quote ((0 0 1 0 nil 0) (2 0 1 1 nil 0) (3 0 1 2 nil 0) (1 0 4 0 nil 0) (8 0 6 0 nil 0) (6 0 7 1 nil 0) (4 0 7 4 nil 0) (5 0 8 0 nil 0) (10 0 11 0 nil 0) (12 0 11 1 nil 0) (13 0 11 2 nil 0) (11 0 14 0 nil 0) (15 0 16 0 ((om-make-point 361 150) (om-make-point 326 157) (om-make-point 324 188) (om-make-point 324 217)) 0) (17 0 16 1 nil 0) (18 0 16 2 nil 0) (16 0 19 0 nil 0) (20 0 21 0 nil 0) (22 0 21 1 nil 0) (23 0 21 2 nil 0) (21 0 24 0 nil 0) (29 0 27 0 nil 0) (27 0 28 1 nil 0) (14 0 28 4 nil 0) (25 0 29 0 nil 0) (34 0 35 0 nil 0) (33 0 35 1 nil 0) (31 0 35 2 nil 0) (37 0 36 0 nil 0) (38 0 36 1 nil 0) (39 0 40 0 ((om-make-point 398 58) (om-make-point 398 115) (om-make-point 255 114) (om-make-point 251 214)) 0) (42 0 41 1 nil 0) (19 0 41 4 nil 0) (40 0 42 0 nil 0) (46 0 43 0 nil 0) (43 0 44 1 nil 0) (24 0 44 4 nil 0) (47 0 46 0 ((om-make-point 192 106) (om-make-point 67 109) (om-make-point 64 231) (om-make-point 66 216)) 0))) nil 6.0602))
