; OM File Header - Saved 2020/07/10 15:10:41
; (6.120003 :patc (om-make-point 172 10) (om-make-point 748 279) (om-make-point 640 739) "" 183 0 nil "2020/07/10 15:10:41")
; End File Header
(in-package :om)(load-lib-for (quote ("OMCollider")))(setf *om-current-persistent* (om-load-patch1 "COsc" (quote ((let ((box (om-load-boxcall (quote genfun) "SYNTHESIZER" (quote omsc::synthesizer) (quote ((om-load-inputfun (quote input-funbox) "" "DATA" nil))) (om-make-point 394 601) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 2" (quote list) (quote nil) (om-make-point 53 282) (om-make-point 35 28) (list 0 1) "(0 1)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ARRAY-SC" (quote omsc::array-sc) (quote ((om-load-inputfun (quote input-funbox) "" "IN" nil))) (om-make-point 119 312) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OUT" (quote omsc::out) (quote ((om-load-inputfun (quote input-funbox) "" "BUS" (list (quote omsc::bus))) (om-load-inputfun (quote input-funbox) "" "IN" (list (quote omsc::in))))) (om-make-point 247 356) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "FUNCTION-PLAY" (quote omsc::function-play) (quote ((om-load-inputfun (quote input-funbox) "" "IN" nil))) (om-make-point 266 428) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "GUI" (quote omsc::gui) (quote ((om-load-inputfun (quote input-funbox) "" "IN" nil))) (om-make-point 320 519) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 135 23) (quote "Depth chorus") "" (om-make-point 341 89) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 78 25) (quote "freq") "" (om-make-point 144 87) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MOUSE-Y" (quote omsc::mouse-y) (quote ((om-load-inputfun (quote input-funbox) "" "MINVAL" 0.5) (om-load-inputfun (quote input-funbox) "" "MAXVAL" 100) (om-load-inputfun (quote input-funbox) "" "WARP" 2) (om-load-inputfun (quote input-funbox) "" "LAG" 0.2))) (om-make-point 400 135) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MOUSE-X" (quote omsc::mouse-x) (quote ((om-load-inputfun (quote input-funbox) "" "MINVAL" 60) (om-load-inputfun (quote input-funbox) "" "MAXVAL" 2000) (om-load-inputfun (quote input-funbox) "" "WARP" 2) (om-load-inputfun (quote input-funbox) "" "LAG" 0.2))) (om-make-point 152 118) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 4" (quote list) (quote nil) (om-make-point 89 31) (om-make-point 487 30) "Buffer.alloc(s, 512, 1, {arg buf; buf.sine1Msg(1.0/[1,2,3,4,5,6,7,8,9,10,11,12])})" "\"Buffer.alloc(s, 512, 1, {arg buf; buf.sine1Msg(1.0/[1,2,3,4,5,6,7,8,9,10,11,12])})\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "COSC_AR" (quote omsc::cosc_ar) (quote ((om-load-inputfun (quote input-funbox) "" "BUFNUM" 1) (om-load-inputfun (quote input-funbox) "" "FREQ" (quote freq)) (om-load-inputfun (quote input-funbox) "" "BEATS" 0.5) (om-load-inputfun (quote input-funbox) "" "MUL" 0.05) (om-load-inputfun (quote input-funbox) "" "ADD" 0))) (om-make-point 257 219) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((5 0 0 0 nil 0) (1 0 2 0 nil 0) (2 0 3 0 nil 0) (11 0 3 1 nil 0) (3 0 4 0 nil 0) (4 0 5 0 nil 0) (10 0 11 0 nil 0) (9 0 11 1 nil 0) (8 0 11 2 nil 0))) nil 6.120003))
