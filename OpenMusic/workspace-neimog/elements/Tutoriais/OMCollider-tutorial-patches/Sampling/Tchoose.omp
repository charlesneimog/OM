; OM File Header - Saved 2020/07/10 15:10:41
; (6.120003 :patc (om-make-point 243 530) (om-make-point 620 160) (om-make-point 967 766) "" 183 0 nil "2020/07/10 15:10:41")
; End File Header
(in-package :om)(load-lib-for (quote ("OMCollider")))(setf *om-current-persistent* (om-load-patch1 "Tchoose" (quote ((let ((box (om-load-boxcall (quote genfun) "SYNTHESIZER" (quote omsc::synthesizer) (quote ((om-load-inputfun (quote input-funbox) "" "DATA" nil))) (om-make-point 508 624) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ONEPOLE_AR" (quote omsc::onepole_ar) (quote ((om-load-inputfun (quote input-funbox) "" "IN" (list 0)) (om-load-inputfun (quote input-funbox) "" "COEF" (list 0.5)) (om-load-inputfun (quote input-funbox) "" "MUL" (list 1)) (om-load-inputfun (quote input-funbox) "" "ADD" (list 0)))) (om-make-point 246 408) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 100 60) (quote "Start position file") "" (om-make-point 806 304) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 6" (quote list) (quote nil) (om-make-point 835 357) (om-make-point 28 30) 0.5 "0.5" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "GUI" (quote omsc::gui) (quote ((om-load-inputfun (quote input-funbox) "" "IN" nil))) (om-make-point 385 597) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 5" (quote list) (quote nil) (om-make-point 618 44) (om-make-point 89 30) "gong.wav" "\"\\gong.wav\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 4" (quote list) (quote nil) (om-make-point 427 30) (om-make-point 170 30) "classicalguitarmono.wav" "\"\\classicalguitarmono.wav\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "DUST_AR" (quote omsc::dust_ar) (quote ((om-load-inputfun (quote input-funbox) "" "DENSITY" (list 0)) (om-load-inputfun (quote input-funbox) "" "MUL" (list 1)) (om-load-inputfun (quote input-funbox) "" "ADD" (list 0)))) (om-make-point 129 276) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MOUSE-X" (quote omsc::mouse-x) (quote ((om-load-inputfun (quote input-funbox) "" "MINVAL" 2) (om-load-inputfun (quote input-funbox) "" "MAXVAL" 40) (om-load-inputfun (quote input-funbox) "" "WARP" 2) (om-load-inputfun (quote input-funbox) "" "LAG" 0.2))) (om-make-point 71 175) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LIST 3" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 378 284) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "BUFFER-READ 3" (quote omsc::buffer-read) (quote ((om-load-inputfun (quote input-funbox) "" "FILENAME" nil))) (om-make-point 658 94) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "PLAYBUF 3" (quote omsc::playbuf) (quote ((om-load-inputfun (quote input-funbox) "" "NUMCHANNELS" 1) (om-load-inputfun (quote input-funbox) "" "BUFNUM" "k") (om-load-inputfun (quote input-funbox) "" "RATE" 1) (om-load-inputfun (quote input-funbox) "" "TRIGGER" 1) (om-load-inputfun (quote input-funbox) "" "STARTPOS" 0) (om-load-inputfun (quote input-funbox) "" "LOOP" 1) (om-load-inputfun (quote input-funbox) "" "DONEACTION" 0))) (om-make-point 637 165) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "BUFFER-READ 2" (quote omsc::buffer-read) (quote ((om-load-inputfun (quote input-funbox) "" "FILENAME" nil))) (om-make-point 467 80) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "PLAYBUF 2" (quote omsc::playbuf) (quote ((om-load-inputfun (quote input-funbox) "" "NUMCHANNELS" 1) (om-load-inputfun (quote input-funbox) "" "BUFNUM" "k") (om-load-inputfun (quote input-funbox) "" "RATE" 1) (om-load-inputfun (quote input-funbox) "" "TRIGGER" 1) (om-load-inputfun (quote input-funbox) "" "STARTPOS" 0) (om-load-inputfun (quote input-funbox) "" "LOOP" 1) (om-load-inputfun (quote input-funbox) "" "DONEACTION" 0))) (om-make-point 429 159) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ARRAY-SC" (quote omsc::array-sc) (quote ((om-load-inputfun (quote input-funbox) "" "IN" nil))) (om-make-point 311 304) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "TCHOOSE_AR" (quote omsc::tchoose_ar) (quote ((om-load-inputfun (quote input-funbox) "" "TRIG" (list 440)) (om-load-inputfun (quote input-funbox) "" "ARRAY" (list 0.5)))) (om-make-point 226 329) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "BUFFER-READ" (quote omsc::buffer-read) (quote ((om-load-inputfun (quote input-funbox) "" "FILENAME" nil))) (om-make-point 294 88) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "PLAYBUF" (quote omsc::playbuf) (quote ((om-load-inputfun (quote input-funbox) "" "NUMCHANNELS" 1) (om-load-inputfun (quote input-funbox) "" "BUFNUM" "k") (om-load-inputfun (quote input-funbox) "" "RATE" 1) (om-load-inputfun (quote input-funbox) "" "TRIGGER" 1) (om-load-inputfun (quote input-funbox) "" "STARTPOS" 0.5) (om-load-inputfun (quote input-funbox) "" "LOOP" 1) (om-load-inputfun (quote input-funbox) "" "DONEACTION" 0))) (om-make-point 257 163) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "FUNCTION-PLAY" (quote omsc::function-play) (quote ((om-load-inputfun (quote input-funbox) "" "IN" nil))) (om-make-point 348 512) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 254 38) (om-make-point 98 30) "Boulez.wav" "\"\\Boulez.wav\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "PAN2_AR" (quote omsc::pan2_ar) (quote ((om-load-inputfun (quote input-funbox) "" "IN" 0) (om-load-inputfun (quote input-funbox) "" "POS" 0) (om-load-inputfun (quote input-funbox) "" "LEVEL" 1))) (om-make-point 285 490) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((4 0 0 0 nil 0) (15 0 1 0 nil 0) (18 0 4 0 nil 0) (8 0 7 0 nil 0) (17 0 9 0 nil 0) (13 0 9 1 nil 0) (11 0 9 2 nil 0) (5 0 10 0 nil 0) (10 0 11 1 nil 0) (3 0 11 4 nil 0) (6 0 12 0 nil 0) (12 0 13 1 nil 0) (3 0 13 4 nil 0) (9 0 14 0 nil 0) (7 0 15 0 nil 0) (14 0 15 1 nil 0) (19 0 16 0 nil 0) (16 0 17 1 nil 0) (3 0 17 4 nil 0) (20 0 18 0 nil 0) (1 0 20 0 nil 0))) nil 6.120003))
