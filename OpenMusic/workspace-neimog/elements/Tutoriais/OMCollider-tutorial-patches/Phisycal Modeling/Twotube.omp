; OM File Header - Saved 2020/07/10 15:10:41
; (6.120003 :patc (om-make-point 198 445) (om-make-point 349 95) (om-make-point 970 899) "" 183 0 nil "2020/07/10 15:10:41")
; End File Header
(in-package :om)(load-lib-for (quote ("OMCollider")))(setf *om-current-persistent* (om-load-patch1 "Twotube" (quote ((let ((box (om-load-boxcall (quote genfun) "SYNTHESIZER" (quote omsc::synthesizer) (quote ((om-load-inputfun (quote input-funbox) "" "DATA" nil))) (om-make-point 323 750) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ENV-TRIANGLE" (quote omsc::env-triangle) (quote ((om-load-inputfun (quote input-funbox) "" "DUR" 0.1) (om-load-inputfun (quote input-funbox) "" "LEVEL" 1) (om-load-inputfun (quote input-funbox) "" "CURVE" -4))) (om-make-point 293 68) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "WHITENOISE_AR" (quote omsc::whitenoise_ar) (quote ((om-load-inputfun (quote input-funbox) "" "MUL" (list 1)) (om-load-inputfun (quote input-funbox) "" "ADD" (list 0)))) (om-make-point 462 114) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 4" (om-make-point 49 26) (quote "Loss") "" (om-make-point 851 276) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 5" (quote list) (quote nil) (om-make-point 853 308) (om-make-point 45 30) 0.99 "0.99" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 3" (om-make-point 73 25) (quote "Delays") "" (om-make-point 728 280) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 4" (quote list) (quote nil) (om-make-point 771 308) (om-make-point 34 30) 30 "30" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 3" (quote list) (quote nil) (om-make-point 716 309) (om-make-point 34 30) 90 "90" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 101 39) (quote "Scattering coefficient") "" (om-make-point 719 436) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "TWOTUBE" (quote omsc::twotube) (quote ((om-load-inputfun (quote input-funbox) "" "IN" 0) (om-load-inputfun (quote input-funbox) "" "K" 0.01) (om-load-inputfun (quote input-funbox) "" "LOSS" 0.99) (om-load-inputfun (quote input-funbox) "" "D1LENGTH" 100) (om-load-inputfun (quote input-funbox) "" "D2LENGTH" 40) (om-load-inputfun (quote input-funbox) "" "MUL" 0.1) (om-load-inputfun (quote input-funbox) "" "ADD" 0))) (om-make-point 407 433) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "DUST_KR" (quote omsc::dust_kr) (quote ((om-load-inputfun (quote input-funbox) "" "DENSITY" 4) (om-load-inputfun (quote input-funbox) "" "MUL" (list 1)) (om-load-inputfun (quote input-funbox) "" "ADD" (list 0)))) (om-make-point 79 32) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 89 29) (quote "excitation") "" (om-make-point 478 76) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "GUI" (quote omsc::gui) (quote ((om-load-inputfun (quote input-funbox) "" "IN" nil))) (om-make-point 218 700) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ENVGEN" (quote omsc::envgen) (quote ((om-load-inputfun (quote input-funbox) "" "ENVELOPE" nil) (om-load-inputfun (quote input-funbox) "" "GATE" 0.1) (om-load-inputfun (quote input-funbox) "" "LEVELSCALE" 0.5) (om-load-inputfun (quote input-funbox) "" "LEVELBIAS" 0) (om-load-inputfun (quote input-funbox) "" "TIMESCALE" 0.1) (om-load-inputfun (quote input-funbox) "" "DONEACTION" 0))) (om-make-point 165 111) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "A*B" (quote omsc::a*b) (quote ((om-load-inputfun (quote input-funbox) "" "A" nil) (om-load-inputfun (quote input-funbox) "" "B" nil))) (om-make-point 144 245) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MOUSE-X" (quote omsc::mouse-x) (quote ((om-load-inputfun (quote input-funbox) "" "MINVAL" -1) (om-load-inputfun (quote input-funbox) "" "MAXVAL" 1) (om-load-inputfun (quote input-funbox) "" "WARP" 0) (om-load-inputfun (quote input-funbox) "" "LAG" 0))) (om-make-point 722 482) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "FUNCTION-PLAY" (quote omsc::function-play) (quote ((om-load-inputfun (quote input-funbox) "" "IN" nil))) (om-make-point 165 604) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 2" (quote list) (quote nil) (om-make-point 26 459) (om-make-point 35 28) (list 0 1) "(0 1)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ARRAY-SC 2" (quote omsc::array-sc) (quote ((om-load-inputfun (quote input-funbox) "" "IN" nil))) (om-make-point 42 491) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OUT" (quote omsc::out) (quote ((om-load-inputfun (quote input-funbox) "" "BUS" (list (quote omsc::bus))) (om-load-inputfun (quote input-funbox) "" "IN" (list (quote omsc::in))))) (om-make-point 129 529) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((12 0 0 0 nil 0) (14 0 9 0 nil 0) (15 0 9 1 nil 0) (4 0 9 2 nil 0) (7 0 9 3 nil 0) (6 0 9 4 nil 0) (16 0 12 0 nil 0) (1 0 13 0 nil 0) (10 0 13 1 nil 0) (13 0 14 0 nil 0) (2 0 14 1 nil 0) (19 0 16 0 nil 0) (17 0 18 0 nil 0) (18 0 19 0 nil 0) (9 0 19 1 nil 0))) nil 6.120003))
