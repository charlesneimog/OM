; OM File Header - Saved 2020/07/10 15:10:41
; (6.120003 :patc (om-make-point 160 162) (om-make-point 634 196) (om-make-point 749 772) "" 183 0 nil "2020/07/10 15:10:41")
; End File Header
(in-package :om)(load-lib-for (quote ("OMCollider")))(setf *om-current-persistent* (om-load-patch1 "FFT" (quote ((let ((box (om-load-boxcall (quote genfun) "SYNTHESIZER" (quote omsc::synthesizer) (quote ((om-load-inputfun (quote input-funbox) "" "DATA" nil))) (om-make-point 296 634) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 70 22) (quote "Press \"V\"") "" (om-make-point 234 634) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 3" (quote list) (quote nil) (om-make-point 122 27) (om-make-point 95 45) "/Applications/SuperCollider/SuperCollider.app/Contents/Resources/sounds/a11wlk01.wav" "\"/Applications/SuperCollider/SuperCollider.app/Contents/Resources/sounds/a11wlk01.wav\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 4" (quote list) (quote nil) (om-make-point 148 152) (om-make-point 105 30) "LocalBuf(2048)" "\"LocalBuf(2048)\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "GUI" (quote omsc::gui) (quote ((om-load-inputfun (quote input-funbox) "" "IN" nil))) (om-make-point 145 558) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "BUFFER-READ" (quote omsc::buffer-read) (quote ((om-load-inputfun (quote input-funbox) "" "FILENAME" nil))) (om-make-point 298 22) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 120 100) (quote "FFT Bin Shift") "" (om-make-point 544 401) nil (om-make-color 0 0 0) (om-make-font "Verdana" 18.0D0 :family "Verdana" :style (quote (:bold)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MOUSE-Y" (quote omsc::mouse-y) (quote ((om-load-inputfun (quote input-funbox) "" "MINVAL" 0.01) (om-load-inputfun (quote input-funbox) "" "MAXVAL" 4) (om-load-inputfun (quote input-funbox) "" "WARP" 2) (om-load-inputfun (quote input-funbox) "" "LAG" 0.2))) (om-make-point 646 207) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "IFFT_AR" (quote omsc::ifft_ar) (quote ((om-load-inputfun (quote input-funbox) "" "BUFFER" 0) (om-load-inputfun (quote input-funbox) "" "WINTYPE" 0) (om-load-inputfun (quote input-funbox) "" "WINSIZE" 0))) (om-make-point 343 293) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "PV_BINSHIFT" (quote omsc::pv_binshift) (quote ((om-load-inputfun (quote input-funbox) "" "BUFFER" 0) (om-load-inputfun (quote input-funbox) "" "STRETCH" 1) (om-load-inputfun (quote input-funbox) "" "SHIFT" 0) (om-load-inputfun (quote input-funbox) "" "INTERP" 0))) (om-make-point 395 207) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "FFT" (quote omsc::fft) (quote ((om-load-inputfun (quote input-funbox) "" "BUFFER" 0) (om-load-inputfun (quote input-funbox) "" "IN" 0) (om-load-inputfun (quote input-funbox) "" "HOP" 0.5) (om-load-inputfun (quote input-funbox) "" "WINTYPE" 0) (om-load-inputfun (quote input-funbox) "" "ACTIVE" 1) (om-load-inputfun (quote input-funbox) "" "WINSIZE" 0))) (om-make-point 421 116) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MOUSE-X" (quote omsc::mouse-x) (quote ((om-load-inputfun (quote input-funbox) "" "MINVAL" 0.01) (om-load-inputfun (quote input-funbox) "" "MAXVAL" 4) (om-load-inputfun (quote input-funbox) "" "WARP" 2) (om-load-inputfun (quote input-funbox) "" "LAG" 0.2))) (om-make-point 659 96) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "PLAYBUF" (quote omsc::playbuf) (quote ((om-load-inputfun (quote input-funbox) "" "NUMCHANNELS" 1) (om-load-inputfun (quote input-funbox) "" "BUFNUM" "k") (om-load-inputfun (quote input-funbox) "" "RATE" 1) (om-load-inputfun (quote input-funbox) "" "TRIGGER" 1) (om-load-inputfun (quote input-funbox) "" "STARTPOS" 0) (om-load-inputfun (quote input-funbox) "" "LOOP" 1) (om-load-inputfun (quote input-funbox) "" "DONEACTION" 2))) (om-make-point 405 29) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OUT" (quote omsc::out) (quote ((om-load-inputfun (quote input-funbox) "" "BUS" 0) (om-load-inputfun (quote input-funbox) "" "IN" 0))) (om-make-point 383 390) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "ARRAY-SC" (quote omsc::array-sc) (quote ((om-load-inputfun (quote input-funbox) "" "IN" nil))) (om-make-point 121 374) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 2" (quote list) (quote nil) (om-make-point 142 313) (om-make-point 35 28) (list 0 1) "(0 1)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "FUNCTION-PLAY" (quote omsc::function-play) (quote ((om-load-inputfun (quote input-funbox) "" "IN" nil))) (om-make-point 245 457) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((4 0 0 0 nil 0) (16 0 4 0 nil 0) (2 0 5 0 nil 0) (9 0 8 0 nil 0) (10 0 9 0 nil 0) (11 0 9 1 nil 0) (7 0 9 2 nil 0) (3 0 10 0 nil 0) (12 0 10 1 nil 0) (5 0 12 1 nil 0) (14 0 13 0 nil 0) (8 0 13 1 nil 0) (15 0 14 0 nil 0) (13 0 16 0 nil 0))) nil 6.120003))
