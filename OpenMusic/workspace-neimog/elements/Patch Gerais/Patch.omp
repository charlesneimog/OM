; OM File Header - Saved 2020/06/07 16:24:45
; (6.16 :patc (om-make-point 118 10) (om-make-point 438 12) (om-make-point 745 410) "" 183 0 "2020/06/07 15:37:42" "2020/06/07 16:24:45")
; End File Header
(in-package :om)(load-lib-for (quote ("OM-Partch")))(setf *om-current-persistent* (om-load-patch1 "Patch" (quote ((let ((box (om-load-boxcall (quote genfun) "RATIO->MC 2" (quote ratio->mc) (quote ((om-load-inputfun (quote input-funbox) "convert list of ratios for midicent in Just Intonation" "RATIO" 11/8) (om-load-inputfun (quote input-funbox) "this is the fundamental of the Just Intonation" "FUNDAMENTAL" 6000))) (om-make-point 460 203) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 606 29) (om-make-point 44 28) 6000 "6000" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 443 19) (om-make-point 52 28) (list 11/8) "(11/8)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "RATIO->MC" (quote ratio->mc) (quote ((om-load-inputfun (quote input-funbox) "convert list of ratios for midicent in Just Intonation" "RATIO" 11/8) (om-load-inputfun (quote input-funbox) "this is the fundamental of the Just Intonation" "FUNDAMENTAL" 6000))) (om-make-point 564 59) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "RT-OCTAVE" (quote rt-octave) (quote ((om-load-inputfun (quote input-funbox) "list of ratios" "FRAQ" (list 1/3 1 5/3)))) (om-make-point 333 157) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "FILTER-AC-INST" (quote filter-ac-inst) (quote ((om-load-inputfun (quote input-funbox) "list of notes (THIS OBJECT DON'T READ LISTS OF LIST" "NOTELIST" (list 6000 6530 7203 5049)) (om-load-inputfun (quote input-funbox) "Cents aproximation of the 12-DEO" "APPROX" 10) (om-load-inputfun (quote input-funbox) "aproximação de escala temperada 1/2 1/4 1/8 de tom" "TEMPERAMENT" 2))) (om-make-point 147 144) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 161 39) (om-make-point 44 28) 7200 "7200" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 101 41) (om-make-point 44 28) 6000 "6000" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MOS" (quote mos) (quote ((om-load-inputfun (quote input-funbox) "fundamental note of sobreposition" "RATIO" 4/3) (om-load-inputfun (quote input-funbox) "Just Intonation interval" "FUND" 6000) (om-load-inputfun (quote input-funbox) "high note" "AGUDA" 7200) (om-load-inputfun (quote input-funbox) "number of sobreposition" "SOBREPOSITION" 11))) (om-make-point 93 79) (om-make-point 78 58) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "DIAMOND" (quote diamond) (quote ((om-load-inputfun (quote input-funbox) "limit-n for the diamond" "LIMITE" 11))) (om-make-point 311 65) nil nil nil nil 2))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((4 0 0 0 nil 0) (2 0 3 0 nil 0) (1 0 3 1 nil 0) (9 0 4 0 nil 0) (8 0 5 0 nil 0) (7 0 8 1 nil 0) (6 0 8 2 nil 0))) nil 6.16))
