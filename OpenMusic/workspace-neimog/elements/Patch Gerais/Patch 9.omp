; OM File Header - Saved 2020/05/29 18:36:26
; (6.16 :patc (om-make-point 1090 10) (om-make-point 311 75) (om-make-point 662 616) "" 183 0 "2020/05/24 15:38:45" "2020/05/27 22:39:12")
; End File Header
; External resources 
; (list (list (quote :sound) "#P\"C:../in-files/africa.aiff\""))
(in-package :om)(load-lib-for (quote ("OM_ASX")))(setf *om-current-persistent* (om-load-patch1 "Patch 9" (quote ((let ((box (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 463 117) (om-make-point 68 28) "test.aiff" "\"test.aiff\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 344 127) (om-make-point 26 28) 6 "6" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 303 117) (om-make-point 26 28) 1 "1" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "africa.aiff" (quote sound) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "a track index for multichannel mixing (0 = no specific track)" "tracknum" 0) (om-load-inputfun (quote input-funbox) "a list of markers (s)" "markers" nil))) (om-make-point 89 19) (om-make-point 326 91) (let ((newobj (let ((thesound (load-sound (om-make-pathname :directory (quote (:relative "in-files")) :device nil :host "C" :name "africa" :type "aiff") 0 1.0 0))) (when thesound (setf (markers thesound) (quote nil))) thesound))) (load-port-info newobj (quote nil)) (init-mus-color newobj (quote nil)) (set-extra-pairs newobj (quote nil)) (set-patch-pairs newobj (quote nil)) (set-name newobj "africa.aiff") (set-tonalite newobj nil) newobj) "x" nil (pairlis (quote (scale show-stems notechancolor? cmnpref obj-mode deltapict show-spectrum winpos winsize mode grillestep zoom player inport outport)) (list nil (quote t) nil (let ((newobj (make-instance (quote edition-values)))) (setf (paper-size newobj) (om-make-point 600 800)) (setf (top-margin newobj) 2) (setf (left-margin newobj) 1) (setf (right-margin newobj) 1) (setf (bottom-margin newobj) 1) (setf (orientation newobj) nil) (setf (scale newobj) nil) (setf (system-space newobj) (quote (1))) (setf (system-color newobj) (quote nil)) (setf (line-space newobj) 1) (setf (title newobj) nil) (setf (show-title? newobj) nil) (setf (show-page? newobj) nil) (setf (sheet-id newobj) nil) (setf (page-mode newobj) nil) newobj) 0 (om-make-point 0 0) nil (om-make-point 400 20) (om-make-point 370 280) 0 nil 1 (quote :om-audio) nil nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "TIME-STRETCH" (quote asx::time-stretch) (quote ((om-load-inputfun (quote input-funbox) "soundfile" "SELF" nil) (om-load-inputfun (quote input-funbox) "begin" "BEGIN" 0) (om-load-inputfun (quote input-funbox) "end" "END" 1) (om-load-inputfun (quote input-funbox) "fftsize" "FFTSIZE" 4096) (om-load-inputfun (quote input-funbox) "windowsize" "WINDOWSIZE" 1024) (om-load-inputfunmenu1 (quote input-funmenu) "normalization" "NORMSWITCH" "no" (list (list "no" "no") (list "yes" "yes"))) (om-load-inputfun (quote input-funbox) "normalization factor" "NORMFACT" 1) (om-load-inputfun (quote input-funbox) "transient threshold" "TRANSIENT-THRESH" 1.4) (om-load-inputfun (quote input-funbox) "name for resulting soundfile" "OUT-NAME" "test.aiff") (om-load-inputfun (quote input-funbox) "value or path for parameterfile" "PARAM" nil))) (om-make-point 227 192) (om-make-point 322 66) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((3 0 4 0 nil 0) (2 0 4 1 nil 0) (1 0 4 2 nil 0) (0 0 4 8 nil 0))) nil 6.16))
