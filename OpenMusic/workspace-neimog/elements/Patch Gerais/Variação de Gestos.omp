; OM File Header - Saved 2020/01/31 16:46:22
; (6.15 :patc (om-make-point 228 561) (om-make-point 305 22) (om-make-point 641 554) "" 183 0 nil "2020/01/31 16:46:22")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "Variação de Gestos" (quote ((let ((box (om-load-boxin "input 3" 3 (om-make-point 240 142) "" nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "REPEAT-N" (quote repeat-n) (quote ((om-load-inputfun (quote input-funbox) "something" "SELF" nil) (om-load-inputfun (quote input-funbox) "times" "N" 0))) (om-make-point 337/2 385/2) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OM-RANDOM" (quote om-random) (quote ((om-load-inputfun (quote input-funbox) "min" "LOW" 0) (om-load-inputfun (quote input-funbox) "max" "HIGH" 1))) (om-make-point 287/2 245/2) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input 2" 2 (om-make-point 187 65) "" nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input" 1 (om-make-point 143 65) "" nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output 2" 0 (om-make-point 74 381) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "GESTO" 0 (om-make-point 64 41) "" "GESTO" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "SUBST-RHYTHM" (quote subst-rhythm) (quote ((om-load-inputfun (quote input-funbox) "a rhythm tree" "TREE" (list (quote ?) (list (list (quote |4//4|) (list 1 (list 1 (list 1 2 1 1)) 1 1)) (list (quote |4//4|) (list 1 (list 1 (list 1 2 1 1)) -1 1))))) (om-load-inputfun (quote input-funbox) "list of positions" "POS" nil) (om-load-inputfun (quote input-funbox) "list of new items" "ELEM" (list 1 2)))) (om-make-point 19 207) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((2 0 1 0 nil 0) (0 0 1 1 nil 0) (4 0 2 0 nil 0) (3 0 2 1 nil 0) (7 0 5 0 nil 0) (6 0 7 0 nil 0) (1 0 7 2 nil 0))) nil 6.15))