; OM File Header - Saved 2020/11/18 23:49:56
; (6.120003 :patc (om-make-point 199 515) (om-make-point 529 66) (om-make-point 1140 962) "" 183 0 nil "2020/11/18 23:49:25")
; End File Header
(in-package :om)(load-lib-for (quote ("OMCollider")))(setf *om-current-persistent* (om-load-patch1 "Comb" (quote ((let ((box (om-load-boxcall (quote genfun) "SYNTHESIZER" (quote omsc::synthesizer) (quote ((om-load-inputfun (quote input-funbox) "" "DATA" nil))) (om-make-point 514 823) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "LFNOISE1_KR 2" (quote omsc::lfnoise1_kr) (quote ((om-load-inputfun (quote input-funbox) "" "FREQ" 0.1) (om-load-inputfun (quote input-funbox) "" "MUL" (list 1)) (om-load-inputfun (quote input-funbox) "" "ADD" (list 0)))) (om-make-point 926 207) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "LFNOISE1_KR 3" (quote omsc::lfnoise1_kr) (quote ((om-load-inputfun (quote input-funbox) "" "FREQ" 0.5) (om-load-inputfun (quote input-funbox) "" "MUL" (list 1)) (om-load-inputfun (quote input-funbox) "" "ADD" (list 0)))) (om-make-point 694 228) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 100 60) (quote "Mix Sample + Comb Fx") "" (om-make-point 145 410) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 7" (quote list) (quote nil) (om-make-point 1071 319) (om-make-point 38 30) 0.1 "0.1" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 6" (quote list) (quote nil) (om-make-point 1003 320) (om-make-point 42 30) 0.001 "0.001" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "EXPRANGE 2" (quote omsc::exprange) (quote ((om-load-inputfun (quote input-funbox) "" "IN" 0.001) (om-load-inputfun (quote input-funbox) "" "MIN" 1.0E-4) (om-load-inputfun (quote input-funbox) "" "MAX" nil))) (om-make-point 972 356) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "A+B" (quote omsc::a+b) (quote ((om-load-inputfun (quote input-funbox) "" "A" nil) (om-load-inputfun (quote input-funbox) "" "B" nil))) (om-make-point 252 427) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "LFDNOISE3_KR" (quote omsc::lfdnoise3_kr) (quote ((om-load-inputfun (quote input-funbox) "" "FREQ" 1) (om-load-inputfun (quote input-funbox) "" "MUL" (list 1)) (om-load-inputfun (quote input-funbox) "" "ADD" (list 0)))) (om-make-point 450 611) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 4" (quote list) (quote nil) (om-make-point 827 347) (om-make-point 28 30) 0.2 "0.2" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 3" (quote list) (quote nil) (om-make-point 759 348) (om-make-point 42 30) 0.001 "0.001" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "EXPRANGE" (quote omsc::exprange) (quote ((om-load-inputfun (quote input-funbox) "" "IN" 0.001) (om-load-inputfun (quote input-funbox) "" "MIN" 1.0E-4) (om-load-inputfun (quote input-funbox) "" "MAX" nil))) (om-make-point 728 384) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "COMBC" (quote omsc::combc) (quote ((om-load-inputfun (quote input-funbox) "" "IN" 0) (om-load-inputfun (quote input-funbox) "" "MAXDELAYTIME" 0.2) (om-load-inputfun (quote input-funbox) "" "DELAYTIME" 0.2) (om-load-inputfun (quote input-funbox) "" "DECAYTIME" 1) (om-load-inputfun (quote input-funbox) "" "MUL" 1) (om-load-inputfun (quote input-funbox) "" "ADD" 0))) (om-make-point 851 495) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 5" (quote list) (quote nil) (om-make-point 73 60) (om-make-point 95 45) "/Applications/SuperCollider/SuperCollider.app/Contents/Resources/sounds/a11wlk01.wav" "\"/Applications/SuperCollider/SuperCollider.app/Contents/Resources/sounds/a11wlk01.wav\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list 2" (quote list) (quote nil) (om-make-point 498 121) (om-make-point 17 30) 1 "1" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 100 60) (quote "Loop = 1 (normal playback)") "" (om-make-point 471 52) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "GUI" (quote omsc::gui) (quote ((om-load-inputfun (quote input-funbox) "" "IN" nil))) (om-make-point 429 742) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "PAN2_AR" (quote omsc::pan2_ar) (quote ((om-load-inputfun (quote input-funbox) "" "IN" 0) (om-load-inputfun (quote input-funbox) "" "POS" 0) (om-load-inputfun (quote input-funbox) "" "LEVEL" 0.3))) (om-make-point 348 628) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 100 60) (quote "velocità di lettura") "" (om-make-point 336 39) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "FUNCTION-PLAY" (quote omsc::function-play) (quote ((om-load-inputfun (quote input-funbox) "" "IN" nil))) (om-make-point 293 698) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MOUSE-X" (quote omsc::mouse-x) (quote ((om-load-inputfun (quote input-funbox) "" "MINVAL" 0.5) (om-load-inputfun (quote input-funbox) "" "MAXVAL" 2) (om-load-inputfun (quote input-funbox) "" "WARP" 2) (om-load-inputfun (quote input-funbox) "" "LAG" 0.2))) (om-make-point 341 106) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "PLAYBUF" (quote omsc::playbuf) (quote ((om-load-inputfun (quote input-funbox) "" "NUMCHANNELS" 1) (om-load-inputfun (quote input-funbox) "" "BUFNUM" "k") (om-load-inputfun (quote input-funbox) "" "RATE" 1) (om-load-inputfun (quote input-funbox) "" "TRIGGER" 1) (om-load-inputfun (quote input-funbox) "" "STARTPOS" 0) (om-load-inputfun (quote input-funbox) "" "LOOP" 1) (om-load-inputfun (quote input-funbox) "" "DONEACTION" 2))) (om-make-point 332 266) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "BUFFER-READ" (quote omsc::buffer-read) (quote ((om-load-inputfun (quote input-funbox) "" "FILENAME" nil))) (om-make-point 215 136) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((16 0 0 0 nil 0) (1 0 6 0 nil 0) (5 0 6 1 nil 0) (4 0 6 2 nil 0) (21 0 7 0 nil 0) (12 0 7 1 nil 0) (2 0 11 0 nil 0) (10 0 11 1 nil 0) (9 0 11 2 nil 0) (21 0 12 0 nil 0) (6 0 12 1 nil 0) (11 0 12 2 nil 0) (19 0 16 0 nil 0) (7 0 17 0 nil 0) (8 0 17 1 nil 0) (17 0 19 0 nil 0) (22 0 21 1 nil 0) (20 0 21 2 nil 0) (14 0 21 5 nil 0) (13 0 22 0 nil 0))) nil 6.120003))
