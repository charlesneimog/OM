; OM File Header - Saved 2021/09/02 0:15:06
; (6.070004 :patc (om-make-point 30 17) (om-make-point 223 70) (om-make-point 1076 804) "" 183 0 nil "2021/09/02 0:15:06")
; End File Header
(in-package :om)(load-lib-for (quote ("OM-SoX")))(setf *om-current-persistent* (om-load-patch1 "1-file-io" (quote ((om-load-boxcall (quote genfun) "IN-DIRECTORY" (quote in-directory) (quote nil) (om-make-point 466 75) nil nil "x" nil 1) (om-load-boxcall (quote genfun) "OUT-FILE" (quote out-file) (quote nil) (om-make-point 270 74) nil (list nil) "x" nil 1) (om-load-boxcomment "comment 3" (om-make-point 335 32) (quote "You can use OM's built-in graphical user interfaces") "" (om-make-point 88 363) nil (om-make-color 0.02832079 0.0 1.0) (om-make-font "Lucida Sans" 13.0 :family "Lucida Sans" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote genfun) "SOX-PROCESS" (quote sox-process) (quote ((om-load-inputfun (quote input-funbox) "" "INPUT" nil) (om-load-inputfun (quote input-funbox) "" "COMMANDS" "") (om-load-inputkeyword (quote input-keyword) "" "output" (quote :output) "realtime" (list (list "realtime" "realtime") (list "new file" nil) (list "replace file" "replace file") (list "pipe" "pipe"))))) (om-make-point 686 683) nil nil nil nil 1) (om-load-boxcall (quote genfun) "SOX-PROCESS" (quote sox-process) (quote ((om-load-inputfun (quote input-funbox) "" "INPUT" nil) (om-load-inputfun (quote input-funbox) "" "COMMANDS" "") (om-load-inputkeyword (quote input-keyword) "Output type (new file, replace file, pipe, or realtime) [string]. Also accepts directory, filename, filepath [path]" "output" (quote :output) "realtime" (list (list "new file" nil) (list "replace file" "replace file") (list "pipe" "pipe") (list "realtime" "realtime"))))) (om-make-point 107 590) nil nil nil nil 1) (om-load-boxcomment "comment 10" (om-make-point 272 24) (quote "...or specify a selection of files via the multi-item-list") "" (om-make-point 589 419) nil (om-make-color 0.02832079 0.0 1.0) (om-make-font "Lucida Sans" 10 :family "Lucida Sans" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux 14" (quote t) (quote nil) (om-make-point 689 456) (om-make-point 44 30) "aif" "\"aif\"" nil) (om-load-boxcall (quote genfun) "IN-FILES" (quote in-files) (quote ((om-load-inputkeyword (quote input-keyword) "" "type" (quote :type) nil nil))) (om-make-point 686 491) nil (list (list (om-make-pathname :directory (quote (:absolute "Applications" "Max 6.1" "examples" "sounds")) :device :unspecific :host :unspecific :name "anton" :type "aif") (om-make-pathname :directory (quote (:absolute "Applications" "Max 6.1" "examples" "sounds")) :device :unspecific :host :unspecific :name "cello-f2" :type "aif") (om-make-pathname :directory (quote (:absolute "Applications" "Max 6.1" "examples" "sounds")) :device :unspecific :host :unspecific :name "cherokee" :type "aif") (om-make-pathname :directory (quote (:absolute "Applications" "Max 6.1" "examples" "sounds")) :device :unspecific :host :unspecific :name "drumLoop" :type "aif") (om-make-pathname :directory (quote (:absolute "Applications" "Max 6.1" "examples" "sounds")) :device :unspecific :host :unspecific :name "jongly" :type "aif") (om-make-pathname :directory (quote (:absolute "Applications" "Max 6.1" "examples" "sounds")) :device :unspecific :host :unspecific :name "rainstick" :type "aif") (om-make-pathname :directory (quote (:absolute "Applications" "Max 6.1" "examples" "sounds")) :device :unspecific :host :unspecific :name "sho0630" :type "aif") (om-make-pathname :directory (quote (:absolute "Applications" "Max 6.1" "examples" "sounds")) :device :unspecific :host :unspecific :name "vibes-a1" :type "aif"))) "x" nil 1) (om-load-boxcall (quote bastype) "aux 13" (quote t) (quote nil) (om-make-point 100 188) (om-make-point 38 30) "aif" "\"aif\"" nil) (om-load-boxcall (quote bastype) "aux 12" (quote t) (quote nil) (om-make-point 50 188) (om-make-point 27 30) nil "nil" nil) (om-load-boxcall (quote bastype) "aux 11" (quote t) (quote nil) (om-make-point 142 188) (om-make-point 18 30) (quote t) "t" nil) (om-load-boxcall (quote bastype) "aux 10" (quote t) (quote nil) (om-make-point 163 188) (om-make-point 18 30) (quote t) "t" nil) (om-load-boxcall (quote bastype) "aux 9" (quote t) (quote nil) (om-make-point 189 188) (om-make-point 27 30) nil "nil" nil) (om-load-boxcall (quote bastype) "aux 8" (quote t) (quote nil) (om-make-point 225 189) (om-make-point 27 30) nil "nil" nil) (om-load-boxcall (quote genfun) "IN-FILES 4" (quote in-files) (quote ((om-load-inputkeyword (quote input-keyword) "" "unix" (quote :unix) nil nil) (om-load-inputkeyword (quote input-keyword) "" "type" (quote :type) nil nil) (om-load-inputkeyword (quote input-keyword) "" "directories" (quote :directories) nil nil) (om-load-inputkeyword (quote input-keyword) "" "files" (quote :files) nil nil) (om-load-inputkeyword (quote input-keyword) "" "resolve-aliases" (quote :resolve-aliases) nil nil) (om-load-inputkeyword (quote input-keyword) "" "hidden-files" (quote :hidden-files) nil nil))) (om-make-point 69 225) (om-make-point 151 57) nil "x" nil 1) (om-load-boxcall (quote genfun) "IN-FILE" (quote in-file) (quote nil) (om-make-point 107 76) nil (list nil) "x" nil 1) (om-load-boxcomment "comment 5" (om-make-point 201 24) (quote "choose a file from the drop-down menu") "" (om-make-point 185 470) nil (om-make-color 0.02832079 0.0 1.0) (om-make-font "Lucida Sans" 10 :family "Lucida Sans" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment 3" (om-make-point 287 24) (quote "-> returns a list of files contained in a folder on your disk") "" (om-make-point 248 239) nil (om-make-color 0.02832079 0.0 1.0) (om-make-font "Lucida Sans" 10 :family "Lucida Sans" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment 4" (om-make-point 157 24) (quote "specify a new directory on disk") "" (om-make-point 611 48) nil (om-make-color 0.02832079 0.0 1.0) (om-make-font "Lucida Sans" 10 :family "Lucida Sans" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment 2" (om-make-point 157 24) (quote "choose a directory from disk") "" (om-make-point 430 49) nil (om-make-color 0.02832079 0.0 1.0) (om-make-font "Lucida Sans" 10 :family "Lucida Sans" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment 9" (om-make-point 121 24) (quote "choose a file from disk") "" (om-make-point 71 48) nil (om-make-color 0.02832079 0.0 1.0) (om-make-font "Lucida Sans" 10 :family "Lucida Sans" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 157 24) (quote "specify a newfilename on disk") "" (om-make-point 223 48) nil (om-make-color 0.02832079 0.0 1.0) (om-make-font "Lucida Sans" 10 :family "Lucida Sans" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote genfun) "IN-FILES 3" (quote in-files) (quote ((om-load-inputkeyword (quote input-keyword) "" "type" (quote :type) nil nil))) (om-make-point 132 444) nil (list (list (om-make-pathname :directory (quote (:absolute "Applications" "Max 6.1" "examples" "sounds")) :device :unspecific :host :unspecific :name "anton" :type "aif") (om-make-pathname :directory (quote (:absolute "Applications" "Max 6.1" "examples" "sounds")) :device :unspecific :host :unspecific :name "cello-f2" :type "aif") (om-make-pathname :directory (quote (:absolute "Applications" "Max 6.1" "examples" "sounds")) :device :unspecific :host :unspecific :name "cherokee" :type "aif") (om-make-pathname :directory (quote (:absolute "Applications" "Max 6.1" "examples" "sounds")) :device :unspecific :host :unspecific :name "drumLoop" :type "aif") (om-make-pathname :directory (quote (:absolute "Applications" "Max 6.1" "examples" "sounds")) :device :unspecific :host :unspecific :name "jongly" :type "aif") (om-make-pathname :directory (quote (:absolute "Applications" "Max 6.1" "examples" "sounds")) :device :unspecific :host :unspecific :name "rainstick" :type "aif") (om-make-pathname :directory (quote (:absolute "Applications" "Max 6.1" "examples" "sounds")) :device :unspecific :host :unspecific :name "sho0630" :type "aif") (om-make-pathname :directory (quote (:absolute "Applications" "Max 6.1" "examples" "sounds")) :device :unspecific :host :unspecific :name "vibes-a1" :type "aif"))) "x" nil 1) (om-load-boxcall (quote bastype) "aux 7" (quote t) (quote nil) (om-make-point 135 410) (om-make-point 44 30) "aif" "\"aif\"" nil) (om-load-boxcall (quote genfun) "OUT-DIRECTORY" (quote out-directory) (quote nil) (om-make-point 644 78) nil nil "x" nil 1) (om-load-editor-box1 "POP-UP-MENU" (quote pop-up-menu) (quote ((om-load-inputfun (quote input-funbox) "list of choices" "items" (list "yes" "no")) (om-load-inputfun (quote input-funbox) "a function or box in lambda mode" "action" nil))) (om-make-point 66 515) (om-make-point 168 50) (let ((rep (om-make-dialog-item (quote pop-up-menu) (om-make-point 1 1) (om-make-point 148 24) "untitled" :range (quote (#P"/Applications/Max 6.1/examples/sounds/anton.aif" #P"/Applications/Max 6.1/examples/sounds/cello-f2.aif" #P"/Applications/Max 6.1/examples/sounds/cherokee.aif" #P"/Applications/Max 6.1/examples/sounds/drumLoop.aif" #P"/Applications/Max 6.1/examples/sounds/jongly.aif" #P"/Applications/Max 6.1/examples/sounds/rainstick.aif" #P"/Applications/Max 6.1/examples/sounds/sho0630.aif" #P"/Applications/Max 6.1/examples/sounds/vibes-a1.aif"))))) (om-set-selected-item-index rep (quote 0)) rep) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil) (om-load-editor-box1 "MULTI-ITEM-LIST" (quote multi-item-list) (quote ((om-load-inputfun (quote input-funbox) "list of choices" "items" (list "uno" "dos" "tres" "cuatro")))) (om-make-point 499 547) (om-make-point 416 115) (let ((rep (om-make-dialog-item (quote multi-item-list) (om-make-point 1 1) (om-make-point 400 82) "untitled" :range (quote ("/Applications/Max 6.1/examples/sounds/anton.aif" "/Applications/Max 6.1/examples/sounds/cello-f2.aif" "/Applications/Max 6.1/examples/sounds/cherokee.aif" "/Applications/Max 6.1/examples/sounds/drumLoop.aif" "/Applications/Max 6.1/examples/sounds/jongly.aif" "/Applications/Max 6.1/examples/sounds/rainstick.aif" "/Applications/Max 6.1/examples/sounds/sho0630.aif" "/Applications/Max 6.1/examples/sounds/vibes-a1.aif"))))) (om-set-selected-item-index rep (quote (6))) (setf (di-data rep) (quote (#P"/Applications/Max 6.1/examples/sounds/anton.aif" #P"/Applications/Max 6.1/examples/sounds/cello-f2.aif" #P"/Applications/Max 6.1/examples/sounds/cherokee.aif" #P"/Applications/Max 6.1/examples/sounds/drumLoop.aif" #P"/Applications/Max 6.1/examples/sounds/jongly.aif" #P"/Applications/Max 6.1/examples/sounds/rainstick.aif" #P"/Applications/Max 6.1/examples/sounds/sho0630.aif" #P"/Applications/Max 6.1/examples/sounds/vibes-a1.aif"))) rep) "x" nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil))) (quote ((26 0 3 0 nil 0) (25 1 4 0 nil 0) (6 0 7 0 nil 0) (23 0 22 0 nil 0) (22 0 25 0 nil 0) (7 0 26 0 nil 0))) nil 6.070004))
