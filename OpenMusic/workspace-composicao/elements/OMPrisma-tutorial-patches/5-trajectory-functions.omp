; OM File Header - Saved 2021/09/08 16:49:52
; (6.19 :patc (om-make-point 137 173) (om-make-point 50 50) (om-make-point 1328 762) "" 183 0 nil "2021/09/08 16:49:51")
; End File Header
(in-package :om)(load-lib-for (quote ("OMPrisma")))(setf *om-current-persistent* (om-load-patch1 "5-trajectory-functions" (quote ((let ((box (om-load-boxcomment "comment1112" (om-make-point 91 28) (quote "...they can be...") "" (om-make-point 559 130) nil (om-make-color 0.02832079 0.0 1.0) (om-make-font "Arial" 12 :family "Arial" :style (quote (:italic)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "3DC13" (quote 3dc) (quote ((om-load-inputfun (quote input-funbox) "object" "SELF" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "X-POINTS" (list 0 10)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "Y-POINTS" (list 0 100)) (om-load-inputfun (quote input-funbox) "Z coordinates (list)" "Z-POINTS" (list 0 0)) (om-load-inputfun (quote input-funbox) "precision (number)" "DECIMALS" 0))) (om-make-point 145 475) (om-make-point 60 60) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (0.0 47.0 18.0 68.0 43.0 83.0 100.0 117.00001)) (quote (0.0 32.0 12.0 100.0 100.0 100.0 100.0 100.0)) (quote (0.0 87.0 92.0 93.0 84.0 24.0 14.0 75.0)) (quote 3dc) 10))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf "3DC13") newbpf)))) (when newobj (setf (z-points newobj) (list 0.0 87.0 92.0 93.0 84.0 24.0 14.0 75.0))) newobj) "x" nil (pairlis (quote (room-size show-room show-axes bg-color line-width winsize winpos mode picture)) (list 2 1 1 nil 1.0 (om-make-point 602 449) (om-make-point 994 436) 0 nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "3DC121" (quote 3dc) (quote ((om-load-inputfun (quote input-funbox) "object" "SELF" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "X-POINTS" (list 0 10)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "Y-POINTS" (list 0 100)) (om-load-inputfun (quote input-funbox) "Z coordinates (list)" "Z-POINTS" (list 0 0)) (om-load-inputfun (quote input-funbox) "precision (number)" "DECIMALS" 0))) (om-make-point 63 490) (om-make-point 60 60) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (0.0 2.0 4.0 5.0 6.0 6.0 6.0 5.0 3.0 0.0 -3.0 -8.0 -12.0 -17.0 -21.0 -26.0 -30.0 -33.0 -36.0 -37.0 -38.0 -36.0 -34.0 -30.0 -24.0 -17.0 -9.0 0.0 10.0 20.0 30.0 40.0 49.0 57.0 64.0 69.0 72.0 73.0 71.0 68.0 61.0 53.0 42.0 29.0 15.0 0.0 -16.0 -32.0 -48.0 -63.0 -77.0 -88.0 -98.0 -104.0 -108.0 -108.0 -105.0 -99.0 -89.0 -76.0 -60.0 -42.0 -22.0 0.0 22.0 44.0 66.0 86.0 104.0 120.0 132.0 140.0 144.0 144.0 139.0 130.0 116.0 99.0 78.0 54.0 28.0 0.0 -28.0 -57.0 -84.0 -109.0 -132.0 -151.0 -165.0 -175.0 -180.0 -179.0 -173.0 -161.0 -144.0 -122.0 -96.0 -66.0 -34.0 0.0 35.0 69.0 102.0 132.0 159.0 182.0 199.0 211.0 216.0 215.0 207.0 192.0 172.0 145.0 114.0 79.0 40.0 0.0 -41.0 -81.0 -120.0 -156.0 -187.0 -213.0 -233.0 -246.0 -252.0 -250.0 -241.0 -223.0 -199.0 -168.0 -132.0 -91.0 -47.0 0.0 47.0 94.0 138.0 179.0 214.0 244.0 267.0 282.0 288.0 286.0 274.0 255.0 227.0 192.0 150.0 103.0 53.0 0.0 -53.0 -106.0 -156.0 -202.0 -242.0 -275.0 -301.0 -317.0 -324.0 -321.0 -308.0 -286.0 -254.0 -215.0 -168.0 -116.0 -59.0 0.0 60.0 118.0 174.0 225.0 270.0 307.0 335.0 353.0 360.0)) (quote (0.0 2.0 4.0 6.0 8.0 10.0 12.0 14.0 16.0 18.0 20.0 22.0 24.0 26.0 28.0 30.0 32.0 34.0 36.0 38.0 40.0 42.0 44.0 46.0 48.0 50.0 52.0 54.0 56.0 58.0 60.0 62.0 64.0 66.0 68.0 70.0 72.0 74.0 76.0 78.0 80.0 82.0 84.0 86.0 88.0 90.0 92.0 94.0 96.0 98.0 100.0 102.0 104.0 106.0 108.0 110.0 112.0 114.0 116.0 118.0 120.0 122.0 124.0 126.0 128.0 130.0 132.0 134.0 136.0 138.0 140.0 142.0 144.0 146.0 148.0 150.0 152.0 154.0 156.0 158.0 160.0 162.0 164.0 166.0 168.0 170.0 172.0 174.0 176.0 178.0 180.0 182.0 184.0 186.0 188.0 190.0 192.0 194.0 196.0 198.0 200.0 202.0 204.0 206.0 208.0 210.0 212.0 214.0 216.0 218.0 220.0 222.0 224.0 226.0 228.0 230.0 232.0 234.0 236.0 238.0 240.0 242.0 244.0 246.0 248.0 250.0 252.0 254.0 256.0 258.0 260.0 262.0 264.0 266.0 268.0 270.0 272.0 274.0 276.0 278.0 280.0 282.0 284.0 286.0 288.0 290.0 292.0 294.0 296.0 298.0 300.0 302.0 304.0 306.0 308.0 310.0 312.0 314.0 316.0 318.0 320.0 322.0 324.0 326.0 328.0 330.0 332.0 334.0 336.0 338.0 340.0 342.0 344.0 346.0 348.0 350.0 352.0 354.0 356.0 358.0 360.0)) (quote (0.0 0.0 1.0 3.0 5.0 8.0 10.0 13.0 16.0 18.0 20.0 21.0 21.0 20.0 18.0 15.0 11.0 6.0 0.0 -7.0 -14.0 -21.0 -28.0 -35.0 -42.0 -47.0 -51.0 -54.0 -55.0 -55.0 -52.0 -47.0 -41.0 -33.0 -23.0 -12.0 0.0 13.0 26.0 39.0 51.0 63.0 73.0 81.0 87.0 90.0 91.0 88.0 83.0 75.0 64.0 51.0 36.0 18.0 0.0 -19.0 -38.0 -57.0 -75.0 -90.0 -104.0 -115.0 -122.0 -126.0 -126.0 -122.0 -114.0 -103.0 -87.0 -69.0 -48.0 -25.0 0.0 25.0 51.0 75.0 98.0 118.0 135.0 148.0 158.0 162.0 162.0 156.0 145.0 130.0 111.0 87.0 60.0 31.0 0.0 -32.0 -59.0 -93.0 -121.0 -146.0 -166.0 -182.0 -193.0 -198.0 -197.0 -190.0 -177.0 -158.0 -134.0 -105.0 -73.0 -37.0 0.0 38.0 75.0 111.0 144.0 173.0 197.0 216.0 228.0 234.0 232.0 224.0 208.0 185.0 157.0 123.0 85.0 43.0 0.0 -44.0 -88.0 -129.0 -167.0 -201.0 -229.0 -250.0 -264.0 -270.0 -268.0 -257.0 -239.0 -213.0 -180.0 -141.0 -97.0 -50.0 0.0 50.0 100.0 147.0 190.0 232.0 260.0 284.0 299.0 306.0 303.0 291.0 270.0 241.0 203.0 159.0 109.0 56.0 0.0 -57.0 -112.0 -165.0 -213.0 -256.0 -291.0 -318.0 -335.0 -342.0 -339.0 -325.0 -301.0 -268.0 -226.0 -177.0 -122.0 -62.0 0.0)) (quote 3dc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf "3DC121") newbpf)))) (when newobj (setf (z-points newobj) (list 0.0 0.0 1.0 3.0 5.0 8.0 10.0 13.0 16.0 18.0 20.0 21.0 21.0 20.0 18.0 15.0 11.0 6.0 0.0 -7.0 -14.0 -21.0 -28.0 -35.0 -42.0 -47.0 -51.0 -54.0 -55.0 -55.0 -52.0 -47.0 -41.0 -33.0 -23.0 -12.0 0.0 13.0 26.0 39.0 51.0 63.0 73.0 81.0 87.0 90.0 91.0 88.0 83.0 75.0 64.0 51.0 36.0 18.0 0.0 -19.0 -38.0 -57.0 -75.0 -90.0 -104.0 -115.0 -122.0 -126.0 -126.0 -122.0 -114.0 -103.0 -87.0 -69.0 -48.0 -25.0 0.0 25.0 51.0 75.0 98.0 118.0 135.0 148.0 158.0 162.0 162.0 156.0 145.0 130.0 111.0 87.0 60.0 31.0 0.0 -32.0 -59.0 -93.0 -121.0 -146.0 -166.0 -182.0 -193.0 -198.0 -197.0 -190.0 -177.0 -158.0 -134.0 -105.0 -73.0 -37.0 0.0 38.0 75.0 111.0 144.0 173.0 197.0 216.0 228.0 234.0 232.0 224.0 208.0 185.0 157.0 123.0 85.0 43.0 0.0 -44.0 -88.0 -129.0 -167.0 -201.0 -229.0 -250.0 -264.0 -270.0 -268.0 -257.0 -239.0 -213.0 -180.0 -141.0 -97.0 -50.0 0.0 50.0 100.0 147.0 190.0 232.0 260.0 284.0 299.0 306.0 303.0 291.0 270.0 241.0 203.0 159.0 109.0 56.0 0.0 -57.0 -112.0 -165.0 -213.0 -256.0 -291.0 -318.0 -335.0 -342.0 -339.0 -325.0 -301.0 -268.0 -226.0 -177.0 -122.0 -62.0 0.0))) newobj) "x" nil (pairlis (quote (room-size show-room show-axes bg-color line-width winsize winpos mode picture)) (list 2 1 1 nil 1.0 (om-make-point 602 449) (om-make-point 909 325) 0 nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment2" (om-make-point 89 28) (quote "...in 2d or 3d...") "" (om-make-point 230 487) nil (om-make-color 0.02832079 0.0 1.0) (om-make-font "Arial" 12 :family "Arial" :style (quote (:italic)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPC111" (quote bpc) (quote ((om-load-inputfun (quote input-funbox) "object" "SELF" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "X-POINTS" (list 0 10)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "Y-POINTS" (list 0 100)) (om-load-inputfun (quote input-funbox) "precision (integer)" "DECIMALS" 0))) (om-make-point 1156 493) (om-make-point 92 105) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (2.0 2.3363762 2.5931547 2.7703345 2.867916 2.8858993 2.8242843 2.6830712 2.4622593 2.1618495 1.7818414 1.3287748 0.8738858 0.436685 0.0171728 -0.384651 -0.7687862 -1.135233 -1.4839914 -1.815061 -2.1284423 -2.4241352 -2.6851332 -2.8674443 -2.9688194 -2.9892586 -2.928762 -2.7873292 -2.5649605 -2.2616558 -1.8774152 -1.4122388 -0.8667224 -0.3112255 0.2059553 0.68482 1.1253692 1.527602 1.891519 2.21712 2.504405 2.753374 2.964027 3.1339939 3.2469726 3.2998686 3.2926812 3.225411 3.0980578 2.9106214 2.6631022 2.3555 1.9878146 1.5600462 1.099195 0.6549412 0.2283648 -0.1805342 -0.5717557 -0.9452998 -1.3011664 -1.6393554 -1.9598672 -2.2627013 -2.5466562 -2.7720614 -2.919681 -2.9895163 -2.981566 -2.895831 -2.732311 -2.4910057 -2.1719156 -1.77504 -1.3003798 -0.7663666 -0.258607 0.2121177 0.6458071 1.0424614 1.4020804 1.724664 2.0102125 2.2587262 2.4702039 2.644647 2.7742973 2.8491378 2.8691292 2.8342724 2.744567 2.6000123 2.400609 2.1463573 1.8372564 1.473307 1.0574206 0.635556 0.2235758 -0.17852 -0.5707312 -0.9530582 -1.3255006 -1.6880589 -2.0407324 -2.3835216 -2.7164262 -3.0224958 -3.2466245 -3.3845716 -3.4363377 -3.4019213 -3.2813235 -3.074544 -2.781583 -2.4024403 -1.9371156 -1.385677 -0.8130207 -0.2761403 0.2249642 0.6902928 1.1198456 1.5136227 1.8716236 2.1938486 2.480298 2.7309718 2.9437144 3.0985847 3.1907277 3.220145 3.1868353 3.0908003 2.9320383 2.7105503 2.4263358 2.0793953 1.6697284 1.2194644 0.779747 0.3526288 -0.0618901 -0.4638098 -0.8531302 -1.2298513 -1.593973 -1.9454956 -2.2844186 -2.6100958 -2.8776274 -3.059606 -3.156031 -3.1669026 -3.0922213 -2.9319864 -2.6861983 -2.354857 -1.937962 -1.435514 -0.8626284 -0.3100617 0.2070495 0.6887048 1.1349046 1.5456486 1.920937 2.2607699 2.5651472 2.8340688 3.0675347 3.2544654 3.3766823 3.4339245 3.426192 3.353485 3.2158027 3.0131462 2.7455149 2.412909 2.0153282 1.5549198 1.085317 0.6297531 0.1882277 -0.239259 -0.652707 -1.0521166 -1.4374874 -1.8088197 -2.166113 -2.509368 -2.8250008 -3.0571256 -3.1996944 -3.2527075 -3.2161649 -3.090066 -2.8744114 -2.5692008 -2.1744347 -1.6901124 -1.1162342 -0.514685 0.0439783 0.5596812 1.0324236 1.4622052 1.8490265 2.192887 2.4937873 2.7517269 2.9667058 3.137884 3.2543209 3.3126474 3.3128636 3.2549692 3.1389644 2.964849 2.7326238 2.4422877 2.0938416 1.6872846 1.2408314 0.8073122 0.3900815 -0.0108607 -0.3955146 -0.7638802 -1.1159574 -1.4517462 -1.7712466 -2.0744589 -2.361252 -2.5983084 -2.7597893 -2.845695 -2.8560248 -2.790779 -2.6499586 -2.4335623 -2.1415904 -1.774043 -1.3309206 -0.8224477 -0.3299293 0.129106 0.5546578 0.9467264 1.3053116 1.6304138 1.9220324 2.1801677 2.40482 2.5959888 2.7463384 2.84072 2.8786745 2.8602012 2.7853005 2.653972 2.4662159 2.2220316 1.9214205 1.5643814 1.1519344 0.7311648 0.3276923 -0.058483 -0.4273612 -0.7789426 -1.1132268 -1.4302138 -1.7299036 -2.0122967 -2.2773924 -2.5174246 -2.6914404 -2.7934764 -2.823533 -2.7816098 -2.667707 -2.4818244 -2.2239619 -1.8941202 -1.4922989 -1.0184974 -0.5144755 -0.0411491 0.4009626 0.8118595 1.191541 1.5400078 1.8572594 2.1432963 2.398118 2.6217249 2.813095 2.9521904 3.0312538 3.0502854 3.009285 2.908253 2.747189 2.5260933 2.2449658 1.9038062 1.502615 1.0531384 0.5983212 0.1421155 -0.3154791 -0.7744625 -1.234835 -1.6965962 -2.1597462 -2.6242853 -3.090213 -3.5577293)) (quote (-4.0 -2.9201167 -1.9375204 -1.0522106 -0.2641877 0.4265486 1.019998 1.5161606 1.9150364 2.2166257 2.4209276 2.5309158 2.5789693 2.5739577 2.5158804 2.4047377 2.2405296 2.0232559 1.7529166 1.429512 1.0530422 0.6235065 0.1612159 -0.2812915 -0.701329 -1.098897 -1.4739952 -1.8266236 -2.1567824 -2.4644714 -2.7496908 -3.0124405 -3.2524517 -3.4380064 -3.5473333 -3.580432 -3.5373028 -3.417946 -3.2223604 -2.9505468 -2.6025055 -2.1782365 -1.6777386 -1.114216 -0.5784638 -0.0877236 0.3580048 0.7587214 1.1144264 1.4251196 1.6908012 1.9114713 2.087129 2.2177756 2.3014283 2.3344403 2.316732 2.2483034 2.1291552 1.9592866 1.738698 1.4673894 1.1453608 0.7726118 0.3506229 -0.0717592 -0.4708492 -0.8466474 -1.199154 -1.5283682 -1.834291 -2.1169217 -2.3762605 -2.6123076 -2.8250625 -3.0067916 -3.1215747 -3.1648877 -3.136731 -3.037104 -2.8660074 -2.6234405 -2.3094035 -1.9238968 -1.46692 -0.9384732 -0.3880102 0.1206116 0.5871424 1.0115824 1.393931 1.7341886 2.032355 2.2884307 2.5024152 2.6743083 2.803315 2.8768759 2.8906558 2.8446553 2.738874 2.5733116 2.347969 2.0628457 1.7179412 1.3132566 0.8487912 0.3457018 -0.1272318 -0.564716 -0.966751 -1.3333368 -1.6644738 -1.9601609 -2.220399 -2.445188 -2.6345277 -2.7884052 -2.8942669 -2.941087 -2.9288662 -2.857604 -2.727301 -2.5379565 -2.289571 -1.9821442 -1.6156767 -1.1901674 -0.713323 -0.2564586 0.1630708 0.5452651 0.8901246 1.1976493 1.4678387 1.7006933 1.896213 2.0543976 2.1752472 2.2541712 2.280559 2.253985 2.174449 2.0419514 1.8564916 1.61807 1.3266866 0.982341 0.5850336 0.1354784 -0.3167899 -0.7415336 -1.1387518 -1.5084448 -1.850613 -2.1652558 -2.4523738 -2.7119665 -2.9440344 -3.1485768 -3.3203502 -3.427868 -3.4658792 -3.4343832 -3.3333807 -3.1628707 -2.9228537 -2.6133304 -2.2343 -1.7857626 -1.2677184 -0.7222992 -0.2186267 0.2423034 0.660492 1.0359386 1.3686428 1.6586056 1.9058265 2.110305 2.2720418 2.3907497 2.4592555 2.4744525 2.436341 2.34492 2.20019 2.0021513 1.7508038 1.4461472 1.0881816 0.6769069 0.2262704 -0.206347 -0.6147352 -0.9988946 -1.3588249 -1.694526 -2.0059986 -2.2932418 -2.556256 -2.7950416 -3.0095976 -3.1778846 -3.2747734 -3.3002372 -3.2542763 -3.1368902 -2.9480799 -2.6878445 -2.356184 -1.9530988 -1.4785888 -0.9390624 -0.417944 0.0590747 0.4919937 0.8808134 1.2255333 1.5261536 1.7826744 1.9950956 2.1634174 2.2876394 2.365528 2.3906029 2.3624525 2.281077 2.1464765 1.9586508 1.7175998 1.4233242 1.0758232 0.675097 0.2213366 -0.2367638 -0.6614414 -1.0526966 -1.4105284 -1.7349374 -2.0259238 -2.283487 -2.5076275 -2.6983452 -2.85564 -2.977074 -3.0432616 -3.0500233 -2.9973595 -2.8852699 -2.7137542 -2.4828132 -2.1924463 -1.8426536 -1.4334352 -0.9647912 -0.4687084 -0.0112332 0.4056274 0.7818734 1.1175048 1.4125216 1.6669237 1.880711 2.053884 2.1864422 2.2783087 2.3259154 2.3273223 2.2825282 2.191534 2.0543392 1.8709442 1.6413484 1.3655522 1.0435556 0.6753587 0.2703096 -0.1222982 -0.4952866 -0.8486562 -1.1824064 -1.4965378 -1.7910494 -2.0659423 -2.321216 -2.5568707 -2.772906 -2.94891 -3.0551052 -3.0912385 -3.0573097 -2.953318 -2.7792645 -2.5351487 -2.2209707 -1.8367298 -1.3824272 -0.8621144 -0.3552713 0.1073352 0.5257051 0.8998386 1.2297354 1.5153957 1.7568196 1.954007 2.1069577 2.215672 2.2704435 2.2357834 2.1084268 1.8883739 1.5756246 1.1701788 0.6720364 0.0811979 -0.6023374 -1.3785688 -2.2478865)) (quote bpc) 7))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf "BPC111") newbpf)))) (when newobj) newobj) nil nil (pairlis (quote (picture winpos winsize)) (list nil (om-make-point 10 40) (om-make-point 658 333))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPC-LIB3111" (quote bpc-lib) (quote ((om-load-inputfun (quote input-funbox) "object" "SELF" nil) (om-load-inputfun (quote input-funbox) "list of BPC objects" "BPF-LIST" (list (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote nil) (quote nil) (quote bpc) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj))))) (om-make-point 648 540) (om-make-point 40 60) (if (find-class (quote bpc-lib) nil) (make-instance (quote bpc-lib) :bpf-list (list (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 2.959 2.932 2.932 2.877 2.836 2.836 2.795 2.74 2.74 2.699 2.686 2.686 2.603 2.536 2.48 2.48 2.426 2.344 2.344 2.234 2.125 2.125 2.057 2.002 2.002 1.961 1.92 1.879 1.852 1.852 1.825 1.784 1.742 1.742 1.715 1.702 1.702 1.688 1.688 1.688 1.674 1.674 1.661 1.633 1.619 1.619 1.592 1.565 1.538 1.538 1.51 1.483 1.483 1.456 1.428 1.428 1.401 1.387 1.36 1.346 1.333 1.305 1.305 1.292 1.264 1.264 1.25 1.237 1.237 1.223 1.21 1.21 1.182 1.155 1.155 1.127 1.127 1.114 1.087 1.087 1.059 1.046 1.018 1.004 1.004 0.95 0.95 0.923 0.895 0.895 0.881 0.868 0.868 0.841 0.8 0.8 0.745 0.745 0.704 0.704 0.677 0.677 0.677 0.649 0.622 0.622 0.608 0.608 0.581 0.554 0.526 0.526 0.512 0.499 0.499 0.485 0.485 0.485 0.458 0.444 0.444 0.431 0.417 0.417 0.417 0.417 0.403 0.403 0.389 0.389 0.389 0.376 0.376 0.349 0.335 0.308 0.308 0.28 0.28 0.28 0.28 0.28 0.28 0.266 0.239 0.239 0.212 0.185 0.143 0.13 0.089 0.062 0.034 0.034 0.02 0.007 0.007 -0.02 -0.02 -0.062 -0.062 -0.103 -0.103 -0.157 -0.185 -0.185 -0.198 -0.198 -0.198 -0.198 -0.198 -0.185 -0.157 -0.116 -0.116 -0.089 -0.089 -0.089 -0.062 -0.062 -0.048 -0.02 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.02 -0.02 -0.034 -0.034 -0.048 -0.062 -0.062 -0.089 -0.13 -0.198 -0.198 -0.28 -0.349 -0.362 -0.362 -0.376 -0.376 -0.389 -0.403 -0.403 -0.417 -0.444 -0.472 -0.472 -0.485 -0.54 -0.581 -0.622 -0.663 -0.704 -0.704 -0.718 -0.758 -0.8 -0.8 -0.813 -0.813 -0.841 -0.854 -0.854 -0.854 -0.881 -0.881 -0.881 -0.895 -0.909 -0.909 -0.923 -0.923 -0.936 -0.95 -0.95 -0.977 -1.004 -1.073 -1.073 -1.1 -1.155 -1.21 -1.25 -1.292 -1.319 -1.319 -1.346 -1.387 -1.415 -1.456 -1.496 -1.524 -1.524 -1.538 -1.565 -1.592 -1.619 -1.619 -1.619 -1.619 -1.633 -1.633 -1.633 -1.633 -1.633 -1.647 -1.674 -1.674 -1.688 -1.688 -1.702 -1.702 -1.702 -1.702 -1.729 -1.729 -1.742 -1.756 -1.756 -1.77 -1.77 -1.784 -1.797 -1.811 -1.825 -1.825 -1.825 -1.838 -1.838 -1.852 -1.865 -1.865 -1.879 -1.893 -1.893 -1.907 -1.92 -1.934 -1.934 -1.988 -2.043 -2.043 -2.139 -2.262 -2.262 -2.357 -2.357 -2.44 -2.522 -2.59 -2.645 -2.713 -2.795 -2.795 -2.863 -2.918 -2.945 -2.945 -2.959 -2.959 -2.986 -2.986 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -2.972 -2.918 -2.918 -2.849 -2.849 -2.822 -2.795 -2.795 -2.754 -2.726 -2.686 -2.686 -2.631 -2.563 -2.48 -2.426 -2.344 -2.276 -2.166 -2.016 -2.016 -1.934 -1.934 -1.879 -1.879 -1.811 -1.674 -1.51 -1.401 -1.305 -1.305 -1.182 -1.182 -1.018 -0.827 -0.649 -0.649 -0.499 -0.499 -0.403 -0.403 -0.294 -0.294 -0.143 -0.143 -0.007 0.13 0.239 0.239 0.362 0.362 0.472 0.581 0.581 0.677 0.677 0.8 0.8 0.923 1.073 1.196 1.333 1.333 1.469 1.592 1.688 1.688 1.784 1.784 1.893 1.988 2.084 2.153 2.18 2.18 2.248 2.276 2.33 2.33 2.399 2.453 2.494 2.494 2.576 2.631 2.672 2.686 2.699 2.713 2.713 2.768 2.768 2.795 2.822 2.863 2.863 2.877 2.891 2.891 2.891 2.891 2.891 2.891 2.905 2.905 2.905 2.905 2.918 2.918 2.918 2.932 2.932 2.932 2.932 2.932 2.945 2.959 2.959 2.972 2.972 2.986 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0)) (quote (0.558 0.574 0.607 0.607 0.688 0.784 0.898 0.898 1.011 1.011 1.124 1.221 1.221 1.334 1.334 1.447 1.544 1.544 1.658 1.755 1.755 1.868 1.965 1.965 2.03 2.03 2.03 2.078 2.095 2.095 2.095 2.095 2.078 2.078 2.014 2.014 2.014 2.014 2.014 2.014 2.014 2.014 1.997 1.997 1.997 1.997 1.997 2.014 2.014 2.014 2.014 2.014 2.014 2.046 2.046 2.046 2.078 2.095 2.126 2.159 2.159 2.207 2.24 2.272 2.272 2.321 2.386 2.386 2.418 2.498 2.498 2.531 2.596 2.628 2.677 2.709 2.741 2.741 2.79 2.838 2.838 2.854 2.87 2.87 2.87 2.87 2.87 2.838 2.79 2.79 2.693 2.693 2.612 2.515 2.515 2.45 2.402 2.369 2.353 2.353 2.321 2.321 2.305 2.305 2.305 2.305 2.305 2.305 2.321 2.337 2.337 2.369 2.369 2.402 2.402 2.402 2.434 2.434 2.434 2.45 2.45 2.467 2.467 2.498 2.515 2.531 2.531 2.531 2.531 2.531 2.531 2.547 2.547 2.547 2.547 2.547 2.547 2.547 2.547 2.515 2.515 2.498 2.498 2.498 2.434 2.434 2.402 2.402 2.369 2.305 2.191 2.191 2.111 2.062 2.062 1.997 1.997 1.916 1.819 1.723 1.723 1.593 1.48 1.383 1.318 1.205 1.14 1.091 1.091 1.091 1.124 1.124 1.205 1.205 1.302 1.302 1.415 1.415 1.544 1.658 1.658 1.739 1.739 1.787 1.852 1.933 1.965 2.03 2.126 2.126 2.207 2.207 2.256 2.305 2.305 2.353 2.402 2.467 2.531 2.531 2.579 2.579 2.612 2.612 2.644 2.644 2.677 2.677 2.693 2.693 2.693 2.709 2.709 2.709 2.709 2.709 2.693 2.677 2.628 2.628 2.531 2.482 2.482 2.482 2.467 2.467 2.467 2.467 2.467 2.467 2.467 2.467 2.467 2.482 2.515 2.547 2.596 2.644 2.693 2.693 2.709 2.758 2.806 2.806 2.838 2.838 2.887 2.919 2.935 2.935 2.951 2.984 2.984 2.984 2.984 2.984 3.0 3.0 3.0 3.0 3.0 3.0 2.984 2.919 2.919 2.87 2.822 2.774 2.709 2.677 2.644 2.644 2.579 2.531 2.45 2.386 2.305 2.24 2.24 2.207 2.175 2.143 2.111 2.111 2.095 2.095 2.062 2.03 2.03 2.014 2.014 1.981 1.949 1.949 1.9 1.9 1.868 1.868 1.852 1.852 1.803 1.803 1.771 1.755 1.739 1.739 1.739 1.739 1.723 1.723 1.723 1.723 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.69 1.69 1.625 1.544 1.544 1.48 1.48 1.399 1.27 1.124 0.979 0.833 0.639 0.639 0.412 0.121 -0.17 -0.17 -0.38 -0.38 -0.574 -0.574 -0.768 -0.768 -0.946 -1.108 -1.27 -1.27 -1.415 -1.415 -1.561 -1.561 -1.706 -1.706 -1.868 -2.014 -2.014 -2.111 -2.111 -2.126 -2.159 -2.159 -2.159 -2.159 -2.126 -2.126 -2.095 -2.046 -2.014 -1.981 -1.949 -1.933 -1.9 -1.819 -1.819 -1.771 -1.771 -1.755 -1.755 -1.755 -1.706 -1.642 -1.625 -1.625 -1.625 -1.642 -1.642 -1.69 -1.771 -1.884 -1.884 -1.949 -1.949 -2.014 -2.014 -2.078 -2.078 -2.159 -2.159 -2.224 -2.305 -2.402 -2.402 -2.498 -2.498 -2.596 -2.677 -2.677 -2.741 -2.741 -2.806 -2.806 -2.87 -2.951 -2.984 -2.984 -2.984 -3.0 -3.0 -2.968 -2.968 -2.919 -2.919 -2.854 -2.79 -2.725 -2.66 -2.596 -2.596 -2.515 -2.434 -2.288 -2.288 -2.143 -2.03 -1.9 -1.9 -1.755 -1.593 -1.447 -1.334 -1.221 -1.108 -1.108 -0.93 -0.93 -0.784 -0.639 -0.558 -0.461 -0.348 -0.267 -0.267 -0.186 -0.137 -0.089 -0.089 -0.024 0.024 0.089 0.089 0.154 0.154 0.218 0.267 0.267 0.316 0.396 0.396 0.445 0.493 0.493 0.574 0.574 0.639 0.704 0.719 0.719 0.736 0.752 0.752 0.768 0.784 0.784)) (quotequote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (listnewobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (-3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -2.959 -2.932 -2.932 -2.877 -2.836 -2.836 -2.795 -2.74 -2.74 -2.699 -2.686 -2.686 -2.603 -2.536 -2.48 -2.48 -2.426 -2.344 -2.344 -2.234 -2.125 -2.125 -2.057 -2.002 -2.002 -1.961 -1.92 -1.879 -1.852 -1.852 -1.825 -1.784 -1.742 -1.742 -1.715 -1.702 -1.702 -1.688 -1.688 -1.688 -1.674 -1.674 -1.661 -1.633 -1.619 -1.619 -1.592 -1.565 -1.538 -1.538 -1.51 -1.483 -1.483 -1.456 -1.428 -1.428 -1.401 -1.387 -1.36 -1.346 -1.333 -1.305 -1.305 -1.292 -1.264 -1.264 -1.25 -1.237 -1.237 -1.223 -1.21 -1.21 -1.182 -1.155 -1.155 -1.127 -1.127 -1.114 -1.087 -1.087 -1.059 -1.046 -1.018 -1.004 -1.004 -0.95 -0.95 -0.923 -0.895 -0.895 -0.881 -0.868 -0.868 -0.841 -0.8 -0.8 -0.745 -0.745 -0.704 -0.704 -0.677 -0.677 -0.677 -0.649 -0.622 -0.622 -0.608 -0.608 -0.581 -0.554 -0.526 -0.526 -0.512 -0.499 -0.499 -0.485 -0.485 -0.485 -0.458 -0.444 -0.444 -0.431 -0.417 -0.417 -0.417 -0.417 -0.403 -0.403 -0.389 -0.389 -0.389 -0.376 -0.376 -0.349 -0.335 -0.308 -0.308 -0.28 -0.28 -0.28 -0.28 -0.28 -0.28 -0.266 -0.239 -0.239 -0.212 -0.185 -0.143 -0.13 -0.089 -0.062 -0.034 -0.034 -0.02 -0.007 -0.007 0.02 0.02 0.062 0.062 0.103 0.103 0.157 0.185 0.185 0.198 0.198 0.198 0.198 0.198 0.185 0.157 0.116 0.116 0.089 0.089 0.089 0.062 0.062 0.048 0.02 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.02 0.02 0.034 0.034 0.048 0.062 0.062 0.089 0.13 0.198 0.198 0.28 0.349 0.362 0.362 0.376 0.376 0.389 0.403 0.403 0.417 0.444 0.472 0.472 0.485 0.54 0.581 0.622 0.663 0.704 0.704 0.718 0.758 0.8 0.8 0.813 0.813 0.841 0.854 0.854 0.854 0.881 0.881 0.881 0.895 0.909 0.909 0.923 0.923 0.936 0.95 0.95 0.977 1.004 1.073 1.073 1.1 1.155 1.21 1.25 1.292 1.319 1.319 1.346 1.387 1.415 1.456 1.496 1.524 1.524 1.538 1.565 1.592 1.619 1.619 1.619 1.619 1.633 1.633 1.633 1.633 1.633 1.647 1.674 1.674 1.688 1.688 1.702 1.702 1.702 1.702 1.729 1.729 1.742 1.756 1.756 1.77 1.77 1.784 1.797 1.811 1.825 1.825 1.825 1.838 1.838 1.852 1.865 1.865 1.879 1.893 1.893 1.907 1.92 1.934 1.934 1.988 2.043 2.043 2.139 2.262 2.262 2.357 2.357 2.44 2.522 2.59 2.645 2.713 2.795 2.795 2.863 2.918 2.945 2.945 2.959 2.959 2.986 2.986 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 2.972 2.918 2.918 2.849 2.849 2.822 2.795 2.795 2.754 2.726 2.686 2.686 2.631 2.563 2.48 2.426 2.344 2.276 2.166 2.016 2.016 1.934 1.934 1.879 1.879 1.811 1.674 1.51 1.401 1.305 1.305 1.182 1.182 1.018 0.827 0.649 0.649 0.499 0.499 0.403 0.403 0.294 0.294 0.143 0.143 0.007 -0.13 -0.239 -0.239 -0.362 -0.362 -0.472 -0.581 -0.581 -0.677 -0.677 -0.8 -0.8 -0.923 -1.073 -1.196 -1.333 -1.333 -1.469 -1.592 -1.688 -1.688 -1.784 -1.784 -1.893 -1.988 -2.084 -2.153 -2.18 -2.18 -2.248 -2.276 -2.33 -2.33 -2.399 -2.453 -2.494 -2.494 -2.576 -2.631 -2.672 -2.686 -2.699 -2.713 -2.713 -2.768 -2.768 -2.795 -2.822 -2.863 -2.863 -2.877 -2.891 -2.891 -2.891 -2.891 -2.891 -2.891 -2.905 -2.905 -2.905 -2.905 -2.918 -2.918 -2.918 -2.932 -2.932 -2.932 -2.932 -2.932 -2.945 -2.959 -2.959 -2.972 -2.972 -2.986 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0)) (quote (-0.558 -0.574 -0.607 -0.607 -0.688 -0.784 -0.898 -0.898 -1.011 -1.011 -1.124 -1.221 -1.221 -1.334 -1.334 -1.447 -1.544 -1.544 -1.658 -1.755 -1.755 -1.868 -1.965 -1.965 -2.03 -2.03 -2.03 -2.078 -2.095 -2.095 -2.095 -2.095 -2.078 -2.078 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -1.997 -1.997 -1.997 -1.997 -1.997 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -2.046 -2.046 -2.046 -2.078 -2.095 -2.126 -2.159 -2.159 -2.207 -2.24 -2.272 -2.272 -2.321 -2.386 -2.386 -2.418 -2.498 -2.498 -2.531 -2.596 -2.628 -2.677 -2.709 -2.741 -2.741 -2.79 -2.838 -2.838 -2.854 -2.87 -2.87 -2.87 -2.87 -2.87 -2.838 -2.79 -2.79 -2.693 -2.693 -2.612 -2.515 -2.515 -2.45 -2.402 -2.369 -2.353 -2.353 -2.321 -2.321 -2.305 -2.305 -2.305 -2.305 -2.305 -2.305 -2.321 -2.337 -2.337 -2.369 -2.369 -2.402 -2.402 -2.402 -2.434 -2.434 -2.434 -2.45 -2.45 -2.467 -2.467 -2.498 -2.515 -2.531 -2.531 -2.531 -2.531 -2.531 -2.531 -2.547 -2.547 -2.547 -2.547 -2.547 -2.547 -2.547 -2.547 -2.515 -2.515 -2.498 -2.498 -2.498 -2.434 -2.434 -2.402 -2.402 -2.369 -2.305 -2.191 -2.191 -2.111 -2.062 -2.062 -1.997 -1.997 -1.916 -1.819 -1.723 -1.723 -1.593 -1.48 -1.383 -1.318 -1.205 -1.14 -1.091 -1.091 -1.091 -1.124 -1.124 -1.205 -1.205 -1.302 -1.302 -1.415 -1.415 -1.544 -1.658 -1.658 -1.739 -1.739 -1.787 -1.852 -1.933 -1.965 -2.03 -2.126 -2.126 -2.207 -2.207 -2.256 -2.305 -2.305 -2.353 -2.402 -2.467 -2.531 -2.531 -2.579 -2.579 -2.612 -2.612 -2.644 -2.644 -2.677 -2.677 -2.693 -2.693 -2.693 -2.709 -2.709 -2.709 -2.709 -2.709 -2.693 -2.677 -2.628 -2.628 -2.531 -2.482 -2.482 -2.482 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.482 -2.515 -2.547 -2.596 -2.644 -2.693 -2.693 -2.709 -2.758 -2.806 -2.806 -2.838 -2.838 -2.887 -2.919 -2.935 -2.935 -2.951 -2.984 -2.984 -2.984 -2.984 -2.984 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -2.984 -2.919 -2.919 -2.87 -2.822 -2.774 -2.709 -2.677 -2.644 -2.644 -2.579 -2.531 -2.45 -2.386 -2.305 -2.24 -2.24 -2.207 -2.175 -2.143 -2.111 -2.111 -2.095 -2.095 -2.062 -2.03 -2.03 -2.014 -2.014 -1.981 -1.949 -1.949 -1.9 -1.9 -1.868 -1.868 -1.852 -1.852 -1.803 -1.803 -1.771 -1.755 -1.739 -1.739 -1.739 -1.739 -1.723 -1.723 -1.723 -1.723 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.69 -1.69 -1.625 -1.544 -1.544 -1.48 -1.48 -1.399 -1.27 -1.124 -0.979 -0.833 -0.639 -0.639 -0.412 -0.121 0.17 0.17 0.38 0.38 0.574 0.574 0.768 0.768 0.946 1.108 1.27 1.27 1.415 1.415 1.561 1.561 1.706 1.706 1.868 2.014 2.014 2.111 2.111 2.126 2.159 2.159 2.159 2.159 2.126 2.126 2.095 2.046 2.014 1.981 1.949 1.933 1.9 1.819 1.819 1.771 1.771 1.755 1.755 1.755 1.706 1.642 1.625 1.625 1.625 1.642 1.642 1.69 1.771 1.884 1.884 1.949 1.949 2.014 2.014 2.078 2.078 2.159 2.159 2.224 2.305 2.402 2.402 2.498 2.498 2.596 2.677 2.677 2.741 2.741 2.806 2.806 2.87 2.951 2.984 2.984 2.984 3.0 3.0 2.968 2.968 2.919 2.919 2.854 2.79 2.725 2.66 2.596 2.596 2.515 2.434 2.288 2.288 2.143 2.03 1.9 1.9 1.755 1.593 1.447 1.334 1.221 1.108 1.108 0.93 0.93 0.784 0.639 0.558 0.461 0.348 0.267 0.267 0.186 0.137 0.089 0.089 0.024 -0.024 -0.089 -0.089 -0.154 -0.154 -0.218 -0.267 -0.267 -0.316 -0.396 -0.396 -0.445 -0.493 -0.493 -0.574 -0.574 -0.639 -0.704 -0.719 -0.719 -0.736 -0.752 -0.752 -0.768 -0.784 -0.784)) (quote (0.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0 -10.0)) (quote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (listnewobj)) :from-file t)) nil nil (pairlis (quote (winsize winpos picture)) (list (om-make-point 335 275) (om-make-point 10 40) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LIST21111" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 663 492) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "X-APPEND" (quote x-append) (quote ((om-load-inputfun (quote input-funbox) "first element" "L1?" nil) (om-load-inputfun (quote input-funbox) "second element" "L2?" nil) (om-load-inputfun (quote input-funbox) "additional elements" "LST?" nil) (om-load-inputfun (quote input-funbox) "additional elements" "LST?" nil))) (om-make-point 468 565) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPC-LIB311" (quote bpc-lib) (quote ((om-load-inputfun (quote input-funbox) "object" "SELF" nil) (om-load-inputfun (quote input-funbox) "list of BPC objects" "BPF-LIST" (list (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote nil) (quote nil) (quote bpc) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj))))) (om-make-point 586 462) (om-make-point 40 60) (if (find-class (quote bpc-lib) nil) (make-instance (quote bpc-lib) :bpf-list (list (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (-0.558 -0.574 -0.607 -0.607 -0.688 -0.784 -0.898 -0.898 -1.011 -1.011 -1.124 -1.221 -1.221 -1.334 -1.334 -1.447 -1.544 -1.544 -1.658 -1.755 -1.755 -1.868 -1.965 -1.965 -2.03 -2.03 -2.03 -2.078 -2.095 -2.095 -2.095 -2.095 -2.078 -2.078 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -1.997 -1.997 -1.997 -1.997 -1.997 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -2.046 -2.046 -2.046 -2.078 -2.095 -2.126 -2.159 -2.159 -2.207 -2.24 -2.272 -2.272 -2.321 -2.386 -2.386 -2.418 -2.498 -2.498 -2.531 -2.596 -2.628 -2.677 -2.709 -2.741 -2.741 -2.79 -2.838 -2.838 -2.854 -2.87 -2.87 -2.87 -2.87 -2.87 -2.838 -2.79 -2.79 -2.693 -2.693 -2.612 -2.515 -2.515 -2.45 -2.402 -2.369 -2.353 -2.353 -2.321 -2.321 -2.305 -2.305 -2.305 -2.305 -2.305 -2.305 -2.321 -2.337 -2.337 -2.369 -2.369 -2.402 -2.402 -2.402 -2.434 -2.434 -2.434 -2.45 -2.45 -2.467 -2.467 -2.498 -2.515 -2.531 -2.531 -2.531 -2.531 -2.531 -2.531 -2.547 -2.547 -2.547 -2.547 -2.547 -2.547 -2.547 -2.547 -2.515 -2.515 -2.498 -2.498 -2.498 -2.434 -2.434 -2.402 -2.402 -2.369 -2.305 -2.191 -2.191 -2.111 -2.062 -2.062 -1.997 -1.997 -1.916 -1.819 -1.723 -1.723 -1.593 -1.48 -1.383 -1.318 -1.205 -1.14 -1.091 -1.091 -1.091 -1.124 -1.124 -1.205 -1.205 -1.302 -1.302 -1.415 -1.415 -1.544 -1.658 -1.658 -1.739 -1.739 -1.787 -1.852 -1.933 -1.965 -2.03 -2.126 -2.126 -2.207 -2.207 -2.256 -2.305 -2.305 -2.353 -2.402 -2.467 -2.531 -2.531 -2.579 -2.579 -2.612 -2.612 -2.644 -2.644 -2.677 -2.677 -2.693 -2.693 -2.693 -2.709 -2.709 -2.709 -2.709 -2.709 -2.693 -2.677 -2.628 -2.628 -2.531 -2.482 -2.482 -2.482 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.482 -2.515 -2.547 -2.596 -2.644 -2.693 -2.693 -2.709 -2.758 -2.806 -2.806 -2.838 -2.838 -2.887 -2.919 -2.935 -2.935 -2.951 -2.984 -2.984 -2.984 -2.984 -2.984 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -2.984 -2.919 -2.919 -2.87 -2.822 -2.774 -2.709 -2.677 -2.644 -2.644 -2.579 -2.531 -2.45 -2.386 -2.305 -2.24 -2.24 -2.207 -2.175 -2.143 -2.111 -2.111 -2.095 -2.095 -2.062 -2.03 -2.03 -2.014 -2.014 -1.981 -1.949 -1.949 -1.9 -1.9 -1.868 -1.868 -1.852 -1.852 -1.803 -1.803 -1.771 -1.755 -1.739 -1.739 -1.739 -1.739 -1.723 -1.723 -1.723 -1.723 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.69 -1.69 -1.625 -1.544 -1.544 -1.48 -1.48 -1.399 -1.27 -1.124 -0.979 -0.833 -0.639 -0.639 -0.412 -0.121 0.17 0.17 0.38 0.38 0.574 0.574 0.768 0.768 0.946 1.108 1.27 1.27 1.415 1.415 1.561 1.561 1.706 1.706 1.868 2.014 2.014 2.111 2.111 2.126 2.159 2.159 2.159 2.159 2.126 2.126 2.095 2.046 2.014 1.981 1.949 1.933 1.9 1.819 1.819 1.771 1.771 1.755 1.755 1.755 1.706 1.642 1.625 1.625 1.625 1.642 1.642 1.69 1.771 1.884 1.884 1.949 1.949 2.014 2.014 2.078 2.078 2.159 2.159 2.224 2.305 2.402 2.402 2.498 2.498 2.596 2.677 2.677 2.741 2.741 2.806 2.806 2.87 2.951 2.984 2.984 2.984 3.0 3.0 2.968 2.968 2.919 2.919 2.854 2.79 2.725 2.66 2.596 2.596 2.515 2.434 2.288 2.288 2.143 2.03 1.9 1.9 1.755 1.593 1.447 1.334 1.221 1.108 1.108 0.93 0.93 0.784 0.639 0.558 0.461 0.348 0.267 0.267 0.186 0.137 0.089 0.089 0.024 -0.024 -0.089 -0.089 -0.154 -0.154 -0.218 -0.267 -0.267 -0.316 -0.396 -0.396 -0.445 -0.493 -0.493 -0.574 -0.574 -0.639 -0.704 -0.719 -0.719 -0.736 -0.752 -0.752 -0.768 -0.784 -0.784)) (quote (3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 2.959 2.932 2.932 2.877 2.836 2.836 2.795 2.74 2.74 2.699 2.686 2.686 2.603 2.536 2.48 2.48 2.426 2.344 2.344 2.234 2.125 2.125 2.057 2.002 2.002 1.961 1.92 1.879 1.852 1.852 1.825 1.784 1.742 1.742 1.715 1.702 1.702 1.688 1.688 1.688 1.674 1.674 1.661 1.633 1.619 1.619 1.592 1.565 1.538 1.538 1.51 1.483 1.483 1.456 1.428 1.428 1.401 1.387 1.36 1.346 1.333 1.305 1.305 1.292 1.264 1.264 1.25 1.237 1.237 1.223 1.21 1.21 1.182 1.155 1.155 1.127 1.127 1.114 1.087 1.087 1.059 1.046 1.018 1.004 1.004 0.95 0.95 0.923 0.895 0.895 0.881 0.868 0.868 0.841 0.8 0.8 0.745 0.745 0.704 0.704 0.677 0.677 0.677 0.649 0.622 0.622 0.608 0.608 0.581 0.554 0.526 0.526 0.512 0.499 0.499 0.485 0.485 0.485 0.458 0.444 0.444 0.431 0.417 0.417 0.417 0.417 0.403 0.403 0.389 0.389 0.389 0.376 0.376 0.349 0.335 0.308 0.308 0.28 0.28 0.28 0.28 0.28 0.28 0.266 0.239 0.239 0.212 0.185 0.143 0.13 0.089 0.062 0.034 0.034 0.02 0.007 0.007 -0.02 -0.02 -0.062 -0.062 -0.103 -0.103 -0.157 -0.185 -0.185 -0.198 -0.198 -0.198 -0.198 -0.198 -0.185 -0.157 -0.116 -0.116 -0.089 -0.089 -0.089 -0.062 -0.062 -0.048 -0.02 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.02 -0.02 -0.034 -0.034 -0.048 -0.062 -0.062 -0.089 -0.13 -0.198 -0.198 -0.28 -0.349 -0.362 -0.362 -0.376 -0.376 -0.389 -0.403 -0.403 -0.417 -0.444 -0.472 -0.472 -0.485 -0.54 -0.581 -0.622 -0.663 -0.704 -0.704 -0.718 -0.758 -0.8 -0.8 -0.813 -0.813 -0.841 -0.854 -0.854 -0.854 -0.881 -0.881 -0.881 -0.895 -0.909 -0.909 -0.923 -0.923 -0.936 -0.95 -0.95 -0.977 -1.004 -1.073 -1.073 -1.1 -1.155 -1.21 -1.25 -1.292 -1.319 -1.319 -1.346 -1.387 -1.415 -1.456 -1.496 -1.524 -1.524 -1.538 -1.565 -1.592 -1.619 -1.619 -1.619 -1.619 -1.633 -1.633 -1.633 -1.633 -1.633 -1.647 -1.674 -1.674 -1.688 -1.688 -1.702 -1.702 -1.702 -1.702 -1.729 -1.729 -1.742 -1.756 -1.756 -1.77 -1.77 -1.784 -1.797 -1.811 -1.825 -1.825 -1.825 -1.838 -1.838 -1.852 -1.865 -1.865 -1.879 -1.893 -1.893 -1.907 -1.92 -1.934 -1.934 -1.988 -2.043 -2.043 -2.139 -2.262 -2.262 -2.357 -2.357 -2.44 -2.522 -2.59 -2.645 -2.713 -2.795 -2.795 -2.863 -2.918 -2.945 -2.945 -2.959 -2.959 -2.986 -2.986 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -2.972 -2.918 -2.918 -2.849 -2.849 -2.822 -2.795 -2.795 -2.754 -2.726 -2.686 -2.686 -2.631 -2.563 -2.48 -2.426 -2.344 -2.276 -2.166 -2.016 -2.016 -1.934 -1.934 -1.879 -1.879 -1.811 -1.674 -1.51 -1.401 -1.305 -1.305 -1.182 -1.182 -1.018 -0.827 -0.649 -0.649 -0.499 -0.499 -0.403 -0.403 -0.294 -0.294 -0.143 -0.143 -0.007 0.13 0.239 0.239 0.362 0.362 0.472 0.581 0.581 0.677 0.677 0.8 0.8 0.923 1.073 1.196 1.333 1.333 1.469 1.592 1.688 1.688 1.784 1.784 1.893 1.988 2.084 2.153 2.18 2.18 2.248 2.276 2.33 2.33 2.399 2.453 2.494 2.494 2.576 2.631 2.672 2.686 2.699 2.713 2.713 2.768 2.768 2.795 2.822 2.863 2.863 2.877 2.891 2.891 2.891 2.891 2.891 2.891 2.905 2.905 2.905 2.905 2.918 2.918 2.918 2.932 2.932 2.932 2.932 2.932 2.945 2.959 2.959 2.972 2.972 2.986 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0)) (quotequote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (listnewobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 2.959 2.932 2.932 2.877 2.836 2.836 2.795 2.74 2.74 2.699 2.686 2.686 2.603 2.536 2.48 2.48 2.426 2.344 2.344 2.234 2.125 2.125 2.057 2.002 2.002 1.961 1.92 1.879 1.852 1.852 1.825 1.784 1.742 1.742 1.715 1.702 1.702 1.688 1.688 1.688 1.674 1.674 1.661 1.633 1.619 1.619 1.592 1.565 1.538 1.538 1.51 1.483 1.483 1.456 1.428 1.428 1.401 1.387 1.36 1.346 1.333 1.305 1.305 1.292 1.264 1.264 1.25 1.237 1.237 1.223 1.21 1.21 1.182 1.155 1.155 1.127 1.127 1.114 1.087 1.087 1.059 1.046 1.018 1.004 1.004 0.95 0.95 0.923 0.895 0.895 0.881 0.868 0.868 0.841 0.8 0.8 0.745 0.745 0.704 0.704 0.677 0.677 0.677 0.649 0.622 0.622 0.608 0.608 0.581 0.554 0.526 0.526 0.512 0.499 0.499 0.485 0.485 0.485 0.458 0.444 0.444 0.431 0.417 0.417 0.417 0.417 0.403 0.403 0.389 0.389 0.389 0.376 0.376 0.349 0.335 0.308 0.308 0.28 0.28 0.28 0.28 0.28 0.28 0.266 0.239 0.239 0.212 0.185 0.143 0.13 0.089 0.062 0.034 0.034 0.02 0.007 0.007 -0.02 -0.02 -0.062 -0.062 -0.103 -0.103 -0.157 -0.185 -0.185 -0.198 -0.198 -0.198 -0.198 -0.198 -0.185 -0.157 -0.116 -0.116 -0.089 -0.089 -0.089 -0.062 -0.062 -0.048 -0.02 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.02 -0.02 -0.034 -0.034 -0.048 -0.062 -0.062 -0.089 -0.13 -0.198 -0.198 -0.28 -0.349 -0.362 -0.362 -0.376 -0.376 -0.389 -0.403 -0.403 -0.417 -0.444 -0.472 -0.472 -0.485 -0.54 -0.581 -0.622 -0.663 -0.704 -0.704 -0.718 -0.758 -0.8 -0.8 -0.813 -0.813 -0.841 -0.854 -0.854 -0.854 -0.881 -0.881 -0.881 -0.895 -0.909 -0.909 -0.923 -0.923 -0.936 -0.95 -0.95 -0.977 -1.004 -1.073 -1.073 -1.1 -1.155 -1.21 -1.25 -1.292 -1.319 -1.319 -1.346 -1.387 -1.415 -1.456 -1.496 -1.524 -1.524 -1.538 -1.565 -1.592 -1.619 -1.619 -1.619 -1.619 -1.633 -1.633 -1.633 -1.633 -1.633 -1.647 -1.674 -1.674 -1.688 -1.688 -1.702 -1.702 -1.702 -1.702 -1.729 -1.729 -1.742 -1.756 -1.756 -1.77 -1.77 -1.784 -1.797 -1.811 -1.825 -1.825 -1.825 -1.838 -1.838 -1.852 -1.865 -1.865 -1.879 -1.893 -1.893 -1.907 -1.92 -1.934 -1.934 -1.988 -2.043 -2.043 -2.139 -2.262 -2.262 -2.357 -2.357 -2.44 -2.522 -2.59 -2.645 -2.713 -2.795 -2.795 -2.863 -2.918 -2.945 -2.945 -2.959 -2.959 -2.986 -2.986 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -2.972 -2.918 -2.918 -2.849 -2.849 -2.822 -2.795 -2.795 -2.754 -2.726 -2.686 -2.686 -2.631 -2.563 -2.48 -2.426 -2.344 -2.276 -2.166 -2.016 -2.016 -1.934 -1.934 -1.879 -1.879 -1.811 -1.674 -1.51 -1.401 -1.305 -1.305 -1.182 -1.182 -1.018 -0.827 -0.649 -0.649 -0.499 -0.499 -0.403 -0.403 -0.294 -0.294 -0.143 -0.143 -0.007 0.13 0.239 0.239 0.362 0.362 0.472 0.581 0.581 0.677 0.677 0.8 0.8 0.923 1.073 1.196 1.333 1.333 1.469 1.592 1.688 1.688 1.784 1.784 1.893 1.988 2.084 2.153 2.18 2.18 2.248 2.276 2.33 2.33 2.399 2.453 2.494 2.494 2.576 2.631 2.672 2.686 2.699 2.713 2.713 2.768 2.768 2.795 2.822 2.863 2.863 2.877 2.891 2.891 2.891 2.891 2.891 2.891 2.905 2.905 2.905 2.905 2.918 2.918 2.918 2.932 2.932 2.932 2.932 2.932 2.945 2.959 2.959 2.972 2.972 2.986 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0)) (quote (0.558 0.574 0.607 0.607 0.688 0.784 0.898 0.898 1.011 1.011 1.124 1.221 1.221 1.334 1.334 1.447 1.544 1.544 1.658 1.755 1.755 1.868 1.965 1.965 2.03 2.03 2.03 2.078 2.095 2.095 2.095 2.095 2.078 2.078 2.014 2.014 2.014 2.014 2.014 2.014 2.014 2.014 1.997 1.997 1.997 1.997 1.997 2.014 2.014 2.014 2.014 2.014 2.014 2.046 2.046 2.046 2.078 2.095 2.126 2.159 2.159 2.207 2.24 2.272 2.272 2.321 2.386 2.386 2.418 2.498 2.498 2.531 2.596 2.628 2.677 2.709 2.741 2.741 2.79 2.838 2.838 2.854 2.87 2.87 2.87 2.87 2.87 2.838 2.79 2.79 2.693 2.693 2.612 2.515 2.515 2.45 2.402 2.369 2.353 2.353 2.321 2.321 2.305 2.305 2.305 2.305 2.305 2.305 2.321 2.337 2.337 2.369 2.369 2.402 2.402 2.402 2.434 2.434 2.434 2.45 2.45 2.467 2.467 2.498 2.515 2.531 2.531 2.531 2.531 2.531 2.531 2.547 2.547 2.547 2.547 2.547 2.547 2.547 2.547 2.515 2.515 2.498 2.498 2.498 2.434 2.434 2.402 2.402 2.369 2.305 2.191 2.191 2.111 2.062 2.062 1.997 1.997 1.916 1.819 1.723 1.723 1.593 1.48 1.383 1.318 1.205 1.14 1.091 1.091 1.091 1.124 1.124 1.205 1.205 1.302 1.302 1.415 1.415 1.544 1.658 1.658 1.739 1.739 1.787 1.852 1.933 1.965 2.03 2.126 2.126 2.207 2.207 2.256 2.305 2.305 2.353 2.402 2.467 2.531 2.531 2.579 2.579 2.612 2.612 2.644 2.644 2.677 2.677 2.693 2.693 2.693 2.709 2.709 2.709 2.709 2.709 2.693 2.677 2.628 2.628 2.531 2.482 2.482 2.482 2.467 2.467 2.467 2.467 2.467 2.467 2.467 2.467 2.467 2.482 2.515 2.547 2.596 2.644 2.693 2.693 2.709 2.758 2.806 2.806 2.838 2.838 2.887 2.919 2.935 2.935 2.951 2.984 2.984 2.984 2.984 2.984 3.0 3.0 3.0 3.0 3.0 3.0 2.984 2.919 2.919 2.87 2.822 2.774 2.709 2.677 2.644 2.644 2.579 2.531 2.45 2.386 2.305 2.24 2.24 2.207 2.175 2.143 2.111 2.111 2.095 2.095 2.062 2.03 2.03 2.014 2.014 1.981 1.949 1.949 1.9 1.9 1.868 1.868 1.852 1.852 1.803 1.803 1.771 1.755 1.739 1.739 1.739 1.739 1.723 1.723 1.723 1.723 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.69 1.69 1.625 1.544 1.544 1.48 1.48 1.399 1.27 1.124 0.979 0.833 0.639 0.639 0.412 0.121 -0.17 -0.17 -0.38 -0.38 -0.574 -0.574 -0.768 -0.768 -0.946 -1.108 -1.27 -1.27 -1.415 -1.415 -1.561 -1.561 -1.706 -1.706 -1.868 -2.014 -2.014 -2.111 -2.111 -2.126 -2.159 -2.159 -2.159 -2.159 -2.126 -2.126 -2.095 -2.046 -2.014 -1.981 -1.949 -1.933 -1.9 -1.819 -1.819 -1.771 -1.771 -1.755 -1.755 -1.755 -1.706 -1.642 -1.625 -1.625 -1.625 -1.642 -1.642 -1.69 -1.771 -1.884 -1.884 -1.949 -1.949 -2.014 -2.014 -2.078 -2.078 -2.159 -2.159 -2.224 -2.305 -2.402 -2.402 -2.498 -2.498 -2.596 -2.677 -2.677 -2.741 -2.741 -2.806 -2.806 -2.87 -2.951 -2.984 -2.984 -2.984 -3.0 -3.0 -2.968 -2.968 -2.919 -2.919 -2.854 -2.79 -2.725 -2.66 -2.596 -2.596 -2.515 -2.434 -2.288 -2.288 -2.143 -2.03 -1.9 -1.9 -1.755 -1.593 -1.447 -1.334 -1.221 -1.108 -1.108 -0.93 -0.93 -0.784 -0.639 -0.558 -0.461 -0.348 -0.267 -0.267 -0.186 -0.137 -0.089 -0.089 -0.024 0.024 0.089 0.089 0.154 0.154 0.218 0.267 0.267 0.316 0.396 0.396 0.445 0.493 0.493 0.574 0.574 0.639 0.704 0.719 0.719 0.736 0.752 0.752 0.768 0.784 0.784)) (quotequote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (listnewobj)) :from-file t)) nil nil (pairlis (quote (winsize winpos picture)) (list (om-make-point 335 275) (om-make-point 10 40) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux12" (quote t) (quote nil) (om-make-point 680 322) (om-make-point 28 30) 90 "90" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux10" (quote t) (quote nil) (om-make-point 635 238) (om-make-point 21 30) 3 "3" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPC-LIB31" (quote bpc-lib) (quote ((om-load-inputfun (quote input-funbox) "object" "SELF" nil) (om-load-inputfun (quote input-funbox) "list of BPC objects" "BPF-LIST" (list (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote nil) (quote nil) (quote bpc) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj))))) (om-make-point 525 400) (om-make-point 40 60) (if (find-class (quote bpc-lib) nil) (make-instance (quote bpc-lib) :bpf-list (list (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (9.07 9.043 8.989 8.989 8.854 8.693 8.504 8.504 8.315 8.315 8.127 7.965 7.965 7.776 7.776 7.588 7.426 7.426 7.237 7.075 7.075 6.887 6.725 6.725 6.617 6.617 6.617 6.536 6.509 6.509 6.509 6.509 6.536 6.536 6.644 6.644 6.644 6.644 6.644 6.644 6.644 6.644 6.671 6.671 6.671 6.671 6.671 6.644 6.644 6.644 6.644 6.644 6.644 6.59 6.59 6.59 6.536 6.509 6.456 6.402 6.402 6.321 6.267 6.213 6.213 6.132 6.024 6.024 5.97 5.836 5.836 5.782 5.674 5.62 5.539 5.485 5.431 5.431 5.35 5.27 5.27 5.243 5.216 5.216 5.216 5.216 5.216 5.27 5.35 5.35 5.512 5.512 5.647 5.809 5.809 5.916 5.997 6.051 6.078 6.078 6.132 6.132 6.159 6.159 6.159 6.159 6.159 6.159 6.132 6.105 6.105 6.051 6.051 5.997 5.997 5.997 5.943 5.943 5.943 5.916 5.916 5.889 5.889 5.836 5.809 5.782 5.782 5.782 5.782 5.782 5.782 5.755 5.755 5.755 5.755 5.755 5.755 5.755 5.755 5.809 5.809 5.836 5.836 5.836 5.943 5.943 5.997 5.997 6.051 6.159 6.348 6.348 6.482 6.563 6.563 6.671 6.671 6.806 6.968 7.129 7.129 7.345 7.534 7.695 7.803 7.992 8.1 8.181 8.181 8.181 8.127 8.127 7.992 7.992 7.83 7.83 7.642 7.642 7.426 7.237 7.237 7.102 7.102 7.022 6.914 6.779 6.725 6.617 6.456 6.456 6.321 6.321 6.24 6.159 6.159 6.078 5.997 5.889 5.782 5.782 5.701 5.701 5.647 5.647 5.593 5.593 5.539 5.539 5.512 5.512 5.512 5.485 5.485 5.485 5.485 5.485 5.512 5.539 5.62 5.62 5.782 5.863 5.863 5.863 5.889 5.889 5.889 5.889 5.889 5.889 5.889 5.889 5.889 5.863 5.809 5.755 5.674 5.593 5.512 5.512 5.485 5.404 5.323 5.323 5.27 5.27 5.189 5.135 5.108 5.108 5.081 5.027 5.027 5.027 5.027 5.027 5.0 5.0 5.0 5.0 5.0 5.0 5.027 5.135 5.135 5.216 5.296 5.377 5.485 5.539 5.593 5.593 5.701 5.782 5.916 6.024 6.159 6.267 6.267 6.321 6.375 6.429 6.482 6.482 6.509 6.509 6.563 6.617 6.617 6.644 6.644 6.698 6.752 6.752 6.833 6.833 6.887 6.887 6.914 6.914 6.995 6.995 7.049 7.075 7.102 7.102 7.102 7.102 7.129 7.129 7.129 7.129 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.183 7.183 7.291 7.426 7.426 7.534 7.534 7.668 7.884 8.127 8.369 8.612 8.935 8.935 9.313 9.798 10.283 10.283 10.633 10.633 10.957 10.957 11.28 11.28 11.577 11.846 12.116 12.116 12.358 12.358 12.601 12.601 12.844 12.844 13.113 13.356 13.356 13.518 13.518 13.544 13.598 13.598 13.598 13.598 13.544 13.544 13.491 13.41 13.356 13.302 13.248 13.221 13.167 13.032 13.032 12.951 12.951 12.925 12.925 12.925 12.844 12.736 12.709 12.709 12.709 12.736 12.736 12.817 12.951 13.14 13.14 13.248 13.248 13.356 13.356 13.464 13.464 13.598 13.598 13.706 13.841 14.003 14.003 14.164 14.164 14.326 14.461 14.461 14.569 14.569 14.677 14.677 14.784 14.919 14.973 14.973 14.973 15.0 15.0 14.946 14.946 14.865 14.865 14.757 14.65 14.542 14.434 14.326 14.326 14.191 14.057 13.814 13.814 13.571 13.383 13.167 13.167 12.925 12.655 12.412 12.224 12.035 11.846 11.846 11.55 11.55 11.307 11.065 10.93 10.768 10.58 10.445 10.445 10.31 10.229 10.148 10.148 10.04 9.96 9.852 9.852 9.744 9.744 9.636 9.555 9.555 9.474 9.34 9.34 9.259 9.178 9.178 9.043 9.043 8.935 8.827 8.801 8.801 8.774 8.747 8.747 8.72 8.693 8.693)) (quote (5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 4.932 4.886 4.886 4.795 4.727 4.727 4.658 4.567 4.567 4.499 4.476 4.476 4.339 4.226 4.134 4.134 4.043 3.907 3.907 3.724 3.542 3.542 3.428 3.337 3.337 3.269 3.2 3.132 3.087 3.087 3.041 2.973 2.904 2.904 2.859 2.836 2.836 2.813 2.813 2.813 2.79 2.79 2.768 2.722 2.699 2.699 2.654 2.608 2.563 2.563 2.517 2.472 2.472 2.426 2.38 2.38 2.335 2.312 2.267 2.244 2.221 2.175 2.175 2.153 2.107 2.107 2.084 2.062 2.062 2.039 2.016 2.016 1.97 1.925 1.925 1.879 1.879 1.856 1.811 1.811 1.765 1.743 1.697 1.674 1.674 1.583 1.583 1.538 1.492 1.492 1.469 1.446 1.446 1.401 1.333 1.333 1.241 1.241 1.173 1.173 1.128 1.128 1.128 1.082 1.036 1.036 1.014 1.014 0.968 0.923 0.877 0.877 0.854 0.831 0.831 0.809 0.809 0.809 0.763 0.74 0.74 0.718 0.695 0.695 0.695 0.695 0.672 0.672 0.649 0.649 0.649 0.626 0.626 0.581 0.558 0.513 0.513 0.467 0.467 0.467 0.467 0.467 0.467 0.444 0.399 0.399 0.353 0.308 0.239 0.216 0.148 0.103 0.057 0.057 0.034 0.011 0.011 -0.034 -0.034 -0.103 -0.103 -0.171 -0.171 -0.262 -0.308 -0.308 -0.33 -0.33 -0.33 -0.33 -0.33 -0.308 -0.262 -0.194 -0.194 -0.148 -0.148 -0.148 -0.103 -0.103 -0.08 -0.034 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.034 -0.034 -0.057 -0.057 -0.08 -0.103 -0.103 -0.148 -0.216 -0.33 -0.33 -0.467 -0.581 -0.604 -0.604 -0.626 -0.626 -0.649 -0.672 -0.672 -0.695 -0.74 -0.786 -0.786 -0.809 -0.9 -0.968 -1.036 -1.105 -1.173 -1.173 -1.196 -1.264 -1.333 -1.333 -1.355 -1.355 -1.401 -1.424 -1.424 -1.424 -1.469 -1.469 -1.469 -1.492 -1.515 -1.515 -1.538 -1.538 -1.56 -1.583 -1.583 -1.629 -1.674 -1.788 -1.788 -1.834 -1.925 -2.016 -2.084 -2.153 -2.198 -2.198 -2.244 -2.312 -2.358 -2.426 -2.494 -2.54 -2.54 -2.563 -2.608 -2.654 -2.699 -2.699 -2.699 -2.699 -2.722 -2.722 -2.722 -2.722 -2.722 -2.745 -2.79 -2.79 -2.813 -2.813 -2.836 -2.836 -2.836 -2.836 -2.882 -2.882 -2.904 -2.927 -2.927 -2.95 -2.95 -2.973 -2.995 -3.018 -3.041 -3.041 -3.041 -3.064 -3.064 -3.087 -3.109 -3.109 -3.132 -3.155 -3.155 -3.178 -3.2 -3.223 -3.223 -3.314 -3.405 -3.405 -3.565 -3.77 -3.77 -3.929 -3.929 -4.066 -4.203 -4.317 -4.408 -4.522 -4.658 -4.658 -4.772 -4.863 -4.909 -4.909 -4.932 -4.932 -4.977 -4.977 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -4.954 -4.863 -4.863 -4.749 -4.749 -4.704 -4.658 -4.658 -4.59 -4.544 -4.476 -4.476 -4.385 -4.271 -4.134 -4.043 -3.907 -3.793 -3.61 -3.36 -3.36 -3.223 -3.223 -3.132 -3.132 -3.018 -2.79 -2.517 -2.335 -2.175 -2.175 -1.97 -1.97 -1.697 -1.378 -1.082 -1.082 -0.831 -0.831 -0.672 -0.672 -0.49 -0.49 -0.239 -0.239 -0.011 0.216 0.399 0.399 0.604 0.604 0.786 0.968 0.968 1.128 1.128 1.333 1.333 1.538 1.788 1.993 2.221 2.221 2.449 2.654 2.813 2.813 2.973 2.973 3.155 3.314 3.474 3.588 3.633 3.633 3.747 3.793 3.884 3.884 3.998 4.089 4.157 4.157 4.294 4.385 4.453 4.476 4.499 4.522 4.522 4.613 4.613 4.658 4.704 4.772 4.772 4.795 4.818 4.818 4.818 4.818 4.818 4.818 4.841 4.841 4.841 4.841 4.863 4.863 4.863 4.886 4.886 4.886 4.886 4.886 4.909 4.932 4.932 4.954 4.954 4.977 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0)) (quotequote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (listnewobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (-0.558 -0.574 -0.607 -0.607 -0.688 -0.784 -0.898 -0.898 -1.011 -1.011 -1.124 -1.221 -1.221 -1.334 -1.334 -1.447 -1.544 -1.544 -1.658 -1.755 -1.755 -1.868 -1.965 -1.965 -2.03 -2.03 -2.03 -2.078 -2.095 -2.095 -2.095 -2.095 -2.078 -2.078 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -1.997 -1.997 -1.997 -1.997 -1.997 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -2.046 -2.046 -2.046 -2.078 -2.095 -2.126 -2.159 -2.159 -2.207 -2.24 -2.272 -2.272 -2.321 -2.386 -2.386 -2.418 -2.498 -2.498 -2.531 -2.596 -2.628 -2.677 -2.709 -2.741 -2.741 -2.79 -2.838 -2.838 -2.854 -2.87 -2.87 -2.87 -2.87 -2.87 -2.838 -2.79 -2.79 -2.693 -2.693 -2.612 -2.515 -2.515 -2.45 -2.402 -2.369 -2.353 -2.353 -2.321 -2.321 -2.305 -2.305 -2.305 -2.305 -2.305 -2.305 -2.321 -2.337 -2.337 -2.369 -2.369 -2.402 -2.402 -2.402 -2.434 -2.434 -2.434 -2.45 -2.45 -2.467 -2.467 -2.498 -2.515 -2.531 -2.531 -2.531 -2.531 -2.531 -2.531 -2.547 -2.547 -2.547 -2.547 -2.547 -2.547 -2.547 -2.547 -2.515 -2.515 -2.498 -2.498 -2.498 -2.434 -2.434 -2.402 -2.402 -2.369 -2.305 -2.191 -2.191 -2.111 -2.062 -2.062 -1.997 -1.997 -1.916 -1.819 -1.723 -1.723 -1.593 -1.48 -1.383 -1.318 -1.205 -1.14 -1.091 -1.091 -1.091 -1.124 -1.124 -1.205 -1.205 -1.302 -1.302 -1.415 -1.415 -1.544 -1.658 -1.658 -1.739 -1.739 -1.787 -1.852 -1.933 -1.965 -2.03 -2.126 -2.126 -2.207 -2.207 -2.256 -2.305 -2.305 -2.353 -2.402 -2.467 -2.531 -2.531 -2.579 -2.579 -2.612 -2.612 -2.644 -2.644 -2.677 -2.677 -2.693 -2.693 -2.693 -2.709 -2.709 -2.709 -2.709 -2.709 -2.693 -2.677 -2.628 -2.628 -2.531 -2.482 -2.482 -2.482 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.482 -2.515 -2.547 -2.596 -2.644 -2.693 -2.693 -2.709 -2.758 -2.806 -2.806 -2.838 -2.838 -2.887 -2.919 -2.935 -2.935 -2.951 -2.984 -2.984 -2.984 -2.984 -2.984 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -2.984 -2.919 -2.919 -2.87 -2.822 -2.774 -2.709 -2.677 -2.644 -2.644 -2.579 -2.531 -2.45 -2.386 -2.305 -2.24 -2.24 -2.207 -2.175 -2.143 -2.111 -2.111 -2.095 -2.095 -2.062 -2.03 -2.03 -2.014 -2.014 -1.981 -1.949 -1.949 -1.9 -1.9 -1.868 -1.868 -1.852 -1.852 -1.803 -1.803 -1.771 -1.755 -1.739 -1.739 -1.739 -1.739 -1.723 -1.723 -1.723 -1.723 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.69 -1.69 -1.625 -1.544 -1.544 -1.48 -1.48 -1.399 -1.27 -1.124 -0.979 -0.833 -0.639 -0.639 -0.412 -0.121 0.17 0.17 0.38 0.38 0.574 0.574 0.768 0.768 0.946 1.108 1.27 1.27 1.415 1.415 1.561 1.561 1.706 1.706 1.868 2.014 2.014 2.111 2.111 2.126 2.159 2.159 2.159 2.159 2.126 2.126 2.095 2.046 2.014 1.981 1.949 1.933 1.9 1.819 1.819 1.771 1.771 1.755 1.755 1.755 1.706 1.642 1.625 1.625 1.625 1.642 1.642 1.69 1.771 1.884 1.884 1.949 1.949 2.014 2.014 2.078 2.078 2.159 2.159 2.224 2.305 2.402 2.402 2.498 2.498 2.596 2.677 2.677 2.741 2.741 2.806 2.806 2.87 2.951 2.984 2.984 2.984 3.0 3.0 2.968 2.968 2.919 2.919 2.854 2.79 2.725 2.66 2.596 2.596 2.515 2.434 2.288 2.288 2.143 2.03 1.9 1.9 1.755 1.593 1.447 1.334 1.221 1.108 1.108 0.93 0.93 0.784 0.639 0.558 0.461 0.348 0.267 0.267 0.186 0.137 0.089 0.089 0.024 -0.024 -0.089 -0.089 -0.154 -0.154 -0.218 -0.267 -0.267 -0.316 -0.396 -0.396 -0.445 -0.493 -0.493 -0.574 -0.574 -0.639 -0.704 -0.719 -0.719 -0.736 -0.752 -0.752 -0.768 -0.784 -0.784)) (quote (3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 2.959 2.932 2.932 2.877 2.836 2.836 2.795 2.74 2.74 2.699 2.686 2.686 2.603 2.536 2.48 2.48 2.426 2.344 2.344 2.234 2.125 2.125 2.057 2.002 2.002 1.961 1.92 1.879 1.852 1.852 1.825 1.784 1.742 1.742 1.715 1.702 1.702 1.688 1.688 1.688 1.674 1.674 1.661 1.633 1.619 1.619 1.592 1.565 1.538 1.538 1.51 1.483 1.483 1.456 1.428 1.428 1.401 1.387 1.36 1.346 1.333 1.305 1.305 1.292 1.264 1.264 1.25 1.237 1.237 1.223 1.21 1.21 1.182 1.155 1.155 1.127 1.127 1.114 1.087 1.087 1.059 1.046 1.018 1.004 1.004 0.95 0.95 0.923 0.895 0.895 0.881 0.868 0.868 0.841 0.8 0.8 0.745 0.745 0.704 0.704 0.677 0.677 0.677 0.649 0.622 0.622 0.608 0.608 0.581 0.554 0.526 0.526 0.512 0.499 0.499 0.485 0.485 0.485 0.458 0.444 0.444 0.431 0.417 0.417 0.417 0.417 0.403 0.403 0.389 0.389 0.389 0.376 0.376 0.349 0.335 0.308 0.308 0.28 0.28 0.28 0.28 0.28 0.28 0.266 0.239 0.239 0.212 0.185 0.143 0.13 0.089 0.062 0.034 0.034 0.02 0.007 0.007 -0.02 -0.02 -0.062 -0.062 -0.103 -0.103 -0.157 -0.185 -0.185 -0.198 -0.198 -0.198 -0.198 -0.198 -0.185 -0.157 -0.116 -0.116 -0.089 -0.089 -0.089 -0.062 -0.062 -0.048 -0.02 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.02 -0.02 -0.034 -0.034 -0.048 -0.062 -0.062 -0.089 -0.13 -0.198 -0.198 -0.28 -0.349 -0.362 -0.362 -0.376 -0.376 -0.389 -0.403 -0.403 -0.417 -0.444 -0.472 -0.472 -0.485 -0.54 -0.581 -0.622 -0.663 -0.704 -0.704 -0.718 -0.758 -0.8 -0.8 -0.813 -0.813 -0.841 -0.854 -0.854 -0.854 -0.881 -0.881 -0.881 -0.895 -0.909 -0.909 -0.923 -0.923 -0.936 -0.95 -0.95 -0.977 -1.004 -1.073 -1.073 -1.1 -1.155 -1.21 -1.25 -1.292 -1.319 -1.319 -1.346 -1.387 -1.415 -1.456 -1.496 -1.524 -1.524 -1.538 -1.565 -1.592 -1.619 -1.619 -1.619 -1.619 -1.633 -1.633 -1.633 -1.633 -1.633 -1.647 -1.674 -1.674 -1.688 -1.688 -1.702 -1.702 -1.702 -1.702 -1.729 -1.729 -1.742 -1.756 -1.756 -1.77 -1.77 -1.784 -1.797 -1.811 -1.825 -1.825 -1.825 -1.838 -1.838 -1.852 -1.865 -1.865 -1.879 -1.893 -1.893 -1.907 -1.92 -1.934 -1.934 -1.988 -2.043 -2.043 -2.139 -2.262 -2.262 -2.357 -2.357 -2.44 -2.522 -2.59 -2.645 -2.713 -2.795 -2.795 -2.863 -2.918 -2.945 -2.945 -2.959 -2.959 -2.986 -2.986 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -2.972 -2.918 -2.918 -2.849 -2.849 -2.822 -2.795 -2.795 -2.754 -2.726 -2.686 -2.686 -2.631 -2.563 -2.48 -2.426 -2.344 -2.276 -2.166 -2.016 -2.016 -1.934 -1.934 -1.879 -1.879 -1.811 -1.674 -1.51 -1.401 -1.305 -1.305 -1.182 -1.182 -1.018 -0.827 -0.649 -0.649 -0.499 -0.499 -0.403 -0.403 -0.294 -0.294 -0.143 -0.143 -0.007 0.13 0.239 0.239 0.362 0.362 0.472 0.581 0.581 0.677 0.677 0.8 0.8 0.923 1.073 1.196 1.333 1.333 1.469 1.592 1.688 1.688 1.784 1.784 1.893 1.988 2.084 2.153 2.18 2.18 2.248 2.276 2.33 2.33 2.399 2.453 2.494 2.494 2.576 2.631 2.672 2.686 2.699 2.713 2.713 2.768 2.768 2.795 2.822 2.863 2.863 2.877 2.891 2.891 2.891 2.891 2.891 2.891 2.905 2.905 2.905 2.905 2.918 2.918 2.918 2.932 2.932 2.932 2.932 2.932 2.945 2.959 2.959 2.972 2.972 2.986 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0)) (quotequote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (listnewobj)) :from-file t)) nil nil (pairlis (quote (winsize winpos picture)) (list (om-make-point 335 275) (om-make-point 10 40) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LIST2112" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 472 281) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPC-LIB3" (quote bpc-lib) (quote ((om-load-inputfun (quote input-funbox) "object" "SELF" nil) (om-load-inputfun (quote input-funbox) "list of BPC objects" "BPF-LIST" (list (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote nil) (quote nil) (quote bpc) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj))))) (om-make-point 456 325) (om-make-point 40 60) (if (find-class (quote bpc-lib) nil) (make-instance (quote bpc-lib) :bpf-list (list (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (-0.93 -0.957 -1.011 -1.011 -1.146 -1.307 -1.496 -1.496 -1.685 -1.685 -1.873 -2.035 -2.035 -2.224 -2.224 -2.412 -2.574 -2.574 -2.763 -2.925 -2.925 -3.113 -3.275 -3.275 -3.383 -3.383 -3.383 -3.464 -3.491 -3.491 -3.491 -3.491 -3.464 -3.464 -3.356 -3.356 -3.356 -3.356 -3.356 -3.356 -3.356 -3.356 -3.329 -3.329 -3.329 -3.329 -3.329 -3.356 -3.356 -3.356 -3.356 -3.356 -3.356 -3.41 -3.41 -3.41 -3.464 -3.491 -3.544 -3.598 -3.598 -3.679 -3.733 -3.787 -3.787 -3.868 -3.976 -3.976 -4.03 -4.164 -4.164 -4.218 -4.326 -4.38 -4.461 -4.515 -4.569 -4.569 -4.65 -4.73 -4.73 -4.757 -4.784 -4.784 -4.784 -4.784 -4.784 -4.73 -4.65 -4.65 -4.488 -4.488 -4.353 -4.191 -4.191 -4.084 -4.003 -3.949 -3.922 -3.922 -3.868 -3.868 -3.841 -3.841 -3.841 -3.841 -3.841 -3.841 -3.868 -3.895 -3.895 -3.949 -3.949 -4.003 -4.003 -4.003 -4.057 -4.057 -4.057 -4.084 -4.084 -4.111 -4.111 -4.164 -4.191 -4.218 -4.218 -4.218 -4.218 -4.218 -4.218 -4.245 -4.245 -4.245 -4.245 -4.245 -4.245 -4.245 -4.245 -4.191 -4.191 -4.164 -4.164 -4.164 -4.057 -4.057 -4.003 -4.003 -3.949 -3.841 -3.652 -3.652 -3.518 -3.437 -3.437 -3.329 -3.329 -3.194 -3.032 -2.871 -2.871 -2.655 -2.466 -2.305 -2.197 -2.008 -1.9 -1.819 -1.819 -1.819 -1.873 -1.873 -2.008 -2.008 -2.17 -2.17 -2.358 -2.358 -2.574 -2.763 -2.763 -2.898 -2.898 -2.978 -3.086 -3.221 -3.275 -3.383 -3.544 -3.544 -3.679 -3.679 -3.76 -3.841 -3.841 -3.922 -4.003 -4.111 -4.218 -4.218 -4.299 -4.299 -4.353 -4.353 -4.407 -4.407 -4.461 -4.461 -4.488 -4.488 -4.488 -4.515 -4.515 -4.515 -4.515 -4.515 -4.488 -4.461 -4.38 -4.38 -4.218 -4.137 -4.137 -4.137 -4.111 -4.111 -4.111 -4.111 -4.111 -4.111 -4.111 -4.111 -4.111 -4.137 -4.191 -4.245 -4.326 -4.407 -4.488 -4.488 -4.515 -4.596 -4.677 -4.677 -4.73 -4.73 -4.811 -4.865 -4.892 -4.892 -4.919 -4.973 -4.973 -4.973 -4.973 -4.973 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -4.973 -4.865 -4.865 -4.784 -4.704 -4.623 -4.515 -4.461 -4.407 -4.407 -4.299 -4.218 -4.084 -3.976 -3.841 -3.733 -3.733 -3.679 -3.625 -3.571 -3.518 -3.518 -3.491 -3.491 -3.437 -3.383 -3.383 -3.356 -3.356 -3.302 -3.248 -3.248 -3.167 -3.167 -3.113 -3.113 -3.086 -3.086 -3.005 -3.005 -2.951 -2.925 -2.898 -2.898 -2.898 -2.898 -2.871 -2.871 -2.871 -2.871 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.817 -2.817 -2.709 -2.574 -2.574 -2.466 -2.466 -2.332 -2.116 -1.873 -1.631 -1.388 -1.065 -1.065 -0.687 -0.202 0.283 0.283 0.633 0.633 0.957 0.957 1.28 1.28 1.577 1.846 2.116 2.116 2.358 2.358 2.601 2.601 2.844 2.844 3.113 3.356 3.356 3.518 3.518 3.544 3.598 3.598 3.598 3.598 3.544 3.544 3.491 3.41 3.356 3.302 3.248 3.221 3.167 3.032 3.032 2.951 2.951 2.925 2.925 2.925 2.844 2.736 2.709 2.709 2.709 2.736 2.736 2.817 2.951 3.14 3.14 3.248 3.248 3.356 3.356 3.464 3.464 3.598 3.598 3.706 3.841 4.003 4.003 4.164 4.164 4.326 4.461 4.461 4.569 4.569 4.677 4.677 4.784 4.919 4.973 4.973 4.973 5.0 5.0 4.946 4.946 4.865 4.865 4.757 4.65 4.542 4.434 4.326 4.326 4.191 4.057 3.814 3.814 3.571 3.383 3.167 3.167 2.925 2.655 2.412 2.224 2.035 1.846 1.846 1.55 1.55 1.307 1.065 0.93 0.768 0.58 0.445 0.445 0.31 0.229 0.148 0.148 0.04 -0.04 -0.148 -0.148 -0.256 -0.256 -0.364 -0.445 -0.445 -0.526 -0.66 -0.66 -0.741 -0.822 -0.822 -0.957 -0.957 -1.065 -1.173 -1.199 -1.199 -1.226 -1.253 -1.253 -1.28 -1.307 -1.307)) (quote (5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 4.932 4.886 4.886 4.795 4.727 4.727 4.658 4.567 4.567 4.499 4.476 4.476 4.339 4.226 4.134 4.134 4.043 3.907 3.907 3.724 3.542 3.542 3.428 3.337 3.337 3.269 3.2 3.132 3.087 3.087 3.041 2.973 2.904 2.904 2.859 2.836 2.836 2.813 2.813 2.813 2.79 2.79 2.768 2.722 2.699 2.699 2.654 2.608 2.563 2.563 2.517 2.472 2.472 2.426 2.38 2.38 2.335 2.312 2.267 2.244 2.221 2.175 2.175 2.153 2.107 2.107 2.084 2.062 2.062 2.039 2.016 2.016 1.97 1.925 1.925 1.879 1.879 1.856 1.811 1.811 1.765 1.743 1.697 1.674 1.674 1.583 1.583 1.538 1.492 1.492 1.469 1.446 1.446 1.401 1.333 1.333 1.241 1.241 1.173 1.173 1.128 1.128 1.128 1.082 1.036 1.036 1.014 1.014 0.968 0.923 0.877 0.877 0.854 0.831 0.831 0.809 0.809 0.809 0.763 0.74 0.74 0.718 0.695 0.695 0.695 0.695 0.672 0.672 0.649 0.649 0.649 0.626 0.626 0.581 0.558 0.513 0.513 0.467 0.467 0.467 0.467 0.467 0.467 0.444 0.399 0.399 0.353 0.308 0.239 0.216 0.148 0.103 0.057 0.057 0.034 0.011 0.011 -0.034 -0.034 -0.103 -0.103 -0.171 -0.171 -0.262 -0.308 -0.308 -0.33 -0.33 -0.33 -0.33 -0.33 -0.308 -0.262 -0.194 -0.194 -0.148 -0.148 -0.148 -0.103 -0.103 -0.08 -0.034 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.034 -0.034 -0.057 -0.057 -0.08 -0.103 -0.103 -0.148 -0.216 -0.33 -0.33 -0.467 -0.581 -0.604 -0.604 -0.626 -0.626 -0.649 -0.672 -0.672 -0.695 -0.74 -0.786 -0.786 -0.809 -0.9 -0.968 -1.036 -1.105 -1.173 -1.173 -1.196 -1.264 -1.333 -1.333 -1.355 -1.355 -1.401 -1.424 -1.424 -1.424 -1.469 -1.469 -1.469 -1.492 -1.515 -1.515 -1.538 -1.538 -1.56 -1.583 -1.583 -1.629 -1.674 -1.788 -1.788 -1.834 -1.925 -2.016 -2.084 -2.153 -2.198 -2.198 -2.244 -2.312 -2.358 -2.426 -2.494 -2.54 -2.54 -2.563 -2.608 -2.654 -2.699 -2.699 -2.699 -2.699 -2.722 -2.722 -2.722 -2.722 -2.722 -2.745 -2.79 -2.79 -2.813 -2.813 -2.836 -2.836 -2.836 -2.836 -2.882 -2.882 -2.904 -2.927 -2.927 -2.95 -2.95 -2.973 -2.995 -3.018 -3.041 -3.041 -3.041 -3.064 -3.064 -3.087 -3.109 -3.109 -3.132 -3.155 -3.155 -3.178 -3.2 -3.223 -3.223 -3.314 -3.405 -3.405 -3.565 -3.77 -3.77 -3.929 -3.929 -4.066 -4.203 -4.317 -4.408 -4.522 -4.658 -4.658 -4.772 -4.863 -4.909 -4.909 -4.932 -4.932 -4.977 -4.977 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -4.954 -4.863 -4.863 -4.749 -4.749 -4.704 -4.658 -4.658 -4.59 -4.544 -4.476 -4.476 -4.385 -4.271 -4.134 -4.043 -3.907 -3.793 -3.61 -3.36 -3.36 -3.223 -3.223 -3.132 -3.132 -3.018 -2.79 -2.517 -2.335 -2.175 -2.175 -1.97 -1.97 -1.697 -1.378 -1.082 -1.082 -0.831 -0.831 -0.672 -0.672 -0.49 -0.49 -0.239 -0.239 -0.011 0.216 0.399 0.399 0.604 0.604 0.786 0.968 0.968 1.128 1.128 1.333 1.333 1.538 1.788 1.993 2.221 2.221 2.449 2.654 2.813 2.813 2.973 2.973 3.155 3.314 3.474 3.588 3.633 3.633 3.747 3.793 3.884 3.884 3.998 4.089 4.157 4.157 4.294 4.385 4.453 4.476 4.499 4.522 4.522 4.613 4.613 4.658 4.704 4.772 4.772 4.795 4.818 4.818 4.818 4.818 4.818 4.818 4.841 4.841 4.841 4.841 4.863 4.863 4.863 4.886 4.886 4.886 4.886 4.886 4.909 4.932 4.932 4.954 4.954 4.977 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0)) (quotequote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (list 0.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0))) newobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (9.07 9.043 8.989 8.989 8.854 8.693 8.504 8.504 8.315 8.315 8.127 7.965 7.965 7.776 7.776 7.588 7.426 7.426 7.237 7.075 7.075 6.887 6.725 6.725 6.617 6.617 6.617 6.536 6.509 6.509 6.509 6.509 6.536 6.536 6.644 6.644 6.644 6.644 6.644 6.644 6.644 6.644 6.671 6.671 6.671 6.671 6.671 6.644 6.644 6.644 6.644 6.644 6.644 6.59 6.59 6.59 6.536 6.509 6.456 6.402 6.402 6.321 6.267 6.213 6.213 6.132 6.024 6.024 5.97 5.836 5.836 5.782 5.674 5.62 5.539 5.485 5.431 5.431 5.35 5.27 5.27 5.243 5.216 5.216 5.216 5.216 5.216 5.27 5.35 5.35 5.512 5.512 5.647 5.809 5.809 5.916 5.997 6.051 6.078 6.078 6.132 6.132 6.159 6.159 6.159 6.159 6.159 6.159 6.132 6.105 6.105 6.051 6.051 5.997 5.997 5.997 5.943 5.943 5.943 5.916 5.916 5.889 5.889 5.836 5.809 5.782 5.782 5.782 5.782 5.782 5.782 5.755 5.755 5.755 5.755 5.755 5.755 5.755 5.755 5.809 5.809 5.836 5.836 5.836 5.943 5.943 5.997 5.997 6.051 6.159 6.348 6.348 6.482 6.563 6.563 6.671 6.671 6.806 6.968 7.129 7.129 7.345 7.534 7.695 7.803 7.992 8.1 8.181 8.181 8.181 8.127 8.127 7.992 7.992 7.83 7.83 7.642 7.642 7.426 7.237 7.237 7.102 7.102 7.022 6.914 6.779 6.725 6.617 6.456 6.456 6.321 6.321 6.24 6.159 6.159 6.078 5.997 5.889 5.782 5.782 5.701 5.701 5.647 5.647 5.593 5.593 5.539 5.539 5.512 5.512 5.512 5.485 5.485 5.485 5.485 5.485 5.512 5.539 5.62 5.62 5.782 5.863 5.863 5.863 5.889 5.889 5.889 5.889 5.889 5.889 5.889 5.889 5.889 5.863 5.809 5.755 5.674 5.593 5.512 5.512 5.485 5.404 5.323 5.323 5.27 5.27 5.189 5.135 5.108 5.108 5.081 5.027 5.027 5.027 5.027 5.027 5.0 5.0 5.0 5.0 5.0 5.0 5.027 5.135 5.135 5.216 5.296 5.377 5.485 5.539 5.593 5.593 5.701 5.782 5.916 6.024 6.159 6.267 6.267 6.321 6.375 6.429 6.482 6.482 6.509 6.509 6.563 6.617 6.617 6.644 6.644 6.698 6.752 6.752 6.833 6.833 6.887 6.887 6.914 6.914 6.995 6.995 7.049 7.075 7.102 7.102 7.102 7.102 7.129 7.129 7.129 7.129 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.183 7.183 7.291 7.426 7.426 7.534 7.534 7.668 7.884 8.127 8.369 8.612 8.935 8.935 9.313 9.798 10.283 10.283 10.633 10.633 10.957 10.957 11.28 11.28 11.577 11.846 12.116 12.116 12.358 12.358 12.601 12.601 12.844 12.844 13.113 13.356 13.356 13.518 13.518 13.544 13.598 13.598 13.598 13.598 13.544 13.544 13.491 13.41 13.356 13.302 13.248 13.221 13.167 13.032 13.032 12.951 12.951 12.925 12.925 12.925 12.844 12.736 12.709 12.709 12.709 12.736 12.736 12.817 12.951 13.14 13.14 13.248 13.248 13.356 13.356 13.464 13.464 13.598 13.598 13.706 13.841 14.003 14.003 14.164 14.164 14.326 14.461 14.461 14.569 14.569 14.677 14.677 14.784 14.919 14.973 14.973 14.973 15.0 15.0 14.946 14.946 14.865 14.865 14.757 14.65 14.542 14.434 14.326 14.326 14.191 14.057 13.814 13.814 13.571 13.383 13.167 13.167 12.925 12.655 12.412 12.224 12.035 11.846 11.846 11.55 11.55 11.307 11.065 10.93 10.768 10.58 10.445 10.445 10.31 10.229 10.148 10.148 10.04 9.96 9.852 9.852 9.744 9.744 9.636 9.555 9.555 9.474 9.34 9.34 9.259 9.178 9.178 9.043 9.043 8.935 8.827 8.801 8.801 8.774 8.747 8.747 8.72 8.693 8.693)) (quote (5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 4.932 4.886 4.886 4.795 4.727 4.727 4.658 4.567 4.567 4.499 4.476 4.476 4.339 4.226 4.134 4.134 4.043 3.907 3.907 3.724 3.542 3.542 3.428 3.337 3.337 3.269 3.2 3.132 3.087 3.087 3.041 2.973 2.904 2.904 2.859 2.836 2.836 2.813 2.813 2.813 2.79 2.79 2.768 2.722 2.699 2.699 2.654 2.608 2.563 2.563 2.517 2.472 2.472 2.426 2.38 2.38 2.335 2.312 2.267 2.244 2.221 2.175 2.175 2.153 2.107 2.107 2.084 2.062 2.062 2.039 2.016 2.016 1.97 1.925 1.925 1.879 1.879 1.856 1.811 1.811 1.765 1.743 1.697 1.674 1.674 1.583 1.583 1.538 1.492 1.492 1.469 1.446 1.446 1.401 1.333 1.333 1.241 1.241 1.173 1.173 1.128 1.128 1.128 1.082 1.036 1.036 1.014 1.014 0.968 0.923 0.877 0.877 0.854 0.831 0.831 0.809 0.809 0.809 0.763 0.74 0.74 0.718 0.695 0.695 0.695 0.695 0.672 0.672 0.649 0.649 0.649 0.626 0.626 0.581 0.558 0.513 0.513 0.467 0.467 0.467 0.467 0.467 0.467 0.444 0.399 0.399 0.353 0.308 0.239 0.216 0.148 0.103 0.057 0.057 0.034 0.011 0.011 -0.034 -0.034 -0.103 -0.103 -0.171 -0.171 -0.262 -0.308 -0.308 -0.33 -0.33 -0.33 -0.33 -0.33 -0.308 -0.262 -0.194 -0.194 -0.148 -0.148 -0.148 -0.103 -0.103 -0.08 -0.034 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.034 -0.034 -0.057 -0.057 -0.08 -0.103 -0.103 -0.148 -0.216 -0.33 -0.33 -0.467 -0.581 -0.604 -0.604 -0.626 -0.626 -0.649 -0.672 -0.672 -0.695 -0.74 -0.786 -0.786 -0.809 -0.9 -0.968 -1.036 -1.105 -1.173 -1.173 -1.196 -1.264 -1.333 -1.333 -1.355 -1.355 -1.401 -1.424 -1.424 -1.424 -1.469 -1.469 -1.469 -1.492 -1.515 -1.515 -1.538 -1.538 -1.56 -1.583 -1.583 -1.629 -1.674 -1.788 -1.788 -1.834 -1.925 -2.016 -2.084 -2.153 -2.198 -2.198 -2.244 -2.312 -2.358 -2.426 -2.494 -2.54 -2.54 -2.563 -2.608 -2.654 -2.699 -2.699 -2.699 -2.699 -2.722 -2.722 -2.722 -2.722 -2.722 -2.745 -2.79 -2.79 -2.813 -2.813 -2.836 -2.836 -2.836 -2.836 -2.882 -2.882 -2.904 -2.927 -2.927 -2.95 -2.95 -2.973 -2.995 -3.018 -3.041 -3.041 -3.041 -3.064 -3.064 -3.087 -3.109 -3.109 -3.132 -3.155 -3.155 -3.178 -3.2 -3.223 -3.223 -3.314 -3.405 -3.405 -3.565 -3.77 -3.77 -3.929 -3.929 -4.066 -4.203 -4.317 -4.408 -4.522 -4.658 -4.658 -4.772 -4.863 -4.909 -4.909 -4.932 -4.932 -4.977 -4.977 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -4.954 -4.863 -4.863 -4.749 -4.749 -4.704 -4.658 -4.658 -4.59 -4.544 -4.476 -4.476 -4.385 -4.271 -4.134 -4.043 -3.907 -3.793 -3.61 -3.36 -3.36 -3.223 -3.223 -3.132 -3.132 -3.018 -2.79 -2.517 -2.335 -2.175 -2.175 -1.97 -1.97 -1.697 -1.378 -1.082 -1.082 -0.831 -0.831 -0.672 -0.672 -0.49 -0.49 -0.239 -0.239 -0.011 0.216 0.399 0.399 0.604 0.604 0.786 0.968 0.968 1.128 1.128 1.333 1.333 1.538 1.788 1.993 2.221 2.221 2.449 2.654 2.813 2.813 2.973 2.973 3.155 3.314 3.474 3.588 3.633 3.633 3.747 3.793 3.884 3.884 3.998 4.089 4.157 4.157 4.294 4.385 4.453 4.476 4.499 4.522 4.522 4.613 4.613 4.658 4.704 4.772 4.772 4.795 4.818 4.818 4.818 4.818 4.818 4.818 4.841 4.841 4.841 4.841 4.863 4.863 4.863 4.886 4.886 4.886 4.886 4.886 4.909 4.932 4.932 4.954 4.954 4.977 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0)) (quotequote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (listnewobj)) :from-file t)) nil nil (pairlis (quote (winsize winpos picture)) (list (om-make-point 335 275) (om-make-point 10 40) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "3DC1" (quote 3dc) (quote ((om-load-inputfun (quote input-funbox) "object" "SELF" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "X-POINTS" (list 0 10)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "Y-POINTS" (list 0 100)) (om-load-inputfun (quote input-funbox) "Z coordinates (list)" "Z-POINTS" (list 0 0)) (om-load-inputfun (quote input-funbox) "precision (number)" "DECIMALS" 0))) (om-make-point 473 115) (om-make-point 60 72) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (-0.93 -0.957 -1.011 -1.011 -1.146 -1.307 -1.496 -1.496 -1.685 -1.685 -1.873 -2.035 -2.035 -2.224 -2.224 -2.412 -2.574 -2.574 -2.763 -2.925 -2.925 -3.113 -3.275 -3.275 -3.383 -3.383 -3.383 -3.464 -3.491 -3.491 -3.491 -3.491 -3.464 -3.464 -3.356 -3.356 -3.356 -3.356 -3.356 -3.356 -3.356 -3.356 -3.329 -3.329 -3.329 -3.329 -3.329 -3.356 -3.356 -3.356 -3.356 -3.356 -3.356 -3.41 -3.41 -3.41 -3.464 -3.491 -3.544 -3.598 -3.598 -3.679 -3.733 -3.787 -3.787 -3.868 -3.976 -3.976 -4.03 -4.164 -4.164 -4.218 -4.326 -4.38 -4.461 -4.515 -4.569 -4.569 -4.65 -4.73 -4.73 -4.757 -4.784 -4.784 -4.784 -4.784 -4.784 -4.73 -4.65 -4.65 -4.488 -4.488 -4.353 -4.191 -4.191 -4.084 -4.003 -3.949 -3.922 -3.922 -3.868 -3.868 -3.841 -3.841 -3.841 -3.841 -3.841 -3.841 -3.868 -3.895 -3.895 -3.949 -3.949 -4.003 -4.003 -4.003 -4.057 -4.057 -4.057 -4.084 -4.084 -4.111 -4.111 -4.164 -4.191 -4.218 -4.218 -4.218 -4.218 -4.218 -4.218 -4.245 -4.245 -4.245 -4.245 -4.245 -4.245 -4.245 -4.245 -4.191 -4.191 -4.164 -4.164 -4.164 -4.057 -4.057 -4.003 -4.003 -3.949 -3.841 -3.652 -3.652 -3.518 -3.437 -3.437 -3.329 -3.329 -3.194 -3.032 -2.871 -2.871 -2.655 -2.466 -2.305 -2.197 -2.008 -1.9 -1.819 -1.819 -1.819 -1.873 -1.873 -2.008 -2.008 -2.17 -2.17 -2.358 -2.358 -2.574 -2.763 -2.763 -2.898 -2.898 -2.978 -3.086 -3.221 -3.275 -3.383 -3.544 -3.544 -3.679 -3.679 -3.76 -3.841 -3.841 -3.922 -4.003 -4.111 -4.218 -4.218 -4.299 -4.299 -4.353 -4.353 -4.407 -4.407 -4.461 -4.461 -4.488 -4.488 -4.488 -4.515 -4.515 -4.515 -4.515 -4.515 -4.488 -4.461 -4.38 -4.38 -4.218 -4.137 -4.137 -4.137 -4.111 -4.111 -4.111 -4.111 -4.111 -4.111 -4.111 -4.111 -4.111 -4.137 -4.191 -4.245 -4.326 -4.407 -4.488 -4.488 -4.515 -4.596 -4.677 -4.677 -4.73 -4.73 -4.811 -4.865 -4.892 -4.892 -4.919 -4.973 -4.973 -4.973 -4.973 -4.973 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -4.973 -4.865 -4.865 -4.784 -4.704 -4.623 -4.515 -4.461 -4.407 -4.407 -4.299 -4.218 -4.084 -3.976 -3.841 -3.733 -3.733 -3.679 -3.625 -3.571 -3.518 -3.518 -3.491 -3.491 -3.437 -3.383 -3.383 -3.356 -3.356 -3.302 -3.248 -3.248 -3.167 -3.167 -3.113 -3.113 -3.086 -3.086 -3.005 -3.005 -2.951 -2.925 -2.898 -2.898 -2.898 -2.898 -2.871 -2.871 -2.871 -2.871 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.817 -2.817 -2.709 -2.574 -2.574 -2.466 -2.466 -2.332 -2.116 -1.873 -1.631 -1.388 -1.065 -1.065 -0.687 -0.202 0.283 0.283 0.633 0.633 0.957 0.957 1.28 1.28 1.577 1.846 2.116 2.116 2.358 2.358 2.601 2.601 2.844 2.844 3.113 3.356 3.356 3.518 3.518 3.544 3.598 3.598 3.598 3.598 3.544 3.544 3.491 3.41 3.356 3.302 3.248 3.221 3.167 3.032 3.032 2.951 2.951 2.925 2.925 2.925 2.844 2.736 2.709 2.709 2.709 2.736 2.736 2.817 2.951 3.14 3.14 3.248 3.248 3.356 3.356 3.464 3.464 3.598 3.598 3.706 3.841 4.003 4.003 4.164 4.164 4.326 4.461 4.461 4.569 4.569 4.677 4.677 4.784 4.919 4.973 4.973 4.973 5.0 5.0 4.946 4.946 4.865 4.865 4.757 4.65 4.542 4.434 4.326 4.326 4.191 4.057 3.814 3.814 3.571 3.383 3.167 3.167 2.925 2.655 2.412 2.224 2.035 1.846 1.846 1.55 1.55 1.307 1.065 0.93 0.768 0.58 0.445 0.445 0.31 0.229 0.148 0.148 0.04 -0.04 -0.148 -0.148 -0.256 -0.256 -0.364 -0.445 -0.445 -0.526 -0.66 -0.66 -0.741 -0.822 -0.822 -0.957 -0.957 -1.065 -1.173 -1.199 -1.199 -1.226 -1.253 -1.253 -1.28 -1.307 -1.307)) (quote (5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 4.932 4.886 4.886 4.795 4.727 4.727 4.658 4.567 4.567 4.499 4.476 4.476 4.339 4.226 4.134 4.134 4.043 3.907 3.907 3.724 3.542 3.542 3.428 3.337 3.337 3.269 3.2 3.132 3.087 3.087 3.041 2.973 2.904 2.904 2.859 2.836 2.836 2.813 2.813 2.813 2.79 2.79 2.768 2.722 2.699 2.699 2.654 2.608 2.563 2.563 2.517 2.472 2.472 2.426 2.38 2.38 2.335 2.312 2.267 2.244 2.221 2.175 2.175 2.153 2.107 2.107 2.084 2.062 2.062 2.039 2.016 2.016 1.97 1.925 1.925 1.879 1.879 1.856 1.811 1.811 1.765 1.743 1.697 1.674 1.674 1.583 1.583 1.538 1.492 1.492 1.469 1.446 1.446 1.401 1.333 1.333 1.241 1.241 1.173 1.173 1.128 1.128 1.128 1.082 1.036 1.036 1.014 1.014 0.968 0.923 0.877 0.877 0.854 0.831 0.831 0.809 0.809 0.809 0.763 0.74 0.74 0.718 0.695 0.695 0.695 0.695 0.672 0.672 0.649 0.649 0.649 0.626 0.626 0.581 0.558 0.513 0.513 0.467 0.467 0.467 0.467 0.467 0.467 0.444 0.399 0.399 0.353 0.308 0.239 0.216 0.148 0.103 0.057 0.057 0.034 0.011 0.011 -0.034 -0.034 -0.103 -0.103 -0.171 -0.171 -0.262 -0.308 -0.308 -0.33 -0.33 -0.33 -0.33 -0.33 -0.308 -0.262 -0.194 -0.194 -0.148 -0.148 -0.148 -0.103 -0.103 -0.08 -0.034 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.034 -0.034 -0.057 -0.057 -0.08 -0.103 -0.103 -0.148 -0.216 -0.33 -0.33 -0.467 -0.581 -0.604 -0.604 -0.626 -0.626 -0.649 -0.672 -0.672 -0.695 -0.74 -0.786 -0.786 -0.809 -0.9 -0.968 -1.036 -1.105 -1.173 -1.173 -1.196 -1.264 -1.333 -1.333 -1.355 -1.355 -1.401 -1.424 -1.424 -1.424 -1.469 -1.469 -1.469 -1.492 -1.515 -1.515 -1.538 -1.538 -1.56 -1.583 -1.583 -1.629 -1.674 -1.788 -1.788 -1.834 -1.925 -2.016 -2.084 -2.153 -2.198 -2.198 -2.244 -2.312 -2.358 -2.426 -2.494 -2.54 -2.54 -2.563 -2.608 -2.654 -2.699 -2.699 -2.699 -2.699 -2.722 -2.722 -2.722 -2.722 -2.722 -2.745 -2.79 -2.79 -2.813 -2.813 -2.836 -2.836 -2.836 -2.836 -2.882 -2.882 -2.904 -2.927 -2.927 -2.95 -2.95 -2.973 -2.995 -3.018 -3.041 -3.041 -3.041 -3.064 -3.064 -3.087 -3.109 -3.109 -3.132 -3.155 -3.155 -3.178 -3.2 -3.223 -3.223 -3.314 -3.405 -3.405 -3.565 -3.77 -3.77 -3.929 -3.929 -4.066 -4.203 -4.317 -4.408 -4.522 -4.658 -4.658 -4.772 -4.863 -4.909 -4.909 -4.932 -4.932 -4.977 -4.977 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -4.954 -4.863 -4.863 -4.749 -4.749 -4.704 -4.658 -4.658 -4.59 -4.544 -4.476 -4.476 -4.385 -4.271 -4.134 -4.043 -3.907 -3.793 -3.61 -3.36 -3.36 -3.223 -3.223 -3.132 -3.132 -3.018 -2.79 -2.517 -2.335 -2.175 -2.175 -1.97 -1.97 -1.697 -1.378 -1.082 -1.082 -0.831 -0.831 -0.672 -0.672 -0.49 -0.49 -0.239 -0.239 -0.011 0.216 0.399 0.399 0.604 0.604 0.786 0.968 0.968 1.128 1.128 1.333 1.333 1.538 1.788 1.993 2.221 2.221 2.449 2.654 2.813 2.813 2.973 2.973 3.155 3.314 3.474 3.588 3.633 3.633 3.747 3.793 3.884 3.884 3.998 4.089 4.157 4.157 4.294 4.385 4.453 4.476 4.499 4.522 4.522 4.613 4.613 4.658 4.704 4.772 4.772 4.795 4.818 4.818 4.818 4.818 4.818 4.818 4.841 4.841 4.841 4.841 4.863 4.863 4.863 4.886 4.886 4.886 4.886 4.886 4.909 4.932 4.932 4.954 4.954 4.977 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0)) (quotequote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf "3DC1") newbpf)))) (when newobj (setf (z-points newobj) (listnewobj) "x" nil (pairlis (quote (picture mode winpos winsize)) (list nil 0 (om-make-point 600 156) (om-make-point 800 800))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPF41" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "object" "SELF" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "X-POINTS" (list 0 10)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "Y-POINTS" (list 1 1 1 2 45 2 1 1 1)) (om-load-inputfun (quote input-funbox) "precision (integer)" "DECIMALS" 5))) (om-make-point 990 179) (om-make-point 40 60) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 10.0 20.0 30.0 40.0 50.0 60.0 70.0 80.0)) (quote (1.0 1.0 1.0 2.0 45.0 2.0 1.0 1.0 1.0)) (quote bpf) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf "BPF41") newbpf)))) (when newobj) newobj) "x" nil (pairlis (quote (picture winpos winsize)) (list nil (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "3DC-LIB1" (quote 3dc-lib) (quote ((om-load-inputfun (quote input-funbox) "object" "SELF" nil) (om-load-inputfun (quote input-funbox) "list of 3DC objects" "BPF-LIST" (list (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote nil) (quote nil) (quote nil) (quote 3dc) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) nil)) newobj))))) (om-make-point 942 362) (om-make-point 76 86) (if (find-class (quote 3dc-lib) nil) (make-instance (quote 3dc-lib) :bpf-list (list (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (0.0 0.0 1.0 3.0 5.0 8.0 10.0 13.0 16.0 18.0 20.0 21.0 21.0 20.0 18.0 15.0 11.0 6.0 0.0 -7.0 -14.0 -21.0 -28.0 -35.0 -42.0 -47.0 -51.0 -54.0 -55.0 -55.0 -52.0 -47.0 -41.0 -33.0 -23.0 -12.0 0.0 13.0 26.0 39.0 51.0 63.0 73.0 81.0 87.0 90.0 91.0 88.0 83.0 75.0 64.0 51.0 36.0 18.0 0.0 -19.0 -38.0 -57.0 -75.0 -90.0 -104.0 -115.0 -122.0 -126.0 -126.0 -122.0 -114.0 -103.0 -87.0 -69.0 -48.0 -25.0 0.0 25.0 51.0 75.0 98.0 118.0 135.0 148.0 158.0 162.0 162.0 156.0 145.0 130.0 111.0 87.0 60.0 31.0 0.0 -32.0 -59.0 -93.0 -121.0 -146.0 -166.0 -182.0 -193.0 -198.0 -197.0 -190.0 -177.0 -158.0 -134.0 -105.0 -73.0 -37.0 0.0 38.0 75.0 111.0 144.0 173.0 197.0 216.0 228.0 234.0 232.0 224.0 208.0 185.0 157.0 123.0 85.0 43.0 0.0 -44.0 -88.0 -129.0 -167.0 -201.0 -229.0 -250.0 -264.0 -270.0 -268.0 -257.0 -239.0 -213.0 -180.0 -141.0 -97.0 -50.0 0.0 50.0 100.0 147.0 190.0 232.0 260.0 284.0 299.0 306.0 303.0 291.0 270.0 241.0 203.0 159.0 109.0 56.0 0.0 -57.0 -112.0 -165.0 -213.0 -256.0 -291.0 -318.0 -335.0 -342.0 -339.0 -325.0 -301.0 -268.0 -226.0 -177.0 -122.0 -62.0 0.0)) (quote (0.0 2.0 4.0 5.0 6.0 6.0 6.0 5.0 3.0 0.0 -3.0 -8.0 -12.0 -17.0 -21.0 -26.0 -30.0 -33.0 -36.0 -37.0 -38.0 -36.0 -34.0 -30.0 -24.0 -17.0 -9.0 0.0 10.0 20.0 30.0 40.0 49.0 57.0 64.0 69.0 72.0 73.0 71.0 68.0 61.0 53.0 42.0 29.0 15.0 0.0 -16.0 -32.0 -48.0 -63.0 -77.0 -88.0 -98.0 -104.0 -108.0 -108.0 -105.0 -99.0 -89.0 -76.0 -60.0 -42.0 -22.0 0.0 22.0 44.0 66.0 86.0 104.0 120.0 132.0 140.0 144.0 144.0 139.0 130.0 116.0 99.0 78.0 54.0 28.0 0.0 -28.0 -57.0 -84.0 -109.0 -132.0 -151.0 -165.0 -175.0 -180.0 -179.0 -173.0 -161.0 -144.0 -122.0 -96.0 -66.0 -34.0 0.0 35.0 69.0 102.0 132.0 159.0 182.0 199.0 211.0 216.0 215.0 207.0 192.0 172.0 145.0 114.0 79.0 40.0 0.0 -41.0 -81.0 -120.0 -156.0 -187.0 -213.0 -233.0 -246.0 -252.0 -250.0 -241.0 -223.0 -199.0 -168.0 -132.0 -91.0 -47.0 0.0 47.0 94.0 138.0 179.0 214.0 244.0 267.0 282.0 288.0 286.0 274.0 255.0 227.0 192.0 150.0 103.0 53.0 0.0 -53.0 -106.0 -156.0 -202.0 -242.0 -275.0 -301.0 -317.0 -324.0 -321.0 -308.0 -286.0 -254.0 -215.0 -168.0 -116.0 -59.0 0.0 60.0 118.0 174.0 225.0 270.0 307.0 335.0 353.0 360.0)) (quote (0.0 2.0 4.0 6.0 8.0 10.0 12.0 14.0 16.0 18.0 20.0 22.0 24.0 26.0 28.0 30.0 32.0 34.0 36.0 38.0 40.0 42.0 44.0 46.0 48.0 50.0 52.0 54.0 56.0 58.0 60.0 62.0 64.0 66.0 68.0 70.0 72.0 74.0 76.0 78.0 80.0 82.0 84.0 86.0 88.0 90.0 92.0 94.0 96.0 98.0 100.0 102.0 104.0 106.0 108.0 110.0 112.0 114.0 116.0 118.0 120.0 122.0 124.0 126.0 128.0 130.0 132.0 134.0 136.0 138.0 140.0 142.0 144.0 146.0 148.0 150.0 152.0 154.0 156.0 158.0 160.0 162.0 164.0 166.0 168.0 170.0 172.0 174.0 176.0 178.0 180.0 182.0 184.0 186.0 188.0 190.0 192.0 194.0 196.0 198.0 200.0 202.0 204.0 206.0 208.0 210.0 212.0 214.0 216.0 218.0 220.0 222.0 224.0 226.0 228.0 230.0 232.0 234.0 236.0 238.0 240.0 242.0 244.0 246.0 248.0 250.0 252.0 254.0 256.0 258.0 260.0 262.0 264.0 266.0 268.0 270.0 272.0 274.0 276.0 278.0 280.0 282.0 284.0 286.0 288.0 290.0 292.0 294.0 296.0 298.0 300.0 302.0 304.0 306.0 308.0 310.0 312.0 314.0 316.0 318.0 320.0 322.0 324.0 326.0 328.0 330.0 332.0 334.0 336.0 338.0 340.0 342.0 344.0 346.0 348.0 350.0 352.0 354.0 356.0 358.0 360.0)) (quote 3dc) 5))) (setf (bpfcolor newbpf) (om-make-color 1.0 0.0 0.72708607)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (list 0.0 2.0 4.0 6.0 8.0 10.0 12.0 14.0 16.0 18.0 20.0 22.0 24.0 26.0 28.0 30.0 32.0 34.0 36.0 38.0 40.0 42.0 44.0 46.0 48.0 50.0 52.0 54.0 56.0 58.0 60.0 62.0 64.0 66.0 68.0 70.0 72.0 74.0 76.0 78.0 80.0 82.0 84.0 86.0 88.0 90.0 92.0 94.0 96.0 98.0 100.0 102.0 104.0 106.0 108.0 110.0 112.0 114.0 116.0 118.0 120.0 122.0 124.0 126.0 128.0 130.0 132.0 134.0 136.0 138.0 140.0 142.0 144.0 146.0 148.0 150.0 152.0 154.0 156.0 158.0 160.0 162.0 164.0 166.0 168.0 170.0 172.0 174.0 176.0 178.0 180.0 182.0 184.0 186.0 188.0 190.0 192.0 194.0 196.0 198.0 200.0 202.0 204.0 206.0 208.0 210.0 212.0 214.0 216.0 218.0 220.0 222.0 224.0 226.0 228.0 230.0 232.0 234.0 236.0 238.0 240.0 242.0 244.0 246.0 248.0 250.0 252.0 254.0 256.0 258.0 260.0 262.0 264.0 266.0 268.0 270.0 272.0 274.0 276.0 278.0 280.0 282.0 284.0 286.0 288.0 290.0 292.0 294.0 296.0 298.0 300.0 302.0 304.0 306.0 308.0 310.0 312.0 314.0 316.0 318.0 320.0 322.0 324.0 326.0 328.0 330.0 332.0 334.0 336.0 338.0 340.0 342.0 344.0 346.0 348.0 350.0 352.0 354.0 356.0 358.0 360.0))) newobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (0.0 0.0 0.99176 3.02348 4.9828 8.06518 10.04444 13.12517 15.99624 18.11607 20.1633 21.00055 20.84727 20.16471 18.00343 15.05143 10.91427 6.00119 0.0 -7.04842 -14.10572 -20.90453 -27.88345 -35.0715 -42.2356 -47.07753 -50.80295 -53.82488 -55.00302 -55.22153 -52.09741 -47.36414 -40.80301 -33.30841 -23.13405 -12.10378 0.0 13.08408 25.92848 39.28136 50.59352 62.6943 73.63207 81.75205 86.83888 89.65588 90.29524 87.59442 83.26043 74.72087 63.92568 51.5917 36.19427 17.87158 0.0 -18.8802 -37.49681 -57.31943 -74.43305 -89.58346 -104.15794 -114.38552 -121.35304 -127.92284 -124.4458 -121.69688 -112.23938 -102.2633 -88.63712 -71.01924 -47.34074 -23.4724 0.0 23.7386 55.93579 86.72292 99.02698 113.35568 108.9166 157.77956 198.05007 170.85378 196.6641 131.03324 187.54718 105.7027 84.76752 61.9184 46.44289 18.52446 0.0 -35.90792 -42.6307 -75.42699 -98.38772 -133.0429 -136.08368 -216.50339 -179.9132 -235.15923 -200.22417 -176.38593 -159.51934 -147.27169 -112.0357 -115.90948 -82.53305 -33.98517 0.0 37.77161 71.8302 115.41214 142.24195 170.44408 194.61782 216.05689 228.9114 231.25185 232.32929 225.26879 210.77568 186.23087 157.77228 122.36732 85.63092 42.90634 0.0 -43.82004 -88.35442 -130.40924 -167.82903 -200.71085 -229.1434 -251.77494 -266.19446 -272.11548 -270.60815 -256.66183 -238.73467 -214.46845 -179.4868 -141.48879 -97.75884 -50.43336 0.0 49.79759 99.99076 145.55548 190.66297 233.50243 260.4182 283.735 297.90634 306.2486 305.85144 293.20117 267.85202 239.69617 204.79674 159.9688 108.75356 56.13312 0.0 -57.36806 -112.80986 -165.98847 -211.83623 -256.51566 -290.91187 -314.835 -335.784 -344.38193 -338.0794 -323.34863 -300.11914 -265.43887 -224.6282 -176.30194 -122.31104 -62.03327 0.0)) (quote (0.0 1.99833 3.98545 4.98219 5.97842 5.98206 6.02251 5.01975 2.97711 0.0 -3.02514 -7.9915 -11.99081 -16.89993 -20.80577 -25.81129 -29.87222 -32.99762 -35.99575 -37.22066 -38.10346 -35.78493 -34.00155 -30.22327 -24.19756 -17.046 -9.06526 0.0 9.94574 20.11591 30.25618 39.64889 48.89412 56.77886 63.44409 68.78334 71.32112 73.58267 71.62001 68.01883 60.50847 53.50769 42.25246 28.85683 14.86486 0.0 -15.87235 -31.83641 -48.17132 -62.34565 -77.17607 -88.79404 -97.52872 -104.2973 -107.55488 -109.09262 -105.3883 -98.65884 -89.45832 -75.70173 -60.17328 -42.19274 -22.10229 0.0 22.32302 43.5801 66.54835 85.1673 106.48384 117.14012 132.93569 131.57878 145.62274 140.0988 138.69138 130.7602 99.39566 88.022 87.01134 47.77136 24.37827 0.0 -29.79248 -52.54498 -87.43948 -123.95442 -90.22252 -115.9038 -139.60062 -108.32058 -144.96868 -225.7594 -129.08492 -106.14334 -117.20796 -124.77702 -76.18719 -76.24536 -35.36233 0.0 32.15428 53.34983 120.76894 121.84992 161.75386 179.85408 210.07984 193.39194 195.22602 230.93758 216.21022 195.75096 174.24747 145.9337 113.51408 79.97252 40.29299 0.0 -40.89942 -80.83274 -119.84128 -157.633 -189.23194 -213.64092 -233.55036 -242.9498 -254.55712 -252.97678 -243.88303 -221.36695 -197.90166 -167.0948 -132.56352 -90.18294 -47.44269 0.0 46.7843 94.50042 137.68788 178.6137 211.9103 244.65479 268.34964 282.10254 285.73288 287.0374 275.5886 255.74187 226.1908 191.59493 148.8944 103.41542 53.29507 0.0 -53.12108 -106.4566 -154.4545 -201.031 -240.65665 -276.28937 -300.75446 -317.33862 -323.6011 -323.81406 -307.76843 -285.73376 -252.6753 -216.15755 -166.55902 -116.26854 -58.81595 0.0 60.38958 118.16786 172.82366 225.4545 267.98395 305.2338 333.6245 350.00266 360.0)) (quote (0.0 2.00763 4.01361 6.03931 8.03355 10.02533 12.01203 13.97322 16.13255 17.8343 20.13492 21.78117 24.11334 25.87983 27.97694 29.89432 32.1153 34.14103 36.22178 37.6217 40.35214 41.91366 44.01502 45.80966 47.89661 49.9485 51.55908 53.80984 55.8231 58.06353 60.19741 61.54945 64.35091 65.73141 68.07627 69.54439 71.5784 74.62342 76.42153 78.65425 79.96255 82.62181 84.19822 85.62882 88.27166 89.7151 92.69998 94.11112 95.01972 97.31368 100.08868 102.35336 104.3551 106.82496 107.39004 109.8881 113.55638 113.59338 117.40658 119.27828 119.88542 120.671 125.45242 126.07396 129.02207 130.5925 129.55175 136.2434 138.41606 133.8105 134.96002 148.33936 129.06282 147.40666 151.28362 126.84342 141.13626 159.67385 180.58428 151.57138 156.66326 135.71582 132.4195 116.24926 207.00623 226.67034 145.07234 107.44976 129.14186 131.19605 120.1361 216.78339 254.5269 135.43196 150.56696 242.50904 147.76634 238.30643 217.16992 214.0552 195.40479 193.41274 200.81774 219.48653 226.5536 231.45055 221.55956 221.13544 205.40108 227.66918 234.30393 223.30536 218.4275 230.1512 225.29459 226.9337 236.17136 236.10428 236.88094 240.2572 243.05146 242.82453 243.58712 247.08422 249.07656 247.989 253.22148 252.50542 255.25896 259.20096 262.7798 264.22137 264.6721 265.39056 265.3136 268.8516 270.04324 272.46146 278.723 280.54462 277.42538 282.67282 286.57788 283.5765 289.35638 288.07526 292.6374 295.76163 295.73386 298.37527 299.6367 300.49435 303.1823 306.5093 306.8639 307.04675 314.24298 315.1464 313.0409 320.881 322.4037 322.815 322.2258 327.92654 328.649 330.09415 329.71225 335.33496 335.06775 339.73215 341.9517 339.9811 341.72464 344.03873 345.4398 353.29367 348.68835 357.2517 357.20648 354.99997 360.0)) (quote 3dc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (list 0.0 2.00763 4.01361 6.03931 8.03355 10.02533 12.01203 13.97322 16.13255 17.8343 20.13492 21.78117 24.11334 25.87983 27.97694 29.89432 32.1153 34.14103 36.22178 37.6217 40.35214 41.91366 44.01502 45.80966 47.89661 49.9485 51.55908 53.80984 55.8231 58.06353 60.19741 61.54945 64.35091 65.73141 68.07627 69.54439 71.5784 74.62342 76.42153 78.65425 79.96255 82.62181 84.19822 85.62882 88.27166 89.7151 92.69998 94.11112 95.01972 97.31368 100.08868 102.35336 104.3551 106.82496 107.39004 109.8881 113.55638 113.59338 117.40658 119.27828 119.88542 120.671 125.45242 126.07396 129.02207 130.5925 129.55175 136.2434 138.41606 133.8105 134.96002 148.33936 129.06282 147.40666 151.28362 126.84342 141.13626 159.67385 180.58428 151.57138 156.66326 135.71582 132.4195 116.24926 207.00623 226.67034 145.07234 107.44976 129.14186 131.19605 120.1361 216.78339 254.5269 135.43196 150.56696 242.50904 147.76634 238.30643 217.16992 214.0552 195.40479 193.41274 200.81774 219.48653 226.5536 231.45055 221.55956 221.13544 205.40108 227.66918 234.30393 223.30536 218.4275 230.1512 225.29459 226.9337 236.17136 236.10428 236.88094 240.2572 243.05146 242.82453 243.58712 247.08422 249.07656 247.989 253.22148 252.50542 255.25896 259.20096 262.7798 264.22137 264.6721 265.39056 265.3136 268.8516 270.04324 272.46146 278.723 280.54462 277.42538 282.67282 286.57788 283.5765 289.35638 288.07526 292.6374 295.76163 295.73386 298.37527 299.6367 300.49435 303.1823 306.5093 306.8639 307.04675 314.24298 315.1464 313.0409 320.881 322.4037 322.815 322.2258 327.92654 328.649 330.09415 329.71225 335.33496 335.06775 339.73215 341.9517 339.9811 341.72464 344.03873 345.4398 353.29367 348.68835 357.2517 357.20648 354.99997 360.0))) newobj)) :from-file t)) nil nil (pairlis (quote (winsize winpos picture)) (list (om-make-point 979 788) (om-make-point 10 40) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LIST1" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 897 310) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux4" (quote t) (quote nil) (om-make-point 606 238) (om-make-point 26 30) -3 "-3" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux3" (quote t) (quote nil) (om-make-point 567 183) (om-make-point 28 30) 10 "10" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment112" (om-make-point 74 28) (quote "...splined...") "" (om-make-point 1098 434) nil (om-make-color 0.02832079 0.0 1.0) (om-make-font "Arial" 12 :family "Arial" :style (quote (:italic)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "SPLINES" (quote splines) (quote ((om-load-inputfun (quote input-funbox) "bpf or bpc" "SELF" nil))) (om-make-point 1178 421) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "TRAJ-TRANSLATE" (quote traj-translate) (quote ((om-load-inputfun (quote input-funbox) "a bpc, 3DC or board" "SELF" nil) (om-load-inputkeyword (quote input-keyword) "Choose from this list (:x :y :z)" "Keyword input" (quote :x) nil nil))) (om-make-point 509 216) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LIST2111" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 601 417) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LIST211" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 540 351) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "3DC-LIB" (quote 3dc-lib) (quote ((om-load-inputfun (quote input-funbox) "object" "SELF" nil) (om-load-inputfun (quote input-funbox) "list of 3DC objects" "BPF-LIST" (list (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote nil) (quote nil) (quote nil) (quote 3dc) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) nil)) newobj))))) (om-make-point 133 644) (om-make-point 84 86) (if (find-class (quote 3dc-lib) nil) (make-instance (quote 3dc-lib) :bpf-list (list (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (0.0 1.9999998 3.9999996 5.0 6.0000014 6.0000005 5.999998 4.9999995 3.0000015 0.0 -2.9999988 -7.999995 -11.999991 -16.999995 -20.999995 -25.99999 -29.999993 -32.99999 -35.999993 -36.999993 -37.999997 -35.999985 -33.999993 -30.000006 -23.99999 -16.999995 -9.000002 0.0 9.999991 19.999995 29.999985 39.99998 48.999985 56.99999 64.00001 69.0 72.00002 73.00003 71.00004 68.00006 61.000065 53.000088 42.000073 29.000073 15.000073 7.19054E-5 -15.999939 -31.999949 -47.99995 -62.99994 -76.999955 -87.99996 -97.99995 -103.999955 -107.99994 -107.99992 -104.99994 -98.99994 -88.99993 -75.99992 -59.999894 -41.99991 -21.999882 1.006675E-4 22.000065 44.000073 66.000046 86.00003 104.00003 120.00003 132.00005 140.00005 144.00005 144.00003 139.00005 130.00006 116.00005 99.00009 78.00005 54.00008 28.000082 8.62865E-5 -27.999913 -56.99993 -83.9999 -108.999886 -131.99988 -150.99983 -164.99985 -174.99982 -179.99982 -178.99977 -172.99982 -160.99976 -143.99974 -121.99971 -95.999726 -65.99975 -33.999794 1.581916E-4 35.0001 69.000046 101.99999 132.00002 159.00003 182.00002 199.00005 211.00008 216.0001 215.00017 207.0002 192.00025 172.00029 145.00028 114.000275 79.00025 40.00024 1.869541E-4 -40.99986 -80.99986 -119.99981 -155.99983 -186.99977 -212.99973 -232.9997 -245.99968 -251.99965 -249.99958 -240.99968 -222.9996 -198.99959 -167.99962 -131.99956 -90.9996 -46.999627 3.595265E-4 47.000283 94.000275 138.00026 179.00026 214.00034 244.00038 267.00034 282.0004 288.00046 286.00046 274.0005 255.00052 227.00054 192.00057 150.00058 103.00061 53.000515 4.889569E-4 -52.99955 -105.99951 -155.9996 -201.99959 -241.9996 -274.99945 -300.99948 -316.99942 -323.9994 -320.99933 -307.9993 -285.9993 -253.99927 -214.99916 -167.99924 -115.99923 -58.999295 7.286404E-4 60.000687 118.00063 174.00064 225.00063 270.0007 307.00073 335.00076 353.0008 360.0009)) (quote (0.0 1.9999998 3.9999996 5.9999995 8.0 9.999998 11.999999 14.0 16.000002 18.0 20.000002 22.000004 24.000004 26.000006 28.000004 30.000008 32.000008 34.00001 36.00001 38.000016 40.00001 42.00002 44.000008 46.000004 47.999993 49.999993 51.99999 53.999985 55.999993 57.99999 59.999985 61.999985 63.99999 66.0 68.0 69.99999 71.999985 73.99998 75.999985 77.99997 79.99997 81.99997 83.99999 86.00001 88.000016 90.00002 92.00002 94.00003 96.000046 98.00007 100.00007 102.00004 104.00006 106.00005 108.00005 110.00005 112.00004 114.000046 116.000016 118.000046 120.00003 122.00001 123.999985 125.99996 127.99996 129.99993 131.99996 133.99996 135.99994 137.99994 139.99994 141.99996 143.99997 145.99997 147.99997 150.0 152.0 154.00003 156.00005 158.00006 160.00008 162.00008 164.00009 166.0001 168.00016 170.00012 172.00017 174.0002 176.00022 178.0002 180.0002 182.00017 184.00012 186.00012 188.00009 190.00005 191.99997 193.99996 195.99987 197.99982 199.99974 201.99973 203.99976 205.99979 207.99983 209.99979 211.99985 213.99987 215.99988 217.99991 219.99993 221.99996 223.99996 226.00003 228.00014 230.00017 232.00022 234.00022 236.00032 238.0003 240.00028 242.00035 244.00034 246.00037 248.00037 250.00037 252.0003 254.00032 256.00024 258.00018 260.0002 262.0001 264.00003 265.9999 267.99988 269.99982 271.99973 273.9997 275.99966 277.9996 279.99963 281.99957 283.99954 285.99954 287.99957 289.9996 291.99963 293.9997 295.99982 297.9999 300.0 302.0001 304.00018 306.0003 308.00037 310.00043 312.00052 314.00052 316.00058 318.00064 320.00055 322.00064 324.00064 326.0006 328.00052 330.00046 332.0003 334.0002 336.0001 338.0 339.99985 341.99976 343.99957 345.99948 347.99945 349.99927 351.99924 353.99915 355.99908 357.9991 359.99915)) (quote (0.0 -1.236E-7 1.0000006 3.0000005 4.9999995 8.0 10.000003 12.999999 16.0 18.0 20.0 20.999999 20.999999 19.999999 17.999999 14.999994 10.9999895 5.9999967 -2.2254E-6 -6.999995 -13.999989 -20.999997 -27.999995 -35.0 -42.000008 -47.000008 -51.000016 -54.00001 -55.00001 -55.000008 -52.00003 -47.000027 -41.00004 -33.000027 -23.00002 -12.000022 -2.87274E-5 12.999963 25.999962 38.999974 50.999974 62.99996 72.99996 80.99997 86.99997 89.99998 90.999985 87.999985 82.99997 74.99998 63.99996 50.999955 35.999966 17.99997 -4.30911E-5 -19.00004 -38.000027 -57.000008 -75.00002 -89.99999 -104.00003 -115.0 -122.000046 -126.00002 -126.00004 -122.000046 -114.000046 -103.00003 -87.000046 -69.00005 -48.000058 -25.000023 -5.74549E-5 24.999949 50.99995 74.99992 97.999916 117.999916 134.99994 147.99994 157.99991 161.99993 161.99993 155.99993 144.99988 129.99991 110.999886 86.99988 59.999867 30.999823 -1.932015E-4 -32.000225 -59.000214 -93.00018 -121.000176 -146.0002 -166.00017 -182.00017 -193.00017 -198.0002 -197.00022 -190.00025 -177.00029 -158.00026 -134.00028 -105.00035 -73.00036 -37.000355 -3.046715E-4 37.999653 74.99964 110.99961 143.99967 172.99973 196.99968 215.99971 227.99973 233.99976 231.99973 223.99971 207.99976 184.99973 156.99974 122.99976 84.99969 42.99969 -2.704821E-4 -44.00024 -88.000244 -129.0003 -167.00019 -201.00023 -229.00022 -250.00023 -264.00018 -270.0002 -268.0002 -257.00024 -239.00025 -213.00028 -180.00023 -141.00019 -97.00026 -50.000287 -3.091224E-4 49.999665 99.999695 146.99965 189.99971 231.99965 259.9997 283.9997 298.99973 305.9997 302.9997 290.99973 269.9997 240.99962 202.99967 158.99967 108.99969 55.999672 -3.477627E-4 -57.00037 -112.000405 -165.00038 -213.00038 -256.00046 -291.00037 -318.0003 -335.0003 -342.00024 -339.00027 -325.0003 -301.0003 -268.0004 -226.00035 -177.00046 -122.00046 -62.00053 -5.077859E-4)) (quote 3dc) 10))) (setf (bpfcolor newbpf) (om-make-color 0.09999991 0.0 0.6)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (list 0.0 -1.236E-7 1.0000006 3.0000005 4.9999995 8.0 10.000003 12.999999 16.0 18.0 20.0 20.999999 20.999999 19.999999 17.999999 14.999994 10.9999895 5.9999967 -2.2254E-6 -6.999995 -13.999989 -20.999997 -27.999995 -35.0 -42.000008 -47.000008 -51.000016 -54.00001 -55.00001 -55.000008 -52.00003 -47.000027 -41.00004 -33.000027 -23.00002 -12.000022 -2.87274E-5 12.999963 25.999962 38.999974 50.999974 62.99996 72.99996 80.99997 86.99997 89.99998 90.999985 87.999985 82.99997 74.99998 63.99996 50.999955 35.999966 17.99997 -4.30911E-5 -19.00004 -38.000027 -57.000008 -75.00002 -89.99999 -104.00003 -115.0 -122.000046 -126.00002 -126.00004 -122.000046 -114.000046 -103.00003 -87.000046 -69.00005 -48.000058 -25.000023 -5.74549E-5 24.999949 50.99995 74.99992 97.999916 117.999916 134.99994 147.99994 157.99991 161.99993 161.99993 155.99993 144.99988 129.99991 110.999886 86.99988 59.999867 30.999823 -1.932015E-4 -32.000225 -59.000214 -93.00018 -121.000176 -146.0002 -166.00017 -182.00017 -193.00017 -198.0002 -197.00022 -190.00025 -177.00029 -158.00026 -134.00028 -105.00035 -73.00036 -37.000355 -3.046715E-4 37.999653 74.99964 110.99961 143.99967 172.99973 196.99968 215.99971 227.99973 233.99976 231.99973 223.99971 207.99976 184.99973 156.99974 122.99976 84.99969 42.99969 -2.704821E-4 -44.00024 -88.000244 -129.0003 -167.00019 -201.00023 -229.00022 -250.00023 -264.00018 -270.0002 -268.0002 -257.00024 -239.00025 -213.00028 -180.00023 -141.00019 -97.00026 -50.000287 -3.091224E-4 49.999665 99.999695 146.99965 189.99971 231.99965 259.9997 283.9997 298.99973 305.9997 302.9997 290.99973 269.9997 240.99962 202.99967 158.99967 108.99969 55.999672 -3.477627E-4 -57.00037 -112.000405 -165.00038 -213.00038 -256.00046 -291.00037 -318.0003 -335.0003 -342.00024 -339.00027 -325.0003 -301.0003 -268.0004 -226.00035 -177.00046 -122.00046 -62.00053 -5.077859E-4))) newobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (0.0 1.6916664 3.4038973 4.766033 6.159026 7.2486386 8.22996 8.898093 9.115172 8.770698 8.466927 7.3747177 6.769938 5.944708 5.523655 4.9145045 4.628344 4.6156197 4.632799 5.1331744 5.6705103 6.9803534 8.40114 10.526702 13.539868 17.154246 21.428559 26.312088 31.561709 36.69496 41.39689 45.836644 49.800396 53.285523 56.422715 58.94368 60.63955 60.837254 60.136055 59.39653 57.266262 55.05239 51.64351 47.355442 42.562203 37.245587 31.774882 26.589848 22.032723 18.301037 15.288672 13.266255 11.687013 10.959455 10.689859 11.151261 12.19145 13.862874 16.383831 18.644213 22.248919 27.07047 33.071587 40.22461 47.50641 54.592286 61.346875 67.22961 72.14567 76.6172 79.94271 82.31124 83.82409 84.54428 84.10676 82.69977 79.87178 76.00669 70.49045 63.357598 54.98093 45.194764 35.349446 25.451146 16.902132 9.687546 3.627397 -0.9927501 -4.175313 -6.3439555 -7.3672967 -7.0470705 -5.5523143 -2.5371452 2.0229857 8.437309 16.768822 27.34645 39.59156 53.172303 67.147026 80.17617 92.01305 101.97122 110.44306 117.38332 122.46556 126.251595 128.22936 128.83083 127.60311 124.43655 119.78675 112.47694 103.195885 91.59936 77.330666 61.95265 45.985516 31.076725 17.580777 6.2609453 -2.9453965 -10.866251 -16.852799 -20.949473 -23.363104 -23.905003 -22.79433 -19.304034 -13.943302 -6.018361 4.3529606 17.543709 32.95531 50.186757 67.28451 83.39841 99.01832 113.703766 125.51475 135.38803 143.08136 148.63719 151.88738 153.33875 152.21721 149.41356 143.82947 136.15639 124.684075 110.716416 94.387665 76.1416 57.81214 40.402157 25.479796 13.319162 4.0817933 -2.4839199 -6.8511148 -8.674278 -8.427575 -5.969314 -1.2340894 5.7643185 15.638135 28.165354 44.151257 63.227166 85.40951 109.159 133.12989 155.17804 175.0574 191.9623 206.02524 217.25832 225.83255 231.8055 235.13953)) (quote (0.0 1.393435 2.8038092 4.2921286 5.831042 7.5868387 9.284476 11.31041 13.616918 16.064709 18.593335 21.524218 24.066859 26.8276 29.236773 31.999165 34.49132 36.742588 39.177006 41.119984 43.314053 44.65879 46.238957 47.377575 48.133717 48.44515 48.4555 48.194115 47.580544 47.158547 46.701127 46.479317 46.694546 47.166405 47.888466 48.899445 49.947297 50.439747 51.20595 52.30432 53.753968 55.720608 58.184925 61.179318 64.57216 68.04774 71.689705 74.80264 77.84961 80.468 82.80139 84.48338 86.24016 87.08639 87.99353 88.22271 88.18279 87.92577 87.12663 87.4523 87.54655 87.29149 86.41944 85.230316 83.98481 82.853066 82.05261 81.913155 82.07737 82.906555 84.055954 85.51371 87.26969 89.35945 91.758766 94.51464 97.73824 101.498665 105.88254 110.86581 116.60978 122.37255 128.15923 133.61362 138.50287 143.1251 147.60915 151.39856 154.56023 157.53331 160.0552 161.90113 163.05936 164.16387 164.53946 164.39168 163.58914 162.26381 160.55931 158.22808 155.60355 153.18558 151.22768 149.91745 149.38025 149.50463 150.19376 151.37409 152.93038 154.95307 157.34278 160.24228 163.86559 168.17488 173.39008 179.61206 186.49327 193.80124 200.80117 207.52732 213.63974 219.1918 223.81026 226.90288 229.41027 231.15056 232.37474 232.8039 232.86928 231.85565 230.70079 229.09693 227.2363 224.86765 222.28964 219.29796 216.3822 213.63347 211.37578 209.31455 207.7354 206.79648 206.34105 206.30027 206.5082 207.20874 208.237 210.03458 212.47856 216.59165 220.71756 226.66819 233.49025 241.15093 248.59168 255.8921 262.6249 268.93658 274.33163 279.1573 283.50342 286.74277 289.18973 290.62576 290.95526 290.4804 288.57068 286.05685 282.02002 277.00037 270.3693 262.70056 254.46749 246.40602 239.22025 233.47734 229.09496 226.06507 224.1658 223.24167 223.24846)) (quote (0.0 -9.58E-8 0.3762323 1.1564288 1.9458833 3.159429 3.995664 5.2450743 6.50363 7.353578 8.144165 8.451726 8.368567 7.849182 6.9997544 5.7482314 4.1791926 2.27174 -1.7244E-6 -2.6486168 -5.3062 -8.06106 -10.850384 -13.745627 -16.737139 -18.978077 -20.776947 -22.060734 -22.397898 -22.185095 -20.733216 -18.480813 -15.904056 -12.652876 -8.733473 -4.5310035 -1.27993E-5 4.788477 9.4561615 14.019015 18.242733 22.416327 25.902119 28.629317 30.510806 31.166815 30.934483 29.224358 26.828377 23.570668 19.562146 15.211801 10.49765 5.15589 -1.44414E-5 -5.3107514 -10.555945 -15.79171 -20.808613 -25.455584 -30.009522 -33.78631 -36.348904 -37.864945 -37.94326 -36.608376 -33.942574 -30.391036 -25.435673 -20.016997 -13.859555 -7.2093735 -1.97144E-5 7.2674418 14.971368 22.29872 29.604689 36.254998 42.209717 47.01202 50.792103 52.411335 52.41557 50.179345 46.20458 40.973046 34.59668 26.867848 18.419074 9.486837 -6.43045E-5 -9.842111 -18.288956 -29.166182 -38.48875 -47.19022 -54.52945 -60.67317 -65.03149 -67.06473 -66.64811 -63.854596 -58.86267 -51.92362 -43.518204 -33.749836 -23.298239 -11.759214 -1.038889E-4 12.117612 24.093194 36.053055 47.388382 57.827355 66.874054 74.343544 79.292115 81.74484 80.91029 77.55545 71.21581 62.532158 52.33128 40.349015 27.518666 13.788343 -9.37313E-5 -13.999949 -28.046008 -41.35413 -53.975 -65.63355 -75.55899 -83.24098 -88.37523 -90.38496 -89.157555 -84.49211 -77.49612 -68.07629 -56.75095 -43.915768 -29.9287 -15.33654 -1.028834E-4 15.333551 30.850928 45.75164 59.847298 74.08576 84.21844 93.16148 98.94642 101.60157 100.31679 95.52563 87.55741 77.081986 64.06946 49.61091 33.70458 17.226502 -1.161125E-4 -17.547039 -34.69035 -51.586567 -67.43034 -82.1781 -94.783585 -104.91311 -111.54982 -114.2942 -112.987526 -107.448166 -98.32701 -86.3721 -71.87677 -55.65602 -38.034523 -19.230259 -1.687818E-4)) (quote 3dc) 10))) (setf (bpfcolor newbpf) (om-make-color 0.6 0.0 0.13332998)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (list 0.0 -9.58E-8 0.3762323 1.1564288 1.9458833 3.159429 3.995664 5.2450743 6.50363 7.353578 8.144165 8.451726 8.368567 7.849182 6.9997544 5.7482314 4.1791926 2.27174 -1.7244E-6 -2.6486168 -5.3062 -8.06106 -10.850384 -13.745627 -16.737139 -18.978077 -20.776947 -22.060734 -22.397898 -22.185095 -20.733216 -18.480813 -15.904056 -12.652876 -8.733473 -4.5310035 -1.27993E-5 4.788477 9.4561615 14.019015 18.242733 22.416327 25.902119 28.629317 30.510806 31.166815 30.934483 29.224358 26.828377 23.570668 19.562146 15.211801 10.49765 5.15589 -1.44414E-5 -5.3107514 -10.555945 -15.79171 -20.808613 -25.455584 -30.009522 -33.78631 -36.348904 -37.864945 -37.94326 -36.608376 -33.942574 -30.391036 -25.435673 -20.016997 -13.859555 -7.2093735 -1.97144E-5 7.2674418 14.971368 22.29872 29.604689 36.254998 42.209717 47.01202 50.792103 52.411335 52.41557 50.179345 46.20458 40.973046 34.59668 26.867848 18.419074 9.486837 -6.43045E-5 -9.842111 -18.288956 -29.166182 -38.48875 -47.19022 -54.52945 -60.67317 -65.03149 -67.06473 -66.64811 -63.854596 -58.86267 -51.92362 -43.518204 -33.749836 -23.298239 -11.759214 -1.038889E-4 12.117612 24.093194 36.053055 47.388382 57.827355 66.874054 74.343544 79.292115 81.74484 80.91029 77.55545 71.21581 62.532158 52.33128 40.349015 27.518666 13.788343 -9.37313E-5 -13.999949 -28.046008 -41.35413 -53.975 -65.63355 -75.55899 -83.24098 -88.37523 -90.38496 -89.157555 -84.49211 -77.49612 -68.07629 -56.75095 -43.915768 -29.9287 -15.33654 -1.028834E-4 15.333551 30.850928 45.75164 59.847298 74.08576 84.21844 93.16148 98.94642 101.60157 100.31679 95.52563 87.55741 77.081986 64.06946 49.61091 33.70458 17.226502 -1.161125E-4 -17.547039 -34.69035 -51.586567 -67.43034 -82.1781 -94.783585 -104.91311 -111.54982 -114.2942 -112.987526 -107.448166 -98.32701 -86.3721 -71.87677 -55.65602 -38.034523 -19.230259 -1.687818E-4))) newobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (0.0 1.4924917 2.9981537 4.3764033 5.7775617 7.0946307 8.345579 9.525645 10.559208 11.367849 12.218992 12.81624 13.547773 14.238977 15.022446 15.816129 16.684502 17.612172 18.606547 19.687903 20.858754 22.14985 23.559012 25.172783 27.09554 29.188683 31.527892 34.10354 36.783448 39.453598 41.90163 44.252934 46.46099 48.49575 50.42569 52.162404 53.31687 52.760697 51.912037 51.13738 49.87608 48.69957 47.133305 45.321614 43.415524 41.365918 39.372616 37.44907 35.83185 34.482216 33.37384 32.49956 31.83324 31.259552 30.88706 30.612414 30.481884 30.520726 30.71642 31.326428 32.381283 33.813027 35.562695 37.71378 39.95974 42.19757 44.39415 46.409 48.13003 49.829544 51.212666 52.359993 53.31346 54.10352 54.598877 54.850975 54.706276 54.272736 53.327313 51.85698 50.031403 47.682106 45.329705 42.92517 40.920315 39.354184 38.178933 37.372677 36.94363 36.833825 37.03522 37.57241 38.38617 39.736412 41.498143 43.837536 46.771813 50.47428 54.788048 59.55934 64.48385 69.10256 73.31796 76.888405 79.9858 82.60384 84.6548 86.34847 87.51622 88.323746 88.59248 88.28191 87.541916 85.90606 83.603035 80.501816 76.423836 71.96727 67.26657 62.978844 59.17604 56.12999 53.33885 49.94609 47.166287 44.927918 43.189274 41.952923 41.21309 41.0916 41.579132 42.86895 44.965573 47.97894 51.75946 56.133603 60.444058 64.34936 69.53672 75.42302 80.32264 84.60354 88.216645 91.209565 93.533844 95.38939 96.49945 97.177155 97.00665 96.3114 94.20434 91.37341 87.745865 83.536515 79.30176 75.44829 72.45583 70.41821 69.26379 68.94985 69.31876 70.35874 71.968285 74.15496 76.926285 80.35076 84.52149 89.55694 95.57747 102.60594 110.56307 119.02141 127.54292 135.38033 142.49594 148.65792 153.91718 158.33466 161.99315 164.93708 167.18154)) (quote (0.0 1.1081377 2.2260542 3.3855756 4.573576 5.8802834 7.1560993 8.612805 10.228506 11.939042 13.696851 15.692231 17.462927 19.33976 21.015887 22.861912 24.561568 26.139042 27.809687 29.241639 30.801985 31.935797 33.177746 34.172055 34.92585 35.40605 35.69188 35.817116 35.765976 35.84456 35.92947 36.151768 36.615727 37.219307 37.959004 38.85634 39.584176 39.281598 39.11857 39.12689 39.291466 39.704934 40.33516 41.20118 42.241936 43.303498 44.420968 45.236473 45.956334 46.40305 46.65732 46.583115 46.529168 46.07888 45.68337 45.026818 44.291756 43.501286 42.57205 43.98774 45.24034 46.265683 46.949814 47.46647 47.94052 48.450753 49.090744 49.993084 50.969708 52.23856 53.604416 55.083718 56.687027 58.443676 60.329907 62.37505 64.617165 67.10246 69.85614 72.88383 76.31524 79.78682 83.34152 86.75947 89.88964 92.85977 95.731346 98.23364 100.43679 102.58529 104.561356 106.26022 107.65239 109.08603 110.14761 110.92024 111.298546 111.35142 111.17852 110.69742 110.12067 109.69384 109.51328 109.6272 110.102 110.87885 111.911675 113.19049 114.651375 116.36332 118.255516 120.3979 122.90876 125.720764 128.97515 132.73993 136.86162 141.29335 145.64368 149.89675 153.79357 157.31989 160.04778 161.4192 162.49503 163.21855 163.75351 163.96092 164.06311 163.65178 163.18817 162.46747 161.55345 160.30747 158.93987 157.41016 156.02196 154.7922 153.75458 152.72313 151.86617 151.3076 150.97045 150.83728 150.81906 151.07079 151.46562 152.25675 153.31258 155.2077 156.92963 159.57074 162.65377 166.2345 169.78398 173.30261 176.48935 179.37487 181.70027 183.7008 185.47014 186.74971 187.728 188.31436 188.45185 188.26628 187.3915 186.19207 184.15042 181.53147 178.05873 174.11318 169.99938 166.06221 162.60527 159.84372 157.70433 156.17949 155.16834 154.60431 154.47357)) (quote (0.0 -8.13E-8 0.14251691 0.44334593 0.7474114 1.2149103 1.5452772 2.028391 2.5136879 2.850763 3.1511512 3.257547 3.2224183 3.0107355 2.6849225 2.1941068 1.5921489 0.8657985 -1.4626E-6 -1.0088042 -2.0174492 -3.0807817 -4.1527348 -5.2773833 -6.44484 -7.3370814 -8.052649 -8.552292 -8.677999 -8.566424 -7.9905577 -7.102338 -6.0901103 -4.8315487 -3.3262108 -1.723189 -2.9026E-6 1.7847003 3.4748736 5.0701113 6.5176487 7.891062 8.999013 9.812895 10.299954 10.355871 10.092623 9.362655 8.420994 7.2469416 5.8900194 4.4909663 3.036303 1.4646815 -2.4105E-6 -1.4560922 -2.8470214 -4.190792 -5.444078 -6.7479024 -8.053989 -9.172252 -9.975225 -10.483677 -10.580255 -10.265069 -9.556621 -8.584195 -7.211 -5.690406 -3.9551645 -2.0670297 -3.4016E-6 2.1069277 4.369822 6.5557327 8.773709 10.8289175 12.708595 14.262423 15.496898 16.073344 16.122242 15.463732 14.253852 12.642229 10.670023 8.29097 5.6926904 2.9368785 -1.80722E-5 -3.0650919 -5.723327 -9.167645 -12.165191 -15.003704 -17.44576 -19.520815 -21.012806 -21.737393 -21.635149 -20.73197 -19.094737 -16.827603 -14.085737 -10.91282 -7.5325384 -3.8032117 -4.06933E-5 3.9336613 7.847173 11.792951 15.567386 19.099644 22.200194 24.788468 26.543417 27.42019 27.166855 26.018183 23.855172 20.905945 17.428492 13.340991 9.038459 4.5035005 -2.75911E-5 -4.5336256 -9.053664 -13.3314295 -17.378325 -21.116789 -24.292136 -26.741089 -28.339585 -28.89942 -28.380005 -26.746304 -24.413636 -21.36337 -17.750195 -13.691001 -9.3064165 -4.7608004 -2.89132E-5 4.7591057 9.591497 14.251595 18.69996 23.201437 26.496882 29.403788 31.304659 32.171853 31.75402 30.181393 27.588349 24.207736 20.065716 15.499665 10.508356 5.3661413 -3.27553E-5 -5.4705835 -10.836772 -16.155854 -21.195757 -25.922736 -30.020028 -33.339837 -35.546994 -36.471333 -36.044903 -34.233242 -31.252945 -27.3747 -22.717045 -17.548707 -11.972673 -6.049007 -6.4219E-5)) (quote 3dc) 10))) (setf (bpfcolor newbpf) (om-make-color 0.36666992 0.6 0.0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (list 0.0 -8.13E-8 0.14251691 0.44334593 0.7474114 1.2149103 1.5452772 2.028391 2.5136879 2.850763 3.1511512 3.257547 3.2224183 3.0107355 2.6849225 2.1941068 1.5921489 0.8657985 -1.4626E-6 -1.0088042 -2.0174492 -3.0807817 -4.1527348 -5.2773833 -6.44484 -7.3370814 -8.052649 -8.552292 -8.677999 -8.566424 -7.9905577 -7.102338 -6.0901103 -4.8315487 -3.3262108 -1.723189 -2.9026E-6 1.7847003 3.4748736 5.0701113 6.5176487 7.891062 8.999013 9.812895 10.299954 10.355871 10.092623 9.362655 8.420994 7.2469416 5.8900194 4.4909663 3.036303 1.4646815 -2.4105E-6 -1.4560922 -2.8470214 -4.190792 -5.444078 -6.7479024 -8.053989 -9.172252 -9.975225 -10.483677 -10.580255 -10.265069 -9.556621 -8.584195 -7.211 -5.690406 -3.9551645 -2.0670297 -3.4016E-6 2.1069277 4.369822 6.5557327 8.773709 10.8289175 12.708595 14.262423 15.496898 16.073344 16.122242 15.463732 14.253852 12.642229 10.670023 8.29097 5.6926904 2.9368785 -1.80722E-5 -3.0650919 -5.723327 -9.167645 -12.165191 -15.003704 -17.44576 -19.520815 -21.012806 -21.737393 -21.635149 -20.73197 -19.094737 -16.827603 -14.085737 -10.91282 -7.5325384 -3.8032117 -4.06933E-5 3.9336613 7.847173 11.792951 15.567386 19.099644 22.200194 24.788468 26.543417 27.42019 27.166855 26.018183 23.855172 20.905945 17.428492 13.340991 9.038459 4.5035005 -2.75911E-5 -4.5336256 -9.053664 -13.3314295 -17.378325 -21.116789 -24.292136 -26.741089 -28.339585 -28.89942 -28.380005 -26.746304 -24.413636 -21.36337 -17.750195 -13.691001 -9.3064165 -4.7608004 -2.89132E-5 4.7591057 9.591497 14.251595 18.69996 23.201437 26.496882 29.403788 31.304659 32.171853 31.75402 30.181393 27.588349 24.207736 20.065716 15.499665 10.508356 5.3661413 -3.27553E-5 -5.4705835 -10.836772 -16.155854 -21.195757 -25.922736 -30.020028 -33.339837 -35.546994 -36.471333 -36.044903 -34.233242 -31.252945 -27.3747 -22.717045 -17.548707 -11.972673 -6.049007 -6.4219E-5))) newobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (0.0 1.3131247 2.6262493 3.9393742 5.2524986 6.5656238 7.8787484 9.191874 10.504997 11.818123 13.1312475 14.44437 15.757497 17.07062 18.383748 19.69687 21.009995 22.323119 23.636246 24.94937 26.262495 27.575619 28.88874 30.20187 31.514988 32.82811 34.141236 35.454358 36.76748 38.08061 39.39373 40.706852 42.019978 43.3331 44.646218 45.959343 46.728657 45.42091 44.113175 42.805428 41.497677 40.18993 38.882187 37.574448 36.2667 34.958954 33.651215 32.343476 31.03573 29.727988 28.420247 27.112507 25.804762 24.497019 23.189274 21.881539 20.57378 19.266039 18.025027 18.809805 19.594574 20.379349 21.164132 21.948899 22.733679 23.518458 24.303236 25.088007 25.872778 26.657557 27.442336 28.227112 29.011879 29.796658 30.58144 31.366215 32.150986 32.93577 33.72053 34.505307 35.290074 36.07485 36.85963 37.644413 38.42919 39.213974 39.99875 40.783535 41.568314 42.3531 43.13787 43.922654 44.707436 45.49222 46.276997 47.06177 47.846554 48.631325 49.416108 50.20088 50.985672 51.77045 52.55523 53.34001 54.124775 54.909558 55.694313 56.479115 57.263874 58.04865 58.833443 59.618218 60.402993 61.18777 61.972538 62.757306 63.542088 64.32685 65.11164 65.89641 66.6812 67.46598 67.49219 65.903595 64.315 62.7264 61.137806 59.549202 57.960614 56.37202 54.78342 53.194825 51.606228 50.017636 48.429043 46.840466 45.25185 43.66327 43.92513 45.51371 47.10231 48.69089 50.27949 51.868103 53.456688 55.045266 56.633847 58.22245 59.811058 61.399636 62.988274 64.57685 66.16546 67.75405 69.34264 70.93122 72.51984 74.1084 75.69698 77.28557 78.87414 80.46273 82.05131 83.6399 85.228485 86.817055 88.405686 89.99428 91.582886 93.1715 94.760086 96.34867 97.93728 99.52585 101.114456 102.70305 104.29166 105.88022 107.46883 109.05741 110.646)) (quote (0.0 0.89404214 1.7880843 2.6821266 3.5761686 4.4702106 5.364253 6.258295 7.152337 8.046379 8.940421 9.834462 10.728506 11.622547 12.51659 13.410632 14.304674 15.198716 16.092759 16.986802 17.880843 18.774884 19.668925 20.56297 21.457007 22.351048 23.245089 24.139132 25.033173 25.927216 26.821257 27.7153 28.609337 29.50338 30.397419 31.29146 31.812855 30.910969 30.009066 29.107186 28.205296 27.30341 26.401516 25.499625 24.597735 23.695839 22.793944 21.892052 20.990155 20.08826 19.186367 18.284476 17.382586 16.480692 15.578807 14.676913 13.77502 12.873126 12.044043 13.425248 14.806455 16.187663 17.568873 18.95007 20.331282 21.712485 23.093697 24.474902 25.856112 27.237315 28.618523 29.999728 31.380917 32.762135 34.143334 35.52454 36.905743 38.286953 39.66816 41.049366 42.430573 43.81179 45.193005 46.574204 47.95541 49.336628 50.717835 52.099057 53.480263 54.86148 56.242688 57.62389 59.0051 60.38631 61.767537 63.148747 64.529946 65.91118 67.29238 68.67359 70.0548 71.43603 72.81724 74.198456 75.57966 76.96089 78.342095 79.72332 81.10453 82.48573 83.86694 85.24815 86.62939 88.01059 89.39181 90.773026 92.15426 93.53546 94.91667 96.29788 97.6791 99.0603 100.00004 100.000046 100.000046 100.000046 100.00004 100.000046 100.000046 100.00002 100.000046 100.00007 100.00005 100.00006 100.000046 100.00003 100.00003 100.00003 100.00006 100.00005 100.00004 100.000046 100.000046 100.00005 100.000046 100.000046 100.00005 100.00008 100.00004 100.00006 100.00007 100.00006 100.00004 100.00006 100.00005 100.00005 100.00008 100.00007 100.00008 100.00009 100.0001 100.00011 100.00013 100.00013 100.00014 100.00013 100.000145 100.00012 100.00014 100.00013 100.00011 100.0001 100.00009 100.0001 100.00013 100.000115 100.00013 100.0001 100.00012 100.000115 100.00013)) (quote (0.0 -6.94E-8 -1.389E-7 -2.083E-7 -2.778E-7 -3.472E-7 -4.166E-7 -4.861E-7 -5.555E-7 -6.25E-7 -6.944E-7 -7.638E-7 -8.333E-7 -9.027E-7 -9.722E-7 -1.0416E-6 -1.111E-6 -1.1805E-6 -1.2499E-6 -1.3193E-6 -1.3888E-6 -1.4582E-6 -1.5277E-6 -1.5971E-6 -1.6665E-6 -1.736E-6 -1.8054E-6 -1.8749E-6 -1.9443E-6 -2.0137E-6 -2.0832E-6 -2.1526E-6 -2.2221E-6 -2.2915E-6 -2.3609E-6 -2.4304E-6 -2.471E-6 -2.4016E-6 -2.3321E-6 -2.2627E-6 -2.1932E-6 -2.1238E-6 -2.0544E-6 -1.9849E-6 -1.9155E-6 -1.8461E-6 -1.7766E-6 -1.7072E-6 -1.6378E-6 -1.5683E-6 -1.4989E-6 -1.4294E-6 -1.36E-6 -1.2906E-6 -1.2211E-6 -1.1517E-6 -1.0823E-6 -1.0128E-6 -9.476E-7 -1.0101E-6 -1.0735E-6 -1.1376E-6 -1.2023E-6 -1.2675E-6 -1.3331E-6 -1.3991E-6 -1.4655E-6 -1.532E-6 -1.5989E-6 -1.6659E-6 -1.7331E-6 -1.8005E-6 -1.8681E-6 -1.9358E-6 -2.0036E-6 -2.0715E-6 -2.1395E-6 -2.2076E-6 -2.2758E-6 -2.344E-6 -2.4124E-6 -2.4807E-6 -2.5492E-6 -2.6177E-6 -2.6862E-6 -2.7548E-6 -2.8234E-6 -2.8921E-6 -2.9608E-6 -3.0295E-6 -3.0983E-6 -3.1671E-6 -3.2359E-6 -3.3048E-6 -3.3737E-6 -3.4426E-6 -3.5115E-6 -3.5804E-6 -3.6494E-6 -3.7183E-6 -3.7873E-6 -3.8563E-6 -3.9254E-6 -3.9944E-6 -4.0635E-6 -4.1325E-6 -4.2016E-6 -4.2707E-6 -4.3398E-6 -4.4089E-6 -4.478E-6 -4.5472E-6 -4.6163E-6 -4.6854E-6 -4.7546E-6 -4.8238E-6 -4.8929E-6 -4.9621E-6 -5.0313E-6 -5.1005E-6 -5.1697E-6 -5.2389E-6 -5.2736E-6 -5.235E-6 -5.1971E-6 -5.1599E-6 -5.1233E-6 -5.0875E-6 -5.0523E-6 -5.0178E-6 -4.9841E-6 -4.9511E-6 -4.9189E-6 -4.8874E-6 -4.8568E-6 -4.8269E-6 -4.7979E-6 -4.7696E-6 -4.7742E-6 -4.8026E-6 -4.8318E-6 -4.8618E-6 -4.8926E-6 -4.9241E-6 -4.9565E-6 -4.9896E-6 -5.0235E-6 -5.058E-6 -5.0933E-6 -5.1293E-6 -5.166E-6 -5.2033E-6 -5.2413E-6 -5.28E-6 -5.3192E-6 -5.3591E-6 -5.3996E-6 -5.4406E-6 -5.4823E-6 -5.5244E-6 -5.5672E-6 -5.6105E-6 -5.6542E-6 -5.6985E-6 -5.7433E-6 -5.7886E-6 -5.8344E-6 -5.8806E-6 -5.9273E-6 -5.9744E-6 -6.0219E-6 -6.0699E-6 -6.1183E-6 -6.1671E-6 -6.2163E-6 -6.2658E-6 -6.3158E-6 -6.3661E-6 -6.4167E-6 -6.4677E-6 -6.5191E-6)) (quote 3dc) 10))) (setf (bpfcolor newbpf) (om-make-color 0.0 0.6 0.6)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (list 0.0 -6.94E-8 -1.389E-7 -2.083E-7 -2.778E-7 -3.472E-7 -4.166E-7 -4.861E-7 -5.555E-7 -6.25E-7 -6.944E-7 -7.638E-7 -8.333E-7 -9.027E-7 -9.722E-7 -1.0416E-6 -1.111E-6 -1.1805E-6 -1.2499E-6 -1.3193E-6 -1.3888E-6 -1.4582E-6 -1.5277E-6 -1.5971E-6 -1.6665E-6 -1.736E-6 -1.8054E-6 -1.8749E-6 -1.9443E-6 -2.0137E-6 -2.0832E-6 -2.1526E-6 -2.2221E-6 -2.2915E-6 -2.3609E-6 -2.4304E-6 -2.471E-6 -2.4016E-6 -2.3321E-6 -2.2627E-6 -2.1932E-6 -2.1238E-6 -2.0544E-6 -1.9849E-6 -1.9155E-6 -1.8461E-6 -1.7766E-6 -1.7072E-6 -1.6378E-6 -1.5683E-6 -1.4989E-6 -1.4294E-6 -1.36E-6 -1.2906E-6 -1.2211E-6 -1.1517E-6 -1.0823E-6 -1.0128E-6 -9.476E-7 -1.0101E-6 -1.0735E-6 -1.1376E-6 -1.2023E-6 -1.2675E-6 -1.3331E-6 -1.3991E-6 -1.4655E-6 -1.532E-6 -1.5989E-6 -1.6659E-6 -1.7331E-6 -1.8005E-6 -1.8681E-6 -1.9358E-6 -2.0036E-6 -2.0715E-6 -2.1395E-6 -2.2076E-6 -2.2758E-6 -2.344E-6 -2.4124E-6 -2.4807E-6 -2.5492E-6 -2.6177E-6 -2.6862E-6 -2.7548E-6 -2.8234E-6 -2.8921E-6 -2.9608E-6 -3.0295E-6 -3.0983E-6 -3.1671E-6 -3.2359E-6 -3.3048E-6 -3.3737E-6 -3.4426E-6 -3.5115E-6 -3.5804E-6 -3.6494E-6 -3.7183E-6 -3.7873E-6 -3.8563E-6 -3.9254E-6 -3.9944E-6 -4.0635E-6 -4.1325E-6 -4.2016E-6 -4.2707E-6 -4.3398E-6 -4.4089E-6 -4.478E-6 -4.5472E-6 -4.6163E-6 -4.6854E-6 -4.7546E-6 -4.8238E-6 -4.8929E-6 -4.9621E-6 -5.0313E-6 -5.1005E-6 -5.1697E-6 -5.2389E-6 -5.2736E-6 -5.235E-6 -5.1971E-6 -5.1599E-6 -5.1233E-6 -5.0875E-6 -5.0523E-6 -5.0178E-6 -4.9841E-6 -4.9511E-6 -4.9189E-6 -4.8874E-6 -4.8568E-6 -4.8269E-6 -4.7979E-6 -4.7696E-6 -4.7742E-6 -4.8026E-6 -4.8318E-6 -4.8618E-6 -4.8926E-6 -4.9241E-6 -4.9565E-6 -4.9896E-6 -5.0235E-6 -5.058E-6 -5.0933E-6 -5.1293E-6 -5.166E-6 -5.2033E-6 -5.2413E-6 -5.28E-6 -5.3192E-6 -5.3591E-6 -5.3996E-6 -5.4406E-6 -5.4823E-6 -5.5244E-6 -5.5672E-6 -5.6105E-6 -5.6542E-6 -5.6985E-6 -5.7433E-6 -5.7886E-6 -5.8344E-6 -5.8806E-6 -5.9273E-6 -5.9744E-6 -6.0219E-6 -6.0699E-6 -6.1183E-6 -6.1671E-6 -6.2163E-6 -6.2658E-6 -6.3158E-6 -6.3661E-6 -6.4167E-6 -6.4677E-6 -6.5191E-6))) newobj)) :from-file t)) nil nil (pairlis (quote (room-size show-room show-axes bg-color line-width winsize winpos picture)) (list 2 1 1 nil 1.0 (om-make-point 1031 670) (om-make-point 10 40) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux11" (quote t) (quote nil) (om-make-point 253 535) (om-make-point 32 30) 0.5 "0.5" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "TRAJ-INTERPOL1" (quote traj-interpol) (quote ((om-load-inputfun (quote input-funbox) "a bpf or bpc" "FIRSTB" nil) (om-load-inputfun (quote input-funbox) "a bpf or bpc" "SECONDB" nil) (om-load-inputfun (quote input-funbox) "a bpf or bpc" "STEPS" nil) (om-load-inputfunmenu1 (quote input-funmenu) "a bpf or bpc" "MODE" (quote polar) (list (list "cartesian" (quote (quote cartesian))) (list "polar" (quote (quote polar))))) (om-load-inputfun (quote input-funbox) "curve" "CURVE" 1))) (om-make-point 153 565) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux2" (quote t) (quote nil) (om-make-point 217 525) (om-make-point 27 32) 4 "4" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux1" (quote t) (quote nil) (om-make-point 276 241) (om-make-point 21 30) 1 "1" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment11111" (om-make-point 91 28) (quote "...clustered...") "" (om-make-point 1154 138) nil (om-make-color 0.02832079 0.0 1.0) (om-make-font "Arial" 12 :family "Arial" :style (quote (:italic)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPC-LIB1" (quote bpc-lib) (quote ((om-load-inputfun (quote input-funbox) "object" "SELF" nil) (om-load-inputfun (quote input-funbox) "list of BPC objects" "BPF-LIST" (list (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote nil) (quote nil) (quote bpc) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj))))) (om-make-point 513 654) (om-make-point 72 84) (if (find-class (quote bpc-lib) nil) (make-instance (quote bpc-lib) :bpf-list (list (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (-0.93 -0.957 -1.011 -1.011 -1.146 -1.307 -1.496 -1.496 -1.685 -1.685 -1.873 -2.035 -2.035 -2.224 -2.224 -2.412 -2.574 -2.574 -2.763 -2.925 -2.925 -3.113 -3.275 -3.275 -3.383 -3.383 -3.383 -3.464 -3.491 -3.491 -3.491 -3.491 -3.464 -3.464 -3.356 -3.356 -3.356 -3.356 -3.356 -3.356 -3.356 -3.356 -3.329 -3.329 -3.329 -3.329 -3.329 -3.356 -3.356 -3.356 -3.356 -3.356 -3.356 -3.41 -3.41 -3.41 -3.464 -3.491 -3.544 -3.598 -3.598 -3.679 -3.733 -3.787 -3.787 -3.868 -3.976 -3.976 -4.03 -4.164 -4.164 -4.218 -4.326 -4.38 -4.461 -4.515 -4.569 -4.569 -4.65 -4.73 -4.73 -4.757 -4.784 -4.784 -4.784 -4.784 -4.784 -4.73 -4.65 -4.65 -4.488 -4.488 -4.353 -4.191 -4.191 -4.084 -4.003 -3.949 -3.922 -3.922 -3.868 -3.868 -3.841 -3.841 -3.841 -3.841 -3.841 -3.841 -3.868 -3.895 -3.895 -3.949 -3.949 -4.003 -4.003 -4.003 -4.057 -4.057 -4.057 -4.084 -4.084 -4.111 -4.111 -4.164 -4.191 -4.218 -4.218 -4.218 -4.218 -4.218 -4.218 -4.245 -4.245 -4.245 -4.245 -4.245 -4.245 -4.245 -4.245 -4.191 -4.191 -4.164 -4.164 -4.164 -4.057 -4.057 -4.003 -4.003 -3.949 -3.841 -3.652 -3.652 -3.518 -3.437 -3.437 -3.329 -3.329 -3.194 -3.032 -2.871 -2.871 -2.655 -2.466 -2.305 -2.197 -2.008 -1.9 -1.819 -1.819 -1.819 -1.873 -1.873 -2.008 -2.008 -2.17 -2.17 -2.358 -2.358 -2.574 -2.763 -2.763 -2.898 -2.898 -2.978 -3.086 -3.221 -3.275 -3.383 -3.544 -3.544 -3.679 -3.679 -3.76 -3.841 -3.841 -3.922 -4.003 -4.111 -4.218 -4.218 -4.299 -4.299 -4.353 -4.353 -4.407 -4.407 -4.461 -4.461 -4.488 -4.488 -4.488 -4.515 -4.515 -4.515 -4.515 -4.515 -4.488 -4.461 -4.38 -4.38 -4.218 -4.137 -4.137 -4.137 -4.111 -4.111 -4.111 -4.111 -4.111 -4.111 -4.111 -4.111 -4.111 -4.137 -4.191 -4.245 -4.326 -4.407 -4.488 -4.488 -4.515 -4.596 -4.677 -4.677 -4.73 -4.73 -4.811 -4.865 -4.892 -4.892 -4.919 -4.973 -4.973 -4.973 -4.973 -4.973 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -4.973 -4.865 -4.865 -4.784 -4.704 -4.623 -4.515 -4.461 -4.407 -4.407 -4.299 -4.218 -4.084 -3.976 -3.841 -3.733 -3.733 -3.679 -3.625 -3.571 -3.518 -3.518 -3.491 -3.491 -3.437 -3.383 -3.383 -3.356 -3.356 -3.302 -3.248 -3.248 -3.167 -3.167 -3.113 -3.113 -3.086 -3.086 -3.005 -3.005 -2.951 -2.925 -2.898 -2.898 -2.898 -2.898 -2.871 -2.871 -2.871 -2.871 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.817 -2.817 -2.709 -2.574 -2.574 -2.466 -2.466 -2.332 -2.116 -1.873 -1.631 -1.388 -1.065 -1.065 -0.687 -0.202 0.283 0.283 0.633 0.633 0.957 0.957 1.28 1.28 1.577 1.846 2.116 2.116 2.358 2.358 2.601 2.601 2.844 2.844 3.113 3.356 3.356 3.518 3.518 3.544 3.598 3.598 3.598 3.598 3.544 3.544 3.491 3.41 3.356 3.302 3.248 3.221 3.167 3.032 3.032 2.951 2.951 2.925 2.925 2.925 2.844 2.736 2.709 2.709 2.709 2.736 2.736 2.817 2.951 3.14 3.14 3.248 3.248 3.356 3.356 3.464 3.464 3.598 3.598 3.706 3.841 4.003 4.003 4.164 4.164 4.326 4.461 4.461 4.569 4.569 4.677 4.677 4.784 4.919 4.973 4.973 4.973 5.0 5.0 4.946 4.946 4.865 4.865 4.757 4.65 4.542 4.434 4.326 4.326 4.191 4.057 3.814 3.814 3.571 3.383 3.167 3.167 2.925 2.655 2.412 2.224 2.035 1.846 1.846 1.55 1.55 1.307 1.065 0.93 0.768 0.58 0.445 0.445 0.31 0.229 0.148 0.148 0.04 -0.04 -0.148 -0.148 -0.256 -0.256 -0.364 -0.445 -0.445 -0.526 -0.66 -0.66 -0.741 -0.822 -0.822 -0.957 -0.957 -1.065 -1.173 -1.199 -1.199 -1.226 -1.253 -1.253 -1.28 -1.307 -1.307)) (quote (5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 4.932 4.886 4.886 4.795 4.727 4.727 4.658 4.567 4.567 4.499 4.476 4.476 4.339 4.226 4.134 4.134 4.043 3.907 3.907 3.724 3.542 3.542 3.428 3.337 3.337 3.269 3.2 3.132 3.087 3.087 3.041 2.973 2.904 2.904 2.859 2.836 2.836 2.813 2.813 2.813 2.79 2.79 2.768 2.722 2.699 2.699 2.654 2.608 2.563 2.563 2.517 2.472 2.472 2.426 2.38 2.38 2.335 2.312 2.267 2.244 2.221 2.175 2.175 2.153 2.107 2.107 2.084 2.062 2.062 2.039 2.016 2.016 1.97 1.925 1.925 1.879 1.879 1.856 1.811 1.811 1.765 1.743 1.697 1.674 1.674 1.583 1.583 1.538 1.492 1.492 1.469 1.446 1.446 1.401 1.333 1.333 1.241 1.241 1.173 1.173 1.128 1.128 1.128 1.082 1.036 1.036 1.014 1.014 0.968 0.923 0.877 0.877 0.854 0.831 0.831 0.809 0.809 0.809 0.763 0.74 0.74 0.718 0.695 0.695 0.695 0.695 0.672 0.672 0.649 0.649 0.649 0.626 0.626 0.581 0.558 0.513 0.513 0.467 0.467 0.467 0.467 0.467 0.467 0.444 0.399 0.399 0.353 0.308 0.239 0.216 0.148 0.103 0.057 0.057 0.034 0.011 0.011 -0.034 -0.034 -0.103 -0.103 -0.171 -0.171 -0.262 -0.308 -0.308 -0.33 -0.33 -0.33 -0.33 -0.33 -0.308 -0.262 -0.194 -0.194 -0.148 -0.148 -0.148 -0.103 -0.103 -0.08 -0.034 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.034 -0.034 -0.057 -0.057 -0.08 -0.103 -0.103 -0.148 -0.216 -0.33 -0.33 -0.467 -0.581 -0.604 -0.604 -0.626 -0.626 -0.649 -0.672 -0.672 -0.695 -0.74 -0.786 -0.786 -0.809 -0.9 -0.968 -1.036 -1.105 -1.173 -1.173 -1.196 -1.264 -1.333 -1.333 -1.355 -1.355 -1.401 -1.424 -1.424 -1.424 -1.469 -1.469 -1.469 -1.492 -1.515 -1.515 -1.538 -1.538 -1.56 -1.583 -1.583 -1.629 -1.674 -1.788 -1.788 -1.834 -1.925 -2.016 -2.084 -2.153 -2.198 -2.198 -2.244 -2.312 -2.358 -2.426 -2.494 -2.54 -2.54 -2.563 -2.608 -2.654 -2.699 -2.699 -2.699 -2.699 -2.722 -2.722 -2.722 -2.722 -2.722 -2.745 -2.79 -2.79 -2.813 -2.813 -2.836 -2.836 -2.836 -2.836 -2.882 -2.882 -2.904 -2.927 -2.927 -2.95 -2.95 -2.973 -2.995 -3.018 -3.041 -3.041 -3.041 -3.064 -3.064 -3.087 -3.109 -3.109 -3.132 -3.155 -3.155 -3.178 -3.2 -3.223 -3.223 -3.314 -3.405 -3.405 -3.565 -3.77 -3.77 -3.929 -3.929 -4.066 -4.203 -4.317 -4.408 -4.522 -4.658 -4.658 -4.772 -4.863 -4.909 -4.909 -4.932 -4.932 -4.977 -4.977 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -4.954 -4.863 -4.863 -4.749 -4.749 -4.704 -4.658 -4.658 -4.59 -4.544 -4.476 -4.476 -4.385 -4.271 -4.134 -4.043 -3.907 -3.793 -3.61 -3.36 -3.36 -3.223 -3.223 -3.132 -3.132 -3.018 -2.79 -2.517 -2.335 -2.175 -2.175 -1.97 -1.97 -1.697 -1.378 -1.082 -1.082 -0.831 -0.831 -0.672 -0.672 -0.49 -0.49 -0.239 -0.239 -0.011 0.216 0.399 0.399 0.604 0.604 0.786 0.968 0.968 1.128 1.128 1.333 1.333 1.538 1.788 1.993 2.221 2.221 2.449 2.654 2.813 2.813 2.973 2.973 3.155 3.314 3.474 3.588 3.633 3.633 3.747 3.793 3.884 3.884 3.998 4.089 4.157 4.157 4.294 4.385 4.453 4.476 4.499 4.522 4.522 4.613 4.613 4.658 4.704 4.772 4.772 4.795 4.818 4.818 4.818 4.818 4.818 4.818 4.841 4.841 4.841 4.841 4.863 4.863 4.863 4.886 4.886 4.886 4.886 4.886 4.909 4.932 4.932 4.954 4.954 4.977 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0)) (quotequote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (listnewobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (9.07 9.043 8.989 8.989 8.854 8.693 8.504 8.504 8.315 8.315 8.127 7.965 7.965 7.776 7.776 7.588 7.426 7.426 7.237 7.075 7.075 6.887 6.725 6.725 6.617 6.617 6.617 6.536 6.509 6.509 6.509 6.509 6.536 6.536 6.644 6.644 6.644 6.644 6.644 6.644 6.644 6.644 6.671 6.671 6.671 6.671 6.671 6.644 6.644 6.644 6.644 6.644 6.644 6.59 6.59 6.59 6.536 6.509 6.456 6.402 6.402 6.321 6.267 6.213 6.213 6.132 6.024 6.024 5.97 5.836 5.836 5.782 5.674 5.62 5.539 5.485 5.431 5.431 5.35 5.27 5.27 5.243 5.216 5.216 5.216 5.216 5.216 5.27 5.35 5.35 5.512 5.512 5.647 5.809 5.809 5.916 5.997 6.051 6.078 6.078 6.132 6.132 6.159 6.159 6.159 6.159 6.159 6.159 6.132 6.105 6.105 6.051 6.051 5.997 5.997 5.997 5.943 5.943 5.943 5.916 5.916 5.889 5.889 5.836 5.809 5.782 5.782 5.782 5.782 5.782 5.782 5.755 5.755 5.755 5.755 5.755 5.755 5.755 5.755 5.809 5.809 5.836 5.836 5.836 5.943 5.943 5.997 5.997 6.051 6.159 6.348 6.348 6.482 6.563 6.563 6.671 6.671 6.806 6.968 7.129 7.129 7.345 7.534 7.695 7.803 7.992 8.1 8.181 8.181 8.181 8.127 8.127 7.992 7.992 7.83 7.83 7.642 7.642 7.426 7.237 7.237 7.102 7.102 7.022 6.914 6.779 6.725 6.617 6.456 6.456 6.321 6.321 6.24 6.159 6.159 6.078 5.997 5.889 5.782 5.782 5.701 5.701 5.647 5.647 5.593 5.593 5.539 5.539 5.512 5.512 5.512 5.485 5.485 5.485 5.485 5.485 5.512 5.539 5.62 5.62 5.782 5.863 5.863 5.863 5.889 5.889 5.889 5.889 5.889 5.889 5.889 5.889 5.889 5.863 5.809 5.755 5.674 5.593 5.512 5.512 5.485 5.404 5.323 5.323 5.27 5.27 5.189 5.135 5.108 5.108 5.081 5.027 5.027 5.027 5.027 5.027 5.0 5.0 5.0 5.0 5.0 5.0 5.027 5.135 5.135 5.216 5.296 5.377 5.485 5.539 5.593 5.593 5.701 5.782 5.916 6.024 6.159 6.267 6.267 6.321 6.375 6.429 6.482 6.482 6.509 6.509 6.563 6.617 6.617 6.644 6.644 6.698 6.752 6.752 6.833 6.833 6.887 6.887 6.914 6.914 6.995 6.995 7.049 7.075 7.102 7.102 7.102 7.102 7.129 7.129 7.129 7.129 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.183 7.183 7.291 7.426 7.426 7.534 7.534 7.668 7.884 8.127 8.369 8.612 8.935 8.935 9.313 9.798 10.283 10.283 10.633 10.633 10.957 10.957 11.28 11.28 11.577 11.846 12.116 12.116 12.358 12.358 12.601 12.601 12.844 12.844 13.113 13.356 13.356 13.518 13.518 13.544 13.598 13.598 13.598 13.598 13.544 13.544 13.491 13.41 13.356 13.302 13.248 13.221 13.167 13.032 13.032 12.951 12.951 12.925 12.925 12.925 12.844 12.736 12.709 12.709 12.709 12.736 12.736 12.817 12.951 13.14 13.14 13.248 13.248 13.356 13.356 13.464 13.464 13.598 13.598 13.706 13.841 14.003 14.003 14.164 14.164 14.326 14.461 14.461 14.569 14.569 14.677 14.677 14.784 14.919 14.973 14.973 14.973 15.0 15.0 14.946 14.946 14.865 14.865 14.757 14.65 14.542 14.434 14.326 14.326 14.191 14.057 13.814 13.814 13.571 13.383 13.167 13.167 12.925 12.655 12.412 12.224 12.035 11.846 11.846 11.55 11.55 11.307 11.065 10.93 10.768 10.58 10.445 10.445 10.31 10.229 10.148 10.148 10.04 9.96 9.852 9.852 9.744 9.744 9.636 9.555 9.555 9.474 9.34 9.34 9.259 9.178 9.178 9.043 9.043 8.935 8.827 8.801 8.801 8.774 8.747 8.747 8.72 8.693 8.693)) (quote (5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 4.932 4.886 4.886 4.795 4.727 4.727 4.658 4.567 4.567 4.499 4.476 4.476 4.339 4.226 4.134 4.134 4.043 3.907 3.907 3.724 3.542 3.542 3.428 3.337 3.337 3.269 3.2 3.132 3.087 3.087 3.041 2.973 2.904 2.904 2.859 2.836 2.836 2.813 2.813 2.813 2.79 2.79 2.768 2.722 2.699 2.699 2.654 2.608 2.563 2.563 2.517 2.472 2.472 2.426 2.38 2.38 2.335 2.312 2.267 2.244 2.221 2.175 2.175 2.153 2.107 2.107 2.084 2.062 2.062 2.039 2.016 2.016 1.97 1.925 1.925 1.879 1.879 1.856 1.811 1.811 1.765 1.743 1.697 1.674 1.674 1.583 1.583 1.538 1.492 1.492 1.469 1.446 1.446 1.401 1.333 1.333 1.241 1.241 1.173 1.173 1.128 1.128 1.128 1.082 1.036 1.036 1.014 1.014 0.968 0.923 0.877 0.877 0.854 0.831 0.831 0.809 0.809 0.809 0.763 0.74 0.74 0.718 0.695 0.695 0.695 0.695 0.672 0.672 0.649 0.649 0.649 0.626 0.626 0.581 0.558 0.513 0.513 0.467 0.467 0.467 0.467 0.467 0.467 0.444 0.399 0.399 0.353 0.308 0.239 0.216 0.148 0.103 0.057 0.057 0.034 0.011 0.011 -0.034 -0.034 -0.103 -0.103 -0.171 -0.171 -0.262 -0.308 -0.308 -0.33 -0.33 -0.33 -0.33 -0.33 -0.308 -0.262 -0.194 -0.194 -0.148 -0.148 -0.148 -0.103 -0.103 -0.08 -0.034 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.034 -0.034 -0.057 -0.057 -0.08 -0.103 -0.103 -0.148 -0.216 -0.33 -0.33 -0.467 -0.581 -0.604 -0.604 -0.626 -0.626 -0.649 -0.672 -0.672 -0.695 -0.74 -0.786 -0.786 -0.809 -0.9 -0.968 -1.036 -1.105 -1.173 -1.173 -1.196 -1.264 -1.333 -1.333 -1.355 -1.355 -1.401 -1.424 -1.424 -1.424 -1.469 -1.469 -1.469 -1.492 -1.515 -1.515 -1.538 -1.538 -1.56 -1.583 -1.583 -1.629 -1.674 -1.788 -1.788 -1.834 -1.925 -2.016 -2.084 -2.153 -2.198 -2.198 -2.244 -2.312 -2.358 -2.426 -2.494 -2.54 -2.54 -2.563 -2.608 -2.654 -2.699 -2.699 -2.699 -2.699 -2.722 -2.722 -2.722 -2.722 -2.722 -2.745 -2.79 -2.79 -2.813 -2.813 -2.836 -2.836 -2.836 -2.836 -2.882 -2.882 -2.904 -2.927 -2.927 -2.95 -2.95 -2.973 -2.995 -3.018 -3.041 -3.041 -3.041 -3.064 -3.064 -3.087 -3.109 -3.109 -3.132 -3.155 -3.155 -3.178 -3.2 -3.223 -3.223 -3.314 -3.405 -3.405 -3.565 -3.77 -3.77 -3.929 -3.929 -4.066 -4.203 -4.317 -4.408 -4.522 -4.658 -4.658 -4.772 -4.863 -4.909 -4.909 -4.932 -4.932 -4.977 -4.977 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -4.954 -4.863 -4.863 -4.749 -4.749 -4.704 -4.658 -4.658 -4.59 -4.544 -4.476 -4.476 -4.385 -4.271 -4.134 -4.043 -3.907 -3.793 -3.61 -3.36 -3.36 -3.223 -3.223 -3.132 -3.132 -3.018 -2.79 -2.517 -2.335 -2.175 -2.175 -1.97 -1.97 -1.697 -1.378 -1.082 -1.082 -0.831 -0.831 -0.672 -0.672 -0.49 -0.49 -0.239 -0.239 -0.011 0.216 0.399 0.399 0.604 0.604 0.786 0.968 0.968 1.128 1.128 1.333 1.333 1.538 1.788 1.993 2.221 2.221 2.449 2.654 2.813 2.813 2.973 2.973 3.155 3.314 3.474 3.588 3.633 3.633 3.747 3.793 3.884 3.884 3.998 4.089 4.157 4.157 4.294 4.385 4.453 4.476 4.499 4.522 4.522 4.613 4.613 4.658 4.704 4.772 4.772 4.795 4.818 4.818 4.818 4.818 4.818 4.818 4.841 4.841 4.841 4.841 4.863 4.863 4.863 4.886 4.886 4.886 4.886 4.886 4.909 4.932 4.932 4.954 4.954 4.977 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0)) (quotequote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (listnewobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (9.07 9.043 8.989 8.989 8.854 8.693 8.504 8.504 8.315 8.315 8.127 7.965 7.965 7.776 7.776 7.588 7.426 7.426 7.237 7.075 7.075 6.887 6.725 6.725 6.617 6.617 6.617 6.536 6.509 6.509 6.509 6.509 6.536 6.536 6.644 6.644 6.644 6.644 6.644 6.644 6.644 6.644 6.671 6.671 6.671 6.671 6.671 6.644 6.644 6.644 6.644 6.644 6.644 6.59 6.59 6.59 6.536 6.509 6.456 6.402 6.402 6.321 6.267 6.213 6.213 6.132 6.024 6.024 5.97 5.836 5.836 5.782 5.674 5.62 5.539 5.485 5.431 5.431 5.35 5.27 5.27 5.243 5.216 5.216 5.216 5.216 5.216 5.27 5.35 5.35 5.512 5.512 5.647 5.809 5.809 5.916 5.997 6.051 6.078 6.078 6.132 6.132 6.159 6.159 6.159 6.159 6.159 6.159 6.132 6.105 6.105 6.051 6.051 5.997 5.997 5.997 5.943 5.943 5.943 5.916 5.916 5.889 5.889 5.836 5.809 5.782 5.782 5.782 5.782 5.782 5.782 5.755 5.755 5.755 5.755 5.755 5.755 5.755 5.755 5.809 5.809 5.836 5.836 5.836 5.943 5.943 5.997 5.997 6.051 6.159 6.348 6.348 6.482 6.563 6.563 6.671 6.671 6.806 6.968 7.129 7.129 7.345 7.534 7.695 7.803 7.992 8.1 8.181 8.181 8.181 8.127 8.127 7.992 7.992 7.83 7.83 7.642 7.642 7.426 7.237 7.237 7.102 7.102 7.022 6.914 6.779 6.725 6.617 6.456 6.456 6.321 6.321 6.24 6.159 6.159 6.078 5.997 5.889 5.782 5.782 5.701 5.701 5.647 5.647 5.593 5.593 5.539 5.539 5.512 5.512 5.512 5.485 5.485 5.485 5.485 5.485 5.512 5.539 5.62 5.62 5.782 5.863 5.863 5.863 5.889 5.889 5.889 5.889 5.889 5.889 5.889 5.889 5.889 5.863 5.809 5.755 5.674 5.593 5.512 5.512 5.485 5.404 5.323 5.323 5.27 5.27 5.189 5.135 5.108 5.108 5.081 5.027 5.027 5.027 5.027 5.027 5.0 5.0 5.0 5.0 5.0 5.0 5.027 5.135 5.135 5.216 5.296 5.377 5.485 5.539 5.593 5.593 5.701 5.782 5.916 6.024 6.159 6.267 6.267 6.321 6.375 6.429 6.482 6.482 6.509 6.509 6.563 6.617 6.617 6.644 6.644 6.698 6.752 6.752 6.833 6.833 6.887 6.887 6.914 6.914 6.995 6.995 7.049 7.075 7.102 7.102 7.102 7.102 7.129 7.129 7.129 7.129 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.156 7.183 7.183 7.291 7.426 7.426 7.534 7.534 7.668 7.884 8.127 8.369 8.612 8.935 8.935 9.313 9.798 10.283 10.283 10.633 10.633 10.957 10.957 11.28 11.28 11.577 11.846 12.116 12.116 12.358 12.358 12.601 12.601 12.844 12.844 13.113 13.356 13.356 13.518 13.518 13.544 13.598 13.598 13.598 13.598 13.544 13.544 13.491 13.41 13.356 13.302 13.248 13.221 13.167 13.032 13.032 12.951 12.951 12.925 12.925 12.925 12.844 12.736 12.709 12.709 12.709 12.736 12.736 12.817 12.951 13.14 13.14 13.248 13.248 13.356 13.356 13.464 13.464 13.598 13.598 13.706 13.841 14.003 14.003 14.164 14.164 14.326 14.461 14.461 14.569 14.569 14.677 14.677 14.784 14.919 14.973 14.973 14.973 15.0 15.0 14.946 14.946 14.865 14.865 14.757 14.65 14.542 14.434 14.326 14.326 14.191 14.057 13.814 13.814 13.571 13.383 13.167 13.167 12.925 12.655 12.412 12.224 12.035 11.846 11.846 11.55 11.55 11.307 11.065 10.93 10.768 10.58 10.445 10.445 10.31 10.229 10.148 10.148 10.04 9.96 9.852 9.852 9.744 9.744 9.636 9.555 9.555 9.474 9.34 9.34 9.259 9.178 9.178 9.043 9.043 8.935 8.827 8.801 8.801 8.774 8.747 8.747 8.72 8.693 8.693)) (quote (5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 4.932 4.886 4.886 4.795 4.727 4.727 4.658 4.567 4.567 4.499 4.476 4.476 4.339 4.226 4.134 4.134 4.043 3.907 3.907 3.724 3.542 3.542 3.428 3.337 3.337 3.269 3.2 3.132 3.087 3.087 3.041 2.973 2.904 2.904 2.859 2.836 2.836 2.813 2.813 2.813 2.79 2.79 2.768 2.722 2.699 2.699 2.654 2.608 2.563 2.563 2.517 2.472 2.472 2.426 2.38 2.38 2.335 2.312 2.267 2.244 2.221 2.175 2.175 2.153 2.107 2.107 2.084 2.062 2.062 2.039 2.016 2.016 1.97 1.925 1.925 1.879 1.879 1.856 1.811 1.811 1.765 1.743 1.697 1.674 1.674 1.583 1.583 1.538 1.492 1.492 1.469 1.446 1.446 1.401 1.333 1.333 1.241 1.241 1.173 1.173 1.128 1.128 1.128 1.082 1.036 1.036 1.014 1.014 0.968 0.923 0.877 0.877 0.854 0.831 0.831 0.809 0.809 0.809 0.763 0.74 0.74 0.718 0.695 0.695 0.695 0.695 0.672 0.672 0.649 0.649 0.649 0.626 0.626 0.581 0.558 0.513 0.513 0.467 0.467 0.467 0.467 0.467 0.467 0.444 0.399 0.399 0.353 0.308 0.239 0.216 0.148 0.103 0.057 0.057 0.034 0.011 0.011 -0.034 -0.034 -0.103 -0.103 -0.171 -0.171 -0.262 -0.308 -0.308 -0.33 -0.33 -0.33 -0.33 -0.33 -0.308 -0.262 -0.194 -0.194 -0.148 -0.148 -0.148 -0.103 -0.103 -0.08 -0.034 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.034 -0.034 -0.057 -0.057 -0.08 -0.103 -0.103 -0.148 -0.216 -0.33 -0.33 -0.467 -0.581 -0.604 -0.604 -0.626 -0.626 -0.649 -0.672 -0.672 -0.695 -0.74 -0.786 -0.786 -0.809 -0.9 -0.968 -1.036 -1.105 -1.173 -1.173 -1.196 -1.264 -1.333 -1.333 -1.355 -1.355 -1.401 -1.424 -1.424 -1.424 -1.469 -1.469 -1.469 -1.492 -1.515 -1.515 -1.538 -1.538 -1.56 -1.583 -1.583 -1.629 -1.674 -1.788 -1.788 -1.834 -1.925 -2.016 -2.084 -2.153 -2.198 -2.198 -2.244 -2.312 -2.358 -2.426 -2.494 -2.54 -2.54 -2.563 -2.608 -2.654 -2.699 -2.699 -2.699 -2.699 -2.722 -2.722 -2.722 -2.722 -2.722 -2.745 -2.79 -2.79 -2.813 -2.813 -2.836 -2.836 -2.836 -2.836 -2.882 -2.882 -2.904 -2.927 -2.927 -2.95 -2.95 -2.973 -2.995 -3.018 -3.041 -3.041 -3.041 -3.064 -3.064 -3.087 -3.109 -3.109 -3.132 -3.155 -3.155 -3.178 -3.2 -3.223 -3.223 -3.314 -3.405 -3.405 -3.565 -3.77 -3.77 -3.929 -3.929 -4.066 -4.203 -4.317 -4.408 -4.522 -4.658 -4.658 -4.772 -4.863 -4.909 -4.909 -4.932 -4.932 -4.977 -4.977 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -4.954 -4.863 -4.863 -4.749 -4.749 -4.704 -4.658 -4.658 -4.59 -4.544 -4.476 -4.476 -4.385 -4.271 -4.134 -4.043 -3.907 -3.793 -3.61 -3.36 -3.36 -3.223 -3.223 -3.132 -3.132 -3.018 -2.79 -2.517 -2.335 -2.175 -2.175 -1.97 -1.97 -1.697 -1.378 -1.082 -1.082 -0.831 -0.831 -0.672 -0.672 -0.49 -0.49 -0.239 -0.239 -0.011 0.216 0.399 0.399 0.604 0.604 0.786 0.968 0.968 1.128 1.128 1.333 1.333 1.538 1.788 1.993 2.221 2.221 2.449 2.654 2.813 2.813 2.973 2.973 3.155 3.314 3.474 3.588 3.633 3.633 3.747 3.793 3.884 3.884 3.998 4.089 4.157 4.157 4.294 4.385 4.453 4.476 4.499 4.522 4.522 4.613 4.613 4.658 4.704 4.772 4.772 4.795 4.818 4.818 4.818 4.818 4.818 4.818 4.841 4.841 4.841 4.841 4.863 4.863 4.863 4.886 4.886 4.886 4.886 4.886 4.909 4.932 4.932 4.954 4.954 4.977 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0)) (quotequote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (listnewobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (-0.558 -0.574 -0.607 -0.607 -0.688 -0.784 -0.898 -0.898 -1.011 -1.011 -1.124 -1.221 -1.221 -1.334 -1.334 -1.447 -1.544 -1.544 -1.658 -1.755 -1.755 -1.868 -1.965 -1.965 -2.03 -2.03 -2.03 -2.078 -2.095 -2.095 -2.095 -2.095 -2.078 -2.078 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -1.997 -1.997 -1.997 -1.997 -1.997 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -2.046 -2.046 -2.046 -2.078 -2.095 -2.126 -2.159 -2.159 -2.207 -2.24 -2.272 -2.272 -2.321 -2.386 -2.386 -2.418 -2.498 -2.498 -2.531 -2.596 -2.628 -2.677 -2.709 -2.741 -2.741 -2.79 -2.838 -2.838 -2.854 -2.87 -2.87 -2.87 -2.87 -2.87 -2.838 -2.79 -2.79 -2.693 -2.693 -2.612 -2.515 -2.515 -2.45 -2.402 -2.369 -2.353 -2.353 -2.321 -2.321 -2.305 -2.305 -2.305 -2.305 -2.305 -2.305 -2.321 -2.337 -2.337 -2.369 -2.369 -2.402 -2.402 -2.402 -2.434 -2.434 -2.434 -2.45 -2.45 -2.467 -2.467 -2.498 -2.515 -2.531 -2.531 -2.531 -2.531 -2.531 -2.531 -2.547 -2.547 -2.547 -2.547 -2.547 -2.547 -2.547 -2.547 -2.515 -2.515 -2.498 -2.498 -2.498 -2.434 -2.434 -2.402 -2.402 -2.369 -2.305 -2.191 -2.191 -2.111 -2.062 -2.062 -1.997 -1.997 -1.916 -1.819 -1.723 -1.723 -1.593 -1.48 -1.383 -1.318 -1.205 -1.14 -1.091 -1.091 -1.091 -1.124 -1.124 -1.205 -1.205 -1.302 -1.302 -1.415 -1.415 -1.544 -1.658 -1.658 -1.739 -1.739 -1.787 -1.852 -1.933 -1.965 -2.03 -2.126 -2.126 -2.207 -2.207 -2.256 -2.305 -2.305 -2.353 -2.402 -2.467 -2.531 -2.531 -2.579 -2.579 -2.612 -2.612 -2.644 -2.644 -2.677 -2.677 -2.693 -2.693 -2.693 -2.709 -2.709 -2.709 -2.709 -2.709 -2.693 -2.677 -2.628 -2.628 -2.531 -2.482 -2.482 -2.482 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.482 -2.515 -2.547 -2.596 -2.644 -2.693 -2.693 -2.709 -2.758 -2.806 -2.806 -2.838 -2.838 -2.887 -2.919 -2.935 -2.935 -2.951 -2.984 -2.984 -2.984 -2.984 -2.984 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -2.984 -2.919 -2.919 -2.87 -2.822 -2.774 -2.709 -2.677 -2.644 -2.644 -2.579 -2.531 -2.45 -2.386 -2.305 -2.24 -2.24 -2.207 -2.175 -2.143 -2.111 -2.111 -2.095 -2.095 -2.062 -2.03 -2.03 -2.014 -2.014 -1.981 -1.949 -1.949 -1.9 -1.9 -1.868 -1.868 -1.852 -1.852 -1.803 -1.803 -1.771 -1.755 -1.739 -1.739 -1.739 -1.739 -1.723 -1.723 -1.723 -1.723 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.69 -1.69 -1.625 -1.544 -1.544 -1.48 -1.48 -1.399 -1.27 -1.124 -0.979 -0.833 -0.639 -0.639 -0.412 -0.121 0.17 0.17 0.38 0.38 0.574 0.574 0.768 0.768 0.946 1.108 1.27 1.27 1.415 1.415 1.561 1.561 1.706 1.706 1.868 2.014 2.014 2.111 2.111 2.126 2.159 2.159 2.159 2.159 2.126 2.126 2.095 2.046 2.014 1.981 1.949 1.933 1.9 1.819 1.819 1.771 1.771 1.755 1.755 1.755 1.706 1.642 1.625 1.625 1.625 1.642 1.642 1.69 1.771 1.884 1.884 1.949 1.949 2.014 2.014 2.078 2.078 2.159 2.159 2.224 2.305 2.402 2.402 2.498 2.498 2.596 2.677 2.677 2.741 2.741 2.806 2.806 2.87 2.951 2.984 2.984 2.984 3.0 3.0 2.968 2.968 2.919 2.919 2.854 2.79 2.725 2.66 2.596 2.596 2.515 2.434 2.288 2.288 2.143 2.03 1.9 1.9 1.755 1.593 1.447 1.334 1.221 1.108 1.108 0.93 0.93 0.784 0.639 0.558 0.461 0.348 0.267 0.267 0.186 0.137 0.089 0.089 0.024 -0.024 -0.089 -0.089 -0.154 -0.154 -0.218 -0.267 -0.267 -0.316 -0.396 -0.396 -0.445 -0.493 -0.493 -0.574 -0.574 -0.639 -0.704 -0.719 -0.719 -0.736 -0.752 -0.752 -0.768 -0.784 -0.784)) (quote (3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 2.959 2.932 2.932 2.877 2.836 2.836 2.795 2.74 2.74 2.699 2.686 2.686 2.603 2.536 2.48 2.48 2.426 2.344 2.344 2.234 2.125 2.125 2.057 2.002 2.002 1.961 1.92 1.879 1.852 1.852 1.825 1.784 1.742 1.742 1.715 1.702 1.702 1.688 1.688 1.688 1.674 1.674 1.661 1.633 1.619 1.619 1.592 1.565 1.538 1.538 1.51 1.483 1.483 1.456 1.428 1.428 1.401 1.387 1.36 1.346 1.333 1.305 1.305 1.292 1.264 1.264 1.25 1.237 1.237 1.223 1.21 1.21 1.182 1.155 1.155 1.127 1.127 1.114 1.087 1.087 1.059 1.046 1.018 1.004 1.004 0.95 0.95 0.923 0.895 0.895 0.881 0.868 0.868 0.841 0.8 0.8 0.745 0.745 0.704 0.704 0.677 0.677 0.677 0.649 0.622 0.622 0.608 0.608 0.581 0.554 0.526 0.526 0.512 0.499 0.499 0.485 0.485 0.485 0.458 0.444 0.444 0.431 0.417 0.417 0.417 0.417 0.403 0.403 0.389 0.389 0.389 0.376 0.376 0.349 0.335 0.308 0.308 0.28 0.28 0.28 0.28 0.28 0.28 0.266 0.239 0.239 0.212 0.185 0.143 0.13 0.089 0.062 0.034 0.034 0.02 0.007 0.007 -0.02 -0.02 -0.062 -0.062 -0.103 -0.103 -0.157 -0.185 -0.185 -0.198 -0.198 -0.198 -0.198 -0.198 -0.185 -0.157 -0.116 -0.116 -0.089 -0.089 -0.089 -0.062 -0.062 -0.048 -0.02 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.02 -0.02 -0.034 -0.034 -0.048 -0.062 -0.062 -0.089 -0.13 -0.198 -0.198 -0.28 -0.349 -0.362 -0.362 -0.376 -0.376 -0.389 -0.403 -0.403 -0.417 -0.444 -0.472 -0.472 -0.485 -0.54 -0.581 -0.622 -0.663 -0.704 -0.704 -0.718 -0.758 -0.8 -0.8 -0.813 -0.813 -0.841 -0.854 -0.854 -0.854 -0.881 -0.881 -0.881 -0.895 -0.909 -0.909 -0.923 -0.923 -0.936 -0.95 -0.95 -0.977 -1.004 -1.073 -1.073 -1.1 -1.155 -1.21 -1.25 -1.292 -1.319 -1.319 -1.346 -1.387 -1.415 -1.456 -1.496 -1.524 -1.524 -1.538 -1.565 -1.592 -1.619 -1.619 -1.619 -1.619 -1.633 -1.633 -1.633 -1.633 -1.633 -1.647 -1.674 -1.674 -1.688 -1.688 -1.702 -1.702 -1.702 -1.702 -1.729 -1.729 -1.742 -1.756 -1.756 -1.77 -1.77 -1.784 -1.797 -1.811 -1.825 -1.825 -1.825 -1.838 -1.838 -1.852 -1.865 -1.865 -1.879 -1.893 -1.893 -1.907 -1.92 -1.934 -1.934 -1.988 -2.043 -2.043 -2.139 -2.262 -2.262 -2.357 -2.357 -2.44 -2.522 -2.59 -2.645 -2.713 -2.795 -2.795 -2.863 -2.918 -2.945 -2.945 -2.959 -2.959 -2.986 -2.986 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -2.972 -2.918 -2.918 -2.849 -2.849 -2.822 -2.795 -2.795 -2.754 -2.726 -2.686 -2.686 -2.631 -2.563 -2.48 -2.426 -2.344 -2.276 -2.166 -2.016 -2.016 -1.934 -1.934 -1.879 -1.879 -1.811 -1.674 -1.51 -1.401 -1.305 -1.305 -1.182 -1.182 -1.018 -0.827 -0.649 -0.649 -0.499 -0.499 -0.403 -0.403 -0.294 -0.294 -0.143 -0.143 -0.007 0.13 0.239 0.239 0.362 0.362 0.472 0.581 0.581 0.677 0.677 0.8 0.8 0.923 1.073 1.196 1.333 1.333 1.469 1.592 1.688 1.688 1.784 1.784 1.893 1.988 2.084 2.153 2.18 2.18 2.248 2.276 2.33 2.33 2.399 2.453 2.494 2.494 2.576 2.631 2.672 2.686 2.699 2.713 2.713 2.768 2.768 2.795 2.822 2.863 2.863 2.877 2.891 2.891 2.891 2.891 2.891 2.891 2.905 2.905 2.905 2.905 2.918 2.918 2.918 2.932 2.932 2.932 2.932 2.932 2.945 2.959 2.959 2.972 2.972 2.986 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0)) (quotequote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (list 0.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0))) newobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (-0.558 -0.574 -0.607 -0.607 -0.688 -0.784 -0.898 -0.898 -1.011 -1.011 -1.124 -1.221 -1.221 -1.334 -1.334 -1.447 -1.544 -1.544 -1.658 -1.755 -1.755 -1.868 -1.965 -1.965 -2.03 -2.03 -2.03 -2.078 -2.095 -2.095 -2.095 -2.095 -2.078 -2.078 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -1.997 -1.997 -1.997 -1.997 -1.997 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -2.046 -2.046 -2.046 -2.078 -2.095 -2.126 -2.159 -2.159 -2.207 -2.24 -2.272 -2.272 -2.321 -2.386 -2.386 -2.418 -2.498 -2.498 -2.531 -2.596 -2.628 -2.677 -2.709 -2.741 -2.741 -2.79 -2.838 -2.838 -2.854 -2.87 -2.87 -2.87 -2.87 -2.87 -2.838 -2.79 -2.79 -2.693 -2.693 -2.612 -2.515 -2.515 -2.45 -2.402 -2.369 -2.353 -2.353 -2.321 -2.321 -2.305 -2.305 -2.305 -2.305 -2.305 -2.305 -2.321 -2.337 -2.337 -2.369 -2.369 -2.402 -2.402 -2.402 -2.434 -2.434 -2.434 -2.45 -2.45 -2.467 -2.467 -2.498 -2.515 -2.531 -2.531 -2.531 -2.531 -2.531 -2.531 -2.547 -2.547 -2.547 -2.547 -2.547 -2.547 -2.547 -2.547 -2.515 -2.515 -2.498 -2.498 -2.498 -2.434 -2.434 -2.402 -2.402 -2.369 -2.305 -2.191 -2.191 -2.111 -2.062 -2.062 -1.997 -1.997 -1.916 -1.819 -1.723 -1.723 -1.593 -1.48 -1.383 -1.318 -1.205 -1.14 -1.091 -1.091 -1.091 -1.124 -1.124 -1.205 -1.205 -1.302 -1.302 -1.415 -1.415 -1.544 -1.658 -1.658 -1.739 -1.739 -1.787 -1.852 -1.933 -1.965 -2.03 -2.126 -2.126 -2.207 -2.207 -2.256 -2.305 -2.305 -2.353 -2.402 -2.467 -2.531 -2.531 -2.579 -2.579 -2.612 -2.612 -2.644 -2.644 -2.677 -2.677 -2.693 -2.693 -2.693 -2.709 -2.709 -2.709 -2.709 -2.709 -2.693 -2.677 -2.628 -2.628 -2.531 -2.482 -2.482 -2.482 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.482 -2.515 -2.547 -2.596 -2.644 -2.693 -2.693 -2.709 -2.758 -2.806 -2.806 -2.838 -2.838 -2.887 -2.919 -2.935 -2.935 -2.951 -2.984 -2.984 -2.984 -2.984 -2.984 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -2.984 -2.919 -2.919 -2.87 -2.822 -2.774 -2.709 -2.677 -2.644 -2.644 -2.579 -2.531 -2.45 -2.386 -2.305 -2.24 -2.24 -2.207 -2.175 -2.143 -2.111 -2.111 -2.095 -2.095 -2.062 -2.03 -2.03 -2.014 -2.014 -1.981 -1.949 -1.949 -1.9 -1.9 -1.868 -1.868 -1.852 -1.852 -1.803 -1.803 -1.771 -1.755 -1.739 -1.739 -1.739 -1.739 -1.723 -1.723 -1.723 -1.723 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.69 -1.69 -1.625 -1.544 -1.544 -1.48 -1.48 -1.399 -1.27 -1.124 -0.979 -0.833 -0.639 -0.639 -0.412 -0.121 0.17 0.17 0.38 0.38 0.574 0.574 0.768 0.768 0.946 1.108 1.27 1.27 1.415 1.415 1.561 1.561 1.706 1.706 1.868 2.014 2.014 2.111 2.111 2.126 2.159 2.159 2.159 2.159 2.126 2.126 2.095 2.046 2.014 1.981 1.949 1.933 1.9 1.819 1.819 1.771 1.771 1.755 1.755 1.755 1.706 1.642 1.625 1.625 1.625 1.642 1.642 1.69 1.771 1.884 1.884 1.949 1.949 2.014 2.014 2.078 2.078 2.159 2.159 2.224 2.305 2.402 2.402 2.498 2.498 2.596 2.677 2.677 2.741 2.741 2.806 2.806 2.87 2.951 2.984 2.984 2.984 3.0 3.0 2.968 2.968 2.919 2.919 2.854 2.79 2.725 2.66 2.596 2.596 2.515 2.434 2.288 2.288 2.143 2.03 1.9 1.9 1.755 1.593 1.447 1.334 1.221 1.108 1.108 0.93 0.93 0.784 0.639 0.558 0.461 0.348 0.267 0.267 0.186 0.137 0.089 0.089 0.024 -0.024 -0.089 -0.089 -0.154 -0.154 -0.218 -0.267 -0.267 -0.316 -0.396 -0.396 -0.445 -0.493 -0.493 -0.574 -0.574 -0.639 -0.704 -0.719 -0.719 -0.736 -0.752 -0.752 -0.768 -0.784 -0.784)) (quote (3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 2.959 2.932 2.932 2.877 2.836 2.836 2.795 2.74 2.74 2.699 2.686 2.686 2.603 2.536 2.48 2.48 2.426 2.344 2.344 2.234 2.125 2.125 2.057 2.002 2.002 1.961 1.92 1.879 1.852 1.852 1.825 1.784 1.742 1.742 1.715 1.702 1.702 1.688 1.688 1.688 1.674 1.674 1.661 1.633 1.619 1.619 1.592 1.565 1.538 1.538 1.51 1.483 1.483 1.456 1.428 1.428 1.401 1.387 1.36 1.346 1.333 1.305 1.305 1.292 1.264 1.264 1.25 1.237 1.237 1.223 1.21 1.21 1.182 1.155 1.155 1.127 1.127 1.114 1.087 1.087 1.059 1.046 1.018 1.004 1.004 0.95 0.95 0.923 0.895 0.895 0.881 0.868 0.868 0.841 0.8 0.8 0.745 0.745 0.704 0.704 0.677 0.677 0.677 0.649 0.622 0.622 0.608 0.608 0.581 0.554 0.526 0.526 0.512 0.499 0.499 0.485 0.485 0.485 0.458 0.444 0.444 0.431 0.417 0.417 0.417 0.417 0.403 0.403 0.389 0.389 0.389 0.376 0.376 0.349 0.335 0.308 0.308 0.28 0.28 0.28 0.28 0.28 0.28 0.266 0.239 0.239 0.212 0.185 0.143 0.13 0.089 0.062 0.034 0.034 0.02 0.007 0.007 -0.02 -0.02 -0.062 -0.062 -0.103 -0.103 -0.157 -0.185 -0.185 -0.198 -0.198 -0.198 -0.198 -0.198 -0.185 -0.157 -0.116 -0.116 -0.089 -0.089 -0.089 -0.062 -0.062 -0.048 -0.02 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.02 -0.02 -0.034 -0.034 -0.048 -0.062 -0.062 -0.089 -0.13 -0.198 -0.198 -0.28 -0.349 -0.362 -0.362 -0.376 -0.376 -0.389 -0.403 -0.403 -0.417 -0.444 -0.472 -0.472 -0.485 -0.54 -0.581 -0.622 -0.663 -0.704 -0.704 -0.718 -0.758 -0.8 -0.8 -0.813 -0.813 -0.841 -0.854 -0.854 -0.854 -0.881 -0.881 -0.881 -0.895 -0.909 -0.909 -0.923 -0.923 -0.936 -0.95 -0.95 -0.977 -1.004 -1.073 -1.073 -1.1 -1.155 -1.21 -1.25 -1.292 -1.319 -1.319 -1.346 -1.387 -1.415 -1.456 -1.496 -1.524 -1.524 -1.538 -1.565 -1.592 -1.619 -1.619 -1.619 -1.619 -1.633 -1.633 -1.633 -1.633 -1.633 -1.647 -1.674 -1.674 -1.688 -1.688 -1.702 -1.702 -1.702 -1.702 -1.729 -1.729 -1.742 -1.756 -1.756 -1.77 -1.77 -1.784 -1.797 -1.811 -1.825 -1.825 -1.825 -1.838 -1.838 -1.852 -1.865 -1.865 -1.879 -1.893 -1.893 -1.907 -1.92 -1.934 -1.934 -1.988 -2.043 -2.043 -2.139 -2.262 -2.262 -2.357 -2.357 -2.44 -2.522 -2.59 -2.645 -2.713 -2.795 -2.795 -2.863 -2.918 -2.945 -2.945 -2.959 -2.959 -2.986 -2.986 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -2.972 -2.918 -2.918 -2.849 -2.849 -2.822 -2.795 -2.795 -2.754 -2.726 -2.686 -2.686 -2.631 -2.563 -2.48 -2.426 -2.344 -2.276 -2.166 -2.016 -2.016 -1.934 -1.934 -1.879 -1.879 -1.811 -1.674 -1.51 -1.401 -1.305 -1.305 -1.182 -1.182 -1.018 -0.827 -0.649 -0.649 -0.499 -0.499 -0.403 -0.403 -0.294 -0.294 -0.143 -0.143 -0.007 0.13 0.239 0.239 0.362 0.362 0.472 0.581 0.581 0.677 0.677 0.8 0.8 0.923 1.073 1.196 1.333 1.333 1.469 1.592 1.688 1.688 1.784 1.784 1.893 1.988 2.084 2.153 2.18 2.18 2.248 2.276 2.33 2.33 2.399 2.453 2.494 2.494 2.576 2.631 2.672 2.686 2.699 2.713 2.713 2.768 2.768 2.795 2.822 2.863 2.863 2.877 2.891 2.891 2.891 2.891 2.891 2.891 2.905 2.905 2.905 2.905 2.918 2.918 2.918 2.932 2.932 2.932 2.932 2.932 2.945 2.959 2.959 2.972 2.972 2.986 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0)) (quotequote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (listnewobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 2.959 2.932 2.932 2.877 2.836 2.836 2.795 2.74 2.74 2.699 2.686 2.686 2.603 2.536 2.48 2.48 2.426 2.344 2.344 2.234 2.125 2.125 2.057 2.002 2.002 1.961 1.92 1.879 1.852 1.852 1.825 1.784 1.742 1.742 1.715 1.702 1.702 1.688 1.688 1.688 1.674 1.674 1.661 1.633 1.619 1.619 1.592 1.565 1.538 1.538 1.51 1.483 1.483 1.456 1.428 1.428 1.401 1.387 1.36 1.346 1.333 1.305 1.305 1.292 1.264 1.264 1.25 1.237 1.237 1.223 1.21 1.21 1.182 1.155 1.155 1.127 1.127 1.114 1.087 1.087 1.059 1.046 1.018 1.004 1.004 0.95 0.95 0.923 0.895 0.895 0.881 0.868 0.868 0.841 0.8 0.8 0.745 0.745 0.704 0.704 0.677 0.677 0.677 0.649 0.622 0.622 0.608 0.608 0.581 0.554 0.526 0.526 0.512 0.499 0.499 0.485 0.485 0.485 0.458 0.444 0.444 0.431 0.417 0.417 0.417 0.417 0.403 0.403 0.389 0.389 0.389 0.376 0.376 0.349 0.335 0.308 0.308 0.28 0.28 0.28 0.28 0.28 0.28 0.266 0.239 0.239 0.212 0.185 0.143 0.13 0.089 0.062 0.034 0.034 0.02 0.007 0.007 -0.02 -0.02 -0.062 -0.062 -0.103 -0.103 -0.157 -0.185 -0.185 -0.198 -0.198 -0.198 -0.198 -0.198 -0.185 -0.157 -0.116 -0.116 -0.089 -0.089 -0.089 -0.062 -0.062 -0.048 -0.02 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.02 -0.02 -0.034 -0.034 -0.048 -0.062 -0.062 -0.089 -0.13 -0.198 -0.198 -0.28 -0.349 -0.362 -0.362 -0.376 -0.376 -0.389 -0.403 -0.403 -0.417 -0.444 -0.472 -0.472 -0.485 -0.54 -0.581 -0.622 -0.663 -0.704 -0.704 -0.718 -0.758 -0.8 -0.8 -0.813 -0.813 -0.841 -0.854 -0.854 -0.854 -0.881 -0.881 -0.881 -0.895 -0.909 -0.909 -0.923 -0.923 -0.936 -0.95 -0.95 -0.977 -1.004 -1.073 -1.073 -1.1 -1.155 -1.21 -1.25 -1.292 -1.319 -1.319 -1.346 -1.387 -1.415 -1.456 -1.496 -1.524 -1.524 -1.538 -1.565 -1.592 -1.619 -1.619 -1.619 -1.619 -1.633 -1.633 -1.633 -1.633 -1.633 -1.647 -1.674 -1.674 -1.688 -1.688 -1.702 -1.702 -1.702 -1.702 -1.729 -1.729 -1.742 -1.756 -1.756 -1.77 -1.77 -1.784 -1.797 -1.811 -1.825 -1.825 -1.825 -1.838 -1.838 -1.852 -1.865 -1.865 -1.879 -1.893 -1.893 -1.907 -1.92 -1.934 -1.934 -1.988 -2.043 -2.043 -2.139 -2.262 -2.262 -2.357 -2.357 -2.44 -2.522 -2.59 -2.645 -2.713 -2.795 -2.795 -2.863 -2.918 -2.945 -2.945 -2.959 -2.959 -2.986 -2.986 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -2.972 -2.918 -2.918 -2.849 -2.849 -2.822 -2.795 -2.795 -2.754 -2.726 -2.686 -2.686 -2.631 -2.563 -2.48 -2.426 -2.344 -2.276 -2.166 -2.016 -2.016 -1.934 -1.934 -1.879 -1.879 -1.811 -1.674 -1.51 -1.401 -1.305 -1.305 -1.182 -1.182 -1.018 -0.827 -0.649 -0.649 -0.499 -0.499 -0.403 -0.403 -0.294 -0.294 -0.143 -0.143 -0.007 0.13 0.239 0.239 0.362 0.362 0.472 0.581 0.581 0.677 0.677 0.8 0.8 0.923 1.073 1.196 1.333 1.333 1.469 1.592 1.688 1.688 1.784 1.784 1.893 1.988 2.084 2.153 2.18 2.18 2.248 2.276 2.33 2.33 2.399 2.453 2.494 2.494 2.576 2.631 2.672 2.686 2.699 2.713 2.713 2.768 2.768 2.795 2.822 2.863 2.863 2.877 2.891 2.891 2.891 2.891 2.891 2.891 2.905 2.905 2.905 2.905 2.918 2.918 2.918 2.932 2.932 2.932 2.932 2.932 2.945 2.959 2.959 2.972 2.972 2.986 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0)) (quote (0.558 0.574 0.607 0.607 0.688 0.784 0.898 0.898 1.011 1.011 1.124 1.221 1.221 1.334 1.334 1.447 1.544 1.544 1.658 1.755 1.755 1.868 1.965 1.965 2.03 2.03 2.03 2.078 2.095 2.095 2.095 2.095 2.078 2.078 2.014 2.014 2.014 2.014 2.014 2.014 2.014 2.014 1.997 1.997 1.997 1.997 1.997 2.014 2.014 2.014 2.014 2.014 2.014 2.046 2.046 2.046 2.078 2.095 2.126 2.159 2.159 2.207 2.24 2.272 2.272 2.321 2.386 2.386 2.418 2.498 2.498 2.531 2.596 2.628 2.677 2.709 2.741 2.741 2.79 2.838 2.838 2.854 2.87 2.87 2.87 2.87 2.87 2.838 2.79 2.79 2.693 2.693 2.612 2.515 2.515 2.45 2.402 2.369 2.353 2.353 2.321 2.321 2.305 2.305 2.305 2.305 2.305 2.305 2.321 2.337 2.337 2.369 2.369 2.402 2.402 2.402 2.434 2.434 2.434 2.45 2.45 2.467 2.467 2.498 2.515 2.531 2.531 2.531 2.531 2.531 2.531 2.547 2.547 2.547 2.547 2.547 2.547 2.547 2.547 2.515 2.515 2.498 2.498 2.498 2.434 2.434 2.402 2.402 2.369 2.305 2.191 2.191 2.111 2.062 2.062 1.997 1.997 1.916 1.819 1.723 1.723 1.593 1.48 1.383 1.318 1.205 1.14 1.091 1.091 1.091 1.124 1.124 1.205 1.205 1.302 1.302 1.415 1.415 1.544 1.658 1.658 1.739 1.739 1.787 1.852 1.933 1.965 2.03 2.126 2.126 2.207 2.207 2.256 2.305 2.305 2.353 2.402 2.467 2.531 2.531 2.579 2.579 2.612 2.612 2.644 2.644 2.677 2.677 2.693 2.693 2.693 2.709 2.709 2.709 2.709 2.709 2.693 2.677 2.628 2.628 2.531 2.482 2.482 2.482 2.467 2.467 2.467 2.467 2.467 2.467 2.467 2.467 2.467 2.482 2.515 2.547 2.596 2.644 2.693 2.693 2.709 2.758 2.806 2.806 2.838 2.838 2.887 2.919 2.935 2.935 2.951 2.984 2.984 2.984 2.984 2.984 3.0 3.0 3.0 3.0 3.0 3.0 2.984 2.919 2.919 2.87 2.822 2.774 2.709 2.677 2.644 2.644 2.579 2.531 2.45 2.386 2.305 2.24 2.24 2.207 2.175 2.143 2.111 2.111 2.095 2.095 2.062 2.03 2.03 2.014 2.014 1.981 1.949 1.949 1.9 1.9 1.868 1.868 1.852 1.852 1.803 1.803 1.771 1.755 1.739 1.739 1.739 1.739 1.723 1.723 1.723 1.723 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.69 1.69 1.625 1.544 1.544 1.48 1.48 1.399 1.27 1.124 0.979 0.833 0.639 0.639 0.412 0.121 -0.17 -0.17 -0.38 -0.38 -0.574 -0.574 -0.768 -0.768 -0.946 -1.108 -1.27 -1.27 -1.415 -1.415 -1.561 -1.561 -1.706 -1.706 -1.868 -2.014 -2.014 -2.111 -2.111 -2.126 -2.159 -2.159 -2.159 -2.159 -2.126 -2.126 -2.095 -2.046 -2.014 -1.981 -1.949 -1.933 -1.9 -1.819 -1.819 -1.771 -1.771 -1.755 -1.755 -1.755 -1.706 -1.642 -1.625 -1.625 -1.625 -1.642 -1.642 -1.69 -1.771 -1.884 -1.884 -1.949 -1.949 -2.014 -2.014 -2.078 -2.078 -2.159 -2.159 -2.224 -2.305 -2.402 -2.402 -2.498 -2.498 -2.596 -2.677 -2.677 -2.741 -2.741 -2.806 -2.806 -2.87 -2.951 -2.984 -2.984 -2.984 -3.0 -3.0 -2.968 -2.968 -2.919 -2.919 -2.854 -2.79 -2.725 -2.66 -2.596 -2.596 -2.515 -2.434 -2.288 -2.288 -2.143 -2.03 -1.9 -1.9 -1.755 -1.593 -1.447 -1.334 -1.221 -1.108 -1.108 -0.93 -0.93 -0.784 -0.639 -0.558 -0.461 -0.348 -0.267 -0.267 -0.186 -0.137 -0.089 -0.089 -0.024 0.024 0.089 0.089 0.154 0.154 0.218 0.267 0.267 0.316 0.396 0.396 0.445 0.493 0.493 0.574 0.574 0.639 0.704 0.719 0.719 0.736 0.752 0.752 0.768 0.784 0.784)) (quotequote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (listnewobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 2.959 2.932 2.932 2.877 2.836 2.836 2.795 2.74 2.74 2.699 2.686 2.686 2.603 2.536 2.48 2.48 2.426 2.344 2.344 2.234 2.125 2.125 2.057 2.002 2.002 1.961 1.92 1.879 1.852 1.852 1.825 1.784 1.742 1.742 1.715 1.702 1.702 1.688 1.688 1.688 1.674 1.674 1.661 1.633 1.619 1.619 1.592 1.565 1.538 1.538 1.51 1.483 1.483 1.456 1.428 1.428 1.401 1.387 1.36 1.346 1.333 1.305 1.305 1.292 1.264 1.264 1.25 1.237 1.237 1.223 1.21 1.21 1.182 1.155 1.155 1.127 1.127 1.114 1.087 1.087 1.059 1.046 1.018 1.004 1.004 0.95 0.95 0.923 0.895 0.895 0.881 0.868 0.868 0.841 0.8 0.8 0.745 0.745 0.704 0.704 0.677 0.677 0.677 0.649 0.622 0.622 0.608 0.608 0.581 0.554 0.526 0.526 0.512 0.499 0.499 0.485 0.485 0.485 0.458 0.444 0.444 0.431 0.417 0.417 0.417 0.417 0.403 0.403 0.389 0.389 0.389 0.376 0.376 0.349 0.335 0.308 0.308 0.28 0.28 0.28 0.28 0.28 0.28 0.266 0.239 0.239 0.212 0.185 0.143 0.13 0.089 0.062 0.034 0.034 0.02 0.007 0.007 -0.02 -0.02 -0.062 -0.062 -0.103 -0.103 -0.157 -0.185 -0.185 -0.198 -0.198 -0.198 -0.198 -0.198 -0.185 -0.157 -0.116 -0.116 -0.089 -0.089 -0.089 -0.062 -0.062 -0.048 -0.02 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.007 -0.02 -0.02 -0.034 -0.034 -0.048 -0.062 -0.062 -0.089 -0.13 -0.198 -0.198 -0.28 -0.349 -0.362 -0.362 -0.376 -0.376 -0.389 -0.403 -0.403 -0.417 -0.444 -0.472 -0.472 -0.485 -0.54 -0.581 -0.622 -0.663 -0.704 -0.704 -0.718 -0.758 -0.8 -0.8 -0.813 -0.813 -0.841 -0.854 -0.854 -0.854 -0.881 -0.881 -0.881 -0.895 -0.909 -0.909 -0.923 -0.923 -0.936 -0.95 -0.95 -0.977 -1.004 -1.073 -1.073 -1.1 -1.155 -1.21 -1.25 -1.292 -1.319 -1.319 -1.346 -1.387 -1.415 -1.456 -1.496 -1.524 -1.524 -1.538 -1.565 -1.592 -1.619 -1.619 -1.619 -1.619 -1.633 -1.633 -1.633 -1.633 -1.633 -1.647 -1.674 -1.674 -1.688 -1.688 -1.702 -1.702 -1.702 -1.702 -1.729 -1.729 -1.742 -1.756 -1.756 -1.77 -1.77 -1.784 -1.797 -1.811 -1.825 -1.825 -1.825 -1.838 -1.838 -1.852 -1.865 -1.865 -1.879 -1.893 -1.893 -1.907 -1.92 -1.934 -1.934 -1.988 -2.043 -2.043 -2.139 -2.262 -2.262 -2.357 -2.357 -2.44 -2.522 -2.59 -2.645 -2.713 -2.795 -2.795 -2.863 -2.918 -2.945 -2.945 -2.959 -2.959 -2.986 -2.986 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -2.972 -2.918 -2.918 -2.849 -2.849 -2.822 -2.795 -2.795 -2.754 -2.726 -2.686 -2.686 -2.631 -2.563 -2.48 -2.426 -2.344 -2.276 -2.166 -2.016 -2.016 -1.934 -1.934 -1.879 -1.879 -1.811 -1.674 -1.51 -1.401 -1.305 -1.305 -1.182 -1.182 -1.018 -0.827 -0.649 -0.649 -0.499 -0.499 -0.403 -0.403 -0.294 -0.294 -0.143 -0.143 -0.007 0.13 0.239 0.239 0.362 0.362 0.472 0.581 0.581 0.677 0.677 0.8 0.8 0.923 1.073 1.196 1.333 1.333 1.469 1.592 1.688 1.688 1.784 1.784 1.893 1.988 2.084 2.153 2.18 2.18 2.248 2.276 2.33 2.33 2.399 2.453 2.494 2.494 2.576 2.631 2.672 2.686 2.699 2.713 2.713 2.768 2.768 2.795 2.822 2.863 2.863 2.877 2.891 2.891 2.891 2.891 2.891 2.891 2.905 2.905 2.905 2.905 2.918 2.918 2.918 2.932 2.932 2.932 2.932 2.932 2.945 2.959 2.959 2.972 2.972 2.986 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0)) (quote (0.558 0.574 0.607 0.607 0.688 0.784 0.898 0.898 1.011 1.011 1.124 1.221 1.221 1.334 1.334 1.447 1.544 1.544 1.658 1.755 1.755 1.868 1.965 1.965 2.03 2.03 2.03 2.078 2.095 2.095 2.095 2.095 2.078 2.078 2.014 2.014 2.014 2.014 2.014 2.014 2.014 2.014 1.997 1.997 1.997 1.997 1.997 2.014 2.014 2.014 2.014 2.014 2.014 2.046 2.046 2.046 2.078 2.095 2.126 2.159 2.159 2.207 2.24 2.272 2.272 2.321 2.386 2.386 2.418 2.498 2.498 2.531 2.596 2.628 2.677 2.709 2.741 2.741 2.79 2.838 2.838 2.854 2.87 2.87 2.87 2.87 2.87 2.838 2.79 2.79 2.693 2.693 2.612 2.515 2.515 2.45 2.402 2.369 2.353 2.353 2.321 2.321 2.305 2.305 2.305 2.305 2.305 2.305 2.321 2.337 2.337 2.369 2.369 2.402 2.402 2.402 2.434 2.434 2.434 2.45 2.45 2.467 2.467 2.498 2.515 2.531 2.531 2.531 2.531 2.531 2.531 2.547 2.547 2.547 2.547 2.547 2.547 2.547 2.547 2.515 2.515 2.498 2.498 2.498 2.434 2.434 2.402 2.402 2.369 2.305 2.191 2.191 2.111 2.062 2.062 1.997 1.997 1.916 1.819 1.723 1.723 1.593 1.48 1.383 1.318 1.205 1.14 1.091 1.091 1.091 1.124 1.124 1.205 1.205 1.302 1.302 1.415 1.415 1.544 1.658 1.658 1.739 1.739 1.787 1.852 1.933 1.965 2.03 2.126 2.126 2.207 2.207 2.256 2.305 2.305 2.353 2.402 2.467 2.531 2.531 2.579 2.579 2.612 2.612 2.644 2.644 2.677 2.677 2.693 2.693 2.693 2.709 2.709 2.709 2.709 2.709 2.693 2.677 2.628 2.628 2.531 2.482 2.482 2.482 2.467 2.467 2.467 2.467 2.467 2.467 2.467 2.467 2.467 2.482 2.515 2.547 2.596 2.644 2.693 2.693 2.709 2.758 2.806 2.806 2.838 2.838 2.887 2.919 2.935 2.935 2.951 2.984 2.984 2.984 2.984 2.984 3.0 3.0 3.0 3.0 3.0 3.0 2.984 2.919 2.919 2.87 2.822 2.774 2.709 2.677 2.644 2.644 2.579 2.531 2.45 2.386 2.305 2.24 2.24 2.207 2.175 2.143 2.111 2.111 2.095 2.095 2.062 2.03 2.03 2.014 2.014 1.981 1.949 1.949 1.9 1.9 1.868 1.868 1.852 1.852 1.803 1.803 1.771 1.755 1.739 1.739 1.739 1.739 1.723 1.723 1.723 1.723 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.706 1.69 1.69 1.625 1.544 1.544 1.48 1.48 1.399 1.27 1.124 0.979 0.833 0.639 0.639 0.412 0.121 -0.17 -0.17 -0.38 -0.38 -0.574 -0.574 -0.768 -0.768 -0.946 -1.108 -1.27 -1.27 -1.415 -1.415 -1.561 -1.561 -1.706 -1.706 -1.868 -2.014 -2.014 -2.111 -2.111 -2.126 -2.159 -2.159 -2.159 -2.159 -2.126 -2.126 -2.095 -2.046 -2.014 -1.981 -1.949 -1.933 -1.9 -1.819 -1.819 -1.771 -1.771 -1.755 -1.755 -1.755 -1.706 -1.642 -1.625 -1.625 -1.625 -1.642 -1.642 -1.69 -1.771 -1.884 -1.884 -1.949 -1.949 -2.014 -2.014 -2.078 -2.078 -2.159 -2.159 -2.224 -2.305 -2.402 -2.402 -2.498 -2.498 -2.596 -2.677 -2.677 -2.741 -2.741 -2.806 -2.806 -2.87 -2.951 -2.984 -2.984 -2.984 -3.0 -3.0 -2.968 -2.968 -2.919 -2.919 -2.854 -2.79 -2.725 -2.66 -2.596 -2.596 -2.515 -2.434 -2.288 -2.288 -2.143 -2.03 -1.9 -1.9 -1.755 -1.593 -1.447 -1.334 -1.221 -1.108 -1.108 -0.93 -0.93 -0.784 -0.639 -0.558 -0.461 -0.348 -0.267 -0.267 -0.186 -0.137 -0.089 -0.089 -0.024 0.024 0.089 0.089 0.154 0.154 0.218 0.267 0.267 0.316 0.396 0.396 0.445 0.493 0.493 0.574 0.574 0.639 0.704 0.719 0.719 0.736 0.752 0.752 0.768 0.784 0.784)) (quote (0.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0 10.0)) (quote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (listnewobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (-3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -2.959 -2.932 -2.932 -2.877 -2.836 -2.836 -2.795 -2.74 -2.74 -2.699 -2.686 -2.686 -2.603 -2.536 -2.48 -2.48 -2.426 -2.344 -2.344 -2.234 -2.125 -2.125 -2.057 -2.002 -2.002 -1.961 -1.92 -1.879 -1.852 -1.852 -1.825 -1.784 -1.742 -1.742 -1.715 -1.702 -1.702 -1.688 -1.688 -1.688 -1.674 -1.674 -1.661 -1.633 -1.619 -1.619 -1.592 -1.565 -1.538 -1.538 -1.51 -1.483 -1.483 -1.456 -1.428 -1.428 -1.401 -1.387 -1.36 -1.346 -1.333 -1.305 -1.305 -1.292 -1.264 -1.264 -1.25 -1.237 -1.237 -1.223 -1.21 -1.21 -1.182 -1.155 -1.155 -1.127 -1.127 -1.114 -1.087 -1.087 -1.059 -1.046 -1.018 -1.004 -1.004 -0.95 -0.95 -0.923 -0.895 -0.895 -0.881 -0.868 -0.868 -0.841 -0.8 -0.8 -0.745 -0.745 -0.704 -0.704 -0.677 -0.677 -0.677 -0.649 -0.622 -0.622 -0.608 -0.608 -0.581 -0.554 -0.526 -0.526 -0.512 -0.499 -0.499 -0.485 -0.485 -0.485 -0.458 -0.444 -0.444 -0.431 -0.417 -0.417 -0.417 -0.417 -0.403 -0.403 -0.389 -0.389 -0.389 -0.376 -0.376 -0.349 -0.335 -0.308 -0.308 -0.28 -0.28 -0.28 -0.28 -0.28 -0.28 -0.266 -0.239 -0.239 -0.212 -0.185 -0.143 -0.13 -0.089 -0.062 -0.034 -0.034 -0.02 -0.007 -0.007 0.02 0.02 0.062 0.062 0.103 0.103 0.157 0.185 0.185 0.198 0.198 0.198 0.198 0.198 0.185 0.157 0.116 0.116 0.089 0.089 0.089 0.062 0.062 0.048 0.02 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.02 0.02 0.034 0.034 0.048 0.062 0.062 0.089 0.13 0.198 0.198 0.28 0.349 0.362 0.362 0.376 0.376 0.389 0.403 0.403 0.417 0.444 0.472 0.472 0.485 0.54 0.581 0.622 0.663 0.704 0.704 0.718 0.758 0.8 0.8 0.813 0.813 0.841 0.854 0.854 0.854 0.881 0.881 0.881 0.895 0.909 0.909 0.923 0.923 0.936 0.95 0.95 0.977 1.004 1.073 1.073 1.1 1.155 1.21 1.25 1.292 1.319 1.319 1.346 1.387 1.415 1.456 1.496 1.524 1.524 1.538 1.565 1.592 1.619 1.619 1.619 1.619 1.633 1.633 1.633 1.633 1.633 1.647 1.674 1.674 1.688 1.688 1.702 1.702 1.702 1.702 1.729 1.729 1.742 1.756 1.756 1.77 1.77 1.784 1.797 1.811 1.825 1.825 1.825 1.838 1.838 1.852 1.865 1.865 1.879 1.893 1.893 1.907 1.92 1.934 1.934 1.988 2.043 2.043 2.139 2.262 2.262 2.357 2.357 2.44 2.522 2.59 2.645 2.713 2.795 2.795 2.863 2.918 2.945 2.945 2.959 2.959 2.986 2.986 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 3.0 2.972 2.918 2.918 2.849 2.849 2.822 2.795 2.795 2.754 2.726 2.686 2.686 2.631 2.563 2.48 2.426 2.344 2.276 2.166 2.016 2.016 1.934 1.934 1.879 1.879 1.811 1.674 1.51 1.401 1.305 1.305 1.182 1.182 1.018 0.827 0.649 0.649 0.499 0.499 0.403 0.403 0.294 0.294 0.143 0.143 0.007 -0.13 -0.239 -0.239 -0.362 -0.362 -0.472 -0.581 -0.581 -0.677 -0.677 -0.8 -0.8 -0.923 -1.073 -1.196 -1.333 -1.333 -1.469 -1.592 -1.688 -1.688 -1.784 -1.784 -1.893 -1.988 -2.084 -2.153 -2.18 -2.18 -2.248 -2.276 -2.33 -2.33 -2.399 -2.453 -2.494 -2.494 -2.576 -2.631 -2.672 -2.686 -2.699 -2.713 -2.713 -2.768 -2.768 -2.795 -2.822 -2.863 -2.863 -2.877 -2.891 -2.891 -2.891 -2.891 -2.891 -2.891 -2.905 -2.905 -2.905 -2.905 -2.918 -2.918 -2.918 -2.932 -2.932 -2.932 -2.932 -2.932 -2.945 -2.959 -2.959 -2.972 -2.972 -2.986 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0)) (quote (-0.558 -0.574 -0.607 -0.607 -0.688 -0.784 -0.898 -0.898 -1.011 -1.011 -1.124 -1.221 -1.221 -1.334 -1.334 -1.447 -1.544 -1.544 -1.658 -1.755 -1.755 -1.868 -1.965 -1.965 -2.03 -2.03 -2.03 -2.078 -2.095 -2.095 -2.095 -2.095 -2.078 -2.078 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -1.997 -1.997 -1.997 -1.997 -1.997 -2.014 -2.014 -2.014 -2.014 -2.014 -2.014 -2.046 -2.046 -2.046 -2.078 -2.095 -2.126 -2.159 -2.159 -2.207 -2.24 -2.272 -2.272 -2.321 -2.386 -2.386 -2.418 -2.498 -2.498 -2.531 -2.596 -2.628 -2.677 -2.709 -2.741 -2.741 -2.79 -2.838 -2.838 -2.854 -2.87 -2.87 -2.87 -2.87 -2.87 -2.838 -2.79 -2.79 -2.693 -2.693 -2.612 -2.515 -2.515 -2.45 -2.402 -2.369 -2.353 -2.353 -2.321 -2.321 -2.305 -2.305 -2.305 -2.305 -2.305 -2.305 -2.321 -2.337 -2.337 -2.369 -2.369 -2.402 -2.402 -2.402 -2.434 -2.434 -2.434 -2.45 -2.45 -2.467 -2.467 -2.498 -2.515 -2.531 -2.531 -2.531 -2.531 -2.531 -2.531 -2.547 -2.547 -2.547 -2.547 -2.547 -2.547 -2.547 -2.547 -2.515 -2.515 -2.498 -2.498 -2.498 -2.434 -2.434 -2.402 -2.402 -2.369 -2.305 -2.191 -2.191 -2.111 -2.062 -2.062 -1.997 -1.997 -1.916 -1.819 -1.723 -1.723 -1.593 -1.48 -1.383 -1.318 -1.205 -1.14 -1.091 -1.091 -1.091 -1.124 -1.124 -1.205 -1.205 -1.302 -1.302 -1.415 -1.415 -1.544 -1.658 -1.658 -1.739 -1.739 -1.787 -1.852 -1.933 -1.965 -2.03 -2.126 -2.126 -2.207 -2.207 -2.256 -2.305 -2.305 -2.353 -2.402 -2.467 -2.531 -2.531 -2.579 -2.579 -2.612 -2.612 -2.644 -2.644 -2.677 -2.677 -2.693 -2.693 -2.693 -2.709 -2.709 -2.709 -2.709 -2.709 -2.693 -2.677 -2.628 -2.628 -2.531 -2.482 -2.482 -2.482 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.467 -2.482 -2.515 -2.547 -2.596 -2.644 -2.693 -2.693 -2.709 -2.758 -2.806 -2.806 -2.838 -2.838 -2.887 -2.919 -2.935 -2.935 -2.951 -2.984 -2.984 -2.984 -2.984 -2.984 -3.0 -3.0 -3.0 -3.0 -3.0 -3.0 -2.984 -2.919 -2.919 -2.87 -2.822 -2.774 -2.709 -2.677 -2.644 -2.644 -2.579 -2.531 -2.45 -2.386 -2.305 -2.24 -2.24 -2.207 -2.175 -2.143 -2.111 -2.111 -2.095 -2.095 -2.062 -2.03 -2.03 -2.014 -2.014 -1.981 -1.949 -1.949 -1.9 -1.9 -1.868 -1.868 -1.852 -1.852 -1.803 -1.803 -1.771 -1.755 -1.739 -1.739 -1.739 -1.739 -1.723 -1.723 -1.723 -1.723 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.706 -1.69 -1.69 -1.625 -1.544 -1.544 -1.48 -1.48 -1.399 -1.27 -1.124 -0.979 -0.833 -0.639 -0.639 -0.412 -0.121 0.17 0.17 0.38 0.38 0.574 0.574 0.768 0.768 0.946 1.108 1.27 1.27 1.415 1.415 1.561 1.561 1.706 1.706 1.868 2.014 2.014 2.111 2.111 2.126 2.159 2.159 2.159 2.159 2.126 2.126 2.095 2.046 2.014 1.981 1.949 1.933 1.9 1.819 1.819 1.771 1.771 1.755 1.755 1.755 1.706 1.642 1.625 1.625 1.625 1.642 1.642 1.69 1.771 1.884 1.884 1.949 1.949 2.014 2.014 2.078 2.078 2.159 2.159 2.224 2.305 2.402 2.402 2.498 2.498 2.596 2.677 2.677 2.741 2.741 2.806 2.806 2.87 2.951 2.984 2.984 2.984 3.0 3.0 2.968 2.968 2.919 2.919 2.854 2.79 2.725 2.66 2.596 2.596 2.515 2.434 2.288 2.288 2.143 2.03 1.9 1.9 1.755 1.593 1.447 1.334 1.221 1.108 1.108 0.93 0.93 0.784 0.639 0.558 0.461 0.348 0.267 0.267 0.186 0.137 0.089 0.089 0.024 -0.024 -0.089 -0.089 -0.154 -0.154 -0.218 -0.267 -0.267 -0.316 -0.396 -0.396 -0.445 -0.493 -0.493 -0.574 -0.574 -0.639 -0.704 -0.719 -0.719 -0.736 -0.752 -0.752 -0.768 -0.784 -0.784)) (quotequote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (listnewobj)) :from-file t)) nil nil (pairlis (quote (picture winpos winsize)) (list nil (om-make-point 10 40) (om-make-point 880 528))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment12" (om-make-point 82 28) (quote "...translated...") "" (om-make-point 601 180) nil (om-make-color 0.02832079 0.0 1.0) (om-make-font "Arial" 12 :family "Arial" :style (quote (:italic)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "3DC" (quote 3dc) (quote ((om-load-inputfun (quote input-funbox) "object" "SELF" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "X-POINTS" (list 0 10)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "Y-POINTS" (list 0 100)) (om-load-inputfun (quote input-funbox) "Z coordinates (list)" "Z-POINTS" (list 0 0)) (om-load-inputfun (quote input-funbox) "precision (number)" "DECIMALS" 0))) (om-make-point 898 169) (om-make-point 60 60) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (0.0 0.0 1.0 3.0 5.0 8.0 10.0 13.0 16.0 18.0 20.0 21.0 21.0 20.0 18.0 15.0 11.0 6.0 0.0 -7.0 -14.0 -21.0 -28.0 -35.0 -42.0 -47.0 -51.0 -54.0 -55.0 -55.0 -52.0 -47.0 -41.0 -33.0 -23.0 -12.0 0.0 13.0 26.0 39.0 51.0 63.0 73.0 81.0 87.0 90.0 91.0 88.0 83.0 75.0 64.0 51.0 36.0 18.0 0.0 -19.0 -38.0 -57.0 -75.0 -90.0 -104.0 -115.0 -122.0 -126.0 -126.0 -122.0 -114.0 -103.0 -87.0 -69.0 -48.0 -25.0 0.0 25.0 51.0 75.0 98.0 118.0 135.0 148.0 158.0 162.0 162.0 156.0 145.0 130.0 111.0 87.0 60.0 31.0 0.0 -32.0 -59.0 -93.0 -121.0 -146.0 -166.0 -182.0 -193.0 -198.0 -197.0 -190.0 -177.0 -158.0 -134.0 -105.0 -73.0 -37.0 0.0 38.0 75.0 111.0 144.0 173.0 197.0 216.0 228.0 234.0 232.0 224.0 208.0 185.0 157.0 123.0 85.0 43.0 0.0 -44.0 -88.0 -129.0 -167.0 -201.0 -229.0 -250.0 -264.0 -270.0 -268.0 -257.0 -239.0 -213.0 -180.0 -141.0 -97.0 -50.0 0.0 50.0 100.0 147.0 190.0 232.0 260.0 284.0 299.0 306.0 303.0 291.0 270.0 241.0 203.0 159.0 109.0 56.0 0.0 -57.0 -112.0 -165.0 -213.0 -256.0 -291.0 -318.0 -335.0 -342.0 -339.0 -325.0 -301.0 -268.0 -226.0 -177.0 -122.0 -62.0 0.0)) (quote (0.0 2.0 4.0 5.0 6.0 6.0 6.0 5.0 3.0 0.0 -3.0 -8.0 -12.0 -17.0 -21.0 -26.0 -30.0 -33.0 -36.0 -37.0 -38.0 -36.0 -34.0 -30.0 -24.0 -17.0 -9.0 0.0 10.0 20.0 30.0 40.0 49.0 57.0 64.0 69.0 72.0 73.0 71.0 68.0 61.0 53.0 42.0 29.0 15.0 0.0 -16.0 -32.0 -48.0 -63.0 -77.0 -88.0 -98.0 -104.0 -108.0 -108.0 -105.0 -99.0 -89.0 -76.0 -60.0 -42.0 -22.0 0.0 22.0 44.0 66.0 86.0 104.0 120.0 132.0 140.0 144.0 144.0 139.0 130.0 116.0 99.0 78.0 54.0 28.0 0.0 -28.0 -57.0 -84.0 -109.0 -132.0 -151.0 -165.0 -175.0 -180.0 -179.0 -173.0 -161.0 -144.0 -122.0 -96.0 -66.0 -34.0 0.0 35.0 69.0 102.0 132.0 159.0 182.0 199.0 211.0 216.0 215.0 207.0 192.0 172.0 145.0 114.0 79.0 40.0 0.0 -41.0 -81.0 -120.0 -156.0 -187.0 -213.0 -233.0 -246.0 -252.0 -250.0 -241.0 -223.0 -199.0 -168.0 -132.0 -91.0 -47.0 0.0 47.0 94.0 138.0 179.0 214.0 244.0 267.0 282.0 288.0 286.0 274.0 255.0 227.0 192.0 150.0 103.0 53.0 0.0 -53.0 -106.0 -156.0 -202.0 -242.0 -275.0 -301.0 -317.0 -324.0 -321.0 -308.0 -286.0 -254.0 -215.0 -168.0 -116.0 -59.0 0.0 60.0 118.0 174.0 225.0 270.0 307.0 335.0 353.0 360.0)) (quote (0.0 2.0 4.0 6.0 8.0 10.0 12.0 14.0 16.0 18.0 20.0 22.0 24.0 26.0 28.0 30.0 32.0 34.0 36.0 38.0 40.0 42.0 44.0 46.0 48.0 50.0 52.0 54.0 56.0 58.0 60.0 62.0 64.0 66.0 68.0 70.0 72.0 74.0 76.0 78.0 80.0 82.0 84.0 86.0 88.0 90.0 92.0 94.0 96.0 98.0 100.0 102.0 104.0 106.0 108.0 110.0 112.0 114.0 116.0 118.0 120.0 122.0 124.0 126.0 128.0 130.0 132.0 134.0 136.0 138.0 140.0 142.0 144.0 146.0 148.0 150.0 152.0 154.0 156.0 158.0 160.0 162.0 164.0 166.0 168.0 170.0 172.0 174.0 176.0 178.0 180.0 182.0 184.0 186.0 188.0 190.0 192.0 194.0 196.0 198.0 200.0 202.0 204.0 206.0 208.0 210.0 212.0 214.0 216.0 218.0 220.0 222.0 224.0 226.0 228.0 230.0 232.0 234.0 236.0 238.0 240.0 242.0 244.0 246.0 248.0 250.0 252.0 254.0 256.0 258.0 260.0 262.0 264.0 266.0 268.0 270.0 272.0 274.0 276.0 278.0 280.0 282.0 284.0 286.0 288.0 290.0 292.0 294.0 296.0 298.0 300.0 302.0 304.0 306.0 308.0 310.0 312.0 314.0 316.0 318.0 320.0 322.0 324.0 326.0 328.0 330.0 332.0 334.0 336.0 338.0 340.0 342.0 344.0 346.0 348.0 350.0 352.0 354.0 356.0 358.0 360.0)) (quote 3dc) 5))) (setf (bpfcolor newbpf) (om-make-color 1.0 0.0 0.72708607)) (set-name newbpf "3DC") newbpf)))) (when newobj (setf (z-points newobj) (list 0.0 2.0 4.0 6.0 8.0 10.0 12.0 14.0 16.0 18.0 20.0 22.0 24.0 26.0 28.0 30.0 32.0 34.0 36.0 38.0 40.0 42.0 44.0 46.0 48.0 50.0 52.0 54.0 56.0 58.0 60.0 62.0 64.0 66.0 68.0 70.0 72.0 74.0 76.0 78.0 80.0 82.0 84.0 86.0 88.0 90.0 92.0 94.0 96.0 98.0 100.0 102.0 104.0 106.0 108.0 110.0 112.0 114.0 116.0 118.0 120.0 122.0 124.0 126.0 128.0 130.0 132.0 134.0 136.0 138.0 140.0 142.0 144.0 146.0 148.0 150.0 152.0 154.0 156.0 158.0 160.0 162.0 164.0 166.0 168.0 170.0 172.0 174.0 176.0 178.0 180.0 182.0 184.0 186.0 188.0 190.0 192.0 194.0 196.0 198.0 200.0 202.0 204.0 206.0 208.0 210.0 212.0 214.0 216.0 218.0 220.0 222.0 224.0 226.0 228.0 230.0 232.0 234.0 236.0 238.0 240.0 242.0 244.0 246.0 248.0 250.0 252.0 254.0 256.0 258.0 260.0 262.0 264.0 266.0 268.0 270.0 272.0 274.0 276.0 278.0 280.0 282.0 284.0 286.0 288.0 290.0 292.0 294.0 296.0 298.0 300.0 302.0 304.0 306.0 308.0 310.0 312.0 314.0 316.0 318.0 320.0 322.0 324.0 326.0 328.0 330.0 332.0 334.0 336.0 338.0 340.0 342.0 344.0 346.0 348.0 350.0 352.0 354.0 356.0 358.0 360.0))) newobj) "x" nil (pairlis (quote (winsize winpos mode picture)) (list (om-make-point 800 800) (om-make-point 600 156) 0 nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "TRAJ-PERTURB" (quote traj-perturb) (quote ((om-load-inputfun (quote input-funbox) "a bpf or bpc" "SELF" nil) (om-load-inputfun (quote input-funbox) "a number, list or bpf" "PERBPF" 0))) (om-make-point 930 243) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment1111" (om-make-point 91 28) (quote "...perturbated...") "" (om-make-point 919 138) nil (om-make-color 0.02832079 0.0 1.0) (om-make-font "Arial" 12 :family "Arial" :style (quote (:italic)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment111" (om-make-point 74 28) (quote "...rotated...") "" (om-make-point 714 319) nil (om-make-color 0.02832079 0.0 1.0) (om-make-font "Arial" 12 :family "Arial" :style (quote (:italic)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment11" (om-make-point 74 28) (quote "...mirrored...") "" (om-make-point 749 429) nil (om-make-color 0.02832079 0.0 1.0) (om-make-font "Arial" 12 :family "Arial" :style (quote (:italic)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment1" (om-make-point 64 28) (quote "...scaled...") "" (om-make-point 666 241) nil (om-make-color 0.02832079 0.0 1.0) (om-make-font "Arial" 12 :family "Arial" :style (quote (:italic)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 191 28) (quote "Trajectories can be interpolated...") "" (om-make-point 112 106) nil (om-make-color 0.02832079 0.0 1.0) (om-make-font "Arial" 12 :family "Arial" :style (quote (:italic)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment13" (om-make-point 206 42) (quote "Trajectory-Functions") "" (om-make-point 64 2) nil (om-make-color 0.02832079 0.0 1.0) (om-make-font "Arial" 18 :family "Arial" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "TRAJ-MIRROR" (quote traj-mirror) (quote ((om-load-inputfun (quote input-funbox) "a bpf, bpc, board, 3Dc" "SELF" nil))) (om-make-point 687 418) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "TRAJ-ROTATE" (quote traj-rotate) (quote ((om-load-inputfun (quote input-funbox) "a bpc, 3DC or board" "SELF" nil) (om-load-inputkeyword (quote input-keyword) "Choose from this list (:yaw :pitch :roll)" "Keyword input" (quote :yaw) nil nil))) (om-make-point 640 352) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "TRAJ-SCALE" (quote traj-scale) (quote ((om-load-inputfun (quote input-funbox) "a bpf, bpc, 3DC or board" "SELF" nil) (om-load-inputkeyword (quote input-keyword) "Choose from this list (:ymin :ymax :xmin :xmax :zmin :zmax)" "Keyword input" (quote :ymin) nil nil) (om-load-inputkeyword (quote input-keyword) "Choose from this list (:ymin :ymax :xmin :xmax :zmin :zmax)" "Keyword input" (quote :ymax) nil nil) (om-load-inputkeyword (quote input-keyword) "Choose from this list (:ymin :ymax :xmin :xmax :zmin :zmax)" "Keyword input" (quote :xmin) nil nil) (om-load-inputkeyword (quote input-keyword) "Choose from this list (:ymin :ymax :xmin :xmax :zmin :zmax)" "Keyword input" (quote :xmax) nil nil))) (om-make-point 581 283) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote abstraction) "some-examples" (om-load-patch-abs1 "some-examples" (quote ((let ((box (om-load-editor-box1 "3DC-LIB3" (quote 3dc-lib) (quote ((om-load-inputfun (quote input-funbox) "object" "SELF" nil) (om-load-inputfun (quote input-funbox) "list of 3DC objects" "BPF-LIST" (list (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote nil) (quote nil) (quote nil) (quote 3dc) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) nil)) newobj))))) (om-make-point 47 41) (om-make-point 143 162) (if (find-class (quote 3dc-lib) nil) (make-instance (quote 3dc-lib) :bpf-list (list (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (-0.93 -0.957 -1.011 -1.011 -1.146 -1.307 -1.496 -1.496 -1.685 -1.685 -1.873 -2.035 -2.035 -2.224 -2.224 -2.412 -2.574 -2.574 -2.763 -2.925 -2.925 -3.113 -3.275 -3.275 -3.383 -3.383 -3.383 -3.464 -3.491 -3.491 -3.491 -3.491 -3.464 -3.464 -3.356 -3.356 -3.356 -3.356 -3.356 -3.356 -3.356 -3.356 -3.329 -3.329 -3.329 -3.329 -3.329 -3.356 -3.356 -3.356 -3.356 -3.356 -3.356 -3.41 -3.41 -3.41 -3.464 -3.491 -3.544 -3.598 -3.598 -3.679 -3.733 -3.787 -3.787 -3.868 -3.976 -3.976 -4.03 -4.164 -4.164 -4.218 -4.326 -4.38 -4.461 -4.515 -4.569 -4.569 -4.65 -4.73 -4.73 -4.757 -4.784 -4.784 -4.784 -4.784 -4.784 -4.73 -4.65 -4.65 -4.488 -4.488 -4.353 -4.191 -4.191 -4.084 -4.003 -3.949 -3.922 -3.922 -3.868 -3.868 -3.841 -3.841 -3.841 -3.841 -3.841 -3.841 -3.868 -3.895 -3.895 -3.949 -3.949 -4.003 -4.003 -4.003 -4.057 -4.057 -4.057 -4.084 -4.084 -4.111 -4.111 -4.164 -4.191 -4.218 -4.218 -4.218 -4.218 -4.218 -4.218 -4.245 -4.245 -4.245 -4.245 -4.245 -4.245 -4.245 -4.245 -4.191 -4.191 -4.164 -4.164 -4.164 -4.057 -4.057 -4.003 -4.003 -3.949 -3.841 -3.652 -3.652 -3.518 -3.437 -3.437 -3.329 -3.329 -3.194 -3.032 -2.871 -2.871 -2.655 -2.466 -2.305 -2.197 -2.008 -1.9 -1.819 -1.819 -1.819 -1.873 -1.873 -2.008 -2.008 -2.17 -2.17 -2.358 -2.358 -2.574 -2.763 -2.763 -2.898 -2.898 -2.978 -3.086 -3.221 -3.275 -3.383 -3.544 -3.544 -3.679 -3.679 -3.76 -3.841 -3.841 -3.922 -4.003 -4.111 -4.218 -4.218 -4.299 -4.299 -4.353 -4.353 -4.407 -4.407 -4.461 -4.461 -4.488 -4.488 -4.488 -4.515 -4.515 -4.515 -4.515 -4.515 -4.488 -4.461 -4.38 -4.38 -4.218 -4.137 -4.137 -4.137 -4.111 -4.111 -4.111 -4.111 -4.111 -4.111 -4.111 -4.111 -4.111 -4.137 -4.191 -4.245 -4.326 -4.407 -4.488 -4.488 -4.515 -4.596 -4.677 -4.677 -4.73 -4.73 -4.811 -4.865 -4.892 -4.892 -4.919 -4.973 -4.973 -4.973 -4.973 -4.973 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -4.973 -4.865 -4.865 -4.784 -4.704 -4.623 -4.515 -4.461 -4.407 -4.407 -4.299 -4.218 -4.084 -3.976 -3.841 -3.733 -3.733 -3.679 -3.625 -3.571 -3.518 -3.518 -3.491 -3.491 -3.437 -3.383 -3.383 -3.356 -3.356 -3.302 -3.248 -3.248 -3.167 -3.167 -3.113 -3.113 -3.086 -3.086 -3.005 -3.005 -2.951 -2.925 -2.898 -2.898 -2.898 -2.898 -2.871 -2.871 -2.871 -2.871 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.844 -2.817 -2.817 -2.709 -2.574 -2.574 -2.466 -2.466 -2.332 -2.116 -1.873 -1.631 -1.388 -1.065 -1.065 -0.687 -0.202 0.283 0.283 0.633 0.633 0.957 0.957 1.28 1.28 1.577 1.846 2.116 2.116 2.358 2.358 2.601 2.601 2.844 2.844 3.113 3.356 3.356 3.518 3.518 3.544 3.598 3.598 3.598 3.598 3.544 3.544 3.491 3.41 3.356 3.302 3.248 3.221 3.167 3.032 3.032 2.951 2.951 2.925 2.925 2.925 2.844 2.736 2.709 2.709 2.709 2.736 2.736 2.817 2.951 3.14 3.14 3.248 3.248 3.356 3.356 3.464 3.464 3.598 3.598 3.706 3.841 4.003 4.003 4.164 4.164 4.326 4.461 4.461 4.569 4.569 4.677 4.677 4.784 4.919 4.973 4.973 4.973 5.0 5.0 4.946 4.946 4.865 4.865 4.757 4.65 4.542 4.434 4.326 4.326 4.191 4.057 3.814 3.814 3.571 3.383 3.167 3.167 2.925 2.655 2.412 2.224 2.035 1.846 1.846 1.55 1.55 1.307 1.065 0.93 0.768 0.58 0.445 0.445 0.31 0.229 0.148 0.148 0.04 -0.04 -0.148 -0.148 -0.256 -0.256 -0.364 -0.445 -0.445 -0.526 -0.66 -0.66 -0.741 -0.822 -0.822 -0.957 -0.957 -1.065 -1.173 -1.199 -1.199 -1.226 -1.253 -1.253 -1.28 -1.307 -1.307)) (quote (5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 4.932 4.886 4.886 4.795 4.727 4.727 4.658 4.567 4.567 4.499 4.476 4.476 4.339 4.226 4.134 4.134 4.043 3.907 3.907 3.724 3.542 3.542 3.428 3.337 3.337 3.269 3.2 3.132 3.087 3.087 3.041 2.973 2.904 2.904 2.859 2.836 2.836 2.813 2.813 2.813 2.79 2.79 2.768 2.722 2.699 2.699 2.654 2.608 2.563 2.563 2.517 2.472 2.472 2.426 2.38 2.38 2.335 2.312 2.267 2.244 2.221 2.175 2.175 2.153 2.107 2.107 2.084 2.062 2.062 2.039 2.016 2.016 1.97 1.925 1.925 1.879 1.879 1.856 1.811 1.811 1.765 1.743 1.697 1.674 1.674 1.583 1.583 1.538 1.492 1.492 1.469 1.446 1.446 1.401 1.333 1.333 1.241 1.241 1.173 1.173 1.128 1.128 1.128 1.082 1.036 1.036 1.014 1.014 0.968 0.923 0.877 0.877 0.854 0.831 0.831 0.809 0.809 0.809 0.763 0.74 0.74 0.718 0.695 0.695 0.695 0.695 0.672 0.672 0.649 0.649 0.649 0.626 0.626 0.581 0.558 0.513 0.513 0.467 0.467 0.467 0.467 0.467 0.467 0.444 0.399 0.399 0.353 0.308 0.239 0.216 0.148 0.103 0.057 0.057 0.034 0.011 0.011 -0.034 -0.034 -0.103 -0.103 -0.171 -0.171 -0.262 -0.308 -0.308 -0.33 -0.33 -0.33 -0.33 -0.33 -0.308 -0.262 -0.194 -0.194 -0.148 -0.148 -0.148 -0.103 -0.103 -0.08 -0.034 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.011 -0.034 -0.034 -0.057 -0.057 -0.08 -0.103 -0.103 -0.148 -0.216 -0.33 -0.33 -0.467 -0.581 -0.604 -0.604 -0.626 -0.626 -0.649 -0.672 -0.672 -0.695 -0.74 -0.786 -0.786 -0.809 -0.9 -0.968 -1.036 -1.105 -1.173 -1.173 -1.196 -1.264 -1.333 -1.333 -1.355 -1.355 -1.401 -1.424 -1.424 -1.424 -1.469 -1.469 -1.469 -1.492 -1.515 -1.515 -1.538 -1.538 -1.56 -1.583 -1.583 -1.629 -1.674 -1.788 -1.788 -1.834 -1.925 -2.016 -2.084 -2.153 -2.198 -2.198 -2.244 -2.312 -2.358 -2.426 -2.494 -2.54 -2.54 -2.563 -2.608 -2.654 -2.699 -2.699 -2.699 -2.699 -2.722 -2.722 -2.722 -2.722 -2.722 -2.745 -2.79 -2.79 -2.813 -2.813 -2.836 -2.836 -2.836 -2.836 -2.882 -2.882 -2.904 -2.927 -2.927 -2.95 -2.95 -2.973 -2.995 -3.018 -3.041 -3.041 -3.041 -3.064 -3.064 -3.087 -3.109 -3.109 -3.132 -3.155 -3.155 -3.178 -3.2 -3.223 -3.223 -3.314 -3.405 -3.405 -3.565 -3.77 -3.77 -3.929 -3.929 -4.066 -4.203 -4.317 -4.408 -4.522 -4.658 -4.658 -4.772 -4.863 -4.909 -4.909 -4.932 -4.932 -4.977 -4.977 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -5.0 -4.954 -4.863 -4.863 -4.749 -4.749 -4.704 -4.658 -4.658 -4.59 -4.544 -4.476 -4.476 -4.385 -4.271 -4.134 -4.043 -3.907 -3.793 -3.61 -3.36 -3.36 -3.223 -3.223 -3.132 -3.132 -3.018 -2.79 -2.517 -2.335 -2.175 -2.175 -1.97 -1.97 -1.697 -1.378 -1.082 -1.082 -0.831 -0.831 -0.672 -0.672 -0.49 -0.49 -0.239 -0.239 -0.011 0.216 0.399 0.399 0.604 0.604 0.786 0.968 0.968 1.128 1.128 1.333 1.333 1.538 1.788 1.993 2.221 2.221 2.449 2.654 2.813 2.813 2.973 2.973 3.155 3.314 3.474 3.588 3.633 3.633 3.747 3.793 3.884 3.884 3.998 4.089 4.157 4.157 4.294 4.385 4.453 4.476 4.499 4.522 4.522 4.613 4.613 4.658 4.704 4.772 4.772 4.795 4.818 4.818 4.818 4.818 4.818 4.818 4.841 4.841 4.841 4.841 4.863 4.863 4.863 4.886 4.886 4.886 4.886 4.886 4.909 4.932 4.932 4.954 4.954 4.977 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0 5.0)) (quote (0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (list 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0))) newobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (-0.827 -0.851 -0.898 -0.898 -1.018 -1.162 -1.33 -1.33 -1.497 -1.497 -1.665 -1.809 -1.809 -1.977 -1.977 -2.144 -2.288 -2.288 -2.456 -2.6 -2.6 -2.767 -2.911 -2.911 -3.007 -3.007 -3.007 -3.079 -3.103 -3.103 -3.103 -3.103 -3.079 -3.079 -2.983 -2.983 -2.983 -2.983 -2.983 -2.983 -2.983 -2.983 -2.959 -2.959 -2.959 -2.959 -2.959 -2.983 -2.983 -2.983 -2.983 -2.983 -2.983 -3.031 -3.031 -3.031 -3.079 -3.103 -3.151 -3.199 -3.199 -3.27 -3.318 -3.366 -3.366 -3.438 -3.534 -3.534 -3.582 -3.702 -3.702 -3.75 -3.845 -3.893 -3.965 -4.013 -4.061 -4.061 -4.133 -4.205 -4.205 -4.229 -4.253 -4.253 -4.253 -4.253 -4.253 -4.205 -4.133 -4.133 -3.989 -3.989 -3.869 -3.726 -3.726 -3.63 -3.558 -3.51 -3.486 -3.486 -3.438 -3.438 -3.414 -3.414 -3.414 -3.414 -3.414 -3.414 -3.438 -3.462 -3.462 -3.51 -3.51 -3.558 -3.558 -3.558 -3.606 -3.606 -3.606 -3.63 -3.63 -3.654 -3.654 -3.702 -3.726 -3.75 -3.75 -3.75 -3.75 -3.75 -3.75 -3.774 -3.774 -3.774 -3.774 -3.774 -3.774 -3.774 -3.774 -3.726 -3.726 -3.702 -3.702 -3.702 -3.606 -3.606 -3.558 -3.558 -3.51 -3.414 -3.246 -3.246 -3.127 -3.055 -3.055 -2.959 -2.959 -2.839 -2.695 -2.552 -2.552 -2.36 -2.192 -2.049 -1.953 -1.785 -1.689 -1.617 -1.617 -1.617 -1.665 -1.665 -1.785 -1.785 -1.929 -1.929 -2.096 -2.096 -2.288 -2.456 -2.456 -2.576 -2.576 -2.648 -2.743 -2.863 -2.911 -3.007 -3.151 -3.151 -3.27 -3.27 -3.342 -3.414 -3.414 -3.486 -3.558 -3.654 -3.75 -3.75 -3.822 -3.822 -3.869 -3.869 -3.917 -3.917 -3.965 -3.965 -3.989 -3.989 -3.989 -4.013 -4.013 -4.013 -4.013 -4.013 -3.989 -3.965 -3.893 -3.893 -3.75 -3.678 -3.678 -3.678 -3.654 -3.654 -3.654 -3.654 -3.654 -3.654 -3.654 -3.654 -3.654 -3.678 -3.726 -3.774 -3.845 -3.917 -3.989 -3.989 -4.013 -4.085 -4.157 -4.157 -4.205 -4.205 -4.277 -4.325 -4.349 -4.349 -4.373 -4.42 -4.42 -4.42 -4.42 -4.42 -4.444 -4.444 -4.444 -4.444 -4.444 -4.444 -4.42 -4.325 -4.325 -4.253 -4.181 -4.109 -4.013 -3.965 -3.917 -3.917 -3.822 -3.75 -3.63 -3.534 -3.414 -3.318 -3.318 -3.27 -3.223 -3.175 -3.127 -3.127 -3.103 -3.103 -3.055 -3.007 -3.007 -2.983 -2.983 -2.935 -2.887 -2.887 -2.815 -2.815 -2.767 -2.767 -2.743 -2.743 -2.671 -2.671 -2.624 -2.6 -2.576 -2.576 -2.576 -2.576 -2.552 -2.552 -2.552 -2.552 -2.528 -2.528 -2.528 -2.528 -2.528 -2.528 -2.528 -2.528 -2.528 -2.528 -2.528 -2.528 -2.528 -2.528 -2.504 -2.504 -2.408 -2.288 -2.288 -2.192 -2.192 -2.072 -1.881 -1.665 -1.45 -1.234 -0.946 -0.946 -0.611 -0.18 0.252 0.252 0.563 0.563 0.851 0.851 1.138 1.138 1.402 1.641 1.881 1.881 2.096 2.096 2.312 2.312 2.528 2.528 2.767 2.983 2.983 3.127 3.127 3.151 3.199 3.199 3.199 3.199 3.151 3.151 3.103 3.031 2.983 2.935 2.887 2.863 2.815 2.695 2.695 2.624 2.624 2.6 2.6 2.6 2.528 2.432 2.408 2.408 2.408 2.432 2.432 2.504 2.624 2.791 2.791 2.887 2.887 2.983 2.983 3.079 3.079 3.199 3.199 3.294 3.414 3.558 3.558 3.702 3.702 3.845 3.965 3.965 4.061 4.061 4.157 4.157 4.253 4.373 4.42 4.42 4.42 4.444 4.444 4.397 4.397 4.325 4.325 4.229 4.133 4.037 3.941 3.845 3.845 3.726 3.606 3.39 3.39 3.175 3.007 2.815 2.815 2.6 2.36 2.144 1.977 1.809 1.641 1.641 1.378 1.378 1.162 0.946 0.827 0.683 0.515 0.395 0.395 0.276 0.204 0.132 0.132 0.036 -0.036 -0.132 -0.132 -0.228 -0.228 -0.323 -0.395 -0.395 -0.467 -0.587 -0.587 -0.659 -0.731 -0.731 -0.851 -0.851 -0.946 -1.042 -1.066 -1.066 -1.09 -1.114 -1.114 -1.138 -1.162 -1.162)) (quote (4.786 4.774 4.774 4.768 4.765 4.765 4.762 4.762 4.762 4.765 4.768 4.768 4.774 4.78 4.793 4.741 4.713 4.725 4.654 4.605 4.615 4.563 4.495 4.495 4.44 4.42 4.426 4.304 4.203 4.119 4.119 4.038 3.917 3.914 3.752 3.59 3.587 3.485 3.404 3.404 3.344 3.283 3.222 3.182 3.182 3.144 3.083 3.029 3.029 2.991 2.971 2.974 2.954 2.96 2.97 2.952 2.962 2.948 2.907 2.887 2.89 2.853 2.812 2.778 2.781 2.74 2.709 2.718 2.687 2.656 2.665 2.631 2.611 2.57 2.55 2.53 2.489 2.489 2.466 2.422 2.413 2.383 2.363 2.348 2.315 2.279 2.264 2.214 2.174 2.167 2.124 2.112 2.073 2.007 2.007 1.942 1.894 1.854 1.809 1.787 1.706 1.687 1.628 1.563 1.538 1.49 1.451 1.43 1.368 1.279 1.257 1.161 1.139 1.078 1.06 1.001 0.985 0.967 0.911 0.849 0.827 0.788 0.763 0.701 0.661 0.595 0.574 0.532 0.512 0.496 0.457 0.439 0.42 0.361 0.325 0.31 0.277 0.248 0.232 0.223 0.214 0.184 0.181 0.161 0.158 0.158 0.134 0.134 0.094 0.074 0.033 0.033 -0.007 -0.007 -0.001 -0.001 -0.001 -0.001 -0.021 -0.062 -0.062 -0.102 -0.146 -0.213 -0.239 -0.309 -0.35 -0.397 -0.403 -0.426 -0.449 -0.453 -0.493 -0.493 -0.56 -0.563 -0.624 -0.63 -0.714 -0.755 -0.758 -0.784 -0.784 -0.79 -0.79 -0.793 -0.776 -0.739 -0.687 -0.697 -0.665 -0.672 -0.672 -0.634 -0.634 -0.617 -0.58 -0.563 -0.566 -0.566 -0.566 -0.566 -0.566 -0.563 -0.563 -0.556 -0.544 -0.538 -0.535 -0.552 -0.552 -0.569 -0.566 -0.583 -0.6 -0.6 -0.641 -0.695 -0.79 -0.787 -0.909 -1.004 -1.021 -1.021 -1.038 -1.038 -1.058 -1.072 -1.072 -1.096 -1.139 -1.186 -1.186 -1.212 -1.297 -1.36 -1.421 -1.485 -1.546 -1.546 -1.566 -1.627 -1.687 -1.687 -1.708 -1.705 -1.736 -1.744 -1.725 -1.703 -1.728 -1.719 -1.719 -1.733 -1.75 -1.744 -1.758 -1.758 -1.775 -1.793 -1.793 -1.827 -1.867 -1.969 -1.966 -2.006 -2.084 -2.162 -2.219 -2.28 -2.318 -2.305 -2.34 -2.391 -2.431 -2.483 -2.544 -2.578 -2.578 -2.598 -2.636 -2.67 -2.701 -2.698 -2.698 -2.695 -2.712 -2.712 -2.712 -2.712 -2.712 -2.735 -2.782 -2.785 -2.815 -2.821 -2.847 -2.85 -2.85 -2.85 -2.891 -2.891 -2.917 -2.938 -2.938 -2.958 -2.958 -2.978 -2.995 -3.009 -3.023 -3.017 -3.017 -3.028 -3.025 -3.045 -3.053 -3.044 -3.064 -3.075 -3.066 -3.083 -3.103 -3.124 -3.124 -3.205 -3.286 -3.279 -3.418 -3.597 -3.597 -3.739 -3.733 -3.851 -3.973 -4.074 -4.155 -4.256 -4.377 -4.377 -4.479 -4.554 -4.582 -4.575 -4.583 -4.577 -4.615 -4.615 -4.632 -4.626 -4.619 -4.61 -4.604 -4.598 -4.591 -4.582 -4.573 -4.573 -4.567 -4.567 -4.526 -4.442 -4.442 -4.344 -4.344 -4.303 -4.266 -4.266 -4.205 -4.165 -4.098 -4.098 -4.017 -3.909 -3.773 -3.679 -3.558 -3.441 -3.254 -3.007 -3.007 -2.857 -2.836 -2.733 -2.718 -2.607 -2.392 -2.137 -1.959 -1.802 -1.796 -1.608 -1.608 -1.365 -1.081 -0.818 -0.818 -0.601 -0.611 -0.484 -0.497 -0.335 -0.35 -0.14 -0.152 0.038 0.234 0.393 0.393 0.578 0.585 0.747 0.918 0.924 1.066 1.075 1.267 1.267 1.458 1.693 1.882 2.096 2.096 2.311 2.5 2.641 2.651 2.799 2.802 2.97 3.118 3.26 3.367 3.417 3.426 3.534 3.58 3.661 3.667 3.772 3.856 3.917 3.917 4.038 4.119 4.18 4.2 4.22 4.241 4.241 4.322 4.325 4.371 4.421 4.497 4.497 4.527 4.559 4.575 4.587 4.597 4.612 4.621 4.648 4.651 4.654 4.657 4.677 4.684 4.684 4.704 4.704 4.704 4.704 4.704 4.724 4.741 4.741 4.761 4.758 4.775 4.796 4.796 4.793 4.793 4.793 4.793 4.793 4.79 4.79)) (quote (-0.453 -0.422 -0.422 -0.402 -0.371 -0.371 -0.341 -0.294 -0.238 -0.197 -0.166 -0.141 -0.11 -0.084 -0.049 -0.013 0.023 0.049 0.079 0.11 0.136 0.161 0.192 0.192 0.212 0.218 0.218 0.223 0.218 0.218 0.202 0.182 0.182 0.156 0.131 0.131 0.095 0.044 -0.008 -0.044 -0.079 -0.115 -0.115 -0.146 -0.177 -0.192 -0.197 -0.207 -0.212 -0.212 -0.212 -0.212 -0.207 -0.187 -0.156 -0.131 -0.105 -0.069 -0.033 -0.033 0.013 0.054 0.095 0.125 0.161 0.161 0.187 0.218 0.248 0.279 0.305 0.325 0.325 0.335 0.346 0.361 0.371 0.381 0.392 0.407 0.417 0.428 0.428 0.438 0.453 0.458 0.458 0.458 0.458 0.458 0.458 0.448 0.433 0.422 0.422 0.412 0.397 0.397 0.381 0.361 0.361 0.351 0.341 0.325 0.315 0.31 0.31 0.31 0.305 0.305 0.305 0.305 0.305 0.305 0.305 0.31 0.315 0.325 0.335 0.346 0.361 0.371 0.387 0.407 0.407 0.422 0.443 0.458 0.458 0.474 0.489 0.504 0.52 0.54 0.545 0.556 0.556 0.556 0.556 0.556 0.556 0.556 0.55 0.545 0.535 0.535 0.52 0.515 0.504 0.504 0.499 0.494 0.484 0.479 0.479 0.474 0.469 0.469 0.463 0.458 0.453 0.448 0.443 0.433 0.417 0.407 0.407 0.397 0.381 0.371 0.361 0.356 0.351 0.351 0.351 0.341 0.33 0.32 0.31 0.3 0.284 0.274 0.269 0.259 0.253 0.243 0.238 0.228 0.212 0.197 0.177 0.166 0.166 0.161 0.151 0.141 0.131 0.12 0.105 0.105 0.1 0.09 0.079 0.064 0.064 0.049 0.038 0.028 0.028 0.028 0.028 0.028 0.028 0.028 0.028 0.038 0.038 0.049 0.059 0.069 0.069 0.079 0.084 0.095 0.095 0.095 0.1 0.1 0.1 0.1 0.095 0.084 0.084 0.069 0.054 0.044 0.044 0.038 0.033 0.028 0.028 0.018 0.013 0.003 -0.003 -0.003 -0.003 0.018 0.033 0.049 0.059 0.069 0.069 0.074 0.079 0.084 0.09 0.09 0.095 0.105 0.11 0.11 0.115 0.115 0.115 0.12 0.12 0.12 0.12 0.12 0.12 0.12 0.12 0.115 0.115 0.11 0.1 0.1 0.09 0.09 0.084 0.069 0.049 0.038 0.028 0.013 0.003 0.003 -0.008 -0.013 -0.023 -0.038 -0.069 -0.09 -0.12 -0.146 -0.172 -0.202 -0.238 -0.274 -0.305 -0.305 -0.33 -0.356 -0.381 -0.402 -0.433 -0.433 -0.453 -0.474 -0.499 -0.515 -0.515 -0.52 -0.52 -0.52 -0.509 -0.484 -0.484 -0.453 -0.422 -0.402 -0.381 -0.366 -0.366 -0.335 -0.294 -0.269 -0.253 -0.238 -0.233 -0.233 -0.233 -0.233 -0.238 -0.248 -0.279 -0.279 -0.31 -0.341 -0.376 -0.412 -0.448 -0.469 -0.484 -0.489 -0.489 -0.489 -0.489 -0.489 -0.489 -0.489 -0.479 -0.463 -0.443 -0.412 -0.366 -0.366 -0.325 -0.294 -0.294 -0.264 -0.233 -0.207 -0.182 -0.151 -0.125 -0.11 -0.105 -0.1 -0.1 -0.1 -0.09 -0.084 -0.074 -0.059 -0.059 -0.049 -0.044 -0.038 -0.038 -0.038 -0.038 -0.038 -0.038 -0.038 -0.038 -0.038 -0.049 -0.064 -0.069 -0.079 -0.084 -0.09 -0.1 -0.105 -0.105 -0.125 -0.151 -0.182 -0.218 -0.218 -0.259 -0.294 -0.335 -0.376 -0.417 -0.448 -0.479 -0.504 -0.525 -0.525 -0.545 -0.55 -0.55 -0.556 -0.556 -0.556 -0.556 -0.545 -0.54 -0.515 -0.515 -0.484 -0.458 -0.458 -0.428 -0.402 -0.392 -0.376 -0.351 -0.351 -0.335 -0.31 -0.284 -0.274 -0.269 -0.269 -0.269 -0.269 -0.269 -0.274 -0.279 -0.279 -0.289 -0.3 -0.31 -0.325 -0.335 -0.346 -0.346 -0.361 -0.387 -0.412 -0.433 -0.433 -0.453 -0.474 -0.494 -0.509 -0.52 -0.535 -0.54 -0.545 -0.545 -0.545 -0.545 -0.54 -0.54 -0.535 -0.53 -0.525 -0.52 -0.515 -0.515 -0.509 -0.509 -0.504 -0.504 -0.504 -0.494 -0.489 -0.489 -0.489 -0.489 -0.479 -0.474 -0.469 -0.463 -0.458)) (quote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (list -0.453 -0.422 -0.422 -0.402 -0.371 -0.371 -0.341 -0.294 -0.238 -0.197 -0.166 -0.141 -0.11 -0.084 -0.049 -0.013 0.023 0.049 0.079 0.11 0.136 0.161 0.192 0.192 0.212 0.218 0.218 0.223 0.218 0.218 0.202 0.182 0.182 0.156 0.131 0.131 0.095 0.044 -0.008 -0.044 -0.079 -0.115 -0.115 -0.146 -0.177 -0.192 -0.197 -0.207 -0.212 -0.212 -0.212 -0.212 -0.207 -0.187 -0.156 -0.131 -0.105 -0.069 -0.033 -0.033 0.013 0.054 0.095 0.125 0.161 0.161 0.187 0.218 0.248 0.279 0.305 0.325 0.325 0.335 0.346 0.361 0.371 0.381 0.392 0.407 0.417 0.428 0.428 0.438 0.453 0.458 0.458 0.458 0.458 0.458 0.458 0.448 0.433 0.422 0.422 0.412 0.397 0.397 0.381 0.361 0.361 0.351 0.341 0.325 0.315 0.31 0.31 0.31 0.305 0.305 0.305 0.305 0.305 0.305 0.305 0.31 0.315 0.325 0.335 0.346 0.361 0.371 0.387 0.407 0.407 0.422 0.443 0.458 0.458 0.474 0.489 0.504 0.52 0.54 0.545 0.556 0.556 0.556 0.556 0.556 0.556 0.556 0.55 0.545 0.535 0.535 0.52 0.515 0.504 0.504 0.499 0.494 0.484 0.479 0.479 0.474 0.469 0.469 0.463 0.458 0.453 0.448 0.443 0.433 0.417 0.407 0.407 0.397 0.381 0.371 0.361 0.356 0.351 0.351 0.351 0.341 0.33 0.32 0.31 0.3 0.284 0.274 0.269 0.259 0.253 0.243 0.238 0.228 0.212 0.197 0.177 0.166 0.166 0.161 0.151 0.141 0.131 0.12 0.105 0.105 0.1 0.09 0.079 0.064 0.064 0.049 0.038 0.028 0.028 0.028 0.028 0.028 0.028 0.028 0.028 0.038 0.038 0.049 0.059 0.069 0.069 0.079 0.084 0.095 0.095 0.095 0.1 0.1 0.1 0.1 0.095 0.084 0.084 0.069 0.054 0.044 0.044 0.038 0.033 0.028 0.028 0.018 0.013 0.003 -0.003 -0.003 -0.003 0.018 0.033 0.049 0.059 0.069 0.069 0.074 0.079 0.084 0.09 0.09 0.095 0.105 0.11 0.11 0.115 0.115 0.115 0.12 0.12 0.12 0.12 0.12 0.12 0.12 0.12 0.115 0.115 0.11 0.1 0.1 0.09 0.09 0.084 0.069 0.049 0.038 0.028 0.013 0.003 0.003 -0.008 -0.013 -0.023 -0.038 -0.069 -0.09 -0.12 -0.146 -0.172 -0.202 -0.238 -0.274 -0.305 -0.305 -0.33 -0.356 -0.381 -0.402 -0.433 -0.433 -0.453 -0.474 -0.499 -0.515 -0.515 -0.52 -0.52 -0.52 -0.509 -0.484 -0.484 -0.453 -0.422 -0.402 -0.381 -0.366 -0.366 -0.335 -0.294 -0.269 -0.253 -0.238 -0.233 -0.233 -0.233 -0.233 -0.238 -0.248 -0.279 -0.279 -0.31 -0.341 -0.376 -0.412 -0.448 -0.469 -0.484 -0.489 -0.489 -0.489 -0.489 -0.489 -0.489 -0.489 -0.479 -0.463 -0.443 -0.412 -0.366 -0.366 -0.325 -0.294 -0.294 -0.264 -0.233 -0.207 -0.182 -0.151 -0.125 -0.11 -0.105 -0.1 -0.1 -0.1 -0.09 -0.084 -0.074 -0.059 -0.059 -0.049 -0.044 -0.038 -0.038 -0.038 -0.038 -0.038 -0.038 -0.038 -0.038 -0.038 -0.049 -0.064 -0.069 -0.079 -0.084 -0.09 -0.1 -0.105 -0.105 -0.125 -0.151 -0.182 -0.218 -0.218 -0.259 -0.294 -0.335 -0.376 -0.417 -0.448 -0.479 -0.504 -0.525 -0.525 -0.545 -0.55 -0.55 -0.556 -0.556 -0.556 -0.556 -0.545 -0.54 -0.515 -0.515 -0.484 -0.458 -0.458 -0.428 -0.402 -0.392 -0.376 -0.351 -0.351 -0.335 -0.31 -0.284 -0.274 -0.269 -0.269 -0.269 -0.269 -0.269 -0.274 -0.279 -0.279 -0.289 -0.3 -0.31 -0.325 -0.335 -0.346 -0.346 -0.361 -0.387 -0.412 -0.433 -0.433 -0.453 -0.474 -0.494 -0.509 -0.52 -0.535 -0.54 -0.545 -0.545 -0.545 -0.545 -0.54 -0.54 -0.535 -0.53 -0.525 -0.52 -0.515 -0.515 -0.509 -0.509 -0.504 -0.504 -0.504 -0.494 -0.489 -0.489 -0.489 -0.489 -0.479 -0.474 -0.469 -0.463 -0.458))) newobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (-0.723 -0.744 -0.786 -0.786 -0.891 -1.017 -1.164 -1.164 -1.31 -1.31 -1.457 -1.583 -1.583 -1.73 -1.73 -1.876 -2.002 -2.002 -2.149 -2.275 -2.275 -2.421 -2.547 -2.547 -2.631 -2.631 -2.631 -2.694 -2.715 -2.715 -2.715 -2.715 -2.694 -2.694 -2.61 -2.61 -2.61 -2.61 -2.61 -2.61 -2.61 -2.61 -2.589 -2.589 -2.589 -2.589 -2.589 -2.61 -2.61 -2.61 -2.61 -2.61 -2.61 -2.652 -2.652 -2.652 -2.694 -2.715 -2.757 -2.799 -2.799 -2.862 -2.904 -2.945 -2.945 -3.008 -3.092 -3.092 -3.134 -3.239 -3.239 -3.281 -3.365 -3.407 -3.47 -3.512 -3.553 -3.553 -3.616 -3.679 -3.679 -3.7 -3.721 -3.721 -3.721 -3.721 -3.721 -3.679 -3.616 -3.616 -3.491 -3.491 -3.386 -3.26 -3.26 -3.176 -3.113 -3.071 -3.05 -3.05 -3.008 -3.008 -2.987 -2.987 -2.987 -2.987 -2.987 -2.987 -3.008 -3.029 -3.029 -3.071 -3.071 -3.113 -3.113 -3.113 -3.155 -3.155 -3.155 -3.176 -3.176 -3.197 -3.197 -3.239 -3.26 -3.281 -3.281 -3.281 -3.281 -3.281 -3.281 -3.302 -3.302 -3.302 -3.302 -3.302 -3.302 -3.302 -3.302 -3.26 -3.26 -3.239 -3.239 -3.239 -3.155 -3.155 -3.113 -3.113 -3.071 -2.987 -2.841 -2.841 -2.736 -2.673 -2.673 -2.589 -2.589 -2.484 -2.358 -2.233 -2.233 -2.065 -1.918 -1.792 -1.709 -1.562 -1.478 -1.415 -1.415 -1.415 -1.457 -1.457 -1.562 -1.562 -1.688 -1.688 -1.834 -1.834 -2.002 -2.149 -2.149 -2.254 -2.254 -2.317 -2.4 -2.505 -2.547 -2.631 -2.757 -2.757 -2.862 -2.862 -2.925 -2.987 -2.987 -3.05 -3.113 -3.197 -3.281 -3.281 -3.344 -3.344 -3.386 -3.386 -3.428 -3.428 -3.47 -3.47 -3.491 -3.491 -3.491 -3.512 -3.512 -3.512 -3.512 -3.512 -3.491 -3.47 -3.407 -3.407 -3.281 -3.218 -3.218 -3.218 -3.197 -3.197 -3.197 -3.197 -3.197 -3.197 -3.197 -3.197 -3.197 -3.218 -3.26 -3.302 -3.365 -3.428 -3.491 -3.491 -3.512 -3.574 -3.637 -3.637 -3.679 -3.679 -3.742 -3.784 -3.805 -3.805 -3.826 -3.868 -3.868 -3.868 -3.868 -3.868 -3.889 -3.889 -3.889 -3.889 -3.889 -3.889 -3.868 -3.784 -3.784 -3.721 -3.658 -3.595 -3.512 -3.47 -3.428 -3.428 -3.344 -3.281 -3.176 -3.092 -2.987 -2.904 -2.904 -2.862 -2.82 -2.778 -2.736 -2.736 -2.715 -2.715 -2.673 -2.631 -2.631 -2.61 -2.61 -2.568 -2.526 -2.526 -2.463 -2.463 -2.421 -2.421 -2.4 -2.4 -2.338 -2.338 -2.296 -2.275 -2.254 -2.254 -2.254 -2.254 -2.233 -2.233 -2.233 -2.233 -2.212 -2.212 -2.212 -2.212 -2.212 -2.212 -2.212 -2.212 -2.212 -2.212 -2.212 -2.212 -2.212 -2.212 -2.191 -2.191 -2.107 -2.002 -2.002 -1.918 -1.918 -1.813 -1.646 -1.457 -1.268 -1.08 -0.828 -0.828 -0.535 -0.157 0.22 0.22 0.493 0.493 0.744 0.744 0.996 0.996 1.226 1.436 1.646 1.646 1.834 1.834 2.023 2.023 2.212 2.212 2.421 2.61 2.61 2.736 2.736 2.757 2.799 2.799 2.799 2.799 2.757 2.757 2.715 2.652 2.61 2.568 2.526 2.505 2.463 2.358 2.358 2.296 2.296 2.275 2.275 2.275 2.212 2.128 2.107 2.107 2.107 2.128 2.128 2.191 2.296 2.442 2.442 2.526 2.526 2.61 2.61 2.694 2.694 2.799 2.799 2.883 2.987 3.113 3.113 3.239 3.239 3.365 3.47 3.47 3.553 3.553 3.637 3.637 3.721 3.826 3.868 3.868 3.868 3.889 3.889 3.847 3.847 3.784 3.784 3.7 3.616 3.532 3.449 3.365 3.365 3.26 3.155 2.966 2.966 2.778 2.631 2.463 2.463 2.275 2.065 1.876 1.73 1.583 1.436 1.436 1.205 1.205 1.017 0.828 0.723 0.597 0.451 0.346 0.346 0.241 0.178 0.115 0.115 0.031 -0.031 -0.115 -0.115 -0.199 -0.199 -0.283 -0.346 -0.346 -0.409 -0.514 -0.514 -0.577 -0.639 -0.639 -0.744 -0.744 -0.828 -0.912 -0.933 -0.933 -0.954 -0.975 -0.975 -0.996 -1.017 -1.017)) (quote (4.573 4.548 4.548 4.536 4.53 4.53 4.523 4.523 4.523 4.53 4.536 4.536 4.548 4.561 4.585 4.551 4.54 4.565 4.512 4.484 4.503 4.468 4.422 4.422 4.381 4.363 4.376 4.27 4.181 4.104 4.104 4.033 3.927 3.921 3.779 3.637 3.631 3.542 3.471 3.471 3.418 3.365 3.312 3.277 3.277 3.247 3.194 3.153 3.153 3.124 3.106 3.113 3.095 3.107 3.126 3.114 3.133 3.128 3.092 3.074 3.081 3.051 3.016 2.993 2.999 2.964 2.947 2.965 2.948 2.932 2.95 2.927 2.909 2.874 2.856 2.839 2.803 2.803 2.779 2.738 2.719 2.683 2.665 2.634 2.592 2.543 2.512 2.458 2.422 2.41 2.368 2.344 2.289 2.204 2.204 2.119 2.046 2.01 1.943 1.9 1.829 1.792 1.719 1.634 1.584 1.511 1.456 1.413 1.334 1.225 1.182 1.08 1.037 0.984 0.946 0.874 0.843 0.806 0.739 0.661 0.617 0.562 0.513 0.434 0.399 0.314 0.27 0.209 0.192 0.161 0.106 0.069 0.032 -0.041 -0.09 -0.121 -0.163 -0.199 -0.23 -0.249 -0.267 -0.304 -0.31 -0.328 -0.334 -0.334 -0.358 -0.358 -0.393 -0.411 -0.446 -0.446 -0.482 -0.482 -0.469 -0.469 -0.469 -0.469 -0.487 -0.523 -0.523 -0.558 -0.6 -0.665 -0.695 -0.767 -0.802 -0.85 -0.863 -0.886 -0.91 -0.917 -0.952 -0.952 -1.018 -1.024 -1.077 -1.089 -1.166 -1.202 -1.208 -1.238 -1.238 -1.25 -1.25 -1.257 -1.245 -1.216 -1.181 -1.2 -1.183 -1.195 -1.195 -1.166 -1.166 -1.155 -1.125 -1.114 -1.12 -1.12 -1.12 -1.12 -1.12 -1.114 -1.114 -1.101 -1.077 -1.064 -1.058 -1.07 -1.07 -1.081 -1.075 -1.086 -1.098 -1.098 -1.133 -1.174 -1.25 -1.244 -1.351 -1.427 -1.438 -1.438 -1.45 -1.45 -1.467 -1.473 -1.473 -1.497 -1.538 -1.586 -1.586 -1.616 -1.693 -1.753 -1.806 -1.865 -1.918 -1.918 -1.936 -1.989 -2.042 -2.042 -2.06 -2.054 -2.071 -2.064 -2.027 -1.983 -1.988 -1.969 -1.969 -1.974 -1.986 -1.974 -1.979 -1.979 -1.99 -2.002 -2.002 -2.025 -2.06 -2.149 -2.143 -2.178 -2.243 -2.308 -2.355 -2.408 -2.437 -2.412 -2.435 -2.47 -2.505 -2.54 -2.593 -2.616 -2.616 -2.634 -2.663 -2.686 -2.703 -2.697 -2.697 -2.691 -2.702 -2.702 -2.702 -2.702 -2.702 -2.726 -2.774 -2.78 -2.816 -2.829 -2.859 -2.865 -2.865 -2.865 -2.9 -2.9 -2.931 -2.948 -2.948 -2.966 -2.966 -2.984 -2.995 -3.001 -3.006 -2.994 -2.994 -2.993 -2.986 -3.004 -2.997 -2.979 -2.996 -2.995 -2.977 -2.988 -3.006 -3.024 -3.024 -3.095 -3.166 -3.153 -3.271 -3.424 -3.424 -3.548 -3.536 -3.636 -3.742 -3.831 -3.902 -3.99 -4.097 -4.097 -4.185 -4.244 -4.254 -4.242 -4.235 -4.223 -4.252 -4.252 -4.263 -4.251 -4.239 -4.22 -4.208 -4.195 -4.183 -4.164 -4.146 -4.146 -4.133 -4.133 -4.098 -4.021 -4.021 -3.939 -3.939 -3.903 -3.874 -3.874 -3.821 -3.785 -3.72 -3.72 -3.649 -3.548 -3.411 -3.315 -3.209 -3.089 -2.898 -2.653 -2.653 -2.491 -2.448 -2.334 -2.303 -2.196 -1.994 -1.757 -1.584 -1.429 -1.417 -1.245 -1.245 -1.032 -0.784 -0.554 -0.554 -0.371 -0.39 -0.297 -0.321 -0.18 -0.211 -0.041 -0.065 0.087 0.252 0.387 0.387 0.553 0.565 0.707 0.867 0.88 1.004 1.022 1.2 1.2 1.379 1.598 1.77 1.972 1.972 2.174 2.346 2.47 2.488 2.625 2.631 2.785 2.921 3.045 3.146 3.2 3.219 3.32 3.368 3.439 3.451 3.546 3.623 3.676 3.676 3.782 3.853 3.906 3.924 3.942 3.959 3.959 4.03 4.036 4.084 4.138 4.222 4.222 4.259 4.301 4.332 4.357 4.375 4.406 4.425 4.455 4.461 4.467 4.474 4.491 4.504 4.504 4.521 4.521 4.521 4.521 4.521 4.539 4.551 4.551 4.568 4.562 4.574 4.591 4.591 4.585 4.585 4.585 4.585 4.585 4.579 4.579)) (quote (-0.906 -0.845 -0.845 -0.804 -0.742 -0.742 -0.681 -0.589 -0.476 -0.394 -0.333 -0.282 -0.22 -0.169 -0.097 -0.026 0.046 0.097 0.159 0.22 0.271 0.323 0.384 0.384 0.425 0.435 0.435 0.445 0.435 0.435 0.405 0.364 0.364 0.312 0.261 0.261 0.189 0.087 -0.015 -0.087 -0.159 -0.23 -0.23 -0.292 -0.353 -0.384 -0.394 -0.415 -0.425 -0.425 -0.425 -0.425 -0.415 -0.374 -0.312 -0.261 -0.21 -0.138 -0.067 -0.067 0.026 0.108 0.189 0.251 0.323 0.323 0.374 0.435 0.497 0.558 0.609 0.65 0.65 0.671 0.691 0.722 0.742 0.763 0.783 0.814 0.835 0.855 0.855 0.876 0.906 0.917 0.917 0.917 0.917 0.917 0.917 0.896 0.865 0.845 0.845 0.824 0.794 0.794 0.763 0.722 0.722 0.701 0.681 0.65 0.63 0.62 0.62 0.62 0.609 0.609 0.609 0.609 0.609 0.609 0.609 0.62 0.63 0.65 0.671 0.691 0.722 0.742 0.773 0.814 0.814 0.845 0.886 0.917 0.917 0.947 0.978 1.009 1.039 1.08 1.091 1.111 1.111 1.111 1.111 1.111 1.111 1.111 1.101 1.091 1.07 1.07 1.039 1.029 1.009 1.009 0.998 0.988 0.968 0.958 0.958 0.947 0.937 0.937 0.927 0.917 0.906 0.896 0.886 0.865 0.835 0.814 0.814 0.794 0.763 0.742 0.722 0.712 0.701 0.701 0.701 0.681 0.661 0.64 0.62 0.599 0.568 0.548 0.538 0.517 0.507 0.486 0.476 0.456 0.425 0.394 0.353 0.333 0.333 0.323 0.302 0.282 0.261 0.241 0.21 0.21 0.2 0.179 0.159 0.128 0.128 0.097 0.077 0.056 0.056 0.056 0.056 0.056 0.056 0.056 0.056 0.077 0.077 0.097 0.118 0.138 0.138 0.159 0.169 0.189 0.189 0.189 0.2 0.2 0.2 0.2 0.189 0.169 0.169 0.138 0.108 0.087 0.087 0.077 0.067 0.056 0.056 0.036 0.026 0.005 -0.005 -0.005 -0.005 0.036 0.067 0.097 0.118 0.138 0.138 0.148 0.159 0.169 0.179 0.179 0.189 0.21 0.22 0.22 0.23 0.23 0.23 0.241 0.241 0.241 0.241 0.241 0.241 0.241 0.241 0.23 0.23 0.22 0.2 0.2 0.179 0.179 0.169 0.138 0.097 0.077 0.056 0.026 0.005 0.005 -0.015 -0.026 -0.046 -0.077 -0.138 -0.179 -0.241 -0.292 -0.343 -0.405 -0.476 -0.548 -0.609 -0.609 -0.661 -0.712 -0.763 -0.804 -0.865 -0.865 -0.906 -0.947 -0.998 -1.029 -1.029 -1.039 -1.039 -1.039 -1.019 -0.968 -0.968 -0.906 -0.845 -0.804 -0.763 -0.732 -0.732 -0.671 -0.589 -0.538 -0.507 -0.476 -0.466 -0.466 -0.466 -0.466 -0.476 -0.497 -0.558 -0.558 -0.62 -0.681 -0.753 -0.824 -0.896 -0.937 -0.968 -0.978 -0.978 -0.978 -0.978 -0.978 -0.978 -0.978 -0.958 -0.927 -0.886 -0.824 -0.732 -0.732 -0.65 -0.589 -0.589 -0.527 -0.466 -0.415 -0.364 -0.302 -0.251 -0.22 -0.21 -0.2 -0.2 -0.2 -0.179 -0.169 -0.148 -0.118 -0.118 -0.097 -0.087 -0.077 -0.077 -0.077 -0.077 -0.077 -0.077 -0.077 -0.077 -0.077 -0.097 -0.128 -0.138 -0.159 -0.169 -0.179 -0.2 -0.21 -0.21 -0.251 -0.302 -0.364 -0.435 -0.435 -0.517 -0.589 -0.671 -0.753 -0.835 -0.896 -0.958 -1.009 -1.05 -1.05 -1.091 -1.101 -1.101 -1.111 -1.111 -1.111 -1.111 -1.091 -1.08 -1.029 -1.029 -0.968 -0.917 -0.917 -0.855 -0.804 -0.783 -0.753 -0.701 -0.701 -0.671 -0.62 -0.568 -0.548 -0.538 -0.538 -0.538 -0.538 -0.538 -0.548 -0.558 -0.558 -0.579 -0.599 -0.62 -0.65 -0.671 -0.691 -0.691 -0.722 -0.773 -0.824 -0.865 -0.865 -0.906 -0.947 -0.988 -1.019 -1.039 -1.07 -1.08 -1.091 -1.091 -1.091 -1.091 -1.08 -1.08 -1.07 -1.06 -1.05 -1.039 -1.029 -1.029 -1.019 -1.019 -1.009 -1.009 -1.009 -0.988 -0.978 -0.978 -0.978 -0.978 -0.958 -0.947 -0.937 -0.927 -0.917)) (quote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (list -0.906 -0.845 -0.845 -0.804 -0.742 -0.742 -0.681 -0.589 -0.476 -0.394 -0.333 -0.282 -0.22 -0.169 -0.097 -0.026 0.046 0.097 0.159 0.22 0.271 0.323 0.384 0.384 0.425 0.435 0.435 0.445 0.435 0.435 0.405 0.364 0.364 0.312 0.261 0.261 0.189 0.087 -0.015 -0.087 -0.159 -0.23 -0.23 -0.292 -0.353 -0.384 -0.394 -0.415 -0.425 -0.425 -0.425 -0.425 -0.415 -0.374 -0.312 -0.261 -0.21 -0.138 -0.067 -0.067 0.026 0.108 0.189 0.251 0.323 0.323 0.374 0.435 0.497 0.558 0.609 0.65 0.65 0.671 0.691 0.722 0.742 0.763 0.783 0.814 0.835 0.855 0.855 0.876 0.906 0.917 0.917 0.917 0.917 0.917 0.917 0.896 0.865 0.845 0.845 0.824 0.794 0.794 0.763 0.722 0.722 0.701 0.681 0.65 0.63 0.62 0.62 0.62 0.609 0.609 0.609 0.609 0.609 0.609 0.609 0.62 0.63 0.65 0.671 0.691 0.722 0.742 0.773 0.814 0.814 0.845 0.886 0.917 0.917 0.947 0.978 1.009 1.039 1.08 1.091 1.111 1.111 1.111 1.111 1.111 1.111 1.111 1.101 1.091 1.07 1.07 1.039 1.029 1.009 1.009 0.998 0.988 0.968 0.958 0.958 0.947 0.937 0.937 0.927 0.917 0.906 0.896 0.886 0.865 0.835 0.814 0.814 0.794 0.763 0.742 0.722 0.712 0.701 0.701 0.701 0.681 0.661 0.64 0.62 0.599 0.568 0.548 0.538 0.517 0.507 0.486 0.476 0.456 0.425 0.394 0.353 0.333 0.333 0.323 0.302 0.282 0.261 0.241 0.21 0.21 0.2 0.179 0.159 0.128 0.128 0.097 0.077 0.056 0.056 0.056 0.056 0.056 0.056 0.056 0.056 0.077 0.077 0.097 0.118 0.138 0.138 0.159 0.169 0.189 0.189 0.189 0.2 0.2 0.2 0.2 0.189 0.169 0.169 0.138 0.108 0.087 0.087 0.077 0.067 0.056 0.056 0.036 0.026 0.005 -0.005 -0.005 -0.005 0.036 0.067 0.097 0.118 0.138 0.138 0.148 0.159 0.169 0.179 0.179 0.189 0.21 0.22 0.22 0.23 0.23 0.23 0.241 0.241 0.241 0.241 0.241 0.241 0.241 0.241 0.23 0.23 0.22 0.2 0.2 0.179 0.179 0.169 0.138 0.097 0.077 0.056 0.026 0.005 0.005 -0.015 -0.026 -0.046 -0.077 -0.138 -0.179 -0.241 -0.292 -0.343 -0.405 -0.476 -0.548 -0.609 -0.609 -0.661 -0.712 -0.763 -0.804 -0.865 -0.865 -0.906 -0.947 -0.998 -1.029 -1.029 -1.039 -1.039 -1.039 -1.019 -0.968 -0.968 -0.906 -0.845 -0.804 -0.763 -0.732 -0.732 -0.671 -0.589 -0.538 -0.507 -0.476 -0.466 -0.466 -0.466 -0.466 -0.476 -0.497 -0.558 -0.558 -0.62 -0.681 -0.753 -0.824 -0.896 -0.937 -0.968 -0.978 -0.978 -0.978 -0.978 -0.978 -0.978 -0.978 -0.958 -0.927 -0.886 -0.824 -0.732 -0.732 -0.65 -0.589 -0.589 -0.527 -0.466 -0.415 -0.364 -0.302 -0.251 -0.22 -0.21 -0.2 -0.2 -0.2 -0.179 -0.169 -0.148 -0.118 -0.118 -0.097 -0.087 -0.077 -0.077 -0.077 -0.077 -0.077 -0.077 -0.077 -0.077 -0.077 -0.097 -0.128 -0.138 -0.159 -0.169 -0.179 -0.2 -0.21 -0.21 -0.251 -0.302 -0.364 -0.435 -0.435 -0.517 -0.589 -0.671 -0.753 -0.835 -0.896 -0.958 -1.009 -1.05 -1.05 -1.091 -1.101 -1.101 -1.111 -1.111 -1.111 -1.111 -1.091 -1.08 -1.029 -1.029 -0.968 -0.917 -0.917 -0.855 -0.804 -0.783 -0.753 -0.701 -0.701 -0.671 -0.62 -0.568 -0.548 -0.538 -0.538 -0.538 -0.538 -0.538 -0.548 -0.558 -0.558 -0.579 -0.599 -0.62 -0.65 -0.671 -0.691 -0.691 -0.722 -0.773 -0.824 -0.865 -0.865 -0.906 -0.947 -0.988 -1.019 -1.039 -1.07 -1.08 -1.091 -1.091 -1.091 -1.091 -1.08 -1.08 -1.07 -1.06 -1.05 -1.039 -1.029 -1.029 -1.019 -1.019 -1.009 -1.009 -1.009 -0.988 -0.978 -0.978 -0.978 -0.978 -0.958 -0.947 -0.937 -0.927 -0.917))) newobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (-0.62 -0.638 -0.674 -0.674 -0.764 -0.872 -0.997 -0.997 -1.123 -1.123 -1.249 -1.357 -1.357 -1.482 -1.482 -1.608 -1.716 -1.716 -1.842 -1.95 -1.95 -2.075 -2.183 -2.183 -2.255 -2.255 -2.255 -2.309 -2.327 -2.327 -2.327 -2.327 -2.309 -2.309 -2.237 -2.237 -2.237 -2.237 -2.237 -2.237 -2.237 -2.237 -2.219 -2.219 -2.219 -2.219 -2.219 -2.237 -2.237 -2.237 -2.237 -2.237 -2.237 -2.273 -2.273 -2.273 -2.309 -2.327 -2.363 -2.399 -2.399 -2.453 -2.489 -2.525 -2.525 -2.579 -2.65 -2.65 -2.686 -2.776 -2.776 -2.812 -2.884 -2.92 -2.974 -3.01 -3.046 -3.046 -3.1 -3.154 -3.154 -3.172 -3.19 -3.19 -3.19 -3.19 -3.19 -3.154 -3.1 -3.1 -2.992 -2.992 -2.902 -2.794 -2.794 -2.722 -2.668 -2.633 -2.615 -2.615 -2.579 -2.579 -2.561 -2.561 -2.561 -2.561 -2.561 -2.561 -2.579 -2.597 -2.597 -2.633 -2.633 -2.668 -2.668 -2.668 -2.704 -2.704 -2.704 -2.722 -2.722 -2.74 -2.74 -2.776 -2.794 -2.812 -2.812 -2.812 -2.812 -2.812 -2.812 -2.83 -2.83 -2.83 -2.83 -2.83 -2.83 -2.83 -2.83 -2.794 -2.794 -2.776 -2.776 -2.776 -2.704 -2.704 -2.668 -2.668 -2.633 -2.561 -2.435 -2.435 -2.345 -2.291 -2.291 -2.219 -2.219 -2.129 -2.022 -1.914 -1.914 -1.77 -1.644 -1.536 -1.465 -1.339 -1.267 -1.213 -1.213 -1.213 -1.249 -1.249 -1.339 -1.339 -1.447 -1.447 -1.572 -1.572 -1.716 -1.842 -1.842 -1.932 -1.932 -1.986 -2.058 -2.147 -2.183 -2.255 -2.363 -2.363 -2.453 -2.453 -2.507 -2.561 -2.561 -2.615 -2.668 -2.74 -2.812 -2.812 -2.866 -2.866 -2.902 -2.902 -2.938 -2.938 -2.974 -2.974 -2.992 -2.992 -2.992 -3.01 -3.01 -3.01 -3.01 -3.01 -2.992 -2.974 -2.92 -2.92 -2.812 -2.758 -2.758 -2.758 -2.74 -2.74 -2.74 -2.74 -2.74 -2.74 -2.74 -2.74 -2.74 -2.758 -2.794 -2.83 -2.884 -2.938 -2.992 -2.992 -3.01 -3.064 -3.118 -3.118 -3.154 -3.154 -3.208 -3.243 -3.261 -3.261 -3.279 -3.315 -3.315 -3.315 -3.315 -3.315 -3.333 -3.333 -3.333 -3.333 -3.333 -3.333 -3.315 -3.243 -3.243 -3.19 -3.136 -3.082 -3.01 -2.974 -2.938 -2.938 -2.866 -2.812 -2.722 -2.65 -2.561 -2.489 -2.489 -2.453 -2.417 -2.381 -2.345 -2.345 -2.327 -2.327 -2.291 -2.255 -2.255 -2.237 -2.237 -2.201 -2.165 -2.165 -2.111 -2.111 -2.075 -2.075 -2.058 -2.058 -2.004 -2.004 -1.968 -1.95 -1.932 -1.932 -1.932 -1.932 -1.914 -1.914 -1.914 -1.914 -1.896 -1.896 -1.896 -1.896 -1.896 -1.896 -1.896 -1.896 -1.896 -1.896 -1.896 -1.896 -1.896 -1.896 -1.878 -1.878 -1.806 -1.716 -1.716 -1.644 -1.644 -1.554 -1.411 -1.249 -1.087 -0.925 -0.71 -0.71 -0.458 -0.135 0.189 0.189 0.422 0.422 0.638 0.638 0.854 0.854 1.051 1.231 1.411 1.411 1.572 1.572 1.734 1.734 1.896 1.896 2.075 2.237 2.237 2.345 2.345 2.363 2.399 2.399 2.399 2.399 2.363 2.363 2.327 2.273 2.237 2.201 2.165 2.147 2.111 2.022 2.022 1.968 1.968 1.95 1.95 1.95 1.896 1.824 1.806 1.806 1.806 1.824 1.824 1.878 1.968 2.093 2.093 2.165 2.165 2.237 2.237 2.309 2.309 2.399 2.399 2.471 2.561 2.668 2.668 2.776 2.776 2.884 2.974 2.974 3.046 3.046 3.118 3.118 3.19 3.279 3.315 3.315 3.315 3.333 3.333 3.297 3.297 3.243 3.243 3.172 3.1 3.028 2.956 2.884 2.884 2.794 2.704 2.543 2.543 2.381 2.255 2.111 2.111 1.95 1.77 1.608 1.482 1.357 1.231 1.231 1.033 1.033 0.872 0.71 0.62 0.512 0.386 0.296 0.296 0.207 0.153 0.099 0.099 0.027 -0.027 -0.099 -0.099 -0.171 -0.171 -0.243 -0.296 -0.296 -0.35 -0.44 -0.44 -0.494 -0.548 -0.548 -0.638 -0.638 -0.71 -0.782 -0.8 -0.8 -0.818 -0.836 -0.836 -0.854 -0.872 -0.872)) (quote (4.359 4.322 4.322 4.304 4.294 4.294 4.285 4.285 4.285 4.294 4.304 4.304 4.322 4.341 4.378 4.36 4.367 4.404 4.371 4.363 4.391 4.373 4.349 4.349 4.322 4.307 4.326 4.235 4.159 4.089 4.089 4.028 3.937 3.928 3.806 3.685 3.675 3.599 3.539 3.539 3.493 3.447 3.402 3.372 3.372 3.35 3.305 3.278 3.278 3.257 3.242 3.251 3.236 3.254 3.282 3.276 3.304 3.307 3.277 3.262 3.271 3.25 3.22 3.208 3.217 3.187 3.184 3.212 3.21 3.207 3.235 3.223 3.208 3.178 3.162 3.147 3.117 3.117 3.092 3.053 3.025 2.982 2.967 2.92 2.868 2.806 2.76 2.702 2.671 2.653 2.613 2.576 2.505 2.4 2.4 2.296 2.197 2.167 2.077 2.012 1.951 1.896 1.81 1.705 1.631 1.532 1.461 1.396 1.301 1.172 1.107 0.999 0.934 0.889 0.833 0.747 0.701 0.645 0.568 0.473 0.408 0.337 0.263 0.167 0.137 0.032 -0.033 -0.113 -0.128 -0.175 -0.245 -0.301 -0.357 -0.443 -0.505 -0.551 -0.603 -0.646 -0.693 -0.721 -0.749 -0.792 -0.801 -0.816 -0.825 -0.825 -0.85 -0.85 -0.88 -0.895 -0.926 -0.926 -0.956 -0.956 -0.938 -0.938 -0.938 -0.938 -0.953 -0.983 -0.983 -1.013 -1.053 -1.117 -1.151 -1.224 -1.255 -1.304 -1.322 -1.347 -1.371 -1.381 -1.411 -1.411 -1.475 -1.484 -1.53 -1.548 -1.618 -1.649 -1.658 -1.692 -1.692 -1.71 -1.71 -1.72 -1.714 -1.693 -1.675 -1.703 -1.7 -1.719 -1.719 -1.698 -1.698 -1.692 -1.671 -1.665 -1.674 -1.674 -1.674 -1.674 -1.674 -1.665 -1.665 -1.646 -1.609 -1.591 -1.581 -1.587 -1.587 -1.593 -1.584 -1.59 -1.596 -1.596 -1.626 -1.653 -1.71 -1.701 -1.792 -1.85 -1.856 -1.856 -1.861 -1.861 -1.877 -1.873 -1.873 -1.898 -1.937 -1.986 -1.986 -2.02 -2.09 -2.145 -2.191 -2.245 -2.291 -2.291 -2.306 -2.352 -2.397 -2.397 -2.412 -2.403 -2.406 -2.384 -2.328 -2.263 -2.247 -2.219 -2.219 -2.216 -2.222 -2.203 -2.2 -2.2 -2.206 -2.211 -2.211 -2.223 -2.254 -2.33 -2.32 -2.351 -2.402 -2.454 -2.49 -2.535 -2.556 -2.519 -2.531 -2.549 -2.579 -2.597 -2.642 -2.654 -2.654 -2.669 -2.691 -2.702 -2.705 -2.696 -2.696 -2.686 -2.692 -2.692 -2.692 -2.692 -2.692 -2.717 -2.766 -2.775 -2.818 -2.836 -2.87 -2.88 -2.88 -2.88 -2.91 -2.91 -2.944 -2.959 -2.959 -2.974 -2.974 -2.989 -2.995 -2.992 -2.988 -2.97 -2.97 -2.957 -2.948 -2.963 -2.941 -2.913 -2.928 -2.916 -2.888 -2.894 -2.909 -2.924 -2.924 -2.985 -3.046 -3.027 -3.124 -3.251 -3.251 -3.358 -3.339 -3.421 -3.512 -3.588 -3.649 -3.725 -3.816 -3.816 -3.892 -3.934 -3.927 -3.909 -3.887 -3.868 -3.889 -3.889 -3.895 -3.877 -3.858 -3.83 -3.812 -3.793 -3.774 -3.747 -3.719 -3.719 -3.7 -3.7 -3.67 -3.6 -3.6 -3.533 -3.533 -3.503 -3.482 -3.482 -3.436 -3.406 -3.342 -3.342 -3.281 -3.186 -3.049 -2.951 -2.86 -2.737 -2.542 -2.3 -2.3 -2.126 -2.061 -1.935 -1.888 -1.785 -1.596 -1.376 -1.208 -1.056 -1.037 -0.882 -0.882 -0.7 -0.487 -0.29 -0.29 -0.141 -0.169 -0.109 -0.146 -0.025 -0.071 0.059 0.022 0.136 0.27 0.382 0.382 0.528 0.546 0.668 0.817 0.836 0.942 0.97 1.134 1.134 1.299 1.503 1.658 1.847 1.847 2.036 2.192 2.298 2.326 2.451 2.46 2.6 2.725 2.831 2.926 2.984 3.012 3.106 3.155 3.216 3.235 3.32 3.39 3.435 3.435 3.526 3.587 3.633 3.648 3.663 3.678 3.678 3.739 3.748 3.797 3.856 3.947 3.947 3.991 4.043 4.089 4.126 4.154 4.201 4.229 4.262 4.272 4.281 4.29 4.305 4.324 4.324 4.339 4.339 4.339 4.339 4.339 4.354 4.36 4.36 4.375 4.366 4.372 4.387 4.387 4.378 4.378 4.378 4.378 4.378 4.369 4.369)) (quote (-1.359 -1.267 -1.267 -1.206 -1.114 -1.114 -1.022 -0.883 -0.714 -0.591 -0.499 -0.422 -0.33 -0.253 -0.146 -0.038 0.069 0.146 0.238 0.33 0.407 0.484 0.576 0.576 0.637 0.653 0.653 0.668 0.653 0.653 0.607 0.545 0.545 0.469 0.392 0.392 0.284 0.131 -0.023 -0.131 -0.238 -0.346 -0.346 -0.438 -0.53 -0.576 -0.591 -0.622 -0.637 -0.637 -0.637 -0.637 -0.622 -0.561 -0.469 -0.392 -0.315 -0.207 -0.1 -0.1 0.038 0.161 0.284 0.376 0.484 0.484 0.561 0.653 0.745 0.837 0.914 0.975 0.975 1.006 1.037 1.083 1.114 1.144 1.175 1.221 1.252 1.283 1.283 1.313 1.359 1.375 1.375 1.375 1.375 1.375 1.375 1.344 1.298 1.267 1.267 1.237 1.19 1.19 1.144 1.083 1.083 1.052 1.022 0.975 0.945 0.929 0.929 0.929 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.929 0.945 0.975 1.006 1.037 1.083 1.114 1.16 1.221 1.221 1.267 1.329 1.375 1.375 1.421 1.467 1.513 1.559 1.621 1.636 1.667 1.667 1.667 1.667 1.667 1.667 1.667 1.651 1.636 1.605 1.605 1.559 1.544 1.513 1.513 1.498 1.482 1.452 1.436 1.436 1.421 1.406 1.406 1.39 1.375 1.359 1.344 1.329 1.298 1.252 1.221 1.221 1.19 1.144 1.114 1.083 1.068 1.052 1.052 1.052 1.022 0.991 0.96 0.929 0.899 0.853 0.822 0.806 0.776 0.76 0.73 0.714 0.684 0.637 0.591 0.53 0.499 0.499 0.484 0.453 0.422 0.392 0.361 0.315 0.315 0.3 0.269 0.238 0.192 0.192 0.146 0.115 0.084 0.084 0.084 0.084 0.084 0.084 0.084 0.084 0.115 0.115 0.146 0.177 0.207 0.207 0.238 0.253 0.284 0.284 0.284 0.3 0.3 0.3 0.3 0.284 0.253 0.253 0.207 0.161 0.131 0.131 0.115 0.1 0.084 0.084 0.054 0.038 0.008 -0.008 -0.008 -0.008 0.054 0.1 0.146 0.177 0.207 0.207 0.223 0.238 0.253 0.269 0.269 0.284 0.315 0.33 0.33 0.346 0.346 0.346 0.361 0.361 0.361 0.361 0.361 0.361 0.361 0.361 0.346 0.346 0.33 0.3 0.3 0.269 0.269 0.253 0.207 0.146 0.115 0.084 0.038 0.008 0.008 -0.023 -0.038 -0.069 -0.115 -0.207 -0.269 -0.361 -0.438 -0.515 -0.607 -0.714 -0.822 -0.914 -0.914 -0.991 -1.068 -1.144 -1.206 -1.298 -1.298 -1.359 -1.421 -1.498 -1.544 -1.544 -1.559 -1.559 -1.559 -1.528 -1.452 -1.452 -1.359 -1.267 -1.206 -1.144 -1.098 -1.098 -1.006 -0.883 -0.806 -0.76 -0.714 -0.699 -0.699 -0.699 -0.699 -0.714 -0.745 -0.837 -0.837 -0.929 -1.022 -1.129 -1.237 -1.344 -1.406 -1.452 -1.467 -1.467 -1.467 -1.467 -1.467 -1.467 -1.467 -1.436 -1.39 -1.329 -1.237 -1.098 -1.098 -0.975 -0.883 -0.883 -0.791 -0.699 -0.622 -0.545 -0.453 -0.376 -0.33 -0.315 -0.3 -0.3 -0.3 -0.269 -0.253 -0.223 -0.177 -0.177 -0.146 -0.131 -0.115 -0.115 -0.115 -0.115 -0.115 -0.115 -0.115 -0.115 -0.115 -0.146 -0.192 -0.207 -0.238 -0.253 -0.269 -0.3 -0.315 -0.315 -0.376 -0.453 -0.545 -0.653 -0.653 -0.776 -0.883 -1.006 -1.129 -1.252 -1.344 -1.436 -1.513 -1.575 -1.575 -1.636 -1.651 -1.651 -1.667 -1.667 -1.667 -1.667 -1.636 -1.621 -1.544 -1.544 -1.452 -1.375 -1.375 -1.283 -1.206 -1.175 -1.129 -1.052 -1.052 -1.006 -0.929 -0.853 -0.822 -0.806 -0.806 -0.806 -0.806 -0.806 -0.822 -0.837 -0.837 -0.868 -0.899 -0.929 -0.975 -1.006 -1.037 -1.037 -1.083 -1.16 -1.237 -1.298 -1.298 -1.359 -1.421 -1.482 -1.528 -1.559 -1.605 -1.621 -1.636 -1.636 -1.636 -1.636 -1.621 -1.621 -1.605 -1.59 -1.575 -1.559 -1.544 -1.544 -1.528 -1.528 -1.513 -1.513 -1.513 -1.482 -1.467 -1.467 -1.467 -1.467 -1.436 -1.421 -1.406 -1.39 -1.375)) (quote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (list -1.359 -1.267 -1.267 -1.206 -1.114 -1.114 -1.022 -0.883 -0.714 -0.591 -0.499 -0.422 -0.33 -0.253 -0.146 -0.038 0.069 0.146 0.238 0.33 0.407 0.484 0.576 0.576 0.637 0.653 0.653 0.668 0.653 0.653 0.607 0.545 0.545 0.469 0.392 0.392 0.284 0.131 -0.023 -0.131 -0.238 -0.346 -0.346 -0.438 -0.53 -0.576 -0.591 -0.622 -0.637 -0.637 -0.637 -0.637 -0.622 -0.561 -0.469 -0.392 -0.315 -0.207 -0.1 -0.1 0.038 0.161 0.284 0.376 0.484 0.484 0.561 0.653 0.745 0.837 0.914 0.975 0.975 1.006 1.037 1.083 1.114 1.144 1.175 1.221 1.252 1.283 1.283 1.313 1.359 1.375 1.375 1.375 1.375 1.375 1.375 1.344 1.298 1.267 1.267 1.237 1.19 1.19 1.144 1.083 1.083 1.052 1.022 0.975 0.945 0.929 0.929 0.929 0.914 0.914 0.914 0.914 0.914 0.914 0.914 0.929 0.945 0.975 1.006 1.037 1.083 1.114 1.16 1.221 1.221 1.267 1.329 1.375 1.375 1.421 1.467 1.513 1.559 1.621 1.636 1.667 1.667 1.667 1.667 1.667 1.667 1.667 1.651 1.636 1.605 1.605 1.559 1.544 1.513 1.513 1.498 1.482 1.452 1.436 1.436 1.421 1.406 1.406 1.39 1.375 1.359 1.344 1.329 1.298 1.252 1.221 1.221 1.19 1.144 1.114 1.083 1.068 1.052 1.052 1.052 1.022 0.991 0.96 0.929 0.899 0.853 0.822 0.806 0.776 0.76 0.73 0.714 0.684 0.637 0.591 0.53 0.499 0.499 0.484 0.453 0.422 0.392 0.361 0.315 0.315 0.3 0.269 0.238 0.192 0.192 0.146 0.115 0.084 0.084 0.084 0.084 0.084 0.084 0.084 0.084 0.115 0.115 0.146 0.177 0.207 0.207 0.238 0.253 0.284 0.284 0.284 0.3 0.3 0.3 0.3 0.284 0.253 0.253 0.207 0.161 0.131 0.131 0.115 0.1 0.084 0.084 0.054 0.038 0.008 -0.008 -0.008 -0.008 0.054 0.1 0.146 0.177 0.207 0.207 0.223 0.238 0.253 0.269 0.269 0.284 0.315 0.33 0.33 0.346 0.346 0.346 0.361 0.361 0.361 0.361 0.361 0.361 0.361 0.361 0.346 0.346 0.33 0.3 0.3 0.269 0.269 0.253 0.207 0.146 0.115 0.084 0.038 0.008 0.008 -0.023 -0.038 -0.069 -0.115 -0.207 -0.269 -0.361 -0.438 -0.515 -0.607 -0.714 -0.822 -0.914 -0.914 -0.991 -1.068 -1.144 -1.206 -1.298 -1.298 -1.359 -1.421 -1.498 -1.544 -1.544 -1.559 -1.559 -1.559 -1.528 -1.452 -1.452 -1.359 -1.267 -1.206 -1.144 -1.098 -1.098 -1.006 -0.883 -0.806 -0.76 -0.714 -0.699 -0.699 -0.699 -0.699 -0.714 -0.745 -0.837 -0.837 -0.929 -1.022 -1.129 -1.237 -1.344 -1.406 -1.452 -1.467 -1.467 -1.467 -1.467 -1.467 -1.467 -1.467 -1.436 -1.39 -1.329 -1.237 -1.098 -1.098 -0.975 -0.883 -0.883 -0.791 -0.699 -0.622 -0.545 -0.453 -0.376 -0.33 -0.315 -0.3 -0.3 -0.3 -0.269 -0.253 -0.223 -0.177 -0.177 -0.146 -0.131 -0.115 -0.115 -0.115 -0.115 -0.115 -0.115 -0.115 -0.115 -0.115 -0.146 -0.192 -0.207 -0.238 -0.253 -0.269 -0.3 -0.315 -0.315 -0.376 -0.453 -0.545 -0.653 -0.653 -0.776 -0.883 -1.006 -1.129 -1.252 -1.344 -1.436 -1.513 -1.575 -1.575 -1.636 -1.651 -1.651 -1.667 -1.667 -1.667 -1.667 -1.636 -1.621 -1.544 -1.544 -1.452 -1.375 -1.375 -1.283 -1.206 -1.175 -1.129 -1.052 -1.052 -1.006 -0.929 -0.853 -0.822 -0.806 -0.806 -0.806 -0.806 -0.806 -0.822 -0.837 -0.837 -0.868 -0.899 -0.929 -0.975 -1.006 -1.037 -1.037 -1.083 -1.16 -1.237 -1.298 -1.298 -1.359 -1.421 -1.482 -1.528 -1.559 -1.605 -1.621 -1.636 -1.636 -1.636 -1.636 -1.621 -1.621 -1.605 -1.59 -1.575 -1.559 -1.544 -1.544 -1.528 -1.528 -1.513 -1.513 -1.513 -1.482 -1.467 -1.467 -1.467 -1.467 -1.436 -1.421 -1.406 -1.39 -1.375))) newobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (-0.517 -0.532 -0.562 -0.562 -0.636 -0.726 -0.831 -0.831 -0.936 -0.936 -1.041 -1.131 -1.131 -1.235 -1.235 -1.34 -1.43 -1.43 -1.535 -1.625 -1.625 -1.73 -1.819 -1.819 -1.879 -1.879 -1.879 -1.924 -1.939 -1.939 -1.939 -1.939 -1.924 -1.924 -1.864 -1.864 -1.864 -1.864 -1.864 -1.864 -1.864 -1.864 -1.849 -1.849 -1.849 -1.849 -1.849 -1.864 -1.864 -1.864 -1.864 -1.864 -1.864 -1.894 -1.894 -1.894 -1.924 -1.939 -1.969 -1.999 -1.999 -2.044 -2.074 -2.104 -2.104 -2.149 -2.209 -2.209 -2.239 -2.314 -2.314 -2.344 -2.403 -2.433 -2.478 -2.508 -2.538 -2.538 -2.583 -2.628 -2.628 -2.643 -2.658 -2.658 -2.658 -2.658 -2.658 -2.628 -2.583 -2.583 -2.493 -2.493 -2.418 -2.329 -2.329 -2.269 -2.224 -2.194 -2.179 -2.179 -2.149 -2.149 -2.134 -2.134 -2.134 -2.134 -2.134 -2.134 -2.149 -2.164 -2.164 -2.194 -2.194 -2.224 -2.224 -2.224 -2.254 -2.254 -2.254 -2.269 -2.269 -2.284 -2.284 -2.314 -2.329 -2.344 -2.344 -2.344 -2.344 -2.344 -2.344 -2.358 -2.358 -2.358 -2.358 -2.358 -2.358 -2.358 -2.358 -2.329 -2.329 -2.314 -2.314 -2.314 -2.254 -2.254 -2.224 -2.224 -2.194 -2.134 -2.029 -2.029 -1.954 -1.909 -1.909 -1.849 -1.849 -1.774 -1.685 -1.595 -1.595 -1.475 -1.37 -1.28 -1.22 -1.116 -1.056 -1.011 -1.011 -1.011 -1.041 -1.041 -1.116 -1.116 -1.205 -1.205 -1.31 -1.31 -1.43 -1.535 -1.535 -1.61 -1.61 -1.655 -1.715 -1.789 -1.819 -1.879 -1.969 -1.969 -2.044 -2.044 -2.089 -2.134 -2.134 -2.179 -2.224 -2.284 -2.344 -2.344 -2.388 -2.388 -2.418 -2.418 -2.448 -2.448 -2.478 -2.478 -2.493 -2.493 -2.493 -2.508 -2.508 -2.508 -2.508 -2.508 -2.493 -2.478 -2.433 -2.433 -2.344 -2.299 -2.299 -2.299 -2.284 -2.284 -2.284 -2.284 -2.284 -2.284 -2.284 -2.284 -2.284 -2.299 -2.329 -2.358 -2.403 -2.448 -2.493 -2.493 -2.508 -2.553 -2.598 -2.598 -2.628 -2.628 -2.673 -2.703 -2.718 -2.718 -2.733 -2.763 -2.763 -2.763 -2.763 -2.763 -2.778 -2.778 -2.778 -2.778 -2.778 -2.778 -2.763 -2.703 -2.703 -2.658 -2.613 -2.568 -2.508 -2.478 -2.448 -2.448 -2.388 -2.344 -2.269 -2.209 -2.134 -2.074 -2.074 -2.044 -2.014 -1.984 -1.954 -1.954 -1.939 -1.939 -1.909 -1.879 -1.879 -1.864 -1.864 -1.834 -1.804 -1.804 -1.76 -1.76 -1.73 -1.73 -1.715 -1.715 -1.67 -1.67 -1.64 -1.625 -1.61 -1.61 -1.61 -1.61 -1.595 -1.595 -1.595 -1.595 -1.58 -1.58 -1.58 -1.58 -1.58 -1.58 -1.58 -1.58 -1.58 -1.58 -1.58 -1.58 -1.58 -1.58 -1.565 -1.565 -1.505 -1.43 -1.43 -1.37 -1.37 -1.295 -1.176 -1.041 -0.906 -0.771 -0.591 -0.591 -0.382 -0.112 0.157 0.157 0.352 0.352 0.532 0.532 0.711 0.711 0.876 1.026 1.176 1.176 1.31 1.31 1.445 1.445 1.58 1.58 1.73 1.864 1.864 1.954 1.954 1.969 1.999 1.999 1.999 1.999 1.969 1.969 1.939 1.894 1.864 1.834 1.804 1.789 1.76 1.685 1.685 1.64 1.64 1.625 1.625 1.625 1.58 1.52 1.505 1.505 1.505 1.52 1.52 1.565 1.64 1.745 1.745 1.804 1.804 1.864 1.864 1.924 1.924 1.999 1.999 2.059 2.134 2.224 2.224 2.314 2.314 2.403 2.478 2.478 2.538 2.538 2.598 2.598 2.658 2.733 2.763 2.763 2.763 2.778 2.778 2.748 2.748 2.703 2.703 2.643 2.583 2.523 2.463 2.403 2.403 2.329 2.254 2.119 2.119 1.984 1.879 1.76 1.76 1.625 1.475 1.34 1.235 1.131 1.026 1.026 0.861 0.861 0.726 0.591 0.517 0.427 0.322 0.247 0.247 0.172 0.127 0.082 0.082 0.022 -0.022 -0.082 -0.082 -0.142 -0.142 -0.202 -0.247 -0.247 -0.292 -0.367 -0.367 -0.412 -0.457 -0.457 -0.532 -0.532 -0.591 -0.651 -0.666 -0.666 -0.681 -0.696 -0.696 -0.711 -0.726 -0.726)) (quote (4.146 4.096 4.096 4.071 4.059 4.059 4.047 4.047 4.047 4.059 4.071 4.071 4.096 4.121 4.171 4.17 4.194 4.243 4.23 4.242 4.279 4.278 4.277 4.277 4.264 4.251 4.276 4.2 4.136 4.073 4.073 4.023 3.947 3.934 3.833 3.732 3.72 3.656 3.606 3.606 3.568 3.53 3.492 3.467 3.467 3.454 3.416 3.402 3.402 3.39 3.377 3.389 3.377 3.401 3.438 3.438 3.475 3.487 3.462 3.449 3.462 3.449 3.424 3.423 3.435 3.41 3.422 3.459 3.471 3.483 3.52 3.519 3.507 3.481 3.469 3.456 3.431 3.431 3.406 3.368 3.331 3.281 3.268 3.207 3.144 3.07 3.008 2.945 2.92 2.895 2.858 2.808 2.721 2.597 2.597 2.473 2.348 2.323 2.211 2.125 2.074 2.0 1.9 1.776 1.677 1.553 1.466 1.379 1.267 1.118 1.031 0.919 0.832 0.794 0.72 0.62 0.558 0.484 0.397 0.285 0.198 0.111 0.012 -0.1 -0.125 -0.249 -0.336 -0.435 -0.448 -0.51 -0.597 -0.671 -0.745 -0.845 -0.92 -0.981 -1.044 -1.093 -1.155 -1.192 -1.23 -1.279 -1.292 -1.304 -1.317 -1.317 -1.342 -1.342 -1.367 -1.38 -1.405 -1.405 -1.43 -1.43 -1.406 -1.406 -1.406 -1.406 -1.418 -1.444 -1.444 -1.469 -1.507 -1.569 -1.607 -1.682 -1.707 -1.757 -1.782 -1.807 -1.832 -1.844 -1.87 -1.87 -1.933 -1.945 -1.983 -2.008 -2.071 -2.096 -2.108 -2.146 -2.146 -2.171 -2.171 -2.183 -2.183 -2.17 -2.169 -2.206 -2.218 -2.243 -2.243 -2.23 -2.23 -2.229 -2.216 -2.216 -2.229 -2.229 -2.229 -2.229 -2.229 -2.216 -2.216 -2.191 -2.142 -2.117 -2.105 -2.105 -2.105 -2.105 -2.093 -2.093 -2.093 -2.093 -2.119 -2.132 -2.171 -2.158 -2.234 -2.273 -2.273 -2.273 -2.273 -2.273 -2.286 -2.274 -2.274 -2.299 -2.336 -2.386 -2.386 -2.424 -2.487 -2.537 -2.575 -2.626 -2.663 -2.663 -2.676 -2.714 -2.752 -2.752 -2.765 -2.752 -2.741 -2.704 -2.629 -2.543 -2.506 -2.469 -2.469 -2.457 -2.457 -2.432 -2.42 -2.42 -2.421 -2.421 -2.421 -2.421 -2.447 -2.51 -2.498 -2.523 -2.561 -2.599 -2.625 -2.663 -2.676 -2.626 -2.627 -2.628 -2.653 -2.654 -2.692 -2.692 -2.692 -2.705 -2.718 -2.719 -2.707 -2.694 -2.694 -2.682 -2.682 -2.682 -2.682 -2.682 -2.682 -2.707 -2.757 -2.77 -2.819 -2.844 -2.882 -2.894 -2.894 -2.894 -2.919 -2.919 -2.957 -2.969 -2.969 -2.982 -2.982 -2.995 -2.995 -2.983 -2.971 -2.946 -2.946 -2.922 -2.909 -2.922 -2.885 -2.848 -2.86 -2.836 -2.799 -2.799 -2.812 -2.824 -2.824 -2.875 -2.926 -2.901 -2.977 -3.079 -3.079 -3.167 -3.142 -3.206 -3.282 -3.345 -3.396 -3.459 -3.535 -3.535 -3.598 -3.624 -3.6 -3.575 -3.538 -3.514 -3.526 -3.526 -3.527 -3.502 -3.477 -3.44 -3.415 -3.391 -3.366 -3.329 -3.292 -3.292 -3.267 -3.267 -3.241 -3.178 -3.178 -3.128 -3.128 -3.102 -3.089 -3.089 -3.051 -3.026 -2.963 -2.963 -2.913 -2.825 -2.687 -2.587 -2.511 -2.386 -2.185 -1.947 -1.947 -1.76 -1.673 -1.536 -1.474 -1.373 -1.197 -0.996 -0.833 -0.682 -0.658 -0.519 -0.519 -0.367 -0.19 -0.025 -0.025 0.089 0.052 0.079 0.029 0.13 0.068 0.158 0.109 0.186 0.287 0.376 0.376 0.502 0.527 0.628 0.767 0.792 0.88 0.917 1.068 1.068 1.219 1.408 1.547 1.723 1.723 1.899 2.038 2.126 2.163 2.277 2.289 2.415 2.528 2.617 2.705 2.767 2.805 2.893 2.943 2.993 3.018 3.094 3.157 3.195 3.195 3.271 3.321 3.359 3.372 3.385 3.397 3.397 3.448 3.46 3.51 3.573 3.673 3.673 3.722 3.785 3.846 3.896 3.933 3.995 4.032 4.07 4.082 4.094 4.107 4.119 4.144 4.144 4.157 4.157 4.157 4.157 4.157 4.169 4.17 4.17 4.182 4.17 4.17 4.183 4.183 4.171 4.171 4.171 4.171 4.171 4.158 4.158)) (quote (-1.813 -1.69 -1.69 -1.608 -1.485 -1.485 -1.362 -1.178 -0.952 -0.789 -0.666 -0.563 -0.44 -0.338 -0.195 -0.051 0.092 0.195 0.317 0.44 0.543 0.645 0.768 0.768 0.85 0.87 0.87 0.891 0.87 0.87 0.809 0.727 0.727 0.625 0.522 0.522 0.379 0.174 -0.031 -0.174 -0.317 -0.461 -0.461 -0.584 -0.707 -0.768 -0.789 -0.829 -0.85 -0.85 -0.85 -0.85 -0.829 -0.748 -0.625 -0.522 -0.42 -0.276 -0.133 -0.133 0.051 0.215 0.379 0.502 0.645 0.645 0.748 0.87 0.993 1.116 1.219 1.301 1.301 1.342 1.382 1.444 1.485 1.526 1.567 1.628 1.669 1.71 1.71 1.751 1.813 1.833 1.833 1.833 1.833 1.833 1.833 1.792 1.731 1.69 1.69 1.649 1.587 1.587 1.526 1.444 1.444 1.403 1.362 1.301 1.26 1.239 1.239 1.239 1.219 1.219 1.219 1.219 1.219 1.219 1.219 1.239 1.26 1.301 1.342 1.382 1.444 1.485 1.546 1.628 1.628 1.69 1.772 1.833 1.833 1.895 1.956 2.017 2.079 2.161 2.181 2.222 2.222 2.222 2.222 2.222 2.222 2.222 2.202 2.181 2.14 2.14 2.079 2.058 2.017 2.017 1.997 1.976 1.935 1.915 1.915 1.895 1.874 1.874 1.854 1.833 1.813 1.792 1.772 1.731 1.669 1.628 1.628 1.587 1.526 1.485 1.444 1.423 1.403 1.403 1.403 1.362 1.321 1.28 1.239 1.198 1.137 1.096 1.075 1.034 1.014 0.973 0.952 0.911 0.85 0.789 0.707 0.666 0.666 0.645 0.604 0.563 0.522 0.481 0.42 0.42 0.399 0.358 0.317 0.256 0.256 0.195 0.154 0.113 0.113 0.113 0.113 0.113 0.113 0.113 0.113 0.154 0.154 0.195 0.236 0.276 0.276 0.317 0.338 0.379 0.379 0.379 0.399 0.399 0.399 0.399 0.379 0.338 0.338 0.276 0.215 0.174 0.174 0.154 0.133 0.113 0.113 0.072 0.051 0.01 -0.01 -0.01 -0.01 0.072 0.133 0.195 0.236 0.276 0.276 0.297 0.317 0.338 0.358 0.358 0.379 0.42 0.44 0.44 0.461 0.461 0.461 0.481 0.481 0.481 0.481 0.481 0.481 0.481 0.481 0.461 0.461 0.44 0.399 0.399 0.358 0.358 0.338 0.276 0.195 0.154 0.113 0.051 0.01 0.01 -0.031 -0.051 -0.092 -0.154 -0.276 -0.358 -0.481 -0.584 -0.686 -0.809 -0.952 -1.096 -1.219 -1.219 -1.321 -1.423 -1.526 -1.608 -1.731 -1.731 -1.813 -1.895 -1.997 -2.058 -2.058 -2.079 -2.079 -2.079 -2.038 -1.935 -1.935 -1.813 -1.69 -1.608 -1.526 -1.464 -1.464 -1.342 -1.178 -1.075 -1.014 -0.952 -0.932 -0.932 -0.932 -0.932 -0.952 -0.993 -1.116 -1.116 -1.239 -1.362 -1.505 -1.649 -1.792 -1.874 -1.935 -1.956 -1.956 -1.956 -1.956 -1.956 -1.956 -1.956 -1.915 -1.854 -1.772 -1.649 -1.464 -1.464 -1.301 -1.178 -1.178 -1.055 -0.932 -0.829 -0.727 -0.604 -0.502 -0.44 -0.42 -0.399 -0.399 -0.399 -0.358 -0.338 -0.297 -0.236 -0.236 -0.195 -0.174 -0.154 -0.154 -0.154 -0.154 -0.154 -0.154 -0.154 -0.154 -0.154 -0.195 -0.256 -0.276 -0.317 -0.338 -0.358 -0.399 -0.42 -0.42 -0.502 -0.604 -0.727 -0.87 -0.87 -1.034 -1.178 -1.342 -1.505 -1.669 -1.792 -1.915 -2.017 -2.099 -2.099 -2.181 -2.202 -2.202 -2.222 -2.222 -2.222 -2.222 -2.181 -2.161 -2.058 -2.058 -1.935 -1.833 -1.833 -1.71 -1.608 -1.567 -1.505 -1.403 -1.403 -1.342 -1.239 -1.137 -1.096 -1.075 -1.075 -1.075 -1.075 -1.075 -1.096 -1.116 -1.116 -1.157 -1.198 -1.239 -1.301 -1.342 -1.382 -1.382 -1.444 -1.546 -1.649 -1.731 -1.731 -1.813 -1.895 -1.976 -2.038 -2.079 -2.14 -2.161 -2.181 -2.181 -2.181 -2.181 -2.161 -2.161 -2.14 -2.12 -2.099 -2.079 -2.058 -2.058 -2.038 -2.038 -2.017 -2.017 -2.017 -1.976 -1.956 -1.956 -1.956 -1.956 -1.915 -1.895 -1.874 -1.854 -1.833)) (quote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (list -1.813 -1.69 -1.69 -1.608 -1.485 -1.485 -1.362 -1.178 -0.952 -0.789 -0.666 -0.563 -0.44 -0.338 -0.195 -0.051 0.092 0.195 0.317 0.44 0.543 0.645 0.768 0.768 0.85 0.87 0.87 0.891 0.87 0.87 0.809 0.727 0.727 0.625 0.522 0.522 0.379 0.174 -0.031 -0.174 -0.317 -0.461 -0.461 -0.584 -0.707 -0.768 -0.789 -0.829 -0.85 -0.85 -0.85 -0.85 -0.829 -0.748 -0.625 -0.522 -0.42 -0.276 -0.133 -0.133 0.051 0.215 0.379 0.502 0.645 0.645 0.748 0.87 0.993 1.116 1.219 1.301 1.301 1.342 1.382 1.444 1.485 1.526 1.567 1.628 1.669 1.71 1.71 1.751 1.813 1.833 1.833 1.833 1.833 1.833 1.833 1.792 1.731 1.69 1.69 1.649 1.587 1.587 1.526 1.444 1.444 1.403 1.362 1.301 1.26 1.239 1.239 1.239 1.219 1.219 1.219 1.219 1.219 1.219 1.219 1.239 1.26 1.301 1.342 1.382 1.444 1.485 1.546 1.628 1.628 1.69 1.772 1.833 1.833 1.895 1.956 2.017 2.079 2.161 2.181 2.222 2.222 2.222 2.222 2.222 2.222 2.222 2.202 2.181 2.14 2.14 2.079 2.058 2.017 2.017 1.997 1.976 1.935 1.915 1.915 1.895 1.874 1.874 1.854 1.833 1.813 1.792 1.772 1.731 1.669 1.628 1.628 1.587 1.526 1.485 1.444 1.423 1.403 1.403 1.403 1.362 1.321 1.28 1.239 1.198 1.137 1.096 1.075 1.034 1.014 0.973 0.952 0.911 0.85 0.789 0.707 0.666 0.666 0.645 0.604 0.563 0.522 0.481 0.42 0.42 0.399 0.358 0.317 0.256 0.256 0.195 0.154 0.113 0.113 0.113 0.113 0.113 0.113 0.113 0.113 0.154 0.154 0.195 0.236 0.276 0.276 0.317 0.338 0.379 0.379 0.379 0.399 0.399 0.399 0.399 0.379 0.338 0.338 0.276 0.215 0.174 0.174 0.154 0.133 0.113 0.113 0.072 0.051 0.01 -0.01 -0.01 -0.01 0.072 0.133 0.195 0.236 0.276 0.276 0.297 0.317 0.338 0.358 0.358 0.379 0.42 0.44 0.44 0.461 0.461 0.461 0.481 0.481 0.481 0.481 0.481 0.481 0.481 0.481 0.461 0.461 0.44 0.399 0.399 0.358 0.358 0.338 0.276 0.195 0.154 0.113 0.051 0.01 0.01 -0.031 -0.051 -0.092 -0.154 -0.276 -0.358 -0.481 -0.584 -0.686 -0.809 -0.952 -1.096 -1.219 -1.219 -1.321 -1.423 -1.526 -1.608 -1.731 -1.731 -1.813 -1.895 -1.997 -2.058 -2.058 -2.079 -2.079 -2.079 -2.038 -1.935 -1.935 -1.813 -1.69 -1.608 -1.526 -1.464 -1.464 -1.342 -1.178 -1.075 -1.014 -0.952 -0.932 -0.932 -0.932 -0.932 -0.952 -0.993 -1.116 -1.116 -1.239 -1.362 -1.505 -1.649 -1.792 -1.874 -1.935 -1.956 -1.956 -1.956 -1.956 -1.956 -1.956 -1.956 -1.915 -1.854 -1.772 -1.649 -1.464 -1.464 -1.301 -1.178 -1.178 -1.055 -0.932 -0.829 -0.727 -0.604 -0.502 -0.44 -0.42 -0.399 -0.399 -0.399 -0.358 -0.338 -0.297 -0.236 -0.236 -0.195 -0.174 -0.154 -0.154 -0.154 -0.154 -0.154 -0.154 -0.154 -0.154 -0.154 -0.195 -0.256 -0.276 -0.317 -0.338 -0.358 -0.399 -0.42 -0.42 -0.502 -0.604 -0.727 -0.87 -0.87 -1.034 -1.178 -1.342 -1.505 -1.669 -1.792 -1.915 -2.017 -2.099 -2.099 -2.181 -2.202 -2.202 -2.222 -2.222 -2.222 -2.222 -2.181 -2.161 -2.058 -2.058 -1.935 -1.833 -1.833 -1.71 -1.608 -1.567 -1.505 -1.403 -1.403 -1.342 -1.239 -1.137 -1.096 -1.075 -1.075 -1.075 -1.075 -1.075 -1.096 -1.116 -1.116 -1.157 -1.198 -1.239 -1.301 -1.342 -1.382 -1.382 -1.444 -1.546 -1.649 -1.731 -1.731 -1.813 -1.895 -1.976 -2.038 -2.079 -2.14 -2.161 -2.181 -2.181 -2.181 -2.181 -2.161 -2.161 -2.14 -2.12 -2.099 -2.079 -2.058 -2.058 -2.038 -2.038 -2.017 -2.017 -2.017 -1.976 -1.956 -1.956 -1.956 -1.956 -1.915 -1.895 -1.874 -1.854 -1.833))) newobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (-0.413 -0.425 -0.449 -0.449 -0.509 -0.581 -0.665 -0.665 -0.749 -0.749 -0.833 -0.904 -0.904 -0.988 -0.988 -1.072 -1.144 -1.144 -1.228 -1.3 -1.3 -1.384 -1.456 -1.456 -1.503 -1.503 -1.503 -1.539 -1.551 -1.551 -1.551 -1.551 -1.539 -1.539 -1.491 -1.491 -1.491 -1.491 -1.491 -1.491 -1.491 -1.491 -1.479 -1.479 -1.479 -1.479 -1.479 -1.491 -1.491 -1.491 -1.491 -1.491 -1.491 -1.515 -1.515 -1.515 -1.539 -1.551 -1.575 -1.599 -1.599 -1.635 -1.659 -1.683 -1.683 -1.719 -1.767 -1.767 -1.791 -1.851 -1.851 -1.875 -1.923 -1.947 -1.983 -2.007 -2.031 -2.031 -2.066 -2.102 -2.102 -2.114 -2.126 -2.126 -2.126 -2.126 -2.126 -2.102 -2.066 -2.066 -1.995 -1.995 -1.935 -1.863 -1.863 -1.815 -1.779 -1.755 -1.743 -1.743 -1.719 -1.719 -1.707 -1.707 -1.707 -1.707 -1.707 -1.707 -1.719 -1.731 -1.731 -1.755 -1.755 -1.779 -1.779 -1.779 -1.803 -1.803 -1.803 -1.815 -1.815 -1.827 -1.827 -1.851 -1.863 -1.875 -1.875 -1.875 -1.875 -1.875 -1.875 -1.887 -1.887 -1.887 -1.887 -1.887 -1.887 -1.887 -1.887 -1.863 -1.863 -1.851 -1.851 -1.851 -1.803 -1.803 -1.779 -1.779 -1.755 -1.707 -1.623 -1.623 -1.563 -1.527 -1.527 -1.479 -1.479 -1.42 -1.348 -1.276 -1.276 -1.18 -1.096 -1.024 -0.976 -0.892 -0.845 -0.809 -0.809 -0.809 -0.833 -0.833 -0.892 -0.892 -0.964 -0.964 -1.048 -1.048 -1.144 -1.228 -1.228 -1.288 -1.288 -1.324 -1.372 -1.432 -1.456 -1.503 -1.575 -1.575 -1.635 -1.635 -1.671 -1.707 -1.707 -1.743 -1.779 -1.827 -1.875 -1.875 -1.911 -1.911 -1.935 -1.935 -1.959 -1.959 -1.983 -1.983 -1.995 -1.995 -1.995 -2.007 -2.007 -2.007 -2.007 -2.007 -1.995 -1.983 -1.947 -1.947 -1.875 -1.839 -1.839 -1.839 -1.827 -1.827 -1.827 -1.827 -1.827 -1.827 -1.827 -1.827 -1.827 -1.839 -1.863 -1.887 -1.923 -1.959 -1.995 -1.995 -2.007 -2.043 -2.078 -2.078 -2.102 -2.102 -2.138 -2.162 -2.174 -2.174 -2.186 -2.21 -2.21 -2.21 -2.21 -2.21 -2.222 -2.222 -2.222 -2.222 -2.222 -2.222 -2.21 -2.162 -2.162 -2.126 -2.09 -2.055 -2.007 -1.983 -1.959 -1.959 -1.911 -1.875 -1.815 -1.767 -1.707 -1.659 -1.659 -1.635 -1.611 -1.587 -1.563 -1.563 -1.551 -1.551 -1.527 -1.503 -1.503 -1.491 -1.491 -1.468 -1.444 -1.444 -1.408 -1.408 -1.384 -1.384 -1.372 -1.372 -1.336 -1.336 -1.312 -1.3 -1.288 -1.288 -1.288 -1.288 -1.276 -1.276 -1.276 -1.276 -1.264 -1.264 -1.264 -1.264 -1.264 -1.264 -1.264 -1.264 -1.264 -1.264 -1.264 -1.264 -1.264 -1.264 -1.252 -1.252 -1.204 -1.144 -1.144 -1.096 -1.096 -1.036 -0.94 -0.833 -0.725 -0.617 -0.473 -0.473 -0.305 -0.09 0.126 0.126 0.282 0.282 0.425 0.425 0.569 0.569 0.701 0.821 0.94 0.94 1.048 1.048 1.156 1.156 1.264 1.264 1.384 1.491 1.491 1.563 1.563 1.575 1.599 1.599 1.599 1.599 1.575 1.575 1.551 1.515 1.491 1.468 1.444 1.432 1.408 1.348 1.348 1.312 1.312 1.3 1.3 1.3 1.264 1.216 1.204 1.204 1.204 1.216 1.216 1.252 1.312 1.396 1.396 1.444 1.444 1.491 1.491 1.539 1.539 1.599 1.599 1.647 1.707 1.779 1.779 1.851 1.851 1.923 1.983 1.983 2.031 2.031 2.078 2.078 2.126 2.186 2.21 2.21 2.21 2.222 2.222 2.198 2.198 2.162 2.162 2.114 2.066 2.019 1.971 1.923 1.923 1.863 1.803 1.695 1.695 1.587 1.503 1.408 1.408 1.3 1.18 1.072 0.988 0.904 0.821 0.821 0.689 0.689 0.581 0.473 0.413 0.341 0.258 0.198 0.198 0.138 0.102 0.066 0.066 0.018 -0.018 -0.066 -0.066 -0.114 -0.114 -0.162 -0.198 -0.198 -0.234 -0.294 -0.294 -0.329 -0.365 -0.365 -0.425 -0.425 -0.473 -0.521 -0.533 -0.533 -0.545 -0.557 -0.557 -0.569 -0.581 -0.581)) (quote (3.932 3.87 3.87 3.839 3.824 3.824 3.808 3.808 3.808 3.824 3.839 3.839 3.87 3.901 3.963 3.979 4.021 4.083 4.089 4.12 4.167 4.183 4.204 4.204 4.205 4.195 4.226 4.165 4.114 4.058 4.058 4.018 3.957 3.941 3.86 3.779 3.764 3.713 3.673 3.673 3.643 3.612 3.582 3.562 3.562 3.557 3.526 3.527 3.527 3.522 3.512 3.528 3.517 3.548 3.595 3.6 3.647 3.667 3.647 3.637 3.652 3.648 3.627 3.638 3.654 3.633 3.66 3.706 3.732 3.758 3.805 3.815 3.805 3.785 3.775 3.765 3.745 3.745 3.719 3.683 3.637 3.58 3.57 3.493 3.421 3.333 3.256 3.189 3.169 3.138 3.102 3.04 2.937 2.793 2.793 2.649 2.5 2.48 2.346 2.237 2.197 2.104 1.991 1.847 1.723 1.574 1.471 1.362 1.234 1.064 0.956 0.838 0.73 0.699 0.606 0.493 0.416 0.323 0.226 0.097 -0.011 -0.114 -0.238 -0.367 -0.387 -0.531 -0.639 -0.758 -0.768 -0.845 -0.948 -1.041 -1.134 -1.247 -1.335 -1.412 -1.484 -1.54 -1.618 -1.664 -1.711 -1.767 -1.783 -1.793 -1.808 -1.808 -1.834 -1.834 -1.854 -1.864 -1.885 -1.885 -1.905 -1.905 -1.874 -1.874 -1.874 -1.874 -1.884 -1.904 -1.904 -1.924 -1.96 -2.022 -2.063 -2.139 -2.16 -2.211 -2.242 -2.267 -2.293 -2.308 -2.329 -2.329 -2.39 -2.406 -2.436 -2.467 -2.523 -2.543 -2.559 -2.6 -2.6 -2.631 -2.631 -2.646 -2.651 -2.647 -2.663 -2.709 -2.735 -2.766 -2.766 -2.761 -2.761 -2.767 -2.762 -2.767 -2.783 -2.783 -2.783 -2.783 -2.783 -2.767 -2.767 -2.736 -2.675 -2.644 -2.628 -2.623 -2.623 -2.617 -2.602 -2.597 -2.591 -2.591 -2.611 -2.611 -2.631 -2.615 -2.676 -2.695 -2.69 -2.69 -2.685 -2.685 -2.695 -2.674 -2.674 -2.7 -2.735 -2.787 -2.787 -2.828 -2.884 -2.929 -2.96 -3.006 -3.036 -3.036 -3.046 -3.077 -3.107 -3.107 -3.117 -3.102 -3.075 -3.024 -2.931 -2.822 -2.765 -2.719 -2.719 -2.698 -2.693 -2.662 -2.641 -2.641 -2.636 -2.63 -2.63 -2.62 -2.64 -2.69 -2.675 -2.695 -2.72 -2.745 -2.76 -2.791 -2.795 -2.733 -2.723 -2.707 -2.727 -2.711 -2.741 -2.73 -2.73 -2.741 -2.745 -2.735 -2.709 -2.693 -2.693 -2.678 -2.672 -2.672 -2.672 -2.672 -2.672 -2.698 -2.749 -2.764 -2.821 -2.852 -2.893 -2.909 -2.909 -2.909 -2.929 -2.929 -2.97 -2.98 -2.98 -2.99 -2.99 -3.0 -2.995 -2.974 -2.953 -2.922 -2.922 -2.886 -2.871 -2.881 -2.829 -2.782 -2.793 -2.756 -2.71 -2.704 -2.715 -2.725 -2.725 -2.765 -2.806 -2.775 -2.83 -2.906 -2.906 -2.977 -2.946 -2.991 -3.052 -3.102 -3.143 -3.193 -3.254 -3.254 -3.305 -3.314 -3.273 -3.242 -3.19 -3.159 -3.164 -3.164 -3.158 -3.128 -3.097 -3.05 -3.019 -2.988 -2.957 -2.911 -2.864 -2.864 -2.833 -2.833 -2.813 -2.757 -2.757 -2.722 -2.722 -2.702 -2.697 -2.697 -2.667 -2.646 -2.585 -2.585 -2.545 -2.463 -2.325 -2.223 -2.162 -2.034 -1.829 -1.594 -1.594 -1.394 -1.286 -1.137 -1.059 -0.962 -0.799 -0.616 -0.457 -0.309 -0.278 -0.156 -0.156 -0.035 0.107 0.239 0.239 0.319 0.273 0.266 0.204 0.285 0.208 0.257 0.195 0.235 0.305 0.371 0.371 0.477 0.508 0.589 0.717 0.748 0.818 0.865 1.002 1.002 1.14 1.313 1.435 1.598 1.598 1.761 1.884 1.954 2.001 2.103 2.118 2.23 2.332 2.403 2.484 2.551 2.597 2.679 2.73 2.771 2.802 2.868 2.924 2.954 2.954 3.015 3.055 3.086 3.096 3.106 3.116 3.116 3.157 3.172 3.223 3.29 3.398 3.398 3.454 3.526 3.604 3.666 3.712 3.789 3.836 3.877 3.892 3.908 3.923 3.933 3.964 3.964 3.974 3.974 3.974 3.974 3.974 3.985 3.979 3.979 3.989 3.974 3.969 3.979 3.979 3.963 3.963 3.963 3.963 3.963 3.948 3.948)) (quote (-2.266 -2.112 -2.112 -2.01 -1.856 -1.856 -1.703 -1.472 -1.19 -0.986 -0.832 -0.704 -0.55 -0.422 -0.243 -0.064 0.115 0.243 0.397 0.55 0.678 0.806 0.96 0.96 1.062 1.088 1.088 1.114 1.088 1.088 1.011 0.909 0.909 0.781 0.653 0.653 0.474 0.218 -0.038 -0.218 -0.397 -0.576 -0.576 -0.73 -0.883 -0.96 -0.986 -1.037 -1.062 -1.062 -1.062 -1.062 -1.037 -0.934 -0.781 -0.653 -0.525 -0.346 -0.166 -0.166 0.064 0.269 0.474 0.627 0.806 0.806 0.934 1.088 1.242 1.395 1.523 1.626 1.626 1.677 1.728 1.805 1.856 1.907 1.959 2.035 2.087 2.138 2.138 2.189 2.266 2.291 2.291 2.291 2.291 2.291 2.291 2.24 2.163 2.112 2.112 2.061 1.984 1.984 1.907 1.805 1.805 1.754 1.703 1.626 1.575 1.549 1.549 1.549 1.523 1.523 1.523 1.523 1.523 1.523 1.523 1.549 1.575 1.626 1.677 1.728 1.805 1.856 1.933 2.035 2.035 2.112 2.215 2.291 2.291 2.368 2.445 2.522 2.599 2.701 2.727 2.778 2.778 2.778 2.778 2.778 2.778 2.778 2.752 2.727 2.675 2.675 2.599 2.573 2.522 2.522 2.496 2.471 2.419 2.394 2.394 2.368 2.343 2.343 2.317 2.291 2.266 2.24 2.215 2.163 2.087 2.035 2.035 1.984 1.907 1.856 1.805 1.779 1.754 1.754 1.754 1.703 1.651 1.6 1.549 1.498 1.421 1.37 1.344 1.293 1.267 1.216 1.19 1.139 1.062 0.986 0.883 0.832 0.832 0.806 0.755 0.704 0.653 0.602 0.525 0.525 0.499 0.448 0.397 0.32 0.32 0.243 0.192 0.141 0.141 0.141 0.141 0.141 0.141 0.141 0.141 0.192 0.192 0.243 0.294 0.346 0.346 0.397 0.422 0.474 0.474 0.474 0.499 0.499 0.499 0.499 0.474 0.422 0.422 0.346 0.269 0.218 0.218 0.192 0.166 0.141 0.141 0.09 0.064 0.013 -0.013 -0.013 -0.013 0.09 0.166 0.243 0.294 0.346 0.346 0.371 0.397 0.422 0.448 0.448 0.474 0.525 0.55 0.55 0.576 0.576 0.576 0.602 0.602 0.602 0.602 0.602 0.602 0.602 0.602 0.576 0.576 0.55 0.499 0.499 0.448 0.448 0.422 0.346 0.243 0.192 0.141 0.064 0.013 0.013 -0.038 -0.064 -0.115 -0.192 -0.346 -0.448 -0.602 -0.73 -0.858 -1.011 -1.19 -1.37 -1.523 -1.523 -1.651 -1.779 -1.907 -2.01 -2.163 -2.163 -2.266 -2.368 -2.496 -2.573 -2.573 -2.599 -2.599 -2.599 -2.547 -2.419 -2.419 -2.266 -2.112 -2.01 -1.907 -1.831 -1.831 -1.677 -1.472 -1.344 -1.267 -1.19 -1.165 -1.165 -1.165 -1.165 -1.19 -1.242 -1.395 -1.395 -1.549 -1.703 -1.882 -2.061 -2.24 -2.343 -2.419 -2.445 -2.445 -2.445 -2.445 -2.445 -2.445 -2.445 -2.394 -2.317 -2.215 -2.061 -1.831 -1.831 -1.626 -1.472 -1.472 -1.318 -1.165 -1.037 -0.909 -0.755 -0.627 -0.55 -0.525 -0.499 -0.499 -0.499 -0.448 -0.422 -0.371 -0.294 -0.294 -0.243 -0.218 -0.192 -0.192 -0.192 -0.192 -0.192 -0.192 -0.192 -0.192 -0.192 -0.243 -0.32 -0.346 -0.397 -0.422 -0.448 -0.499 -0.525 -0.525 -0.627 -0.755 -0.909 -1.088 -1.088 -1.293 -1.472 -1.677 -1.882 -2.087 -2.24 -2.394 -2.522 -2.624 -2.624 -2.727 -2.752 -2.752 -2.778 -2.778 -2.778 -2.778 -2.727 -2.701 -2.573 -2.573 -2.419 -2.291 -2.291 -2.138 -2.01 -1.959 -1.882 -1.754 -1.754 -1.677 -1.549 -1.421 -1.37 -1.344 -1.344 -1.344 -1.344 -1.344 -1.37 -1.395 -1.395 -1.446 -1.498 -1.549 -1.626 -1.677 -1.728 -1.728 -1.805 -1.933 -2.061 -2.163 -2.163 -2.266 -2.368 -2.471 -2.547 -2.599 -2.675 -2.701 -2.727 -2.727 -2.727 -2.727 -2.701 -2.701 -2.675 -2.65 -2.624 -2.599 -2.573 -2.573 -2.547 -2.547 -2.522 -2.522 -2.522 -2.471 -2.445 -2.445 -2.445 -2.445 -2.394 -2.368 -2.343 -2.317 -2.291)) (quote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (list -2.266 -2.112 -2.112 -2.01 -1.856 -1.856 -1.703 -1.472 -1.19 -0.986 -0.832 -0.704 -0.55 -0.422 -0.243 -0.064 0.115 0.243 0.397 0.55 0.678 0.806 0.96 0.96 1.062 1.088 1.088 1.114 1.088 1.088 1.011 0.909 0.909 0.781 0.653 0.653 0.474 0.218 -0.038 -0.218 -0.397 -0.576 -0.576 -0.73 -0.883 -0.96 -0.986 -1.037 -1.062 -1.062 -1.062 -1.062 -1.037 -0.934 -0.781 -0.653 -0.525 -0.346 -0.166 -0.166 0.064 0.269 0.474 0.627 0.806 0.806 0.934 1.088 1.242 1.395 1.523 1.626 1.626 1.677 1.728 1.805 1.856 1.907 1.959 2.035 2.087 2.138 2.138 2.189 2.266 2.291 2.291 2.291 2.291 2.291 2.291 2.24 2.163 2.112 2.112 2.061 1.984 1.984 1.907 1.805 1.805 1.754 1.703 1.626 1.575 1.549 1.549 1.549 1.523 1.523 1.523 1.523 1.523 1.523 1.523 1.549 1.575 1.626 1.677 1.728 1.805 1.856 1.933 2.035 2.035 2.112 2.215 2.291 2.291 2.368 2.445 2.522 2.599 2.701 2.727 2.778 2.778 2.778 2.778 2.778 2.778 2.778 2.752 2.727 2.675 2.675 2.599 2.573 2.522 2.522 2.496 2.471 2.419 2.394 2.394 2.368 2.343 2.343 2.317 2.291 2.266 2.24 2.215 2.163 2.087 2.035 2.035 1.984 1.907 1.856 1.805 1.779 1.754 1.754 1.754 1.703 1.651 1.6 1.549 1.498 1.421 1.37 1.344 1.293 1.267 1.216 1.19 1.139 1.062 0.986 0.883 0.832 0.832 0.806 0.755 0.704 0.653 0.602 0.525 0.525 0.499 0.448 0.397 0.32 0.32 0.243 0.192 0.141 0.141 0.141 0.141 0.141 0.141 0.141 0.141 0.192 0.192 0.243 0.294 0.346 0.346 0.397 0.422 0.474 0.474 0.474 0.499 0.499 0.499 0.499 0.474 0.422 0.422 0.346 0.269 0.218 0.218 0.192 0.166 0.141 0.141 0.09 0.064 0.013 -0.013 -0.013 -0.013 0.09 0.166 0.243 0.294 0.346 0.346 0.371 0.397 0.422 0.448 0.448 0.474 0.525 0.55 0.55 0.576 0.576 0.576 0.602 0.602 0.602 0.602 0.602 0.602 0.602 0.602 0.576 0.576 0.55 0.499 0.499 0.448 0.448 0.422 0.346 0.243 0.192 0.141 0.064 0.013 0.013 -0.038 -0.064 -0.115 -0.192 -0.346 -0.448 -0.602 -0.73 -0.858 -1.011 -1.19 -1.37 -1.523 -1.523 -1.651 -1.779 -1.907 -2.01 -2.163 -2.163 -2.266 -2.368 -2.496 -2.573 -2.573 -2.599 -2.599 -2.599 -2.547 -2.419 -2.419 -2.266 -2.112 -2.01 -1.907 -1.831 -1.831 -1.677 -1.472 -1.344 -1.267 -1.19 -1.165 -1.165 -1.165 -1.165 -1.19 -1.242 -1.395 -1.395 -1.549 -1.703 -1.882 -2.061 -2.24 -2.343 -2.419 -2.445 -2.445 -2.445 -2.445 -2.445 -2.445 -2.445 -2.394 -2.317 -2.215 -2.061 -1.831 -1.831 -1.626 -1.472 -1.472 -1.318 -1.165 -1.037 -0.909 -0.755 -0.627 -0.55 -0.525 -0.499 -0.499 -0.499 -0.448 -0.422 -0.371 -0.294 -0.294 -0.243 -0.218 -0.192 -0.192 -0.192 -0.192 -0.192 -0.192 -0.192 -0.192 -0.192 -0.243 -0.32 -0.346 -0.397 -0.422 -0.448 -0.499 -0.525 -0.525 -0.627 -0.755 -0.909 -1.088 -1.088 -1.293 -1.472 -1.677 -1.882 -2.087 -2.24 -2.394 -2.522 -2.624 -2.624 -2.727 -2.752 -2.752 -2.778 -2.778 -2.778 -2.778 -2.727 -2.701 -2.573 -2.573 -2.419 -2.291 -2.291 -2.138 -2.01 -1.959 -1.882 -1.754 -1.754 -1.677 -1.549 -1.421 -1.37 -1.344 -1.344 -1.344 -1.344 -1.344 -1.37 -1.395 -1.395 -1.446 -1.498 -1.549 -1.626 -1.677 -1.728 -1.728 -1.805 -1.933 -2.061 -2.163 -2.163 -2.266 -2.368 -2.471 -2.547 -2.599 -2.675 -2.701 -2.727 -2.727 -2.727 -2.727 -2.701 -2.701 -2.675 -2.65 -2.624 -2.599 -2.573 -2.573 -2.547 -2.547 -2.522 -2.522 -2.522 -2.471 -2.445 -2.445 -2.445 -2.445 -2.394 -2.368 -2.343 -2.317 -2.291))) newobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (-0.31 -0.319 -0.337 -0.337 -0.382 -0.436 -0.499 -0.499 -0.562 -0.562 -0.624 -0.678 -0.678 -0.741 -0.741 -0.804 -0.858 -0.858 -0.921 -0.975 -0.975 -1.038 -1.092 -1.092 -1.128 -1.128 -1.128 -1.155 -1.164 -1.164 -1.164 -1.164 -1.155 -1.155 -1.119 -1.119 -1.119 -1.119 -1.119 -1.119 -1.119 -1.119 -1.11 -1.11 -1.11 -1.11 -1.11 -1.119 -1.119 -1.119 -1.119 -1.119 -1.119 -1.137 -1.137 -1.137 -1.155 -1.164 -1.181 -1.199 -1.199 -1.226 -1.244 -1.262 -1.262 -1.289 -1.325 -1.325 -1.343 -1.388 -1.388 -1.406 -1.442 -1.46 -1.487 -1.505 -1.523 -1.523 -1.55 -1.577 -1.577 -1.586 -1.595 -1.595 -1.595 -1.595 -1.595 -1.577 -1.55 -1.55 -1.496 -1.496 -1.451 -1.397 -1.397 -1.361 -1.334 -1.316 -1.307 -1.307 -1.289 -1.289 -1.28 -1.28 -1.28 -1.28 -1.28 -1.28 -1.289 -1.298 -1.298 -1.316 -1.316 -1.334 -1.334 -1.334 -1.352 -1.352 -1.352 -1.361 -1.361 -1.37 -1.37 -1.388 -1.397 -1.406 -1.406 -1.406 -1.406 -1.406 -1.406 -1.415 -1.415 -1.415 -1.415 -1.415 -1.415 -1.415 -1.415 -1.397 -1.397 -1.388 -1.388 -1.388 -1.352 -1.352 -1.334 -1.334 -1.316 -1.28 -1.217 -1.217 -1.173 -1.146 -1.146 -1.11 -1.11 -1.065 -1.011 -0.957 -0.957 -0.885 -0.822 -0.768 -0.732 -0.669 -0.633 -0.606 -0.606 -0.606 -0.624 -0.624 -0.669 -0.669 -0.723 -0.723 -0.786 -0.786 -0.858 -0.921 -0.921 -0.966 -0.966 -0.993 -1.029 -1.074 -1.092 -1.128 -1.181 -1.181 -1.226 -1.226 -1.253 -1.28 -1.28 -1.307 -1.334 -1.37 -1.406 -1.406 -1.433 -1.433 -1.451 -1.451 -1.469 -1.469 -1.487 -1.487 -1.496 -1.496 -1.496 -1.505 -1.505 -1.505 -1.505 -1.505 -1.496 -1.487 -1.46 -1.46 -1.406 -1.379 -1.379 -1.379 -1.37 -1.37 -1.37 -1.37 -1.37 -1.37 -1.37 -1.37 -1.37 -1.379 -1.397 -1.415 -1.442 -1.469 -1.496 -1.496 -1.505 -1.532 -1.559 -1.559 -1.577 -1.577 -1.604 -1.622 -1.631 -1.631 -1.64 -1.658 -1.658 -1.658 -1.658 -1.658 -1.667 -1.667 -1.667 -1.667 -1.667 -1.667 -1.658 -1.622 -1.622 -1.595 -1.568 -1.541 -1.505 -1.487 -1.469 -1.469 -1.433 -1.406 -1.361 -1.325 -1.28 -1.244 -1.244 -1.226 -1.208 -1.19 -1.173 -1.173 -1.164 -1.164 -1.146 -1.128 -1.128 -1.119 -1.119 -1.101 -1.083 -1.083 -1.056 -1.056 -1.038 -1.038 -1.029 -1.029 -1.002 -1.002 -0.984 -0.975 -0.966 -0.966 -0.966 -0.966 -0.957 -0.957 -0.957 -0.957 -0.948 -0.948 -0.948 -0.948 -0.948 -0.948 -0.948 -0.948 -0.948 -0.948 -0.948 -0.948 -0.948 -0.948 -0.939 -0.939 -0.903 -0.858 -0.858 -0.822 -0.822 -0.777 -0.705 -0.624 -0.544 -0.463 -0.355 -0.355 -0.229 -0.067 0.094 0.094 0.211 0.211 0.319 0.319 0.427 0.427 0.526 0.615 0.705 0.705 0.786 0.786 0.867 0.867 0.948 0.948 1.038 1.119 1.119 1.173 1.173 1.181 1.199 1.199 1.199 1.199 1.181 1.181 1.164 1.137 1.119 1.101 1.083 1.074 1.056 1.011 1.011 0.984 0.984 0.975 0.975 0.975 0.948 0.912 0.903 0.903 0.903 0.912 0.912 0.939 0.984 1.047 1.047 1.083 1.083 1.119 1.119 1.155 1.155 1.199 1.199 1.235 1.28 1.334 1.334 1.388 1.388 1.442 1.487 1.487 1.523 1.523 1.559 1.559 1.595 1.64 1.658 1.658 1.658 1.667 1.667 1.649 1.649 1.622 1.622 1.586 1.55 1.514 1.478 1.442 1.442 1.397 1.352 1.271 1.271 1.19 1.128 1.056 1.056 0.975 0.885 0.804 0.741 0.678 0.615 0.615 0.517 0.517 0.436 0.355 0.31 0.256 0.193 0.148 0.148 0.103 0.076 0.049 0.049 0.013 -0.013 -0.049 -0.049 -0.085 -0.085 -0.121 -0.148 -0.148 -0.175 -0.22 -0.22 -0.247 -0.274 -0.274 -0.319 -0.319 -0.355 -0.391 -0.4 -0.4 -0.409 -0.418 -0.418 -0.427 -0.436 -0.436)) (quote (3.719 3.644 3.644 3.607 3.589 3.589 3.57 3.57 3.57 3.589 3.607 3.607 3.644 3.682 3.756 3.789 3.848 3.922 3.947 3.999 4.055 4.088 4.132 4.132 4.146 4.138 4.175 4.13 4.092 4.043 4.043 4.013 3.967 3.948 3.888 3.827 3.808 3.77 3.74 3.74 3.717 3.694 3.672 3.657 3.657 3.66 3.637 3.651 3.651 3.655 3.647 3.666 3.658 3.695 3.751 3.762 3.818 3.847 3.832 3.825 3.843 3.847 3.831 3.853 3.872 3.857 3.897 3.953 3.993 4.034 4.09 4.112 4.104 4.089 4.081 4.074 4.058 4.058 4.032 3.999 3.943 3.88 3.872 3.779 3.697 3.597 3.504 3.433 3.418 3.381 3.347 3.273 3.154 2.99 2.99 2.826 2.651 2.636 2.48 2.35 2.32 2.208 2.082 1.918 1.769 1.595 1.476 1.346 1.2 1.011 0.881 0.757 0.627 0.605 0.493 0.367 0.274 0.162 0.054 -0.091 -0.221 -0.34 -0.488 -0.634 -0.649 -0.813 -0.943 -1.08 -1.088 -1.181 -1.3 -1.411 -1.522 -1.649 -1.75 -1.842 -1.924 -1.988 -2.08 -2.136 -2.192 -2.255 -2.274 -2.281 -2.3 -2.3 -2.326 -2.326 -2.341 -2.349 -2.364 -2.364 -2.379 -2.379 -2.342 -2.342 -2.342 -2.342 -2.35 -2.365 -2.365 -2.38 -2.414 -2.474 -2.518 -2.597 -2.612 -2.664 -2.702 -2.728 -2.754 -2.772 -2.788 -2.788 -2.848 -2.866 -2.889 -2.926 -2.975 -2.99 -3.009 -3.053 -3.053 -3.091 -3.091 -3.109 -3.12 -3.124 -3.156 -3.212 -3.253 -3.29 -3.29 -3.293 -3.293 -3.304 -3.308 -3.319 -3.337 -3.337 -3.337 -3.337 -3.337 -3.319 -3.319 -3.281 -3.207 -3.17 -3.151 -3.14 -3.14 -3.129 -3.111 -3.1 -3.089 -3.089 -3.104 -3.09 -3.091 -3.072 -3.118 -3.118 -3.107 -3.107 -3.096 -3.096 -3.104 -3.075 -3.075 -3.101 -3.134 -3.187 -3.187 -3.231 -3.28 -3.322 -3.345 -3.386 -3.409 -3.409 -3.416 -3.439 -3.462 -3.462 -3.469 -3.451 -3.41 -3.344 -3.232 -3.102 -3.025 -2.969 -2.969 -2.939 -2.928 -2.891 -2.862 -2.862 -2.851 -2.84 -2.84 -2.818 -2.833 -2.871 -2.852 -2.868 -2.879 -2.891 -2.895 -2.918 -2.915 -2.84 -2.818 -2.786 -2.801 -2.768 -2.791 -2.769 -2.769 -2.776 -2.773 -2.751 -2.71 -2.692 -2.692 -2.673 -2.662 -2.662 -2.662 -2.662 -2.662 -2.688 -2.741 -2.759 -2.823 -2.86 -2.904 -2.923 -2.923 -2.923 -2.938 -2.938 -2.983 -2.991 -2.991 -2.998 -2.998 -3.006 -2.995 -2.965 -2.936 -2.899 -2.899 -2.85 -2.832 -2.839 -2.773 -2.717 -2.725 -2.677 -2.621 -2.61 -2.617 -2.625 -2.625 -2.655 -2.686 -2.649 -2.683 -2.733 -2.733 -2.786 -2.749 -2.776 -2.822 -2.859 -2.89 -2.928 -2.973 -2.973 -3.011 -3.005 -2.945 -2.908 -2.842 -2.805 -2.801 -2.801 -2.79 -2.753 -2.716 -2.66 -2.623 -2.586 -2.549 -2.493 -2.437 -2.437 -2.4 -2.4 -2.385 -2.336 -2.336 -2.317 -2.317 -2.301 -2.305 -2.305 -2.282 -2.267 -2.207 -2.207 -2.177 -2.101 -1.963 -1.858 -1.813 -1.682 -1.473 -1.241 -1.241 -1.028 -0.898 -0.738 -0.645 -0.551 -0.401 -0.236 -0.082 0.064 0.101 0.207 0.207 0.298 0.404 0.503 0.503 0.549 0.494 0.454 0.38 0.44 0.347 0.357 0.282 0.284 0.323 0.365 0.365 0.452 0.489 0.55 0.666 0.703 0.757 0.812 0.936 0.936 1.06 1.218 1.324 1.474 1.474 1.624 1.73 1.783 1.838 1.929 1.947 2.045 2.135 2.189 2.264 2.335 2.39 2.465 2.518 2.548 2.585 2.642 2.691 2.713 2.713 2.759 2.789 2.812 2.82 2.827 2.835 2.835 2.865 2.884 2.936 3.007 3.123 3.123 3.186 3.268 3.361 3.435 3.491 3.584 3.639 3.684 3.703 3.721 3.74 3.747 3.785 3.785 3.792 3.792 3.792 3.792 3.792 3.8 3.789 3.789 3.796 3.778 3.767 3.774 3.774 3.756 3.756 3.756 3.756 3.756 3.737 3.737)) (quote (-2.719 -2.535 -2.535 -2.412 -2.227 -2.227 -2.043 -1.767 -1.429 -1.183 -0.998 -0.845 -0.661 -0.507 -0.292 -0.077 0.138 0.292 0.476 0.661 0.814 0.968 1.152 1.152 1.275 1.306 1.306 1.336 1.306 1.306 1.214 1.091 1.091 0.937 0.783 0.783 0.568 0.261 -0.046 -0.261 -0.476 -0.691 -0.691 -0.876 -1.06 -1.152 -1.183 -1.244 -1.275 -1.275 -1.275 -1.275 -1.244 -1.121 -0.937 -0.783 -0.63 -0.415 -0.2 -0.2 0.077 0.323 0.568 0.753 0.968 0.968 1.121 1.306 1.49 1.674 1.828 1.951 1.951 2.012 2.074 2.166 2.227 2.289 2.35 2.442 2.504 2.565 2.565 2.627 2.719 2.75 2.75 2.75 2.75 2.75 2.75 2.688 2.596 2.535 2.535 2.473 2.381 2.381 2.289 2.166 2.166 2.104 2.043 1.951 1.889 1.859 1.859 1.859 1.828 1.828 1.828 1.828 1.828 1.828 1.828 1.859 1.889 1.951 2.012 2.074 2.166 2.227 2.32 2.442 2.442 2.535 2.657 2.75 2.75 2.842 2.934 3.026 3.118 3.241 3.272 3.333 3.333 3.333 3.333 3.333 3.333 3.333 3.303 3.272 3.21 3.21 3.118 3.088 3.026 3.026 2.995 2.965 2.903 2.873 2.873 2.842 2.811 2.811 2.78 2.75 2.719 2.688 2.657 2.596 2.504 2.442 2.442 2.381 2.289 2.227 2.166 2.135 2.104 2.104 2.104 2.043 1.982 1.92 1.859 1.797 1.705 1.644 1.613 1.551 1.521 1.459 1.429 1.367 1.275 1.183 1.06 0.998 0.998 0.968 0.906 0.845 0.783 0.722 0.63 0.63 0.599 0.538 0.476 0.384 0.384 0.292 0.23 0.169 0.169 0.169 0.169 0.169 0.169 0.169 0.169 0.23 0.23 0.292 0.353 0.415 0.415 0.476 0.507 0.568 0.568 0.568 0.599 0.599 0.599 0.599 0.568 0.507 0.507 0.415 0.323 0.261 0.261 0.23 0.2 0.169 0.169 0.108 0.077 0.015 -0.015 -0.015 -0.015 0.108 0.2 0.292 0.353 0.415 0.415 0.445 0.476 0.507 0.538 0.538 0.568 0.63 0.661 0.661 0.691 0.691 0.691 0.722 0.722 0.722 0.722 0.722 0.722 0.722 0.722 0.691 0.691 0.661 0.599 0.599 0.538 0.538 0.507 0.415 0.292 0.23 0.169 0.077 0.015 0.015 -0.046 -0.077 -0.138 -0.23 -0.415 -0.538 -0.722 -0.876 -1.029 -1.214 -1.429 -1.644 -1.828 -1.828 -1.982 -2.135 -2.289 -2.412 -2.596 -2.596 -2.719 -2.842 -2.995 -3.088 -3.088 -3.118 -3.118 -3.118 -3.057 -2.903 -2.903 -2.719 -2.535 -2.412 -2.289 -2.197 -2.197 -2.012 -1.767 -1.613 -1.521 -1.429 -1.398 -1.398 -1.398 -1.398 -1.429 -1.49 -1.674 -1.674 -1.859 -2.043 -2.258 -2.473 -2.688 -2.811 -2.903 -2.934 -2.934 -2.934 -2.934 -2.934 -2.934 -2.934 -2.873 -2.78 -2.657 -2.473 -2.197 -2.197 -1.951 -1.767 -1.767 -1.582 -1.398 -1.244 -1.091 -0.906 -0.753 -0.661 -0.63 -0.599 -0.599 -0.599 -0.538 -0.507 -0.445 -0.353 -0.353 -0.292 -0.261 -0.23 -0.23 -0.23 -0.23 -0.23 -0.23 -0.23 -0.23 -0.23 -0.292 -0.384 -0.415 -0.476 -0.507 -0.538 -0.599 -0.63 -0.63 -0.753 -0.906 -1.091 -1.306 -1.306 -1.551 -1.767 -2.012 -2.258 -2.504 -2.688 -2.873 -3.026 -3.149 -3.149 -3.272 -3.303 -3.303 -3.333 -3.333 -3.333 -3.333 -3.272 -3.241 -3.088 -3.088 -2.903 -2.75 -2.75 -2.565 -2.412 -2.35 -2.258 -2.104 -2.104 -2.012 -1.859 -1.705 -1.644 -1.613 -1.613 -1.613 -1.613 -1.613 -1.644 -1.674 -1.674 -1.736 -1.797 -1.859 -1.951 -2.012 -2.074 -2.074 -2.166 -2.32 -2.473 -2.596 -2.596 -2.719 -2.842 -2.965 -3.057 -3.118 -3.21 -3.241 -3.272 -3.272 -3.272 -3.272 -3.241 -3.241 -3.21 -3.18 -3.149 -3.118 -3.088 -3.088 -3.057 -3.057 -3.026 -3.026 -3.026 -2.965 -2.934 -2.934 -2.934 -2.934 -2.873 -2.842 -2.811 -2.78 -2.75)) (quote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (list -2.719 -2.535 -2.535 -2.412 -2.227 -2.227 -2.043 -1.767 -1.429 -1.183 -0.998 -0.845 -0.661 -0.507 -0.292 -0.077 0.138 0.292 0.476 0.661 0.814 0.968 1.152 1.152 1.275 1.306 1.306 1.336 1.306 1.306 1.214 1.091 1.091 0.937 0.783 0.783 0.568 0.261 -0.046 -0.261 -0.476 -0.691 -0.691 -0.876 -1.06 -1.152 -1.183 -1.244 -1.275 -1.275 -1.275 -1.275 -1.244 -1.121 -0.937 -0.783 -0.63 -0.415 -0.2 -0.2 0.077 0.323 0.568 0.753 0.968 0.968 1.121 1.306 1.49 1.674 1.828 1.951 1.951 2.012 2.074 2.166 2.227 2.289 2.35 2.442 2.504 2.565 2.565 2.627 2.719 2.75 2.75 2.75 2.75 2.75 2.75 2.688 2.596 2.535 2.535 2.473 2.381 2.381 2.289 2.166 2.166 2.104 2.043 1.951 1.889 1.859 1.859 1.859 1.828 1.828 1.828 1.828 1.828 1.828 1.828 1.859 1.889 1.951 2.012 2.074 2.166 2.227 2.32 2.442 2.442 2.535 2.657 2.75 2.75 2.842 2.934 3.026 3.118 3.241 3.272 3.333 3.333 3.333 3.333 3.333 3.333 3.333 3.303 3.272 3.21 3.21 3.118 3.088 3.026 3.026 2.995 2.965 2.903 2.873 2.873 2.842 2.811 2.811 2.78 2.75 2.719 2.688 2.657 2.596 2.504 2.442 2.442 2.381 2.289 2.227 2.166 2.135 2.104 2.104 2.104 2.043 1.982 1.92 1.859 1.797 1.705 1.644 1.613 1.551 1.521 1.459 1.429 1.367 1.275 1.183 1.06 0.998 0.998 0.968 0.906 0.845 0.783 0.722 0.63 0.63 0.599 0.538 0.476 0.384 0.384 0.292 0.23 0.169 0.169 0.169 0.169 0.169 0.169 0.169 0.169 0.23 0.23 0.292 0.353 0.415 0.415 0.476 0.507 0.568 0.568 0.568 0.599 0.599 0.599 0.599 0.568 0.507 0.507 0.415 0.323 0.261 0.261 0.23 0.2 0.169 0.169 0.108 0.077 0.015 -0.015 -0.015 -0.015 0.108 0.2 0.292 0.353 0.415 0.415 0.445 0.476 0.507 0.538 0.538 0.568 0.63 0.661 0.661 0.691 0.691 0.691 0.722 0.722 0.722 0.722 0.722 0.722 0.722 0.722 0.691 0.691 0.661 0.599 0.599 0.538 0.538 0.507 0.415 0.292 0.23 0.169 0.077 0.015 0.015 -0.046 -0.077 -0.138 -0.23 -0.415 -0.538 -0.722 -0.876 -1.029 -1.214 -1.429 -1.644 -1.828 -1.828 -1.982 -2.135 -2.289 -2.412 -2.596 -2.596 -2.719 -2.842 -2.995 -3.088 -3.088 -3.118 -3.118 -3.118 -3.057 -2.903 -2.903 -2.719 -2.535 -2.412 -2.289 -2.197 -2.197 -2.012 -1.767 -1.613 -1.521 -1.429 -1.398 -1.398 -1.398 -1.398 -1.429 -1.49 -1.674 -1.674 -1.859 -2.043 -2.258 -2.473 -2.688 -2.811 -2.903 -2.934 -2.934 -2.934 -2.934 -2.934 -2.934 -2.934 -2.873 -2.78 -2.657 -2.473 -2.197 -2.197 -1.951 -1.767 -1.767 -1.582 -1.398 -1.244 -1.091 -0.906 -0.753 -0.661 -0.63 -0.599 -0.599 -0.599 -0.538 -0.507 -0.445 -0.353 -0.353 -0.292 -0.261 -0.23 -0.23 -0.23 -0.23 -0.23 -0.23 -0.23 -0.23 -0.23 -0.292 -0.384 -0.415 -0.476 -0.507 -0.538 -0.599 -0.63 -0.63 -0.753 -0.906 -1.091 -1.306 -1.306 -1.551 -1.767 -2.012 -2.258 -2.504 -2.688 -2.873 -3.026 -3.149 -3.149 -3.272 -3.303 -3.303 -3.333 -3.333 -3.333 -3.333 -3.272 -3.241 -3.088 -3.088 -2.903 -2.75 -2.75 -2.565 -2.412 -2.35 -2.258 -2.104 -2.104 -2.012 -1.859 -1.705 -1.644 -1.613 -1.613 -1.613 -1.613 -1.613 -1.644 -1.674 -1.674 -1.736 -1.797 -1.859 -1.951 -2.012 -2.074 -2.074 -2.166 -2.32 -2.473 -2.596 -2.596 -2.719 -2.842 -2.965 -3.057 -3.118 -3.21 -3.241 -3.272 -3.272 -3.272 -3.272 -3.241 -3.241 -3.21 -3.18 -3.149 -3.118 -3.088 -3.088 -3.057 -3.057 -3.026 -3.026 -3.026 -2.965 -2.934 -2.934 -2.934 -2.934 -2.873 -2.842 -2.811 -2.78 -2.75))) newobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (-0.207 -0.213 -0.225 -0.225 -0.255 -0.291 -0.332 -0.332 -0.374 -0.374 -0.416 -0.452 -0.452 -0.494 -0.494 -0.536 -0.572 -0.572 -0.614 -0.65 -0.65 -0.692 -0.728 -0.728 -0.752 -0.752 -0.752 -0.77 -0.776 -0.776 -0.776 -0.776 -0.77 -0.77 -0.746 -0.746 -0.746 -0.746 -0.746 -0.746 -0.746 -0.746 -0.74 -0.74 -0.74 -0.74 -0.74 -0.746 -0.746 -0.746 -0.746 -0.746 -0.746 -0.758 -0.758 -0.758 -0.77 -0.776 -0.788 -0.8 -0.8 -0.818 -0.83 -0.842 -0.842 -0.86 -0.883 -0.883 -0.895 -0.925 -0.925 -0.937 -0.961 -0.973 -0.991 -1.003 -1.015 -1.015 -1.033 -1.051 -1.051 -1.057 -1.063 -1.063 -1.063 -1.063 -1.063 -1.051 -1.033 -1.033 -0.997 -0.997 -0.967 -0.931 -0.931 -0.907 -0.889 -0.878 -0.872 -0.872 -0.86 -0.86 -0.854 -0.854 -0.854 -0.854 -0.854 -0.854 -0.86 -0.866 -0.866 -0.878 -0.878 -0.889 -0.889 -0.889 -0.901 -0.901 -0.901 -0.907 -0.907 -0.913 -0.913 -0.925 -0.931 -0.937 -0.937 -0.937 -0.937 -0.937 -0.937 -0.943 -0.943 -0.943 -0.943 -0.943 -0.943 -0.943 -0.943 -0.931 -0.931 -0.925 -0.925 -0.925 -0.901 -0.901 -0.889 -0.889 -0.878 -0.854 -0.812 -0.812 -0.782 -0.764 -0.764 -0.74 -0.74 -0.71 -0.674 -0.638 -0.638 -0.59 -0.548 -0.512 -0.488 -0.446 -0.422 -0.404 -0.404 -0.404 -0.416 -0.416 -0.446 -0.446 -0.482 -0.482 -0.524 -0.524 -0.572 -0.614 -0.614 -0.644 -0.644 -0.662 -0.686 -0.716 -0.728 -0.752 -0.788 -0.788 -0.818 -0.818 -0.836 -0.854 -0.854 -0.872 -0.889 -0.913 -0.937 -0.937 -0.955 -0.955 -0.967 -0.967 -0.979 -0.979 -0.991 -0.991 -0.997 -0.997 -0.997 -1.003 -1.003 -1.003 -1.003 -1.003 -0.997 -0.991 -0.973 -0.973 -0.937 -0.919 -0.919 -0.919 -0.913 -0.913 -0.913 -0.913 -0.913 -0.913 -0.913 -0.913 -0.913 -0.919 -0.931 -0.943 -0.961 -0.979 -0.997 -0.997 -1.003 -1.021 -1.039 -1.039 -1.051 -1.051 -1.069 -1.081 -1.087 -1.087 -1.093 -1.105 -1.105 -1.105 -1.105 -1.105 -1.111 -1.111 -1.111 -1.111 -1.111 -1.111 -1.105 -1.081 -1.081 -1.063 -1.045 -1.027 -1.003 -0.991 -0.979 -0.979 -0.955 -0.937 -0.907 -0.883 -0.854 -0.83 -0.83 -0.818 -0.806 -0.794 -0.782 -0.782 -0.776 -0.776 -0.764 -0.752 -0.752 -0.746 -0.746 -0.734 -0.722 -0.722 -0.704 -0.704 -0.692 -0.692 -0.686 -0.686 -0.668 -0.668 -0.656 -0.65 -0.644 -0.644 -0.644 -0.644 -0.638 -0.638 -0.638 -0.638 -0.632 -0.632 -0.632 -0.632 -0.632 -0.632 -0.632 -0.632 -0.632 -0.632 -0.632 -0.632 -0.632 -0.632 -0.626 -0.626 -0.602 -0.572 -0.572 -0.548 -0.548 -0.518 -0.47 -0.416 -0.362 -0.308 -0.237 -0.237 -0.153 -0.045 0.063 0.063 0.141 0.141 0.213 0.213 0.285 0.285 0.35 0.41 0.47 0.47 0.524 0.524 0.578 0.578 0.632 0.632 0.692 0.746 0.746 0.782 0.782 0.788 0.8 0.8 0.8 0.8 0.788 0.788 0.776 0.758 0.746 0.734 0.722 0.716 0.704 0.674 0.674 0.656 0.656 0.65 0.65 0.65 0.632 0.608 0.602 0.602 0.602 0.608 0.608 0.626 0.656 0.698 0.698 0.722 0.722 0.746 0.746 0.77 0.77 0.8 0.8 0.824 0.854 0.889 0.889 0.925 0.925 0.961 0.991 0.991 1.015 1.015 1.039 1.039 1.063 1.093 1.105 1.105 1.105 1.111 1.111 1.099 1.099 1.081 1.081 1.057 1.033 1.009 0.985 0.961 0.961 0.931 0.901 0.848 0.848 0.794 0.752 0.704 0.704 0.65 0.59 0.536 0.494 0.452 0.41 0.41 0.344 0.344 0.291 0.237 0.207 0.171 0.129 0.099 0.099 0.069 0.051 0.033 0.033 0.009 -0.009 -0.033 -0.033 -0.057 -0.057 -0.081 -0.099 -0.099 -0.117 -0.147 -0.147 -0.165 -0.183 -0.183 -0.213 -0.213 -0.237 -0.261 -0.267 -0.267 -0.273 -0.279 -0.279 -0.285 -0.291 -0.291)) (quote (3.505 3.418 3.418 3.375 3.353 3.353 3.332 3.332 3.332 3.353 3.375 3.375 3.418 3.462 3.548 3.598 3.675 3.761 3.806 3.878 3.943 3.992 4.059 4.059 4.087 4.082 4.125 4.095 4.07 4.028 4.028 4.007 3.977 3.955 3.915 3.874 3.853 3.827 3.807 3.807 3.792 3.777 3.762 3.752 3.752 3.763 3.748 3.776 3.776 3.788 3.782 3.804 3.799 3.842 3.907 3.924 3.989 4.027 4.017 4.012 4.034 4.045 4.035 4.068 4.09 4.08 4.135 4.2 4.255 4.31 4.375 4.408 4.403 4.393 4.387 4.382 4.372 4.372 4.346 4.314 4.249 4.179 4.174 4.065 3.974 3.86 3.752 3.677 3.667 3.623 3.592 3.505 3.37 3.186 3.186 3.003 2.803 2.793 2.614 2.463 2.442 2.313 2.172 1.989 1.816 1.616 1.481 1.329 1.167 0.957 0.805 0.677 0.525 0.51 0.38 0.24 0.131 0.001 -0.117 -0.279 -0.43 -0.566 -0.739 -0.901 -0.911 -1.094 -1.246 -1.403 -1.408 -1.516 -1.651 -1.781 -1.911 -2.051 -2.164 -2.273 -2.365 -2.435 -2.543 -2.608 -2.673 -2.743 -2.765 -2.77 -2.791 -2.791 -2.818 -2.818 -2.828 -2.833 -2.843 -2.843 -2.854 -2.854 -2.81 -2.81 -2.81 -2.81 -2.815 -2.825 -2.825 -2.835 -2.867 -2.926 -2.974 -3.054 -3.065 -3.118 -3.161 -3.188 -3.215 -3.236 -3.247 -3.247 -3.305 -3.327 -3.342 -3.385 -3.427 -3.437 -3.459 -3.507 -3.507 -3.551 -3.551 -3.572 -3.589 -3.6 -3.65 -3.715 -3.77 -3.813 -3.813 -3.825 -3.825 -3.842 -3.853 -3.87 -3.891 -3.891 -3.891 -3.891 -3.891 -3.87 -3.87 -3.826 -3.74 -3.696 -3.675 -3.658 -3.658 -3.642 -3.62 -3.603 -3.587 -3.587 -3.597 -3.569 -3.551 -3.529 -3.559 -3.541 -3.525 -3.525 -3.508 -3.508 -3.513 -3.475 -3.475 -3.502 -3.533 -3.587 -3.587 -3.635 -3.677 -3.714 -3.729 -3.766 -3.781 -3.781 -3.786 -3.802 -3.817 -3.817 -3.822 -3.8 -3.745 -3.664 -3.534 -3.382 -3.284 -3.219 -3.219 -3.181 -3.164 -3.121 -3.082 -3.082 -3.066 -3.049 -3.049 -3.016 -3.026 -3.051 -3.03 -3.04 -3.038 -3.037 -3.03 -3.046 -3.034 -2.947 -2.914 -2.864 -2.875 -2.825 -2.84 -2.807 -2.807 -2.812 -2.8 -2.767 -2.712 -2.691 -2.691 -2.669 -2.652 -2.652 -2.652 -2.652 -2.652 -2.679 -2.732 -2.754 -2.824 -2.867 -2.916 -2.938 -2.938 -2.938 -2.948 -2.948 -2.996 -3.001 -3.001 -3.006 -3.006 -3.011 -2.995 -2.956 -2.918 -2.875 -2.875 -2.815 -2.793 -2.798 -2.717 -2.652 -2.657 -2.597 -2.532 -2.515 -2.52 -2.525 -2.525 -2.546 -2.566 -2.522 -2.536 -2.56 -2.56 -2.596 -2.552 -2.561 -2.591 -2.617 -2.637 -2.662 -2.693 -2.693 -2.718 -2.695 -2.618 -2.575 -2.493 -2.45 -2.438 -2.438 -2.422 -2.379 -2.335 -2.27 -2.227 -2.184 -2.14 -2.075 -2.01 -2.01 -1.967 -1.967 -1.957 -1.915 -1.915 -1.911 -1.911 -1.901 -1.913 -1.913 -1.897 -1.887 -1.829 -1.829 -1.809 -1.74 -1.601 -1.494 -1.464 -1.33 -1.116 -0.887 -0.887 -0.662 -0.51 -0.339 -0.23 -0.14 -0.003 0.145 0.294 0.437 0.481 0.57 0.57 0.63 0.701 0.767 0.767 0.779 0.714 0.641 0.555 0.595 0.487 0.456 0.369 0.333 0.341 0.359 0.359 0.427 0.47 0.51 0.616 0.659 0.695 0.76 0.87 0.87 0.981 1.123 1.212 1.349 1.349 1.487 1.575 1.611 1.676 1.755 1.776 1.86 1.939 1.974 2.043 2.118 2.183 2.252 2.305 2.325 2.369 2.416 2.458 2.473 2.473 2.503 2.523 2.539 2.544 2.549 2.554 2.554 2.574 2.596 2.649 2.724 2.848 2.848 2.918 3.01 3.118 3.205 3.27 3.378 3.443 3.491 3.513 3.535 3.556 3.561 3.605 3.605 3.61 3.61 3.61 3.61 3.61 3.615 3.598 3.598 3.603 3.582 3.565 3.57 3.57 3.548 3.548 3.548 3.548 3.548 3.527 3.527)) (quote (-3.172 -2.957 -2.957 -2.814 -2.599 -2.599 -2.384 -2.061 -1.667 -1.38 -1.165 -0.986 -0.771 -0.591 -0.341 -0.09 0.161 0.341 0.556 0.771 0.95 1.129 1.344 1.344 1.487 1.523 1.523 1.559 1.523 1.523 1.416 1.272 1.272 1.093 0.914 0.914 0.663 0.305 -0.054 -0.305 -0.556 -0.806 -0.806 -1.022 -1.237 -1.344 -1.38 -1.452 -1.487 -1.487 -1.487 -1.487 -1.452 -1.308 -1.093 -0.914 -0.735 -0.484 -0.233 -0.233 0.09 0.376 0.663 0.878 1.129 1.129 1.308 1.523 1.738 1.953 2.133 2.276 2.276 2.348 2.419 2.527 2.599 2.67 2.742 2.849 2.921 2.993 2.993 3.065 3.172 3.208 3.208 3.208 3.208 3.208 3.208 3.136 3.029 2.957 2.957 2.885 2.778 2.778 2.67 2.527 2.527 2.455 2.384 2.276 2.204 2.168 2.168 2.168 2.133 2.133 2.133 2.133 2.133 2.133 2.133 2.168 2.204 2.276 2.348 2.419 2.527 2.599 2.706 2.849 2.849 2.957 3.1 3.208 3.208 3.315 3.423 3.53 3.638 3.781 3.817 3.889 3.889 3.889 3.889 3.889 3.889 3.889 3.853 3.817 3.746 3.746 3.638 3.602 3.53 3.53 3.495 3.459 3.387 3.351 3.351 3.315 3.28 3.28 3.244 3.208 3.172 3.136 3.1 3.029 2.921 2.849 2.849 2.778 2.67 2.599 2.527 2.491 2.455 2.455 2.455 2.384 2.312 2.24 2.168 2.097 1.989 1.918 1.882 1.81 1.774 1.703 1.667 1.595 1.487 1.38 1.237 1.165 1.165 1.129 1.057 0.986 0.914 0.842 0.735 0.735 0.699 0.627 0.556 0.448 0.448 0.341 0.269 0.197 0.197 0.197 0.197 0.197 0.197 0.197 0.197 0.269 0.269 0.341 0.412 0.484 0.484 0.556 0.591 0.663 0.663 0.663 0.699 0.699 0.699 0.699 0.663 0.591 0.591 0.484 0.376 0.305 0.305 0.269 0.233 0.197 0.197 0.125 0.09 0.018 -0.018 -0.018 -0.018 0.125 0.233 0.341 0.412 0.484 0.484 0.52 0.556 0.591 0.627 0.627 0.663 0.735 0.771 0.771 0.806 0.806 0.806 0.842 0.842 0.842 0.842 0.842 0.842 0.842 0.842 0.806 0.806 0.771 0.699 0.699 0.627 0.627 0.591 0.484 0.341 0.269 0.197 0.09 0.018 0.018 -0.054 -0.09 -0.161 -0.269 -0.484 -0.627 -0.842 -1.022 -1.201 -1.416 -1.667 -1.918 -2.133 -2.133 -2.312 -2.491 -2.67 -2.814 -3.029 -3.029 -3.172 -3.315 -3.495 -3.602 -3.602 -3.638 -3.638 -3.638 -3.566 -3.387 -3.387 -3.172 -2.957 -2.814 -2.67 -2.563 -2.563 -2.348 -2.061 -1.882 -1.774 -1.667 -1.631 -1.631 -1.631 -1.631 -1.667 -1.738 -1.953 -1.953 -2.168 -2.384 -2.634 -2.885 -3.136 -3.28 -3.387 -3.423 -3.423 -3.423 -3.423 -3.423 -3.423 -3.423 -3.351 -3.244 -3.1 -2.885 -2.563 -2.563 -2.276 -2.061 -2.061 -1.846 -1.631 -1.452 -1.272 -1.057 -0.878 -0.771 -0.735 -0.699 -0.699 -0.699 -0.627 -0.591 -0.52 -0.412 -0.412 -0.341 -0.305 -0.269 -0.269 -0.269 -0.269 -0.269 -0.269 -0.269 -0.269 -0.269 -0.341 -0.448 -0.484 -0.556 -0.591 -0.627 -0.699 -0.735 -0.735 -0.878 -1.057 -1.272 -1.523 -1.523 -1.81 -2.061 -2.348 -2.634 -2.921 -3.136 -3.351 -3.53 -3.674 -3.674 -3.817 -3.853 -3.853 -3.889 -3.889 -3.889 -3.889 -3.817 -3.781 -3.602 -3.602 -3.387 -3.208 -3.208 -2.993 -2.814 -2.742 -2.634 -2.455 -2.455 -2.348 -2.168 -1.989 -1.918 -1.882 -1.882 -1.882 -1.882 -1.882 -1.918 -1.953 -1.953 -2.025 -2.097 -2.168 -2.276 -2.348 -2.419 -2.419 -2.527 -2.706 -2.885 -3.029 -3.029 -3.172 -3.315 -3.459 -3.566 -3.638 -3.746 -3.781 -3.817 -3.817 -3.817 -3.817 -3.781 -3.781 -3.746 -3.71 -3.674 -3.638 -3.602 -3.602 -3.566 -3.566 -3.53 -3.53 -3.53 -3.459 -3.423 -3.423 -3.423 -3.423 -3.351 -3.315 -3.28 -3.244 -3.208)) (quote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (list -3.172 -2.957 -2.957 -2.814 -2.599 -2.599 -2.384 -2.061 -1.667 -1.38 -1.165 -0.986 -0.771 -0.591 -0.341 -0.09 0.161 0.341 0.556 0.771 0.95 1.129 1.344 1.344 1.487 1.523 1.523 1.559 1.523 1.523 1.416 1.272 1.272 1.093 0.914 0.914 0.663 0.305 -0.054 -0.305 -0.556 -0.806 -0.806 -1.022 -1.237 -1.344 -1.38 -1.452 -1.487 -1.487 -1.487 -1.487 -1.452 -1.308 -1.093 -0.914 -0.735 -0.484 -0.233 -0.233 0.09 0.376 0.663 0.878 1.129 1.129 1.308 1.523 1.738 1.953 2.133 2.276 2.276 2.348 2.419 2.527 2.599 2.67 2.742 2.849 2.921 2.993 2.993 3.065 3.172 3.208 3.208 3.208 3.208 3.208 3.208 3.136 3.029 2.957 2.957 2.885 2.778 2.778 2.67 2.527 2.527 2.455 2.384 2.276 2.204 2.168 2.168 2.168 2.133 2.133 2.133 2.133 2.133 2.133 2.133 2.168 2.204 2.276 2.348 2.419 2.527 2.599 2.706 2.849 2.849 2.957 3.1 3.208 3.208 3.315 3.423 3.53 3.638 3.781 3.817 3.889 3.889 3.889 3.889 3.889 3.889 3.889 3.853 3.817 3.746 3.746 3.638 3.602 3.53 3.53 3.495 3.459 3.387 3.351 3.351 3.315 3.28 3.28 3.244 3.208 3.172 3.136 3.1 3.029 2.921 2.849 2.849 2.778 2.67 2.599 2.527 2.491 2.455 2.455 2.455 2.384 2.312 2.24 2.168 2.097 1.989 1.918 1.882 1.81 1.774 1.703 1.667 1.595 1.487 1.38 1.237 1.165 1.165 1.129 1.057 0.986 0.914 0.842 0.735 0.735 0.699 0.627 0.556 0.448 0.448 0.341 0.269 0.197 0.197 0.197 0.197 0.197 0.197 0.197 0.197 0.269 0.269 0.341 0.412 0.484 0.484 0.556 0.591 0.663 0.663 0.663 0.699 0.699 0.699 0.699 0.663 0.591 0.591 0.484 0.376 0.305 0.305 0.269 0.233 0.197 0.197 0.125 0.09 0.018 -0.018 -0.018 -0.018 0.125 0.233 0.341 0.412 0.484 0.484 0.52 0.556 0.591 0.627 0.627 0.663 0.735 0.771 0.771 0.806 0.806 0.806 0.842 0.842 0.842 0.842 0.842 0.842 0.842 0.842 0.806 0.806 0.771 0.699 0.699 0.627 0.627 0.591 0.484 0.341 0.269 0.197 0.09 0.018 0.018 -0.054 -0.09 -0.161 -0.269 -0.484 -0.627 -0.842 -1.022 -1.201 -1.416 -1.667 -1.918 -2.133 -2.133 -2.312 -2.491 -2.67 -2.814 -3.029 -3.029 -3.172 -3.315 -3.495 -3.602 -3.602 -3.638 -3.638 -3.638 -3.566 -3.387 -3.387 -3.172 -2.957 -2.814 -2.67 -2.563 -2.563 -2.348 -2.061 -1.882 -1.774 -1.667 -1.631 -1.631 -1.631 -1.631 -1.667 -1.738 -1.953 -1.953 -2.168 -2.384 -2.634 -2.885 -3.136 -3.28 -3.387 -3.423 -3.423 -3.423 -3.423 -3.423 -3.423 -3.423 -3.351 -3.244 -3.1 -2.885 -2.563 -2.563 -2.276 -2.061 -2.061 -1.846 -1.631 -1.452 -1.272 -1.057 -0.878 -0.771 -0.735 -0.699 -0.699 -0.699 -0.627 -0.591 -0.52 -0.412 -0.412 -0.341 -0.305 -0.269 -0.269 -0.269 -0.269 -0.269 -0.269 -0.269 -0.269 -0.269 -0.341 -0.448 -0.484 -0.556 -0.591 -0.627 -0.699 -0.735 -0.735 -0.878 -1.057 -1.272 -1.523 -1.523 -1.81 -2.061 -2.348 -2.634 -2.921 -3.136 -3.351 -3.53 -3.674 -3.674 -3.817 -3.853 -3.853 -3.889 -3.889 -3.889 -3.889 -3.817 -3.781 -3.602 -3.602 -3.387 -3.208 -3.208 -2.993 -2.814 -2.742 -2.634 -2.455 -2.455 -2.348 -2.168 -1.989 -1.918 -1.882 -1.882 -1.882 -1.882 -1.882 -1.918 -1.953 -1.953 -2.025 -2.097 -2.168 -2.276 -2.348 -2.419 -2.419 -2.527 -2.706 -2.885 -3.029 -3.029 -3.172 -3.315 -3.459 -3.566 -3.638 -3.746 -3.781 -3.817 -3.817 -3.817 -3.817 -3.781 -3.781 -3.746 -3.71 -3.674 -3.638 -3.602 -3.602 -3.566 -3.566 -3.53 -3.53 -3.53 -3.459 -3.423 -3.423 -3.423 -3.423 -3.351 -3.315 -3.28 -3.244 -3.208))) newobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (-0.103 -0.106 -0.112 -0.112 -0.127 -0.145 -0.166 -0.166 -0.187 -0.187 -0.208 -0.226 -0.226 -0.247 -0.247 -0.268 -0.286 -0.286 -0.307 -0.325 -0.325 -0.346 -0.364 -0.364 -0.376 -0.376 -0.376 -0.385 -0.388 -0.388 -0.388 -0.388 -0.385 -0.385 -0.373 -0.373 -0.373 -0.373 -0.373 -0.373 -0.373 -0.373 -0.37 -0.37 -0.37 -0.37 -0.37 -0.373 -0.373 -0.373 -0.373 -0.373 -0.373 -0.379 -0.379 -0.379 -0.385 -0.388 -0.394 -0.4 -0.4 -0.409 -0.415 -0.421 -0.421 -0.43 -0.442 -0.442 -0.448 -0.463 -0.463 -0.469 -0.481 -0.487 -0.496 -0.502 -0.508 -0.508 -0.517 -0.526 -0.526 -0.529 -0.532 -0.532 -0.532 -0.532 -0.532 -0.526 -0.517 -0.517 -0.499 -0.499 -0.484 -0.466 -0.466 -0.454 -0.445 -0.439 -0.436 -0.436 -0.43 -0.43 -0.427 -0.427 -0.427 -0.427 -0.427 -0.427 -0.43 -0.433 -0.433 -0.439 -0.439 -0.445 -0.445 -0.445 -0.451 -0.451 -0.451 -0.454 -0.454 -0.457 -0.457 -0.463 -0.466 -0.469 -0.469 -0.469 -0.469 -0.469 -0.469 -0.472 -0.472 -0.472 -0.472 -0.472 -0.472 -0.472 -0.472 -0.466 -0.466 -0.463 -0.463 -0.463 -0.451 -0.451 -0.445 -0.445 -0.439 -0.427 -0.406 -0.406 -0.391 -0.382 -0.382 -0.37 -0.37 -0.355 -0.337 -0.319 -0.319 -0.295 -0.274 -0.256 -0.244 -0.223 -0.211 -0.202 -0.202 -0.202 -0.208 -0.208 -0.223 -0.223 -0.241 -0.241 -0.262 -0.262 -0.286 -0.307 -0.307 -0.322 -0.322 -0.331 -0.343 -0.358 -0.364 -0.376 -0.394 -0.394 -0.409 -0.409 -0.418 -0.427 -0.427 -0.436 -0.445 -0.457 -0.469 -0.469 -0.478 -0.478 -0.484 -0.484 -0.49 -0.49 -0.496 -0.496 -0.499 -0.499 -0.499 -0.502 -0.502 -0.502 -0.502 -0.502 -0.499 -0.496 -0.487 -0.487 -0.469 -0.46 -0.46 -0.46 -0.457 -0.457 -0.457 -0.457 -0.457 -0.457 -0.457 -0.457 -0.457 -0.46 -0.466 -0.472 -0.481 -0.49 -0.499 -0.499 -0.502 -0.511 -0.52 -0.52 -0.526 -0.526 -0.535 -0.541 -0.544 -0.544 -0.547 -0.553 -0.553 -0.553 -0.553 -0.553 -0.556 -0.556 -0.556 -0.556 -0.556 -0.556 -0.553 -0.541 -0.541 -0.532 -0.523 -0.514 -0.502 -0.496 -0.49 -0.49 -0.478 -0.469 -0.454 -0.442 -0.427 -0.415 -0.415 -0.409 -0.403 -0.397 -0.391 -0.391 -0.388 -0.388 -0.382 -0.376 -0.376 -0.373 -0.373 -0.367 -0.361 -0.361 -0.352 -0.352 -0.346 -0.346 -0.343 -0.343 -0.334 -0.334 -0.328 -0.325 -0.322 -0.322 -0.322 -0.322 -0.319 -0.319 -0.319 -0.319 -0.316 -0.316 -0.316 -0.316 -0.316 -0.316 -0.316 -0.316 -0.316 -0.316 -0.316 -0.316 -0.316 -0.316 -0.313 -0.313 -0.301 -0.286 -0.286 -0.274 -0.274 -0.259 -0.235 -0.208 -0.181 -0.154 -0.118 -0.118 -0.076 -0.022 0.031 0.031 0.07 0.07 0.106 0.106 0.142 0.142 0.175 0.205 0.235 0.235 0.262 0.262 0.289 0.289 0.316 0.316 0.346 0.373 0.373 0.391 0.391 0.394 0.4 0.4 0.4 0.4 0.394 0.394 0.388 0.379 0.373 0.367 0.361 0.358 0.352 0.337 0.337 0.328 0.328 0.325 0.325 0.325 0.316 0.304 0.301 0.301 0.301 0.304 0.304 0.313 0.328 0.349 0.349 0.361 0.361 0.373 0.373 0.385 0.385 0.4 0.4 0.412 0.427 0.445 0.445 0.463 0.463 0.481 0.496 0.496 0.508 0.508 0.52 0.52 0.532 0.547 0.553 0.553 0.553 0.556 0.556 0.55 0.55 0.541 0.541 0.529 0.517 0.505 0.493 0.481 0.481 0.466 0.451 0.424 0.424 0.397 0.376 0.352 0.352 0.325 0.295 0.268 0.247 0.226 0.205 0.205 0.172 0.172 0.145 0.118 0.103 0.085 0.064 0.049 0.049 0.034 0.025 0.016 0.016 0.004 -0.004 -0.016 -0.016 -0.028 -0.028 -0.04 -0.049 -0.049 -0.058 -0.073 -0.073 -0.082 -0.091 -0.091 -0.106 -0.106 -0.118 -0.13 -0.133 -0.133 -0.136 -0.139 -0.139 -0.142 -0.145 -0.145)) (quote (3.292 3.193 3.193 3.143 3.118 3.118 3.093 3.093 3.093 3.118 3.143 3.143 3.193 3.242 3.341 3.408 3.502 3.601 3.665 3.756 3.831 3.897 3.986 3.986 4.028 4.026 4.075 4.06 4.047 4.012 4.012 4.002 3.987 3.962 3.942 3.922 3.897 3.884 3.874 3.874 3.867 3.859 3.852 3.847 3.847 3.866 3.859 3.901 3.901 3.92 3.918 3.942 3.94 3.989 4.064 4.086 4.16 4.207 4.202 4.2 4.224 4.244 4.239 4.284 4.308 4.303 4.372 4.447 4.516 4.585 4.659 4.704 4.701 4.696 4.694 4.691 4.686 4.686 4.659 4.629 4.555 4.478 4.475 4.352 4.25 4.124 4.0 3.921 3.916 3.866 3.836 3.737 3.586 3.383 3.383 3.18 2.954 2.949 2.749 2.575 2.565 2.417 2.263 2.06 1.862 1.636 1.485 1.312 1.134 0.903 0.73 0.596 0.423 0.415 0.267 0.113 -0.011 -0.159 -0.288 -0.467 -0.64 -0.791 -0.989 -1.168 -1.173 -1.376 -1.549 -1.725 -1.727 -1.851 -2.002 -2.151 -2.3 -2.453 -2.579 -2.703 -2.805 -2.882 -3.005 -3.08 -3.154 -3.231 -3.256 -3.258 -3.283 -3.283 -3.31 -3.31 -3.315 -3.318 -3.323 -3.323 -3.328 -3.328 -3.278 -3.278 -3.278 -3.278 -3.281 -3.286 -3.286 -3.291 -3.321 -3.378 -3.43 -3.512 -3.517 -3.572 -3.621 -3.648 -3.676 -3.7 -3.705 -3.705 -3.763 -3.787 -3.795 -3.844 -3.879 -3.884 -3.909 -3.961 -3.961 -4.011 -4.011 -4.035 -4.058 -4.077 -4.144 -4.218 -4.288 -4.337 -4.337 -4.357 -4.357 -4.379 -4.399 -4.421 -4.446 -4.446 -4.446 -4.446 -4.446 -4.421 -4.421 -4.371 -4.272 -4.223 -4.198 -4.176 -4.176 -4.154 -4.129 -4.107 -4.084 -4.084 -4.089 -4.048 -4.011 -3.986 -4.001 -3.964 -3.942 -3.942 -3.92 -3.92 -3.922 -3.875 -3.875 -3.903 -3.932 -3.987 -3.987 -4.039 -4.074 -4.106 -4.114 -4.146 -4.154 -4.154 -4.156 -4.164 -4.172 -4.172 -4.174 -4.149 -4.08 -3.984 -3.835 -3.662 -3.543 -3.469 -3.469 -3.422 -3.4 -3.35 -3.303 -3.303 -3.281 -3.259 -3.259 -3.214 -3.219 -3.232 -3.207 -3.212 -3.197 -3.183 -3.166 -3.173 -3.154 -3.055 -3.01 -2.943 -2.948 -2.882 -2.889 -2.845 -2.845 -2.847 -2.828 -2.783 -2.714 -2.689 -2.689 -2.665 -2.642 -2.642 -2.642 -2.642 -2.642 -2.67 -2.724 -2.749 -2.826 -2.875 -2.927 -2.952 -2.952 -2.952 -2.957 -2.957 -3.009 -3.012 -3.012 -3.014 -3.014 -3.017 -2.995 -2.948 -2.901 -2.851 -2.851 -2.779 -2.755 -2.757 -2.661 -2.586 -2.589 -2.517 -2.443 -2.421 -2.423 -2.426 -2.426 -2.436 -2.446 -2.396 -2.389 -2.387 -2.387 -2.405 -2.356 -2.346 -2.361 -2.374 -2.384 -2.397 -2.412 -2.412 -2.424 -2.385 -2.291 -2.242 -2.145 -2.095 -2.076 -2.076 -2.054 -2.004 -1.955 -1.88 -1.831 -1.781 -1.732 -1.657 -1.583 -1.583 -1.534 -1.534 -1.529 -1.494 -1.494 -1.506 -1.506 -1.501 -1.52 -1.52 -1.513 -1.508 -1.451 -1.451 -1.44 -1.378 -1.239 -1.13 -1.115 -0.979 -0.76 -0.534 -0.534 -0.296 -0.123 0.061 0.184 0.271 0.396 0.525 0.669 0.811 0.86 0.932 0.932 0.963 0.998 1.031 1.031 1.009 0.935 0.829 0.73 0.75 0.626 0.555 0.456 0.383 0.358 0.354 0.354 0.401 0.451 0.471 0.566 0.615 0.633 0.707 0.804 0.804 0.901 1.028 1.1 1.225 1.225 1.349 1.421 1.439 1.513 1.581 1.605 1.675 1.742 1.76 1.822 1.902 1.976 2.038 2.093 2.103 2.152 2.19 2.225 2.232 2.232 2.247 2.258 2.265 2.268 2.27 2.273 2.273 2.283 2.308 2.362 2.442 2.573 2.573 2.65 2.751 2.875 2.974 3.048 3.172 3.247 3.299 3.323 3.348 3.373 3.375 3.425 3.425 3.427 3.427 3.427 3.427 3.427 3.43 3.408 3.408 3.41 3.386 3.363 3.366 3.366 3.341 3.341 3.341 3.341 3.341 3.316 3.316)) (quote (-3.625 -3.379 -3.379 -3.216 -2.97 -2.97 -2.724 -2.355 -1.905 -1.577 -1.331 -1.126 -0.881 -0.676 -0.389 -0.102 0.184 0.389 0.635 0.881 1.086 1.29 1.536 1.536 1.7 1.741 1.741 1.782 1.741 1.741 1.618 1.454 1.454 1.249 1.045 1.045 0.758 0.348 -0.061 -0.348 -0.635 -0.922 -0.922 -1.167 -1.413 -1.536 -1.577 -1.659 -1.7 -1.7 -1.7 -1.7 -1.659 -1.495 -1.249 -1.045 -0.84 -0.553 -0.266 -0.266 0.102 0.43 0.758 1.004 1.29 1.29 1.495 1.741 1.987 2.232 2.437 2.601 2.601 2.683 2.765 2.888 2.97 3.052 3.134 3.257 3.338 3.42 3.42 3.502 3.625 3.666 3.666 3.666 3.666 3.666 3.666 3.584 3.461 3.379 3.379 3.297 3.175 3.175 3.052 2.888 2.888 2.806 2.724 2.601 2.519 2.478 2.478 2.478 2.437 2.437 2.437 2.437 2.437 2.437 2.437 2.478 2.519 2.601 2.683 2.765 2.888 2.97 3.093 3.257 3.257 3.379 3.543 3.666 3.666 3.789 3.912 4.035 4.158 4.322 4.363 4.444 4.444 4.444 4.444 4.444 4.444 4.444 4.403 4.363 4.281 4.281 4.158 4.117 4.035 4.035 3.994 3.953 3.871 3.83 3.83 3.789 3.748 3.748 3.707 3.666 3.625 3.584 3.543 3.461 3.338 3.257 3.257 3.175 3.052 2.97 2.888 2.847 2.806 2.806 2.806 2.724 2.642 2.56 2.478 2.396 2.273 2.192 2.151 2.069 2.028 1.946 1.905 1.823 1.7 1.577 1.413 1.331 1.331 1.29 1.208 1.126 1.045 0.963 0.84 0.84 0.799 0.717 0.635 0.512 0.512 0.389 0.307 0.225 0.225 0.225 0.225 0.225 0.225 0.225 0.225 0.307 0.307 0.389 0.471 0.553 0.553 0.635 0.676 0.758 0.758 0.758 0.799 0.799 0.799 0.799 0.758 0.676 0.676 0.553 0.43 0.348 0.348 0.307 0.266 0.225 0.225 0.143 0.102 0.02 -0.02 -0.02 -0.02 0.143 0.266 0.389 0.471 0.553 0.553 0.594 0.635 0.676 0.717 0.717 0.758 0.84 0.881 0.881 0.922 0.922 0.922 0.963 0.963 0.963 0.963 0.963 0.963 0.963 0.963 0.922 0.922 0.881 0.799 0.799 0.717 0.717 0.676 0.553 0.389 0.307 0.225 0.102 0.02 0.02 -0.061 -0.102 -0.184 -0.307 -0.553 -0.717 -0.963 -1.167 -1.372 -1.618 -1.905 -2.192 -2.437 -2.437 -2.642 -2.847 -3.052 -3.216 -3.461 -3.461 -3.625 -3.789 -3.994 -4.117 -4.117 -4.158 -4.158 -4.158 -4.076 -3.871 -3.871 -3.625 -3.379 -3.216 -3.052 -2.929 -2.929 -2.683 -2.355 -2.151 -2.028 -1.905 -1.864 -1.864 -1.864 -1.864 -1.905 -1.987 -2.232 -2.232 -2.478 -2.724 -3.011 -3.297 -3.584 -3.748 -3.871 -3.912 -3.912 -3.912 -3.912 -3.912 -3.912 -3.912 -3.83 -3.707 -3.543 -3.297 -2.929 -2.929 -2.601 -2.355 -2.355 -2.11 -1.864 -1.659 -1.454 -1.208 -1.004 -0.881 -0.84 -0.799 -0.799 -0.799 -0.717 -0.676 -0.594 -0.471 -0.471 -0.389 -0.348 -0.307 -0.307 -0.307 -0.307 -0.307 -0.307 -0.307 -0.307 -0.307 -0.389 -0.512 -0.553 -0.635 -0.676 -0.717 -0.799 -0.84 -0.84 -1.004 -1.208 -1.454 -1.741 -1.741 -2.069 -2.355 -2.683 -3.011 -3.338 -3.584 -3.83 -4.035 -4.199 -4.199 -4.363 -4.403 -4.403 -4.444 -4.444 -4.444 -4.444 -4.363 -4.322 -4.117 -4.117 -3.871 -3.666 -3.666 -3.42 -3.216 -3.134 -3.011 -2.806 -2.806 -2.683 -2.478 -2.273 -2.192 -2.151 -2.151 -2.151 -2.151 -2.151 -2.192 -2.232 -2.232 -2.314 -2.396 -2.478 -2.601 -2.683 -2.765 -2.765 -2.888 -3.093 -3.297 -3.461 -3.461 -3.625 -3.789 -3.953 -4.076 -4.158 -4.281 -4.322 -4.363 -4.363 -4.363 -4.363 -4.322 -4.322 -4.281 -4.24 -4.199 -4.158 -4.117 -4.117 -4.076 -4.076 -4.035 -4.035 -4.035 -3.953 -3.912 -3.912 -3.912 -3.912 -3.83 -3.789 -3.748 -3.707 -3.666)) (quote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (list -3.625 -3.379 -3.379 -3.216 -2.97 -2.97 -2.724 -2.355 -1.905 -1.577 -1.331 -1.126 -0.881 -0.676 -0.389 -0.102 0.184 0.389 0.635 0.881 1.086 1.29 1.536 1.536 1.7 1.741 1.741 1.782 1.741 1.741 1.618 1.454 1.454 1.249 1.045 1.045 0.758 0.348 -0.061 -0.348 -0.635 -0.922 -0.922 -1.167 -1.413 -1.536 -1.577 -1.659 -1.7 -1.7 -1.7 -1.7 -1.659 -1.495 -1.249 -1.045 -0.84 -0.553 -0.266 -0.266 0.102 0.43 0.758 1.004 1.29 1.29 1.495 1.741 1.987 2.232 2.437 2.601 2.601 2.683 2.765 2.888 2.97 3.052 3.134 3.257 3.338 3.42 3.42 3.502 3.625 3.666 3.666 3.666 3.666 3.666 3.666 3.584 3.461 3.379 3.379 3.297 3.175 3.175 3.052 2.888 2.888 2.806 2.724 2.601 2.519 2.478 2.478 2.478 2.437 2.437 2.437 2.437 2.437 2.437 2.437 2.478 2.519 2.601 2.683 2.765 2.888 2.97 3.093 3.257 3.257 3.379 3.543 3.666 3.666 3.789 3.912 4.035 4.158 4.322 4.363 4.444 4.444 4.444 4.444 4.444 4.444 4.444 4.403 4.363 4.281 4.281 4.158 4.117 4.035 4.035 3.994 3.953 3.871 3.83 3.83 3.789 3.748 3.748 3.707 3.666 3.625 3.584 3.543 3.461 3.338 3.257 3.257 3.175 3.052 2.97 2.888 2.847 2.806 2.806 2.806 2.724 2.642 2.56 2.478 2.396 2.273 2.192 2.151 2.069 2.028 1.946 1.905 1.823 1.7 1.577 1.413 1.331 1.331 1.29 1.208 1.126 1.045 0.963 0.84 0.84 0.799 0.717 0.635 0.512 0.512 0.389 0.307 0.225 0.225 0.225 0.225 0.225 0.225 0.225 0.225 0.307 0.307 0.389 0.471 0.553 0.553 0.635 0.676 0.758 0.758 0.758 0.799 0.799 0.799 0.799 0.758 0.676 0.676 0.553 0.43 0.348 0.348 0.307 0.266 0.225 0.225 0.143 0.102 0.02 -0.02 -0.02 -0.02 0.143 0.266 0.389 0.471 0.553 0.553 0.594 0.635 0.676 0.717 0.717 0.758 0.84 0.881 0.881 0.922 0.922 0.922 0.963 0.963 0.963 0.963 0.963 0.963 0.963 0.963 0.922 0.922 0.881 0.799 0.799 0.717 0.717 0.676 0.553 0.389 0.307 0.225 0.102 0.02 0.02 -0.061 -0.102 -0.184 -0.307 -0.553 -0.717 -0.963 -1.167 -1.372 -1.618 -1.905 -2.192 -2.437 -2.437 -2.642 -2.847 -3.052 -3.216 -3.461 -3.461 -3.625 -3.789 -3.994 -4.117 -4.117 -4.158 -4.158 -4.158 -4.076 -3.871 -3.871 -3.625 -3.379 -3.216 -3.052 -2.929 -2.929 -2.683 -2.355 -2.151 -2.028 -1.905 -1.864 -1.864 -1.864 -1.864 -1.905 -1.987 -2.232 -2.232 -2.478 -2.724 -3.011 -3.297 -3.584 -3.748 -3.871 -3.912 -3.912 -3.912 -3.912 -3.912 -3.912 -3.912 -3.83 -3.707 -3.543 -3.297 -2.929 -2.929 -2.601 -2.355 -2.355 -2.11 -1.864 -1.659 -1.454 -1.208 -1.004 -0.881 -0.84 -0.799 -0.799 -0.799 -0.717 -0.676 -0.594 -0.471 -0.471 -0.389 -0.348 -0.307 -0.307 -0.307 -0.307 -0.307 -0.307 -0.307 -0.307 -0.307 -0.389 -0.512 -0.553 -0.635 -0.676 -0.717 -0.799 -0.84 -0.84 -1.004 -1.208 -1.454 -1.741 -1.741 -2.069 -2.355 -2.683 -3.011 -3.338 -3.584 -3.83 -4.035 -4.199 -4.199 -4.363 -4.403 -4.403 -4.444 -4.444 -4.444 -4.444 -4.363 -4.322 -4.117 -4.117 -3.871 -3.666 -3.666 -3.42 -3.216 -3.134 -3.011 -2.806 -2.806 -2.683 -2.478 -2.273 -2.192 -2.151 -2.151 -2.151 -2.151 -2.151 -2.192 -2.232 -2.232 -2.314 -2.396 -2.478 -2.601 -2.683 -2.765 -2.765 -2.888 -3.093 -3.297 -3.461 -3.461 -3.625 -3.789 -3.953 -4.076 -4.158 -4.281 -4.322 -4.363 -4.363 -4.363 -4.363 -4.322 -4.322 -4.281 -4.24 -4.199 -4.158 -4.117 -4.117 -4.076 -4.076 -4.035 -4.035 -4.035 -3.953 -3.912 -3.912 -3.912 -3.912 -3.83 -3.789 -3.748 -3.707 -3.666))) newobj) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0)) (quote (3.078 2.967 2.967 2.911 2.883 2.883 2.855 2.855 2.855 2.883 2.911 2.911 2.967 3.022 3.134 3.217 3.329 3.44 3.524 3.635 3.719 3.802 3.914 3.914 3.969 3.969 4.025 4.025 4.025 3.997 3.997 3.997 3.997 3.969 3.969 3.969 3.942 3.942 3.942 3.942 3.942 3.942 3.942 3.942 3.942 3.969 3.969 4.025 4.025 4.053 4.053 4.081 4.081 4.136 4.22 4.248 4.331 4.387 4.387 4.387 4.415 4.443 4.443 4.499 4.526 4.526 4.61 4.694 4.777 4.861 4.944 5.0 5.0 5.0 5.0 5.0 5.0 5.0 4.972 4.944 4.861 4.777 4.777 4.638 4.526 4.387 4.248 4.164 4.164 4.109 4.081 3.969 3.802 3.579 3.579 3.357 3.106 3.106 2.883 2.688 2.688 2.521 2.354 2.131 1.908 1.657 1.49 1.295 1.1 0.85 0.655 0.515 0.32 0.32 0.153 -0.014 -0.153 -0.32 -0.46 -0.655 -0.85 -1.017 -1.24 -1.435 -1.435 -1.657 -1.852 -2.047 -2.047 -2.187 -2.354 -2.521 -2.688 -2.855 -2.994 -3.134 -3.245 -3.329 -3.468 -3.552 -3.635 -3.719 -3.747 -3.747 -3.774 -3.774 -3.802 -3.802 -3.802 -3.802 -3.802 -3.802 -3.802 -3.802 -3.747 -3.747 -3.747 -3.747 -3.747 -3.747 -3.747 -3.747 -3.774 -3.83 -3.886 -3.969 -3.969 -4.025 -4.081 -4.109 -4.136 -4.164 -4.164 -4.164 -4.22 -4.248 -4.248 -4.304 -4.331 -4.331 -4.359 -4.415 -4.415 -4.471 -4.471 -4.499 -4.526 -4.554 -4.638 -4.721 -4.805 -4.861 -4.861 -4.889 -4.889 -4.916 -4.944 -4.972 -5.0 -5.0 -5.0 -5.0 -5.0 -4.972 -4.972 -4.916 -4.805 -4.749 -4.721 -4.694 -4.694 -4.666 -4.638 -4.61 -4.582 -4.582 -4.582 -4.526 -4.471 -4.443 -4.443 -4.387 -4.359 -4.359 -4.331 -4.331 -4.331 -4.276 -4.276 -4.304 -4.331 -4.387 -4.387 -4.443 -4.471 -4.499 -4.499 -4.526 -4.526 -4.526 -4.526 -4.526 -4.526 -4.526 -4.526 -4.499 -4.415 -4.304 -4.136 -3.941 -3.802 -3.719 -3.719 -3.663 -3.635 -3.579 -3.524 -3.524 -3.496 -3.468 -3.468 -3.412 -3.412 -3.412 -3.384 -3.384 -3.357 -3.329 -3.301 -3.301 -3.273 -3.162 -3.106 -3.022 -3.022 -2.939 -2.939 -2.883 -2.883 -2.883 -2.855 -2.799 -2.716 -2.688 -2.688 -2.66 -2.632 -2.632 -2.632 -2.632 -2.632 -2.66 -2.716 -2.744 -2.827 -2.883 -2.939 -2.967 -2.967 -2.967 -2.967 -2.967 -3.022 -3.022 -3.022 -3.022 -3.022 -3.022 -2.994 -2.939 -2.883 -2.827 -2.827 -2.744 -2.716 -2.716 -2.604 -2.521 -2.521 -2.437 -2.354 -2.326 -2.326 -2.326 -2.326 -2.326 -2.326 -2.27 -2.242 -2.214 -2.214 -2.214 -2.159 -2.131 -2.131 -2.131 -2.131 -2.131 -2.131 -2.131 -2.131 -2.075 -1.964 -1.908 -1.797 -1.741 -1.713 -1.713 -1.685 -1.63 -1.574 -1.49 -1.435 -1.379 -1.323 -1.24 -1.156 -1.156 -1.1 -1.1 -1.1 -1.072 -1.072 -1.1 -1.1 -1.1 -1.128 -1.128 -1.128 -1.128 -1.072 -1.072 -1.072 -1.017 -0.877 -0.766 -0.766 -0.627 -0.404 -0.181 -0.181 0.07 0.265 0.46 0.599 0.682 0.794 0.905 1.045 1.184 1.24 1.295 1.295 1.295 1.295 1.295 1.295 1.24 1.156 1.017 0.905 0.905 0.766 0.655 0.543 0.432 0.376 0.348 0.348 0.376 0.432 0.432 0.515 0.571 0.571 0.655 0.738 0.738 0.822 0.933 0.989 1.1 1.1 1.212 1.267 1.267 1.351 1.407 1.435 1.49 1.546 1.546 1.602 1.685 1.769 1.825 1.88 1.88 1.936 1.964 1.992 1.992 1.992 1.992 1.992 1.992 1.992 1.992 1.992 1.992 1.992 2.02 2.075 2.159 2.298 2.298 2.382 2.493 2.632 2.744 2.827 2.967 3.05 3.106 3.134 3.162 3.189 3.189 3.245 3.245 3.245 3.245 3.245 3.245 3.245 3.245 3.217 3.217 3.217 3.189 3.162 3.162 3.162 3.134 3.134 3.134 3.134 3.134 3.106 3.106)) (quote (-4.078 -3.802 -3.802 -3.618 -3.341 -3.341 -3.065 -2.65 -2.143 -1.774 -1.498 -1.267 -0.991 -0.76 -0.438 -0.115 0.207 0.438 0.714 0.991 1.221 1.452 1.728 1.728 1.912 1.959 1.959 2.005 1.959 1.959 1.82 1.636 1.636 1.406 1.175 1.175 0.853 0.392 -0.069 -0.392 -0.714 -1.037 -1.037 -1.313 -1.59 -1.728 -1.774 -1.866 -1.912 -1.912 -1.912 -1.912 -1.866 -1.682 -1.406 -1.175 -0.945 -0.622 -0.3 -0.3 0.115 0.484 0.853 1.129 1.452 1.452 1.682 1.959 2.235 2.512 2.742 2.926 2.926 3.018 3.111 3.249 3.341 3.433 3.525 3.664 3.756 3.848 3.848 3.94 4.078 4.124 4.124 4.124 4.124 4.124 4.124 4.032 3.894 3.802 3.802 3.71 3.571 3.571 3.433 3.249 3.249 3.157 3.065 2.926 2.834 2.788 2.788 2.788 2.742 2.742 2.742 2.742 2.742 2.742 2.742 2.788 2.834 2.926 3.018 3.111 3.249 3.341 3.479 3.664 3.664 3.802 3.986 4.124 4.124 4.263 4.401 4.539 4.677 4.862 4.908 5.0 5.0 5.0 5.0 5.0 5.0 5.0 4.954 4.908 4.816 4.816 4.677 4.631 4.539 4.539 4.493 4.447 4.355 4.309 4.309 4.263 4.217 4.217 4.171 4.124 4.078 4.032 3.986 3.894 3.756 3.664 3.664 3.571 3.433 3.341 3.249 3.203 3.157 3.157 3.157 3.065 2.972 2.88 2.788 2.696 2.558 2.465 2.419 2.327 2.281 2.189 2.143 2.051 1.912 1.774 1.59 1.498 1.498 1.452 1.359 1.267 1.175 1.083 0.945 0.945 0.899 0.806 0.714 0.576 0.576 0.438 0.346 0.253 0.253 0.253 0.253 0.253 0.253 0.253 0.253 0.346 0.346 0.438 0.53 0.622 0.622 0.714 0.76 0.853 0.853 0.853 0.899 0.899 0.899 0.899 0.853 0.76 0.76 0.622 0.484 0.392 0.392 0.346 0.3 0.253 0.253 0.161 0.115 0.023 -0.023 -0.023 -0.023 0.161 0.3 0.438 0.53 0.622 0.622 0.668 0.714 0.76 0.806 0.806 0.853 0.945 0.991 0.991 1.037 1.037 1.037 1.083 1.083 1.083 1.083 1.083 1.083 1.083 1.083 1.037 1.037 0.991 0.899 0.899 0.806 0.806 0.76 0.622 0.438 0.346 0.253 0.115 0.023 0.023 -0.069 -0.115 -0.207 -0.346 -0.622 -0.806 -1.083 -1.313 -1.544 -1.82 -2.143 -2.465 -2.742 -2.742 -2.972 -3.203 -3.433 -3.618 -3.894 -3.894 -4.078 -4.263 -4.493 -4.631 -4.631 -4.677 -4.677 -4.677 -4.585 -4.355 -4.355 -4.078 -3.802 -3.618 -3.433 -3.295 -3.295 -3.018 -2.65 -2.419 -2.281 -2.143 -2.097 -2.097 -2.097 -2.097 -2.143 -2.235 -2.512 -2.512 -2.788 -3.065 -3.387 -3.71 -4.032 -4.217 -4.355 -4.401 -4.401 -4.401 -4.401 -4.401 -4.401 -4.401 -4.309 -4.171 -3.986 -3.71 -3.295 -3.295 -2.926 -2.65 -2.65 -2.373 -2.097 -1.866 -1.636 -1.359 -1.129 -0.991 -0.945 -0.899 -0.899 -0.899 -0.806 -0.76 -0.668 -0.53 -0.53 -0.438 -0.392 -0.346 -0.346 -0.346 -0.346 -0.346 -0.346 -0.346 -0.346 -0.346 -0.438 -0.576 -0.622 -0.714 -0.76 -0.806 -0.899 -0.945 -0.945 -1.129 -1.359 -1.636 -1.959 -1.959 -2.327 -2.65 -3.018 -3.387 -3.756 -4.032 -4.309 -4.539 -4.724 -4.724 -4.908 -4.954 -4.954 -5.0 -5.0 -5.0 -5.0 -4.908 -4.862 -4.631 -4.631 -4.355 -4.124 -4.124 -3.848 -3.618 -3.525 -3.387 -3.157 -3.157 -3.018 -2.788 -2.558 -2.465 -2.419 -2.419 -2.419 -2.419 -2.419 -2.465 -2.512 -2.512 -2.604 -2.696 -2.788 -2.926 -3.018 -3.111 -3.111 -3.249 -3.479 -3.71 -3.894 -3.894 -4.078 -4.263 -4.447 -4.585 -4.677 -4.816 -4.862 -4.908 -4.908 -4.908 -4.908 -4.862 -4.862 -4.816 -4.77 -4.724 -4.677 -4.631 -4.631 -4.585 -4.585 -4.539 -4.539 -4.539 -4.447 -4.401 -4.401 -4.401 -4.401 -4.309 -4.263 -4.217 -4.171 -4.124)) (quote 3dc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (list -4.078 -3.802 -3.802 -3.618 -3.341 -3.341 -3.065 -2.65 -2.143 -1.774 -1.498 -1.267 -0.991 -0.76 -0.438 -0.115 0.207 0.438 0.714 0.991 1.221 1.452 1.728 1.728 1.912 1.959 1.959 2.005 1.959 1.959 1.82 1.636 1.636 1.406 1.175 1.175 0.853 0.392 -0.069 -0.392 -0.714 -1.037 -1.037 -1.313 -1.59 -1.728 -1.774 -1.866 -1.912 -1.912 -1.912 -1.912 -1.866 -1.682 -1.406 -1.175 -0.945 -0.622 -0.3 -0.3 0.115 0.484 0.853 1.129 1.452 1.452 1.682 1.959 2.235 2.512 2.742 2.926 2.926 3.018 3.111 3.249 3.341 3.433 3.525 3.664 3.756 3.848 3.848 3.94 4.078 4.124 4.124 4.124 4.124 4.124 4.124 4.032 3.894 3.802 3.802 3.71 3.571 3.571 3.433 3.249 3.249 3.157 3.065 2.926 2.834 2.788 2.788 2.788 2.742 2.742 2.742 2.742 2.742 2.742 2.742 2.788 2.834 2.926 3.018 3.111 3.249 3.341 3.479 3.664 3.664 3.802 3.986 4.124 4.124 4.263 4.401 4.539 4.677 4.862 4.908 5.0 5.0 5.0 5.0 5.0 5.0 5.0 4.954 4.908 4.816 4.816 4.677 4.631 4.539 4.539 4.493 4.447 4.355 4.309 4.309 4.263 4.217 4.217 4.171 4.124 4.078 4.032 3.986 3.894 3.756 3.664 3.664 3.571 3.433 3.341 3.249 3.203 3.157 3.157 3.157 3.065 2.972 2.88 2.788 2.696 2.558 2.465 2.419 2.327 2.281 2.189 2.143 2.051 1.912 1.774 1.59 1.498 1.498 1.452 1.359 1.267 1.175 1.083 0.945 0.945 0.899 0.806 0.714 0.576 0.576 0.438 0.346 0.253 0.253 0.253 0.253 0.253 0.253 0.253 0.253 0.346 0.346 0.438 0.53 0.622 0.622 0.714 0.76 0.853 0.853 0.853 0.899 0.899 0.899 0.899 0.853 0.76 0.76 0.622 0.484 0.392 0.392 0.346 0.3 0.253 0.253 0.161 0.115 0.023 -0.023 -0.023 -0.023 0.161 0.3 0.438 0.53 0.622 0.622 0.668 0.714 0.76 0.806 0.806 0.853 0.945 0.991 0.991 1.037 1.037 1.037 1.083 1.083 1.083 1.083 1.083 1.083 1.083 1.083 1.037 1.037 0.991 0.899 0.899 0.806 0.806 0.76 0.622 0.438 0.346 0.253 0.115 0.023 0.023 -0.069 -0.115 -0.207 -0.346 -0.622 -0.806 -1.083 -1.313 -1.544 -1.82 -2.143 -2.465 -2.742 -2.742 -2.972 -3.203 -3.433 -3.618 -3.894 -3.894 -4.078 -4.263 -4.493 -4.631 -4.631 -4.677 -4.677 -4.677 -4.585 -4.355 -4.355 -4.078 -3.802 -3.618 -3.433 -3.295 -3.295 -3.018 -2.65 -2.419 -2.281 -2.143 -2.097 -2.097 -2.097 -2.097 -2.143 -2.235 -2.512 -2.512 -2.788 -3.065 -3.387 -3.71 -4.032 -4.217 -4.355 -4.401 -4.401 -4.401 -4.401 -4.401 -4.401 -4.401 -4.309 -4.171 -3.986 -3.71 -3.295 -3.295 -2.926 -2.65 -2.65 -2.373 -2.097 -1.866 -1.636 -1.359 -1.129 -0.991 -0.945 -0.899 -0.899 -0.899 -0.806 -0.76 -0.668 -0.53 -0.53 -0.438 -0.392 -0.346 -0.346 -0.346 -0.346 -0.346 -0.346 -0.346 -0.346 -0.346 -0.438 -0.576 -0.622 -0.714 -0.76 -0.806 -0.899 -0.945 -0.945 -1.129 -1.359 -1.636 -1.959 -1.959 -2.327 -2.65 -3.018 -3.387 -3.756 -4.032 -4.309 -4.539 -4.724 -4.724 -4.908 -4.954 -4.954 -5.0 -5.0 -5.0 -5.0 -4.908 -4.862 -4.631 -4.631 -4.355 -4.124 -4.124 -3.848 -3.618 -3.525 -3.387 -3.157 -3.157 -3.018 -2.788 -2.558 -2.465 -2.419 -2.419 -2.419 -2.419 -2.419 -2.465 -2.512 -2.512 -2.604 -2.696 -2.788 -2.926 -3.018 -3.111 -3.111 -3.249 -3.479 -3.71 -3.894 -3.894 -4.078 -4.263 -4.447 -4.585 -4.677 -4.816 -4.862 -4.908 -4.908 -4.908 -4.908 -4.862 -4.862 -4.816 -4.77 -4.724 -4.677 -4.631 -4.631 -4.585 -4.585 -4.539 -4.539 -4.539 -4.447 -4.401 -4.401 -4.401 -4.401 -4.309 -4.263 -4.217 -4.171 -4.124))) newobj)) :from-file t)) "x" nil (pairlis (quote (picture winpos winsize)) (list nil (om-make-point 0 125) (om-make-point 931 624))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPC-LIB52" (quote bpc-lib) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "BPF-LIST" (list (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (0)) (quote (0)) (quote bpc) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj))))) (om-make-point 228 351) (om-make-point 150 145) (if (find-class (quote bpc-lib) nil) (make-instance (quote bpc-lib) :bpf-list (list (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-8.07023 -7.47098 -6.93795 -6.07314 -5.70698 -5.70699 -5.73998 -6.10569 -6.33903 -7.10528 -7.70393 -8.03692 -8.16983 -8.36931 -8.43603 -8.56914 -8.60197 -8.60233 -8.46878 -8.236 -4.8748 -3.61092 -3.0119 -2.77909 -1.84709 -1.78003 -1.71405 -1.98007 -2.94502 -4.77483 -5.74026 -7.93722 -9.36758 -9.76695 -10.00021 -9.99973 -9.53383 -8.93526 -8.43598 -1.94693 1.04793 3.6767 6.40587 9.36832 9.79994 9.93324 9.99984 9.06828 8.76856 7.60422 7.13811 5.60686 2.77922 2.08017 1.31443 0.91524 0.44912 0.31597 -0.31594 -0.31602 -0.28302 -0.25004 -0.14999 0.31601 1.31411 2.04678 6.20595 6.93804 7.20461 7.63674 7.97007 8.4688 8.76888 8.83508 8.83488 8.63601 7.57095 7.33825 6.50599 5.57417 4.2102 3.44401 3.37791 3.44392 3.5438 3.74396 3.84423 4.07714 4.50884 4.84204 5.00817 5.14091 5.24093 5.3411 5.47407 5.50681 5.50703 5.44088 5.40824 5.30773)) (quote (9.91732 9.95801 9.9999 10.00035 10.00013 9.91714 9.87495 9.5417 9.37503 9.0004 8.74977 8.62487 8.62487 8.50034 8.45815 8.20804 7.99988 7.95832 7.91691 7.8329 8.45772 8.49979 8.58287 8.62534 8.62545 8.58337 8.45807 7.33339 6.70799 5.83287 5.45817 4.54219 3.49979 3.08307 2.625 1.87501 1.16706 0.87501 0.83295 1.83296 2.79181 3.95771 5.04182 5.3332 5.3329 5.29205 4.58293 3.20804 2.91691 2.16712 1.99998 1.375 0.70805 0.45804 0.16705 -0.08302 -0.54214 -0.66694 -2.12464 -2.37507 -2.8751 -2.95845 -3.08335 -3.33305 -3.33332 -3.20761 -2.41698 -2.41703 -2.49989 -2.66687 -3.00004 -3.792 -4.45795 -4.79207 -4.91703 -5.33309 -6.08307 -6.20811 -6.45802 -6.50028 -6.70825 -7.04193 -7.58263 -7.79184 -7.83262 -8.08302 -8.20841 -8.37533 -8.74957 -9.00017 -9.20818 -9.33274 -9.45799 -9.58308 -9.83296 -9.91659 -9.99988 -9.99962 -10.00025 -9.99965)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-6.75978 -6.16122 -5.63757 -4.79063 -4.41883 -4.41709 -4.45424 -4.8129 -5.04982 -5.82726 -6.4365 -6.77316 -6.90103 -7.11238 -7.19232 -7.35642 -7.41862 -7.42614 -7.32237 -7.10907 -3.79426 -2.57183 -1.98721 -1.76171 -0.87193 -0.81417 -0.7653 -1.14503 -2.14694 -4.01929 -4.98096 -7.11207 -8.60839 -9.04136 -9.33292 -9.45563 -9.13035 -8.60836 -8.13798 -1.71489 1.43443 4.12753 6.83638 9.61897 9.97203 10.09712 10.0735 9.04915 8.72796 7.55605 7.09387 5.56852 2.78591 2.09542 1.32262 0.89906 0.4748 0.37638 -0.12588 -0.10263 -0.02504 0.01363 0.12163 0.59638 1.54561 2.23953 6.21911 6.93009 7.20866 7.64115 7.97496 8.47751 8.79876 8.87854 8.94196 8.77887 7.77392 7.55058 6.75219 5.84775 4.51858 3.78449 3.7434 3.81837 3.92778 4.13983 4.28881 4.53654 4.97694 5.31358 5.48333 5.61618 5.71769 5.82068 5.9644 6.01329 6.02171 5.98386 5.95628 5.85957)) (quote (10.88719 10.85387 10.82991 10.72351 10.67409 10.59158 10.55491 10.27047 10.13839 9.87102 9.70678 9.62549 9.64323 9.54249 9.49152 9.26278 9.06291 9.02098 8.93891 8.82784 9.00703 8.89294 8.89927 8.90686 8.78936 8.73659 8.60479 7.54581 7.03973 6.40557 6.15885 5.636 4.90406 4.61457 4.23592 3.54854 2.81442 2.44607 2.32103 2.23417 2.71962 3.52438 4.27524 4.35433 4.42054 4.37245 3.76631 2.59029 2.39538 1.73961 1.60637 1.0814 0.56926 0.35914 0.11174 -0.09384 -0.51557 -0.66753 -2.15285 -2.41827 -2.91273 -3.01355 -3.12764 -3.32931 -3.24849 -3.08324 -2.26077 -2.24675 -2.3706 -2.53762 -2.8585 -3.61477 -4.23246 -4.54581 -4.61625 -5.01635 -5.77828 -5.91419 -6.18749 -6.271 -6.54896 -6.9168 -7.44725 -7.65103 -7.69076 -7.92717 -8.06028 -8.21461 -8.55627 -8.78272 -8.97941 -9.10014 -9.21826 -9.33828 -9.57854 -9.66609 -9.74977 -9.769 -9.7728 -9.77808)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-5.33345 -4.74465 -4.23835 -3.42234 -3.05156 -3.04806 -3.08851 -3.43424 -3.66996 -4.44422 -5.05204 -5.38689 -5.50745 -5.72797 -5.82451 -6.01631 -6.1062 -6.12095 -6.05486 -5.86398 -2.65264 -1.49047 -0.92982 -0.71651 0.11672 0.16369 0.19485 -0.28728 -1.31157 -3.19528 -4.13692 -6.13958 -7.64316 -8.08044 -8.41108 -8.6361 -8.44618 -8.00846 -7.58015 -1.40236 1.81876 4.52722 7.17716 9.77063 10.06222 10.17888 10.08268 8.98915 8.65721 7.48444 7.02843 5.51513 2.78573 2.10598 1.32849 0.88276 0.49893 0.4384 0.0667 0.11597 0.2374 0.28509 0.39984 0.87826 1.77164 2.42471 6.22839 6.91805 7.21041 7.6434 7.97738 8.4826 8.823 8.91532 9.03891 8.91021 7.96471 7.75121 6.98718 6.11189 4.82102 4.12069 4.10359 4.18715 4.30623 4.52931 4.7282 4.99011 5.43699 5.77545 5.94809 6.08096 6.18352 6.28905 6.4429 6.50843 6.52508 6.5174 6.49514 6.4026)) (quote (11.68441 11.57786 11.49106 11.28225 11.18227 11.0985 11.0677 10.82479 10.72532 10.56148 10.48181 10.44285 10.47697 10.40101 10.34445 10.14085 9.95335 9.91224 9.79726 9.66276 9.41876 9.15924 9.09348 9.06857 8.84323 8.78136 8.6453 7.66301 7.27641 6.88054 6.75473 6.58609 6.15691 5.99213 5.69808 5.09123 4.35656 3.92886 3.72961 2.60546 2.59323 3.03965 3.47513 3.37552 3.51603 3.46161 2.96326 1.98711 1.88659 1.32284 1.2224 0.79484 0.43145 0.25982 0.05604 -0.10423 -0.48781 -0.6628 -2.16403 -2.44214 -2.92706 -3.04485 -3.14771 -3.3018 -3.14754 -2.94728 -2.10522 -2.07796 -2.24185 -2.40888 -2.71757 -3.43845 -4.00782 -4.30021 -4.31361 -4.6961 -5.46686 -5.61309 -5.9076 -6.03019 -6.37548 -6.77518 -7.2942 -7.49218 -7.53004 -7.75189 -7.88801 -8.02864 -8.33788 -8.54051 -8.72608 -8.84328 -8.95444 -9.06943 -9.29963 -9.38967 -9.47311 -9.50885 -9.51526 -9.52601)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-3.81396 -3.24383 -2.76225 -1.98938 -1.62652 -1.62169 -1.66456 -1.99322 -2.22353 -2.98144 -3.57651 -3.9045 -4.01575 -4.24268 -4.35855 -4.5743 -4.68965 -4.71151 -4.68938 -4.52325 -1.46745 -0.38235 0.14566 0.34239 1.10645 1.14135 1.15449 0.58228 -0.45027 -2.31547 -3.22254 -5.04407 -6.50062 -6.91494 -7.26556 -7.56987 -7.50573 -7.15653 -6.78129 -1.01344 2.19323 4.8699 7.42605 9.8255 10.07295 10.18103 10.02975 8.89001 8.55757 7.39036 6.94268 5.44728 2.7788 2.11184 1.332 0.86634 0.52147 0.50156 0.26026 0.33801 0.50218 0.56218 0.68243 1.15961 1.99106 2.60164 6.23383 6.90197 7.20989 7.6435 7.97734 8.48411 8.84165 8.94548 9.12571 9.02995 8.14309 7.93989 7.21059 6.3661 5.11688 4.4518 4.4576 4.54938 4.67821 4.91143 5.16108 5.43646 5.88762 6.22634 6.40116 6.53402 6.63717 6.745 6.90834 6.99087 7.01577 7.03988 7.02316 6.93512)) (quote (12.29521 12.11732 11.97163 11.66643 11.51545 11.42868 11.40399 11.19469 11.12523 11.05934 11.06081 11.06224 11.11109 11.06062 11.00239 10.82721 10.65585 10.61677 10.47792 10.32391 9.68622 9.29422 9.16218 9.10782 8.78611 8.71693 8.57892 7.68255 7.41384 7.24962 7.23567 7.37315 7.22883 7.18039 6.97208 6.45855 5.74631 5.27649 5.01378 2.93107 2.41214 2.5096 2.65184 2.40654 2.62652 2.56669 2.17876 1.40118 1.39228 0.91809 0.84921 0.51608 0.29499 0.1603 4.0E-5 -0.1142 -0.45895 -0.65251 -2.15795 -2.44609 -2.9176 -3.05139 -3.14276 -3.25025 -3.03084 -2.80019 -1.95043 -1.91077 -2.11367 -2.28066 -2.57728 -3.26312 -3.78418 -4.05547 -4.00946 -4.37276 -5.1493 -5.30531 -5.61884 -5.77826 -6.18803 -6.61721 -7.12371 -7.31554 -7.35066 -7.55745 -7.69177 -7.81761 -8.09471 -8.27398 -8.44866 -8.56266 -8.66706 -8.77707 -8.99679 -9.08787 -9.17043 -9.21954 -9.228 -9.24376)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-2.22552 -1.68263 -1.23245 -0.51391 -0.166 -0.16066 -0.20506 -0.51432 -0.73567 -1.46548 -2.03737 -2.35392 -2.45417 -2.68471 -2.82183 -3.05741 -3.19549 -3.22414 -3.25048 -3.1108 -0.2568 0.73668 1.22444 1.40074 2.08488 2.10673 2.10183 1.45258 0.42523 -1.39339 -2.25331 -3.85215 -5.2134 -5.58064 -5.93305 -6.29257 -6.34106 -6.0814 -5.76779 -0.5552 2.55007 5.15044 7.58207 9.78674 10.00729 10.10673 9.91744 8.75361 8.43038 7.27486 6.83751 5.36559 2.76525 2.11301 1.33315 0.84982 0.54236 0.56538 0.45326 0.56167 0.76715 0.84262 0.96716 1.43837 2.20278 2.76964 6.23548 6.88193 7.20712 7.64148 7.97487 8.48208 8.85476 8.96908 9.20238 9.13806 8.3089 8.11642 7.4221 6.60993 5.40552 4.77704 4.80462 4.90423 5.04282 5.28528 5.58617 5.87422 6.32753 6.66499 6.84133 6.97416 7.07748 7.18736 7.35955 7.45934 7.49246 7.54974 7.53873 7.4555)) (quote (12.70883 12.46259 12.26278 11.86866 11.66715 11.57577 11.55729 11.37338 11.33081 11.35572 11.43345 11.47279 11.53447 11.50993 11.45454 11.3105 11.15869 11.12281 10.97012 10.80072 9.80497 9.2953 9.1038 9.0236 8.61841 8.54388 8.40622 7.60327 7.44921 7.50632 7.59351 7.98196 8.0957 8.15 8.02478 7.61205 6.94195 6.44682 6.13288 3.19591 2.17693 1.94088 1.81569 1.45667 1.75878 1.69441 1.41745 0.83493 0.914 0.52652 0.48781 0.24582 0.16018 0.06081 -0.05616 -0.12375 -0.42906 -0.63649 -2.13452 -2.4297 -2.88405 -3.03244 -3.11218 -3.17457 -2.89879 -2.64248 -1.79648 -1.74526 -1.98611 -2.15301 -2.43767 -3.08885 -3.56167 -3.81173 -3.7041 -4.04672 -4.82606 -4.99128 -5.32166 -5.5156 -5.98686 -6.44304 -6.93599 -7.12134 -7.15287 -7.34412 -7.47175 -7.58175 -7.82716 -7.9836 -8.14767 -8.25879 -8.35665 -8.46174 -8.67062 -8.76122 -8.84228 -8.90152 -8.91142 -8.93173)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-0.59372 -0.0862 0.32673 0.9809 1.30686 1.31152 1.26646 0.97711 0.76755 0.076 -0.46336 -0.76443 -0.85232 -1.08368 -1.24306 -1.49406 -1.65168 -1.68661 -1.76399 -1.65182 0.96069 1.85044 2.29148 2.44412 3.03966 3.04773 3.02506 2.31234 1.30277 -0.4434 -1.24576 -2.59235 -3.81741 -4.11749 -4.4551 -4.8458 -4.99099 -4.8189 -4.57289 -0.03766 2.88146 5.36447 7.64538 9.6584 9.86887 9.95967 9.74883 8.58199 8.27707 7.13905 6.71392 5.27076 2.74523 2.10951 1.33193 0.8332 0.56156 0.62936 0.64415 0.78507 1.03009 1.12404 1.25166 1.71246 2.40573 2.92807 6.23337 6.85798 7.20212 7.63736 7.96999 8.47655 8.86239 8.98619 9.26892 9.23447 8.46194 8.28058 7.6214 6.84291 5.68629 5.09561 5.14378 5.25082 5.39915 5.6499 6.00214 6.30202 6.75538 7.09013 7.26736 7.40018 7.50327 7.61498 7.79535 7.91256 7.95381 8.04538 8.04021 7.96204)) (quote (12.91764 12.60704 12.35863 11.88431 11.63374 11.5363 11.52401 11.3573 11.33813 11.44536 11.59319 11.66746 11.73993 11.74146 11.69387 11.5831 11.4538 11.42223 11.26644 11.08584 9.77281 9.1618 8.91855 8.81658 8.34196 8.26415 8.12914 7.42525 7.38108 7.64585 7.82214 8.40151 8.739 8.8781 8.82986 8.52016 7.90813 7.40354 7.05155 3.38601 1.88929 1.34083 0.97704 0.53478 0.91922 0.85118 0.68373 0.2907 0.45328 0.14925 0.13922 -0.01526 0.02734 -0.03844 -0.11246 -0.13287 -0.39826 -0.61459 -2.09379 -2.39272 -2.8263 -2.98745 -3.05558 -3.07483 -2.75193 -2.47468 -1.64347 -1.58153 -1.85919 -2.02596 -2.2988 -2.91571 -3.34041 -3.56918 -3.3979 -3.71841 -4.49767 -4.67151 -5.01655 -5.24264 -5.77225 -6.2529 -6.73135 -6.9099 -6.93697 -7.11228 -7.22825 -7.3214 -7.53569 -7.66995 -7.82372 -7.93226 -8.02385 -8.12409 -8.32179 -8.4104 -8.48933 -8.55531 -8.56608 -8.59045)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (1.05509 1.51967 1.89037 2.47148 2.76862 2.77103 2.72615 2.4555 2.25981 1.61495 1.11623 0.83411 0.75957 0.53021 0.34853 0.08674 -0.08687 -0.12739 -0.25635 -0.17212 2.16623 2.94274 3.33186 3.4583 3.9587 3.95261 3.91273 3.15034 2.17011 0.51962 -0.21702 -1.29425 -2.35068 -2.56827 -2.87669 -3.27561 -3.49974 -3.41062 -3.23553 0.52649 3.17978 5.5085 7.61727 9.44532 9.66183 9.74407 9.52731 8.37736 8.09916 6.98409 6.57292 5.16346 2.71888 2.10136 1.32832 0.81649 0.57902 0.69298 0.83136 1.00631 1.28878 1.404 1.53355 1.97978 2.59886 3.07633 6.22755 6.83019 7.19491 7.63114 7.96272 8.46756 8.86461 8.99688 9.32535 9.31917 8.60206 8.4322 7.80817 7.0646 5.95859 5.40673 5.47427 5.58832 5.74628 6.00438 6.4077 6.71846 7.16987 7.50052 7.67804 7.81089 7.9134 8.02672 8.21458 8.34927 8.39853 8.52525 8.526 8.4531)) (quote (12.91732 12.54731 12.25641 11.71173 11.41453 11.30981 11.30357 11.14623 11.14674 11.32678 11.53746 11.64333 11.72442 11.75188 11.71732 11.64134 11.53701 11.5108 11.36294 11.17534 9.58988 8.89503 8.60836 8.4891 7.95995 7.88102 7.7509 7.14989 7.20947 7.66524 7.91769 8.62527 9.14643 9.34898 9.36863 9.15922 8.61709 8.11743 7.74102 3.48917 1.55203 0.71723 0.14601 -0.35087 0.11379 0.04291 -0.01833 -0.22937 0.01152 -0.21268 -0.19564 -0.26653 -0.10321 -0.13723 -0.16875 -0.14156 -0.36662 -0.58673 -2.03597 -2.33506 -2.74446 -2.91611 -2.97275 -2.9513 -2.59083 -2.29738 -1.49148 -1.41966 -1.73297 -1.89954 -2.16069 -2.74376 -3.12056 -3.32798 -3.09117 -3.38824 -4.1646 -4.34646 -4.70402 -4.95983 -5.54448 -6.04702 -6.51012 -6.68158 -6.70331 -6.86232 -6.96165 -7.03697 -7.22085 -7.33364 -7.47747 -7.58374 -7.66932 -7.76481 -7.95103 -8.03612 -8.11229 -8.18156 -8.19257 -8.22051)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (2.6941 3.10885 3.43327 3.93408 4.1958 4.19411 4.1502 3.8954 3.71489 3.12332 2.67203 2.41172 2.35119 2.12657 1.92359 1.65578 1.47003 1.42476 1.24571 1.3022 3.34117 3.99763 4.33095 4.42938 4.83034 4.81 4.75373 3.95551 3.01502 1.48045 0.81535 0.01211 -0.85241 -0.97743 -1.24495 -1.63116 -1.91552 -1.90262 -1.79913 1.12215 3.4377 5.57995 7.50013 9.1531 9.39081 9.46464 9.25658 8.14202 7.89823 6.81121 6.4156 5.04444 2.68638 2.08859 1.32234 0.7997 0.59473 0.7557 1.01337 1.22345 1.541 1.68 1.81037 2.23827 2.78117 3.21384 6.21807 6.79863 7.1855 7.62284 7.95309 8.45514 8.86148 9.00121 9.37171 9.39213 8.72914 8.5711 7.98215 7.27459 6.22176 5.7096 5.79526 5.9159 6.08334 6.3478 6.80156 7.1222 7.56971 7.89494 8.07219 8.20517 8.30674 8.42147 8.61615 8.76824 8.82534 8.98781 8.9945 8.92705)) (quote (12.70693 12.28336 11.95656 11.35226 11.01181 10.89892 10.89848 10.74334 10.75967 11.00232 11.26773 11.40158 11.48906 11.54204 11.52584 11.48554 11.40807 11.38814 11.25927 11.06878 9.25866 8.49822 8.17697 8.04518 7.47693 7.39908 7.27598 6.77985 6.93586 7.56344 7.87853 8.6513 9.31201 9.55436 9.63042 9.51407 9.04943 8.56725 8.17999 3.4954 1.16909 0.07828 -0.66755 -1.19265 -0.652 -0.72495 -0.68498 -0.72331 -0.40999 -0.55831 -0.51592 -0.50739 -0.23117 -0.23533 -0.22493 -0.14982 -0.33426 -0.55284 -1.96138 -2.25682 -2.63883 -2.81835 -2.86376 -2.80444 -2.41615 -2.1112 -1.34062 -1.25977 -1.60748 -1.7738 -2.02339 -2.57309 -2.90224 -3.08832 -2.78426 -3.05665 -3.8274 -4.01666 -4.3846 -4.66766 -5.30393 -5.82571 -6.27265 -6.43676 -6.45229 -6.59469 -6.67237 -6.72896 -6.88325 -6.97539 -7.10967 -7.21396 -7.29384 -7.38466 -7.55915 -7.63916 -7.71196 -7.78099 -7.79164 -7.82262)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (4.29669 4.65552 4.9306 5.34537 5.56547 5.55758 5.51537 5.27208 5.10731 4.57382 4.17532 3.93908 3.89284 3.67566 3.45344 3.18439 2.9906 2.94157 2.71595 2.74546 4.46741 4.99972 5.27471 5.34406 5.64357 5.6092 5.53762 4.71721 3.82553 2.42392 1.83388 1.29712 0.63829 0.61041 0.39246 0.03706 -0.28874 -0.34364 -0.30997 1.73229 3.64841 5.57719 7.29739 8.78799 9.06086 9.12648 8.94056 7.87839 7.67593 6.62166 6.24305 4.91444 2.64792 2.07125 1.31397 0.78284 0.60863 0.81699 1.18866 1.43458 1.78457 1.94956 2.07971 2.48589 2.95171 3.34009 6.20496 6.76338 7.17393 7.6125 7.94112 8.43935 8.85308 8.99928 9.40804 9.45336 8.84306 8.69716 8.1431 7.4725 6.47525 6.0035 6.10597 6.23278 6.40945 6.67931 7.18248 7.51192 7.95368 8.27225 8.44871 8.58192 8.68225 8.7982 8.999 9.16832 9.23306 9.43158 9.4442 9.38235)) (quote (12.28895 11.81843 11.46265 10.81018 10.43077 10.30917 10.31418 10.15503 10.18335 10.47801 10.7894 10.94745 11.03905 11.11688 11.12428 11.11992 11.07062 11.05777 10.95857 10.7691 8.78389 7.97647 7.62977 7.49036 6.89868 6.82412 6.71005 6.31901 6.56313 7.3413 7.70533 8.48217 9.23619 9.49351 9.61277 9.57837 9.19469 8.74036 8.35525 3.3974 0.74541 -0.56762 -1.45429 -1.98375 -1.37327 -1.44753 -1.31292 -1.1894 -0.81011 -0.8868 -0.82085 -0.73734 -0.35626 -0.33254 -0.28092 -0.15766 -0.30126 -0.51293 -1.87049 -2.15827 -2.50991 -2.6943 -2.72884 -2.63485 -2.22862 -1.91678 -1.19096 -1.10191 -1.48275 -1.64876 -1.88694 -2.40375 -2.68557 -2.85034 -2.47748 -2.72403 -3.48653 -3.68256 -4.05878 -4.36658 -5.05092 -5.58927 -6.01935 -6.17587 -6.18431 -6.30986 -6.36091 -6.3979 -6.52355 -6.59593 -6.72108 -6.82366 -6.89815 -6.98441 -7.14695 -7.22035 -7.28916 -7.35438 -7.36403 -7.39754)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (5.83659 6.13426 6.35792 6.68251 6.85534 6.83895 6.7991 6.5617 6.41252 5.94005 5.59822 5.38772 5.35573 5.1486 4.91022 4.64471 4.44705 4.39539 4.12867 4.13251 5.52741 5.9342 6.1497 6.18968 6.38796 6.34011 6.25456 5.42515 4.59 3.33493 2.82118 2.53198 2.0831 2.15136 1.9884 1.67844 1.32921 1.21606 1.18396 2.33836 3.8057 5.49958 7.01345 8.35684 8.67739 8.73505 8.58341 7.58901 7.43396 6.41674 6.05642 4.77425 2.6037 2.0494 1.30324 0.76591 0.62073 0.87631 1.35579 1.63779 2.01731 2.21015 2.33912 2.72063 3.10956 3.45456 6.18829 6.72451 7.16021 7.60012 7.92683 8.42022 8.83946 8.99116 9.4344 9.50287 8.94372 8.81023 8.29077 7.65792 6.71844 6.28765 6.40561 6.53814 6.72377 6.99803 7.54919 7.88631 8.32056 8.63128 8.80649 8.94008 9.03887 9.15587 9.36211 9.54836 9.62048 9.8551 9.87357 9.81741)) (quote (11.66926 11.1591 10.78145 10.09272 9.67954 9.54911 9.55913 9.39094 9.42759 9.76353 10.11174 10.29012 10.38366 10.48539 10.52137 10.55254 10.53213 10.52698 10.46744 10.28266 8.17255 7.33676 6.97381 6.83178 6.23223 6.16312 6.05993 5.77251 6.09561 7.00158 7.40103 8.12487 8.92564 9.1731 9.32128 9.35462 9.05142 8.63302 8.2621 3.19093 0.28697 -1.2118 -2.20531 -2.71804 -2.04561 -2.1205 -1.89916 -1.62604 -1.18777 -1.19735 -1.10973 -0.95587 -0.47821 -0.42865 -0.33659 -0.16507 -0.26772 -0.46704 -1.7639 -2.03988 -2.35842 -2.54437 -2.5685 -2.44336 -2.02903 -1.7148 -1.04259 -0.94618 -1.35882 -1.52445 -1.75139 -2.23581 -2.47068 -2.61422 -2.17117 -2.39079 -3.14252 -3.34467 -3.72711 -4.0571 -4.78585 -5.33807 -5.75066 -5.89938 -5.89986 -6.00837 -6.02785 -6.04444 -6.14252 -6.1961 -6.31256 -6.41369 -6.48314 -6.56494 -6.71535 -6.78059 -6.84482 -6.90261 -6.91066 -6.94616)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (7.28844 7.52067 7.69183 7.92371 8.04428 8.01697 7.98005 7.7419 7.60749 7.19723 6.9145 6.73081 6.71271 6.51814 6.26768 6.01033 5.81305 5.75996 5.45941 5.43936 6.50467 6.78721 6.94341 6.95449 7.054 6.9935 6.89554 6.0697 5.29731 4.19886 3.76048 3.68953 3.44569 3.60371 3.49784 3.24401 2.88784 2.72661 2.63477 2.92084 3.90414 5.34747 6.65362 7.86696 8.24615 8.29615 8.18947 7.27646 7.17409 6.1978 5.8569 4.62467 2.55393 2.02311 1.29014 0.74894 0.63098 0.93311 1.51334 1.8312 2.23714 2.45928 2.5862 2.94055 3.25389 3.55681 6.1681 6.68209 7.14436 7.58573 7.91025 8.3978 8.8207 8.97695 9.45084 9.5407 9.03106 8.91023 8.42495 7.83053 6.95078 6.56131 6.69343 6.83124 7.02547 7.30313 7.9005 8.24408 8.66915 8.97095 9.14447 9.27861 9.37562 9.49351 9.70447 9.90726 9.98648 10.25695 10.28115 10.23074)) (quote (10.85703 10.31512 9.92275 9.20998 8.76902 8.63008 8.64458 8.46377 8.50534 8.87202 9.24772 9.44257 9.53593 9.66039 9.72944 9.79513 9.80371 9.80672 9.79578 9.61903 7.43376 6.5878 6.2177 6.07798 5.48573 5.42414 5.33351 5.14661 5.539 6.54893 6.97081 7.59054 8.393 8.6069 8.76937 8.85398 8.62728 8.25052 7.90444 2.87506 -0.19932 -1.84559 -2.9124 -3.39026 -2.66523 -2.74007 -2.44112 -2.03189 -1.54203 -1.48929 -1.38193 -1.16256 -0.59675 -0.52343 -0.39186 -0.17205 -0.23375 -0.41525 -1.64236 -1.90228 -2.18527 -2.36918 -2.38346 -2.23093 -1.81825 -1.50599 -0.89559 -0.79266 -1.23574 -1.40091 -1.61676 -2.06933 -2.2577 -2.3801 -1.86564 -2.05736 -2.79589 -3.00351 -3.39012 -3.73975 -4.50916 -5.07252 -5.46707 -5.6078 -5.59947 -5.6908 -5.67383 -5.66928 -5.74095 -5.77676 -5.88501 -5.98495 -6.04969 -6.12715 -6.2653 -6.32084 -6.37992 -6.42665 -6.43248 -6.46944)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (8.62823 8.79175 8.91028 9.04858 9.11264 9.07197 9.03846 8.79216 8.67109 8.32258 8.09992 7.94359 7.9387 7.75908 7.50153 7.25677 7.06406 7.01084 6.68532 6.64357 7.38393 7.54601 7.6444 7.62781 7.63309 7.5611 7.45247 6.64194 5.9371 5.00171 4.63578 4.74485 4.69256 4.929 4.87907 4.68782 4.33907 4.14002 3.99608 3.45989 3.93922 5.12225 6.22403 7.32608 7.77311 7.81581 7.76324 6.94344 6.89811 5.96619 5.64568 4.46652 2.49884 1.99244 1.27469 0.73191 0.63939 0.98684 1.65996 2.01299 2.44203 2.69451 2.81859 3.14379 3.38389 3.64644 6.14444 6.63621 7.12642 7.56934 7.8914 8.37214 8.7969 8.95672 9.45745 9.56688 9.10501 8.99706 8.54546 7.98996 7.17171 6.82377 6.96868 7.11131 7.31373 7.59379 8.2352 8.58399 8.99831 9.29019 9.46165 9.59654 9.69154 9.81017 10.02517 10.24398 10.32995 10.63576 10.66552 10.62086)) (quote (9.86462 9.29929 8.8993 8.17474 7.71269 7.56605 7.58446 7.38901 7.43249 7.81983 8.21373 8.42128 8.51251 8.65824 8.76425 8.86284 8.89989 8.91132 8.95663 8.79084 6.57861 5.73992 5.37148 5.23883 4.66837 4.61624 4.53962 4.44869 4.90027 5.98982 6.422 6.89419 7.65645 7.81527 7.97773 8.09583 7.93862 7.6069 7.29467 2.45241 -0.70577 -2.46035 -3.56804 -3.996 -3.22893 -3.30313 -2.93664 -2.40579 -1.8721 -1.76201 -1.6369 -1.35701 -0.71164 -0.6167 -0.44662 -0.1786 -0.19945 -0.35769 -1.50672 -1.74628 -1.99157 -2.16961 -2.17466 -1.99873 -1.5972 -1.29107 -0.75006 -0.64143 -1.11354 -1.27817 -1.48309 -1.90438 -2.04674 -2.14815 -1.56122 -1.72413 -2.44716 -2.65957 -3.04836 -3.41505 -4.22127 -4.79304 -5.1691 -5.30167 -5.28369 -5.35775 -5.29957 -5.27321 -5.31974 -5.33887 -5.43941 -5.53837 -5.59876 -5.67201 -5.79779 -5.84214 -5.89548 -5.92754 -5.93055 -5.96844)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (9.83363 9.92621 9.99293 10.03835 10.04255 9.98611 9.95638 9.69409 9.58444 9.2957 9.1327 9.00377 9.01115 8.84872 8.5899 8.36187 8.17776 8.12574 7.78552 7.7246 8.15137 8.19913 8.24244 8.20011 8.11773 8.03566 7.91827 7.13381 6.49979 5.73037 5.43217 5.67568 5.79388 6.09299 6.09483 5.9683 5.63867 5.41171 5.22452 3.93596 3.90746 4.8263 5.73153 6.74222 7.26448 7.30025 7.30935 6.59268 6.60787 5.72333 5.42401 4.30063 2.43866 1.95748 1.25692 0.71485 0.64595 1.03697 1.7944 2.18141 2.63004 2.91343 3.03401 3.32856 3.49882 3.72306 6.11738 6.58694 7.1064 7.55098 7.87032 8.34328 8.76811 8.93058 9.45431 9.58148 9.16554 9.07065 8.65212 8.13592 7.38068 7.07431 7.23064 7.37763 7.58776 7.86923 8.55213 8.90482 9.30694 9.58799 9.75705 9.8929 9.98571 10.10495 10.32328 10.55749 10.64986 10.99018 11.02529 10.98636)) (quote (8.70743 8.12733 7.7266 7.00235 6.52654 6.37348 6.39517 6.1848 6.22764 6.62626 7.02934 7.24597 7.33329 7.49862 7.64465 7.77398 7.83838 7.8583 7.9659 7.81358 5.62005 4.80497 4.44653 4.32546 3.79026 3.74938 3.68799 3.68714 4.18766 5.33247 5.76396 6.0543 6.73912 6.82449 6.97363 7.10705 7.00995 6.72451 6.45323 1.92921 -1.22394 -3.04763 -4.16552 -4.53171 -3.73412 -3.80712 -3.38394 -2.74678 -2.17728 -2.01497 -1.87416 -1.53889 -0.82262 -0.70824 -0.50077 -0.18472 -0.1649 -0.29456 -1.35799 -1.57288 -1.77862 -1.94677 -1.94329 -1.74808 -1.36686 -1.07083 -0.60607 -0.49258 -0.99225 -1.15627 -1.35044 -1.74103 -1.83793 -1.91852 -1.25823 -1.39153 -2.09684 -2.31338 -2.7024 -3.08357 -3.92267 -4.50013 -4.85733 -4.98159 -4.95314 -5.00991 -4.90586 -4.85709 -4.87984 -4.88344 -4.97677 -5.07496 -5.13138 -5.20054 -5.31389 -5.34556 -5.39263 -5.40642 -5.40601 -5.44429)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (10.88449 10.90501 10.92161 10.87639 10.81832 10.74383 10.71817 10.43189 10.33133 10.09908 9.99404 9.8921 9.91059 9.76742 9.51381 9.3063 9.13464 9.08515 8.74159 8.6643 8.79494 8.73666 8.72877 8.6633 8.50162 8.41112 8.28702 7.53825 6.9769 6.37288 6.13615 6.46307 6.72426 7.06671 7.11344 7.04957 6.7478 6.50204 6.28127 4.33047 3.8065 4.46294 5.18356 6.12357 6.72653 6.75579 6.83246 6.22691 6.30521 5.47059 5.1931 4.12784 2.37363 1.91833 1.23684 0.69776 0.65065 1.08299 1.91549 2.3348 2.79939 3.11378 3.23028 3.49321 3.59803 3.78638 6.08698 6.53437 7.08432 7.53068 7.84702 8.31128 8.73443 8.89863 9.44152 9.58457 9.21264 9.13096 8.7448 8.26812 7.57719 7.31227 7.47862 7.62952 7.84684 8.12871 8.8502 9.20542 9.59401 9.86341 10.02978 10.16684 10.2573 10.37704 10.59801 10.84689 10.94523 11.31899 11.35917 11.3259)) (quote (7.40347 6.81745 6.42251 5.71032 5.22859 5.07088 5.0952 4.8714 4.9116 5.31304 5.71674 5.93906 6.0209 6.20393 6.39211 6.5495 6.63957 6.66782 6.84196 6.70514 4.57256 3.79601 3.45527 3.3499 2.86223 2.83416 2.78898 2.87118 3.41043 4.58664 5.00784 5.09224 5.6683 5.66576 5.78987 5.92099 5.87292 5.63309 5.40786 1.31518 -1.74493 -3.59933 -4.69903 -4.99483 -4.17889 -4.25019 -3.78174 -3.05418 -2.45704 -2.2478 -2.09335 -1.70792 -0.92951 -0.79786 -0.55422 -0.19042 -0.13022 -0.22608 -1.19723 -1.38323 -1.54789 -1.702 -1.69073 -1.48045 -1.12824 -0.84604 -0.46369 -0.34617 -0.8719 -1.03524 -1.21882 -1.57932 -1.63138 -1.69135 -0.95696 -1.05993 -1.74543 -1.96541 -2.35278 -2.74583 -3.61385 -4.19427 -4.53231 -4.64815 -4.60844 -4.64795 -4.49352 -4.42182 -4.42223 -4.41148 -4.49813 -4.59573 -4.64856 -4.71375 -4.81465 -4.83219 -4.87248 -4.86445 -4.86005 -4.89818)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (11.76301 11.71141 11.6804 11.54824 11.42655 11.33193 11.31051 10.99248 10.89838 10.71819 10.66824 10.5925 10.62076 10.49873 10.25735 10.07373 9.91804 9.87239 9.53766 9.44698 9.30441 9.15024 9.09606 9.01065 8.77964 8.68261 8.55396 7.84924 7.36099 6.9185 6.73573 7.09158 7.46319 7.82694 7.90939 7.90222 7.63385 7.37731 7.13299 4.62639 3.63519 4.03648 4.58812 5.47845 6.16565 6.18885 6.3373 5.84892 5.992 5.20942 4.95422 3.94901 2.30402 1.8751 1.21449 0.68065 0.6535 1.12437 2.02215 2.47158 2.94837 3.29337 3.40534 3.63618 3.68093 3.83612 6.05328 6.47857 7.06023 7.50844 7.82154 8.27618 8.69594 8.86097 9.41917 9.57624 9.24631 9.17795 8.82337 8.38628 7.76075 7.53697 7.71197 7.86631 8.09021 8.3715 9.12831 9.48466 9.85848 10.11552 10.27896 10.41751 10.5055 10.62563 10.84855 11.11125 11.21512 11.62096 11.6659 11.63817)) (quote (5.97335 5.39029 5.00728 4.31832 3.83888 3.67877 3.70504 3.47113 3.50731 3.90418 4.30057 4.52547 4.60051 4.79914 5.03051 5.21282 5.32636 5.36258 5.60552 5.48573 3.4521 2.72735 2.41121 2.32522 1.89585 1.88193 1.85365 2.01087 2.57887 3.76363 4.16652 4.03189 4.47479 4.3745 4.46389 4.57649 4.56545 4.36896 4.1928 0.62352 -2.25937 -4.10767 -5.16367 -5.38363 -4.56191 -4.63107 -4.12909 -3.32744 -2.71093 -2.46015 -2.29414 -1.86388 -1.03207 -0.88537 -0.60686 -0.19568 -0.0955 -0.15253 -1.02566 -1.17863 -1.30103 -1.43685 -1.41858 -1.19747 -0.88243 -0.61749 -0.32301 -0.20227 -0.75254 -0.91509 -1.08828 -1.41933 -1.4272 -1.4668 -0.65773 -0.72974 -1.39345 -1.61619 -2.00008 -2.40243 -3.29532 -3.87601 -4.19469 -4.30202 -4.25027 -4.2726 -4.06346 -3.96839 -3.94797 -3.92413 -4.00462 -4.10179 -4.15141 -4.21276 -4.30123 -4.30324 -4.33624 -4.30291 -4.29395 -4.33142)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (12.45413 12.33144 12.25605 12.04203 11.85643 11.73993 11.72281 11.36577 11.27533 11.14191 11.14315 11.0925 11.12903 11.02982 10.80802 10.65122 10.51464 10.47411 10.16081 10.05982 9.6716 9.4333 9.33863 9.23701 8.94804 8.84655 8.71557 8.06191 7.64589 7.35799 7.22069 7.54964 7.99557 8.35686 8.46413 8.50425 8.27165 8.01096 7.7531 4.80893 3.39367 3.55207 3.95359 4.8152 5.58826 5.60584 5.82862 5.4615 5.67015 4.94123 4.70863 3.765 2.23008 1.82788 1.18989 0.66353 0.65451 1.16063 2.11341 2.5903 3.07546 3.45015 3.55724 3.75605 3.74698 3.87205 6.01635 6.41963 7.03414 7.4843 7.79391 8.23803 8.65273 8.81771 9.3874 9.55658 9.26658 9.21163 8.88774 8.49017 7.93087 7.74779 7.93003 8.08736 8.31719 8.59691 9.38544 9.74146 10.09942 10.34347 10.50379 10.64411 10.72953 10.84997 11.07416 11.34975 11.45867 11.89494 11.94428 11.92194)) (quote (4.43978 3.86852 3.50299 2.84771 2.37901 2.2192 2.24676 2.00782 2.03923 2.42537 2.80732 3.032 3.09917 3.31109 3.58555 3.78924 3.92356 3.9672 4.27907 4.17734 2.2758 1.6142 1.32864 1.26514 0.90316 0.90446 0.89351 1.11694 1.70415 2.876 3.25433 2.89894 3.19195 2.98904 3.03654 3.11658 3.13035 2.97371 2.8476 -0.12947 -2.75766 -4.56544 -5.55548 -5.6973 -4.88251 -4.94912 -4.42552 -3.56627 -2.93866 -2.65179 -2.47629 -2.00658 -1.13012 -0.97059 -0.6586 -0.20052 -0.06084 -0.07423 -0.84457 -0.96057 -1.03986 -1.15313 -1.12865 -0.90092 -0.63055 -0.38603 -0.1841 -0.06096 -0.63419 -0.79588 -0.95886 -1.26111 -1.22551 -1.245 -0.36084 -0.40136 -1.04142 -1.26623 -1.64485 -2.05395 -2.96765 -3.54593 -3.84514 -3.94388 -3.87935 -3.88464 -3.61667 -3.49787 -3.45819 -3.42252 -3.49741 -3.59427 -3.64107 -3.69871 -3.7748 -3.75992 -3.78517 -3.72314 -3.70908 -3.74538)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (12.94575 12.7541 12.6382 12.34862 12.09996 11.96017 11.94732 11.5449 11.45527 11.36268 11.41033 11.38341 11.42663 11.35168 11.15697 11.02938 10.91464 10.88039 10.60125 10.49306 9.89051 9.58113 9.45249 9.33886 9.00441 8.90069 8.76964 8.17265 7.82674 7.68372 7.58279 7.82979 8.31201 8.64645 8.76644 8.84157 8.64406 8.38435 8.12252 4.86602 3.08339 3.01576 3.28868 4.14207 5.0007 5.01314 5.31113 5.06743 5.34153 4.66747 4.45761 3.57667 2.15209 1.77681 1.16309 0.6464 0.65369 1.1913 2.18842 2.68964 3.17928 3.58222 3.68421 3.85155 3.79575 3.89402 5.97626 6.35764 7.00607 7.45828 7.76414 8.19689 8.60489 8.76895 9.34632 9.5257 9.27349 9.232 8.93783 8.57956 8.08711 7.94409 8.1322 8.29205 8.5271 8.80428 9.62058 9.97479 10.31592 10.54646 10.70352 10.84591 10.92871 11.04938 11.27417 11.56161 11.67505 12.13985 12.19318 12.17604)) (quote (2.82731 2.27645 1.93336 1.32131 0.87191 0.7155 0.74368 0.50649 0.53305 0.90362 1.26491 1.48689 1.54542 1.76815 2.08435 2.30555 2.45754 2.50785 2.88661 2.80345 1.06171 0.47251 0.22246 0.18395 -0.10338 -0.08608 -0.07958 0.20067 0.79814 1.93745 2.28681 1.72035 1.85483 1.54969 1.55083 1.58712 1.61399 1.49288 1.41589 -0.92472 -3.23015 -4.96602 -5.8715 -5.93592 -5.14061 -5.20434 -4.67094 -3.77057 -3.14004 -2.82257 -2.63967 -2.13589 -1.22348 -1.05332 -0.70935 -0.20493 -0.02634 0.00845 -0.65537 -0.73064 -0.76632 -0.85282 -0.82293 -0.59271 -0.37376 -0.15249 -0.04705 0.07769 -0.5169 -0.67762 -0.83059 -1.10472 -1.02641 -1.0261 -0.0666 -0.07517 -0.68985 -0.91604 -1.28768 -1.70098 -2.6314 -3.20465 -3.48435 -3.57447 -3.49646 -3.4849 -3.15419 -3.01139 -2.95409 -2.90789 -2.97773 -3.07436 -3.11873 -3.1728 -3.23659 -3.20353 -3.22058 -3.12656 -3.10688 -3.14152)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (13.22903 12.97158 12.81954 12.4618 12.15207 11.98806 11.97935 11.52632 11.43474 11.37666 11.46524 11.46052 11.50879 11.45929 11.29914 11.20262 11.11194 11.08503 10.85253 10.74018 9.95744 9.59096 9.43548 9.31434 8.94776 8.84416 8.71529 8.17912 7.90015 7.88987 7.81588 7.92876 8.40893 8.69257 8.81263 8.90838 8.74248 8.48732 8.23031 4.78893 2.70711 2.43425 2.60217 3.46705 4.40918 4.41697 4.78946 4.66944 5.00802 4.38954 4.2024 3.38488 2.07032 1.722 1.13412 0.62928 0.65106 1.21595 2.24646 2.76842 3.25864 3.68787 3.78464 3.92158 3.82688 3.90188 5.93307 6.29268 6.97606 7.4304 7.73229 8.15281 8.55251 8.71481 9.29606 9.48375 9.2671 9.23909 8.97358 8.65427 8.22905 8.1253 8.31791 8.47983 8.71934 8.99302 9.83281 10.18369 10.50715 10.72376 10.87746 11.02225 11.10241 11.22325 11.44798 11.74611 11.86354 12.35469 12.41157 12.39939)) (quote (1.16173 0.63952 0.32316 -0.23716 -0.65876 -0.80832 -0.78014 -1.0073 -0.985 -0.63347 -0.29804 -0.08088 -0.0315 0.19941 0.5547 0.7893 0.95552 1.01156 1.45298 1.38842 -0.17163 -0.6814 -0.8921 -0.90381 -1.11124 -1.07748 -1.05365 -0.72637 -0.12685 0.96248 1.28037 0.52354 0.49899 0.09726 0.0505 0.03519 0.0646 -0.0257 -0.05622 -1.74094 -3.66735 -5.30354 -6.10984 -6.10049 -5.33679 -5.39735 -4.86571 -3.94048 -3.31504 -2.97246 -2.78421 -2.25176 -1.31199 -1.13341 -0.759 -0.20892 0.00791 0.09511 -0.45949 -0.49058 -0.4825 -0.53807 -0.50358 -0.27483 -0.11323 0.08231 0.0881 0.21362 -0.40068 -0.56035 -0.7035 -0.95021 -0.83001 -0.81022 0.22474 0.24845 -0.33923 -0.56611 -0.92913 -1.34413 -2.28714 -2.85278 -3.11303 -3.1945 -3.10234 -3.07419 -2.67706 -2.51008 -2.43685 -2.38145 -2.44676 -2.54325 -2.58557 -2.63619 -2.68781 -2.63533 -2.64379 -2.51459 -2.48881 -2.52131)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (13.29844 12.97931 12.79594 12.37836 12.01071 11.82203 11.81725 11.30986 11.21375 11.18372 11.30726 11.32308 11.37476 11.35166 11.23326 11.16908 11.10416 11.0855 10.9115 10.79792 9.87098 9.462 9.28718 9.16331 8.77852 8.67745 8.55297 8.0803 7.86415 7.97243 7.91599 7.84746 8.28854 8.49892 8.60648 8.70708 8.56698 8.31839 8.07392 4.57254 2.26893 1.81499 1.90298 2.79796 3.81979 3.82341 4.26816 4.27024 4.67148 4.10886 3.94425 3.19048 1.98506 1.6636 1.10303 0.61217 0.64665 1.23417 2.28694 2.82564 3.31252 3.76558 3.85713 3.96518 3.84008 3.89558 5.88684 6.22485 6.94413 7.40069 7.69836 8.10585 8.4957 8.6554 9.23677 9.43084 9.24749 9.23295 8.99497 8.71412 8.35628 8.29087 8.48661 8.65015 8.8933 9.16254 10.02125 10.36726 10.67233 10.87468 11.02499 11.17251 11.25003 11.371 11.59503 11.90262 12.02345 12.53854 12.59846 12.59098)) (quote (-0.53005 -1.0158 -1.30191 -1.80316 -2.18867 -2.32764 -2.30004 -2.50754 -2.48829 -2.15789 -1.85245 -1.64187 -1.60186 -1.36556 -0.97508 -0.73137 -0.55465 -0.49399 0.00371 -0.04269 -1.4052 -1.83083 -1.99956 -1.98335 -2.1077 -2.05734 -2.01664 -1.65226 -1.05804 -0.03367 0.25216 -0.664 -0.84009 -1.32771 -1.42101 -1.49208 -1.46892 -1.53317 -1.52135 -2.55509 -4.06002 -5.57289 -6.26956 -6.19276 -5.47218 -5.52933 -5.01055 -4.07632 -3.46372 -3.10148 -2.90992 -2.35416 -1.39551 -1.21068 -0.80747 -0.21248 0.04181 0.1853 -0.25846 -0.24224 -0.19059 -0.21125 -0.17293 0.05059 0.1498 0.3175 0.22126 0.34677 -0.28558 -0.44409 -0.57763 -0.79764 -0.63641 -0.5975 0.51286 0.56913 0.00992 -0.21694 -0.56978 -0.98399 -1.9355 -2.49101 -2.73195 -2.80476 -2.69784 -2.65338 -2.18645 -1.9952 -1.90776 -1.84449 -1.90583 -2.0022 -2.04285 -2.09015 -2.12976 -2.05669 -2.05618 -1.88878 -1.85645 -1.88634)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (13.1519 12.77615 12.56655 12.0982 11.6769 11.4637 11.46255 10.89874 10.79584 10.78754 10.93975 10.97439 11.02788 11.03182 10.9619 10.93076 10.89272 10.88306 10.77845 10.66635 9.63212 9.19547 9.00905 8.88736 8.49852 8.40241 8.28448 7.87656 7.7183 7.92933 7.88141 7.59088 7.95864 8.07582 8.15897 8.24819 8.12619 7.8848 7.65929 4.2158 1.77423 1.16598 1.19998 2.14222 3.23838 3.23833 3.75163 3.87248 4.33375 3.82683 3.68441 2.99433 1.89659 1.60175 1.06987 0.59509 0.64048 1.24557 2.3094 2.86042 3.34012 3.81403 3.90045 3.98159 3.83515 3.8751 5.83765 6.15423 6.91031 7.36916 7.6624 8.05606 8.43454 8.59085 9.1686 9.36714 9.21478 9.21365 9.00199 8.75897 8.46843 8.44026 8.63781 8.8025 9.04843 9.31231 10.18507 10.52464 10.81075 10.99863 11.14554 11.29614 11.37105 11.49212 11.71482 12.03054 12.15417 12.69052 12.75296 12.74987)) (quote (-2.22062 -2.66268 -2.91579 -3.35188 -3.69337 -3.81781 -3.79131 -3.96844 -3.95043 -3.64193 -3.36946 -3.1669 -3.13621 -2.89743 -2.47691 -2.2285 -2.04518 -1.98113 -1.4356 -1.46471 -2.61997 -2.9591 -3.08447 -3.04001 -3.08022 -3.01346 -2.95658 -2.56503 -1.98245 -1.03534 -0.78033 -1.81551 -2.12819 -2.68633 -2.822 -2.94911 -2.93882 -2.98139 -2.93256 -3.34308 -4.39943 -5.76987 -6.35074 -6.21532 -5.54851 -5.60206 -5.10658 -4.17859 -3.58628 -3.20977 -3.01687 -2.44311 -1.47391 -1.28496 -0.85467 -0.21562 0.07527 0.27852 -0.05387 0.01243 0.10709 0.12513 0.16656 0.38133 0.41411 0.55223 0.35237 0.47708 -0.17163 -0.32887 -0.45301 -0.64707 -0.44571 -0.38807 0.79749 0.8865 0.35713 0.13096 -0.2102 -0.6212 -1.5771 -2.12004 -2.34187 -2.40607 -2.2838 -2.22339 -1.68356 -1.46804 -1.36814 -1.29835 -1.35625 -1.4525 -1.49186 -1.53595 -1.56375 -1.469 -1.45918 -1.2507 -1.2114 -1.23826)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (12.79087 12.36438 12.13384 11.62436 11.15476 10.9178 10.91991 10.29955 10.18803 10.19547 10.36991 10.42168 10.47547 10.50681 10.49139 10.4934 10.48279 10.48269 10.45706 10.34889 9.24418 8.79459 8.60435 8.48978 8.111 8.02227 7.91293 7.5696 7.46372 7.7605 7.71274 7.16796 7.43238 7.43979 7.48789 7.54982 7.43699 7.20223 7.00062 3.72182 1.22963 0.49569 0.50183 1.50682 2.67054 2.66731 3.24413 3.47873 3.99664 3.54482 3.4241 2.79726 1.80522 1.53661 1.03468 0.57803 0.63259 1.24983 2.31352 2.8721 3.34082 3.83214 3.91362 3.97022 3.81199 3.84046 5.78557 6.08092 6.87464 7.33586 7.62443 8.00349 8.36913 8.52128 9.09171 9.29282 9.16906 9.18128 8.99465 8.78871 8.56514 8.57298 8.77101 8.93643 9.18422 9.44184 10.32351 10.65505 10.92176 11.09506 11.23861 11.39264 11.46503 11.58617 11.80692 12.12936 12.25515 12.80986 12.87425 12.87522)) (quote (-3.88245 -4.2743 -4.49243 -4.85863 -5.14869 -5.25451 -5.22958 -5.3648 -5.34572 -5.05861 -4.82099 -4.62757 -4.60591 -4.36761 -3.92341 -3.67471 -3.48882 -3.42274 -2.83971 -2.85278 -3.79716 -4.04977 -4.13161 -4.05932 -4.0165 -3.93387 -3.86181 -3.45279 -2.88715 -2.02668 -1.79953 -2.90551 -3.33315 -3.94235 -4.11363 -4.29318 -4.29986 -4.32447 -4.24479 -4.08049 -4.67752 -5.89118 -6.35444 -6.17149 -5.56802 -5.61783 -5.15531 -4.24804 -3.68305 -3.29754 -3.10524 -2.51871 -1.54707 -1.35612 -0.9005 -0.21833 0.1082 0.37427 0.15267 0.27138 0.40818 0.46843 0.51227 0.71511 0.67844 0.78565 0.48136 0.60448 -0.05885 -0.21473 -0.32967 -0.49853 -0.258 -0.18205 1.07837 1.20019 0.70188 0.47709 0.14904 -0.25639 -1.21261 -1.74058 -1.94362 -1.99925 -1.86111 -1.78515 -1.16962 -0.92994 -0.81935 -0.74438 -0.79936 -0.89546 -0.9339 -0.9749 -0.9911 -0.87367 -0.85426 -0.602 -0.55534 -0.57874)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (12.22029 11.74969 11.50357 10.963 10.45146 10.19214 10.1971 9.52213 9.40069 9.41847 9.60876 9.67601 9.7287 9.78746 9.83171 9.86639 9.88317 9.89298 9.9543 9.8522 8.71283 8.26457 8.07811 7.97551 7.62058 7.54159 7.44273 7.1625 7.10304 7.46787 7.41286 6.59127 6.72771 6.61298 6.61714 6.63707 6.52387 6.29422 6.11994 3.09801 0.64287 -0.18704 -0.18305 0.89828 2.12155 2.11562 2.74973 3.0915 3.66193 3.2642 3.16454 2.60011 1.71124 1.46832 0.99753 0.56101 0.62302 1.24665 2.29915 2.86019 3.31426 3.81907 3.89588 3.9307 3.77056 3.79176 5.73066 6.00501 6.83713 7.30079 7.58449 7.94821 8.29959 8.44681 9.00628 9.20804 9.1105 9.13594 8.973 8.80323 8.64611 8.68855 8.88579 9.05149 9.30018 9.55067 10.43586 10.75779 11.00478 11.16348 11.30378 11.4616 11.53155 11.65276 11.87098 12.19863 12.32594 12.89588 12.96162 12.96627)) (quote (-5.48834 -5.82423 -6.00621 -6.29914 -6.53101 -6.61414 -6.59115 -6.67248 -6.64955 -6.38219 -6.18019 -5.99673 -5.98356 -5.74882 -5.28835 -5.04374 -4.8593 -4.79265 -4.18413 -4.18276 -4.9185 -5.08683 -5.1262 -5.02729 -4.90466 -4.80704 -4.72101 -4.30381 -3.75928 -2.99191 -2.78806 -3.91034 -4.42561 -5.06312 -5.26099 -5.4857 -5.51071 -5.52012 -5.41628 -4.74324 -4.88706 -5.93455 -6.28267 -6.06526 -5.53349 -5.57945 -5.15857 -4.28555 -3.75445 -3.36511 -3.17526 -2.58106 -1.6149 -1.424 -0.94489 -0.22063 0.14051 0.47198 0.3595 0.5325 0.71022 0.81588 0.8615 1.04956 0.94152 1.01688 0.60815 0.72893 0.05272 -0.10169 -0.20766 -0.3521 -0.0734 0.02044 1.35521 1.50984 1.04368 0.82096 0.50733 0.10982 -0.84269 -1.35342 -1.53804 -1.58517 -1.43068 -1.33962 -0.64594 -0.3823 -0.26281 -0.184 -0.23657 -0.33244 -0.37033 -0.40834 -0.4132 -0.27216 -0.2429 0.05564 0.10999 0.09042)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (11.4485 10.94108 10.68468 10.12322 9.57705 9.29744 9.30479 8.57934 8.44726 8.47073 8.67074 8.75193 8.80228 8.88818 8.99619 9.06248 9.10602 9.12588 9.28024 9.18602 8.04588 7.61245 7.43708 7.35109 7.03313 6.96612 6.87947 6.65961 6.64038 7.05531 6.98686 5.87664 5.86683 5.62231 5.57584 5.54102 5.41793 5.19131 5.04618 2.35596 0.02271 -0.87317 -0.84667 0.32247 1.59628 1.58812 2.27223 2.71316 3.33133 2.98625 2.90687 2.40368 1.61494 1.39705 0.95847 0.54404 0.61181 1.23576 2.26625 2.82439 3.26025 3.77423 3.84673 3.86284 3.71093 3.72913 5.67299 5.92658 6.79782 7.26399 7.54261 7.89026 8.22601 8.36757 8.91246 9.11299 9.03923 9.07775 8.9371 8.80248 8.71105 8.78657 8.98176 9.14732 9.39591 9.63843 10.5215 10.83222 11.05932 11.20351 11.34068 11.50265 11.57031 11.69159 11.9067 12.238 12.36614 12.94797 13.01442 13.02235)) (quote (-7.01202 -7.28707 -7.43251 -7.6502 -7.81791 -7.87431 -7.85357 -7.86889 -7.83902 -7.58876 -7.4221 -7.24918 -7.24377 -7.01566 -6.54733 -6.31103 -6.13203 -6.06629 -5.44573 -5.43176 -5.96663 -6.05509 -6.05423 -5.93066 -5.73346 -5.62206 -5.52353 -5.10685 -4.58647 -3.91564 -3.72917 -4.80881 -5.37994 -6.02054 -6.23415 -6.4934 -6.53537 -6.53122 -6.41007 -5.30846 -5.02184 -5.89872 -6.13833 -5.90125 -5.44813 -5.4902 -5.11854 -4.29222 -3.80105 -3.41284 -3.22725 -2.63037 -1.67731 -1.48846 -0.98773 -0.2225 0.17211 0.57107 0.56498 0.79365 1.01075 1.16464 1.2115 1.38233 1.20211 1.2451 0.73271 0.85037 0.16306 0.01023 -0.08699 -0.20781 0.10803 0.21929 1.62777 1.81512 1.38209 1.1621 0.86415 0.4768 -0.468 -0.9593 -1.12596 -1.16468 -0.99342 -0.88775 -0.11382 0.17347 0.30009 0.38141 0.33076 0.23523 0.19756 0.16242 0.16861 0.33408 0.37341 0.72054 0.78288 0.7675)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (10.4872 9.95075 9.68924 9.1171 8.54444 8.24728 8.25653 7.48699 7.34421 7.36966 7.57362 7.66733 7.71429 7.82669 8.00133 8.09766 8.16675 8.19656 8.44794 8.363 7.25333 6.84713 6.68962 6.62459 6.35579 6.30285 6.22996 6.06662 6.08135 6.52863 6.44198 5.0428 4.87554 4.4988 4.39755 4.29784 4.15609 3.93012 3.8145 1.51135 -0.62117 -1.55348 -1.48147 -0.21528 1.09925 1.08931 1.81521 2.346 3.00652 2.71228 2.65227 2.20878 1.51663 1.32297 0.91758 0.52712 0.599 1.21697 2.21495 2.76461 3.17887 3.69728 3.76591 3.76664 3.63325 3.65275 5.61264 5.84575 6.75674 7.22549 7.49882 7.82972 8.1485 8.2837 8.81045 9.00788 8.95543 9.00686 8.88702 8.78643 8.75968 8.86662 9.05855 9.22355 9.471 9.70473 10.57984 10.87778 11.08494 11.2148 11.34903 11.51551 11.58104 11.70241 11.91384 12.24715 12.37544 12.96561 13.03211 13.04289)) (quote (-8.4283 -8.63856 -8.74781 -8.88967 -8.9882 -9.01402 -8.99574 -8.93317 -8.89304 -8.65641 -8.52385 -8.36184 -8.3633 -8.1449 -7.6779 -7.45394 -7.28419 -7.22088 -6.60286 -6.57834 -6.9252 -6.94016 -6.90245 -6.75687 -6.49232 -6.36864 -6.25928 -5.85109 -5.35675 -4.78297 -4.60683 -5.58244 -6.17453 -6.79156 -7.00874 -7.28905 -7.34393 -7.32666 -7.19487 -5.75508 -5.07675 -5.7835 -5.92516 -5.68462 -5.31561 -5.35378 -5.03772 -4.2693 -3.82348 -3.44123 -3.26158 -2.66686 -1.73425 -1.54938 -1.02897 -0.22395 0.20293 0.67094 0.76744 1.05262 1.30725 1.51177 1.5594 1.71097 1.45893 1.46946 0.85497 0.96875 0.27213 0.12099 0.0323 -0.06571 0.2862 0.41439 1.89581 2.11569 1.71662 1.50002 1.21892 0.84391 -0.08925 -0.55904 -0.70826 -0.73869 -0.5503 -0.43056 0.42535 0.7359 0.86786 0.95039 0.90119 0.80614 0.76836 0.73601 0.75293 0.94356 0.99313 1.39091 1.4615 1.45062)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (9.35122 8.79395 8.53221 7.95943 7.36912 7.0578 7.06844 6.26345 6.11063 6.13539 6.33809 6.44307 6.48578 6.62371 6.86647 6.99074 7.08365 7.12309 7.47316 7.3985 6.3471 5.97918 5.84566 5.80551 5.59687 5.55989 5.50205 5.39041 5.43294 5.8955 5.78751 4.11085 3.7825 3.27651 3.11906 2.94752 2.77964 2.55208 2.46493 0.58356 -1.27835 -2.21879 -2.08045 -0.71036 0.63451 0.62325 1.38201 1.9922 2.68911 2.44351 2.40183 2.01617 1.4166 1.24626 0.8749 0.51026 0.58466 1.19011 2.14554 2.68096 3.07041 3.58819 3.65341 3.64234 3.53775 3.56287 5.54969 5.76259 6.71393 7.1853 7.45315 7.76665 8.06717 8.19532 8.70044 8.89291 8.8593 8.92343 8.82288 8.75505 8.79179 8.92835 9.11585 9.27989 9.52512 9.74929 10.61041 10.89396 11.08129 11.1971 11.3286 11.49996 11.56354 11.68502 11.89226 12.22587 12.35359 12.94838 13.01425 13.02741)) (quote (-9.71365 -9.85617 -9.93028 -9.99709 -10.02246 -10.01412 -9.99845 -9.84673 -9.79291 -9.56583 -9.46526 -9.31438 -9.32166 -9.11602 -8.66015 -8.45229 -8.2954 -8.23602 -7.63589 -7.60303 -7.7792 -7.72884 -7.65866 -7.49443 -7.17151 -7.03737 -6.91903 -6.52641 -6.05889 -5.5798 -5.40609 -6.21596 -6.7925 -7.35886 -7.56669 -7.85235 -7.91369 -7.88249 -7.74627 -6.06466 -5.04799 -5.58974 -5.64766 -5.42099 -5.13998 -5.17426 -4.91887 -4.21822 -3.82254 -3.4508 -3.27872 -2.69079 -1.78567 -1.60663 -1.06851 -0.22499 0.23289 0.77094 0.96524 1.30719 1.59722 1.85431 1.90231 2.03308 1.71073 1.68914 0.97487 1.08403 0.37991 0.23058 0.15018 0.07415 0.46101 0.60562 2.15906 2.41121 2.0468 1.83426 1.57107 1.21051 0.29284 -0.15345 -0.28584 -0.30811 -0.1023 0.03092 0.97017 1.30347 1.43902 1.52148 1.47328 1.37889 1.34068 1.31104 1.33835 1.55476 1.61469 2.06497 2.144 2.13792)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (8.05832 7.48874 7.23133 6.66756 6.06903 5.74756 5.75911 4.92948 4.76799 4.79053 4.98739 5.10255 5.14038 5.30253 5.61342 5.76309 5.87758 5.92608 6.37407 6.3103 5.34095 5.02074 4.91652 4.90466 4.76571 4.74636 4.70465 4.63902 4.7035 5.16535 5.03461 3.10383 2.6184 1.99155 1.77934 1.53268 1.33307 1.10212 1.04122 -0.40469 -1.93778 -2.85999 -2.63721 -1.15883 0.20566 0.19351 0.97564 1.65378 2.38066 2.18115 2.15664 1.82661 1.31517 1.1671 0.83053 0.49348 0.56883 1.15508 2.05845 2.57376 2.93539 3.44716 3.5095 3.49036 3.42477 3.45978 5.48422 5.67722 6.6694 7.14346 7.40565 7.70109 7.98213 8.10258 8.58264 8.76831 8.75104 8.82763 8.74481 8.70836 8.80717 8.97144 9.1534 9.31606 9.55797 9.77183 10.61276 10.88038 11.04809 11.15023 11.27927 11.45585 11.5177 11.63931 11.84186 12.17401 12.30044 12.89595 12.96047 12.97554)) (quote (-10.84657 -10.91944 -10.9601 -10.95394 -10.9033 -10.85763 -10.84459 -10.59349 -10.52258 -10.30057 -10.22915 -10.08949 -10.10148 -9.91155 -9.47704 -9.28869 -9.14794 -9.09395 -8.52752 -8.48855 -8.5152 -8.40923 -8.3119 -8.13297 -7.76226 -7.61975 -7.49444 -7.12349 -6.68251 -6.29307 -6.11334 -6.69756 -7.22193 -7.7112 -7.89657 -8.17038 -8.22968 -8.18258 -8.04742 -6.22196 -4.93311 -5.3194 -5.31107 -5.11638 -4.92563 -4.95609 -4.76504 -4.14053 -3.79908 -3.44219 -3.27918 -2.70249 -1.83152 -1.66011 -1.10627 -0.22562 0.2619 0.87044 1.15673 1.55515 1.87817 2.18923 2.23732 2.34622 1.95626 1.90331 1.09234 1.19615 0.48637 0.33896 0.26662 0.21172 0.63238 0.79288 2.41728 2.70136 2.37217 2.16434 1.92003 1.57594 0.67753 0.2566 0.14038 0.1261 0.34958 0.49564 1.51918 1.87462 2.01202 2.09316 2.04555 1.95205 1.91311 1.88609 1.92343 2.16613 2.23651 2.74085 2.82849 2.82746)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (6.62878 6.05553 5.80656 5.26092 4.66404 4.33703 4.34898 3.50759 3.33954 3.3595 3.54671 3.67115 3.70368 3.88839 4.26588 4.43797 4.57136 4.62817 5.17081 5.1181 4.2501 3.9852 3.91466 3.9339 3.87253 3.87219 3.84741 3.82145 3.90248 4.3491 4.19603 2.04591 1.41495 0.68086 0.41818 0.09695 -0.13766 -0.37301 -0.41084 -1.42807 -2.58811 -3.46831 -3.14615 -1.55756 -0.18423 -0.19687 0.59878 1.33261 2.08262 1.92633 1.91771 1.64082 1.21263 1.08567 0.78452 0.47678 0.55157 1.11182 1.95423 2.44351 2.77456 3.2747 3.33472 3.31135 3.29471 3.3438 5.41629 5.58972 6.6232 7.1 7.35633 7.63312 7.89348 8.00561 8.45724 8.63431 8.63088 8.71966 8.65295 8.6464 8.80566 8.99562 9.17095 9.33186 9.56931 9.77215 10.58657 10.8367 10.98514 11.07408 11.20094 11.3831 11.44345 11.56525 11.76263 12.0915 12.2159 12.80809 12.87053 12.887)) (quote (-11.80805 -11.8104 -11.81987 -11.74404 -11.61577 -11.53007 -11.51963 -11.16028 -11.06903 -10.84746 -10.80174 -10.67334 -10.68886 -10.51751 -10.11473 -9.94893 -9.82724 -9.78002 -9.26312 -9.22029 -9.12162 -8.97105 -8.85264 -8.66351 -8.25699 -8.10841 -7.97827 -7.63399 -7.21828 -6.91104 -6.7166 -7.01919 -7.45615 -7.84362 -7.99385 -8.23788 -8.28508 -8.21915 -8.08958 -6.21561 -4.73114 -4.97545 -4.92115 -4.77711 -4.67721 -4.70394 -4.57947 -4.03796 -3.75407 -3.41608 -3.26355 -2.70231 -1.87181 -1.7097 -1.14219 -0.22583 0.2899 0.96876 1.34036 1.79432 2.14768 2.51358 2.56158 2.64803 2.19432 2.11119 1.20736 1.30509 0.59148 0.44611 0.38159 0.34697 0.80024 0.97608 2.67027 2.98584 2.69232 2.48982 2.26528 1.93959 1.06413 0.67029 0.56948 0.56304 0.80435 0.96259 2.07094 2.44782 2.58537 2.66399 2.61658 2.52422 2.48428 2.45982 2.5068 2.77619 2.85705 3.41678 3.51313 3.51735)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (5.0853 4.51705 4.28015 3.7611 3.176 2.84856 2.86045 2.02202 1.85022 1.86846 2.04303 2.176 2.20305 2.40831 2.84925 3.04047 3.18968 3.25382 3.8853 3.84345 3.09119 2.88724 2.85371 2.9062 2.92843 2.94819 2.94086 2.94772 3.04048 3.4592 3.28608 0.96211 0.20431 -0.61856 -0.92472 -1.31596 -1.58619 -1.82591 -1.84455 -2.45904 -3.21773 -4.03527 -3.60233 -1.90414 -0.53259 -0.54532 0.2538 1.03043 1.79639 1.68013 1.68603 1.45949 1.10928 1.00217 0.73696 0.46016 0.53295 1.06032 1.83361 2.29095 2.5889 3.0716 3.12985 3.10615 3.14806 3.21532 5.34598 5.5002 6.57535 7.05494 7.30524 7.56279 7.80135 7.90455 8.32445 8.49114 8.49905 8.59973 8.54749 8.56924 8.78712 9.00063 9.16832 9.32711 9.55894 9.75009 10.53154 10.76268 10.89233 10.96862 11.09363 11.28169 11.34081 11.46284 11.6546 11.97834 12.09998 12.68465 12.74427 12.76162)) (quote (-12.58166 -12.5137 -12.49473 -12.35365 -12.14742 -12.01957 -12.0116 -11.5369 -11.42237 -11.19667 -11.17274 -11.05564 -11.07348 -10.92342 -10.56271 -10.42205 -10.3219 -10.28272 -9.83083 -9.78632 -9.5888 -9.40557 -9.27282 -9.07843 -8.6492 -8.49707 -8.36431 -8.05056 -7.65799 -7.42334 -7.20556 -7.17655 -7.49372 -7.75738 -7.8608 -8.05724 -8.0813 -7.99284 -7.87229 -6.0385 -4.44263 -4.56188 -4.48428 -4.4097 -4.39963 -4.42276 -4.36563 -3.91233 -3.68857 -3.37324 -3.23246 -2.69065 -1.90652 -1.75531 -1.1762 -0.22564 0.31681 1.06524 1.51458 2.02255 2.40336 2.82438 2.8722 2.93616 2.42372 2.31199 1.31985 1.4108 0.69522 0.55201 0.49508 0.47985 0.96452 1.15512 2.91779 3.26433 3.00679 2.81024 2.60626 2.30081 1.45186 1.08673 1.00053 1.00172 1.26096 1.43068 2.62395 3.02145 3.1575 3.23245 3.18487 3.09394 3.05277 3.03081 3.087 3.38338 3.4747 4.09086 4.19596 4.20562)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (3.45251 2.89783 2.67607 2.19123 1.62814 1.30583 1.31725 0.49813 0.32605 0.34456 0.50436 0.64527 0.66689 0.89038 1.39 1.59675 1.7584 1.8287 2.54075 2.50916 1.88195 1.7425 1.74817 1.83529 1.94515 1.98575 1.99613 2.02864 2.12904 2.5093 2.32023 -0.12245 -0.98198 -1.8709 -2.2111 -2.66389 -2.96749 -3.21028 -3.214 -3.46877 -3.81502 -4.5529 -4.00165 -2.19694 -0.83738 -0.84984 -0.05726 0.74882 1.52328 1.44358 1.46254 1.2833 1.00541 0.91678 0.68792 0.44363 0.51303 1.00063 1.69744 2.11699 2.37961 2.83892 2.89597 2.87581 2.98541 3.07477 5.27338 5.40875 6.52589 7.00831 7.25242 7.49018 7.70585 7.79954 8.1845 8.33907 8.35582 8.46806 8.4286 8.47699 8.75144 8.98629 9.14537 9.30168 9.52671 9.70555 10.44749 10.65816 10.76961 10.83388 10.95741 11.1517 11.20987 11.33219 11.5179 11.83461 11.95274 12.52561 12.58165 12.59934)) (quote (-13.15402 -13.01701 -12.97275 -12.77184 -12.48865 -12.3172 -12.31151 -11.71642 -11.57608 -11.34199 -11.33567 -11.22992 -11.24892 -11.12264 -10.81403 -10.70063 -10.62402 -10.59399 -10.22186 -10.17771 -9.90921 -9.70594 -9.56602 -9.37165 -8.93369 -8.78071 -8.64761 -8.36703 -7.9947 -7.82121 -7.57193 -7.16918 -7.33837 -7.45986 -7.50634 -7.63836 -7.62788 -7.51274 -7.40346 -5.68822 -4.06967 -4.08369 -4.0072 -4.02084 -4.09798 -4.11766 -4.12716 -3.7656 -3.60372 -3.3145 -3.18662 -2.66796 -1.93569 -1.79686 -1.20822 -0.22503 0.34257 1.15919 1.67792 2.23774 2.64291 3.11873 3.1664 3.20833 2.6433 2.50498 1.42978 1.51325 0.79755 0.65664 0.60703 0.61032 1.12514 1.32992 3.15964 3.53656 3.31517 3.12517 2.94243 2.65897 1.83998 1.50501 1.43257 1.44118 1.71838 1.89884 3.1767 3.59391 3.72686 3.79702 3.74895 3.65979 3.61714 3.59764 3.66262 3.98614 4.08786 4.76121 4.87506 4.89029)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (1.75659 1.22382 1.01965 0.57571 0.0448 -0.26646 -0.25589 -1.03802 -1.20632 -1.18446 -1.04065 -0.89227 -0.87584 -0.63678 -0.08478 0.13367 0.30412 0.37925 1.16121 1.13898 0.64091 0.56732 0.6132 0.73557 0.93494 0.99679 1.02483 1.07568 1.18048 1.51411 1.31491 -1.18313 -2.11377 -3.04247 -3.40517 -3.9074 -4.2392 -4.48232 -4.47552 -4.42786 -4.3686 -5.01384 -4.34084 -2.4351 -1.09713 -1.10897 -0.33274 0.48919 1.26453 1.21766 1.24813 1.11288 0.90132 0.8297 0.63749 0.42721 0.49188 0.93286 1.54669 1.92276 2.14809 2.57799 2.63439 2.62158 2.80742 2.92264 5.19857 5.31547 6.47485 6.96013 7.19789 7.41533 7.60709 7.69073 8.03762 8.17835 8.20145 8.3249 8.29652 8.36975 8.69857 8.95243 9.102 9.25549 9.47252 9.63847 10.33432 10.52306 10.61703 10.67002 10.79245 10.99327 11.05078 11.17345 11.35272 11.66048 11.77436 12.33102 12.38271 12.40019)) (quote (-13.51493 -13.31119 -13.24509 -12.99064 -12.63284 -12.41709 -12.41342 -11.69528 -11.52714 -11.28093 -11.28791 -11.19363 -11.21268 -11.11246 -10.86542 -10.78089 -10.7293 -10.70937 -10.43059 -10.38864 -10.07756 -9.86718 -9.72758 -9.53877 -9.10663 -8.95559 -8.82444 -8.57846 -8.22286 -8.09769 -7.80946 -7.00042 -6.99882 -6.9642 -6.94564 -6.99816 -6.94205 -6.79596 -6.69902 -5.16726 -3.61593 -3.54675 -3.49701 -3.61724 -3.77748 -3.79388 -3.86782 -3.59983 -3.50075 -3.24073 -3.12679 -2.63472 -1.95932 -1.83427 -1.2382 -0.22402 0.36712 1.24993 1.829 2.4379 2.86414 3.3938 3.44145 3.46234 2.85193 2.68942 1.5371 1.6124 0.89847 0.75997 0.71744 0.73834 1.28203 1.50038 3.39559 3.80223 3.61704 3.43418 3.27328 3.01342 2.22774 1.92424 1.86463 1.88044 2.17556 2.36598 3.72765 4.16357 4.29187 4.35619 4.30736 4.22032 4.176 4.15893 4.23224 4.58294 4.69496 5.42594 5.54847 5.56936)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (0.02494 -0.47796 -0.66267 -1.06006 -1.5489 -1.84293 -1.83353 -2.56002 -2.71997 -2.69073 -2.56326 -2.40779 -2.3961 -2.1444 -1.54787 -1.3217 -1.14624 -1.06776 -0.22874 -0.24283 -0.61281 -0.62135 -0.53548 -0.37811 -0.08952 -0.00639 0.03897 0.1009 0.20776 0.48915 0.28728 -2.19624 -3.16299 -4.10257 -4.4746 -5.01084 -5.36284 -5.60212 -5.58902 -5.30722 -4.86749 -5.4114 -4.61747 -2.61857 -1.3109 -1.32181 -0.57133 0.25276 1.02126 1.00326 1.04362 0.94883 0.7973 0.74113 0.58576 0.41091 0.46958 0.85718 1.38249 1.70958 1.89596 2.29045 2.34672 2.34491 2.61483 2.75945 5.12163 5.22046 6.42226 6.91045 7.14169 7.33833 7.50519 7.57828 7.88403 8.00925 8.03625 8.17051 8.15148 8.24768 8.62847 8.89893 9.03816 9.1885 9.39632 9.54884 10.19198 10.35741 10.43472 10.47722 10.59897 10.8066 10.86379 10.98687 11.15934 11.4562 11.56508 12.10105 12.14762 12.16434)) (quote (-13.65764 -13.39047 -13.30618 -13.0052 -12.57648 -12.31655 -12.31458 -11.47336 -11.27609 -11.01478 -11.03076 -10.94819 -10.96628 -10.89412 -10.7173 -10.66273 -10.63709 -10.628 -10.45467 -10.4165 -10.09091 -9.88633 -9.75465 -9.57704 -9.16556 -9.01933 -8.89242 -8.68125 -8.33841 -8.24767 -7.91412 -6.67725 -6.48844 -6.2888 -6.19953 -6.16001 -6.04816 -5.86716 -5.78244 -4.48317 -3.08665 -2.95782 -2.96106 -3.20559 -3.44341 -3.45673 -3.59151 -3.41717 -3.38096 -3.1529 -3.05376 -2.59143 -1.97748 -1.86748 -1.26606 -0.22261 0.39039 1.33678 1.9665 2.62108 3.06499 3.64689 3.69473 3.69608 3.04854 2.8646 1.64176 1.70821 0.99793 0.86197 0.82628 0.86387 1.43513 1.66642 3.62547 4.06107 3.91198 3.73684 3.59826 3.36354 2.61434 2.3435 2.29573 2.3185 2.63142 2.831 4.27524 4.72876 4.85093 4.90844 4.85858 4.77408 4.72791 4.71324 4.79442 5.17222 5.29437 6.08314 6.21424 6.24083)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-1.71458 -2.1801 -2.34414 -2.69042 -3.12769 -3.3982 -3.3902 -4.04184 -4.18847 -4.14698 -4.03539 -3.87315 -3.86557 -3.60444 -2.97262 -2.74277 -2.56619 -2.48594 -1.60471 -1.61209 -1.86001 -1.80645 -1.68205 -1.49075 -1.11547 -1.01141 -0.94936 -0.88337 -0.77582 -0.54959 -0.74526 -3.13977 -4.10458 -5.02448 -5.39148 -5.94363 -6.30519 -6.53503 -6.51943 -6.07899 -5.3014 -5.73974 -4.83004 -2.74804 -1.47835 -1.48804 -0.77213 0.04057 0.79449 0.8012 0.84978 0.79171 0.69363 0.65129 0.5328 0.39472 0.4462 0.7738 1.20605 1.47892 1.62502 1.97813 2.03474 2.04741 2.40844 2.58574 5.04263 5.12383 6.36817 6.85928 7.08387 7.25923 7.40027 7.46231 7.72396 7.83205 7.86048 8.00517 7.99372 8.11095 8.54113 8.82573 8.95384 9.10073 9.29812 9.43672 10.02052 10.1613 10.22288 10.25576 10.37726 10.59197 10.64917 10.77273 10.93806 11.22207 11.32521 11.83594 11.87663 11.89201)) (quote (-13.5789 -13.25255 -13.15381 -12.81388 -12.31925 -12.01612 -12.01549 -11.05398 -10.82699 -10.5485 -10.5694 -10.49889 -10.51515 -10.47272 -10.37375 -10.34968 -10.35034 -10.35263 -10.29499 -10.26192 -9.9487 -9.76247 -9.64622 -9.48549 -9.10946 -8.97094 -8.85048 -8.67316 -8.33882 -8.26806 -7.88413 -6.21003 -5.82467 -5.45662 -5.29372 -5.15274 -4.97669 -4.75744 -4.68379 -3.64841 -2.48847 -2.32432 -2.40673 -2.7924 -3.10106 -3.11152 -3.30215 -3.21983 -3.24571 -3.05198 -2.9684 -2.53863 -1.99023 -1.89642 -1.29177 -0.2208 0.41235 1.41907 2.08924 2.78552 3.24353 3.87543 3.9238 3.90758 3.23212 3.02989 1.74373 1.80067 1.09592 0.96263 0.93352 0.98688 1.58438 1.82798 3.84908 4.31282 4.19965 4.03276 3.91689 3.70873 2.99906 2.76188 2.72494 2.75441 3.08494 3.29284 4.81796 5.28789 5.40253 5.4523 5.40122 5.31969 5.27152 5.25926 5.34781 5.7525 5.88457 6.73097 6.87045 6.90276)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-3.43362 -3.85488 -3.99764 -4.28939 -4.66622 -4.90689 -4.90047 -5.45789 -5.58595 -5.52672 -5.42972 -5.26104 -5.25683 -4.98971 -4.33307 -4.10361 -3.92979 -3.84945 -2.94253 -2.94486 -3.08138 -2.97075 -2.81051 -2.58721 -2.12997 -2.00573 -1.92788 -1.86449 -1.75658 -1.58571 -1.76511 -3.99361 -4.91674 -5.78582 -6.13288 -6.68076 -7.03899 -7.2525 -7.23752 -6.71723 -5.66081 -5.99386 -4.97784 -2.8249 -1.59966 -1.60784 -0.93458 -0.14651 0.58515 0.61225 0.6673 0.64204 0.59059 0.56036 0.47872 0.37865 0.42181 0.683 1.01869 1.23244 1.33725 1.64316 1.70053 1.73088 2.18914 2.40213 4.96167 5.02567 6.31259 6.80666 7.02444 7.17809 7.29245 7.34299 7.55766 7.64704 7.67449 7.82915 7.82353 7.95976 8.43659 8.73278 8.84909 8.99222 9.17797 9.30221 9.82007 9.93493 9.98181 10.00601 10.12772 10.34974 10.4073 10.53141 10.68929 10.95848 11.05516 11.53608 11.57011 11.58358)) (quote (-13.27904 -12.89862 -12.78921 -12.41829 -11.86402 -11.51958 -11.5199 -10.44386 -10.18739 -9.89074 -9.91279 -9.85483 -9.86853 -9.85716 -9.84241 -9.84885 -9.87561 -9.88956 -9.9557 -9.9287 -9.65277 -9.49675 -9.40319 -9.26487 -8.93873 -8.81081 -8.69893 -8.55337 -8.22315 -8.15776 -7.72 -5.61223 -5.02864 -4.49456 -4.25801 -4.0099 -3.76339 -3.50361 -3.43897 -2.68028 -1.82953 -1.65443 -1.84154 -2.38403 -2.75569 -2.76352 -3.00374 -3.0101 -3.09642 -2.93902 -2.8716 -2.47692 -1.99764 -1.92105 -1.31525 -0.2186 0.43293 1.49614 2.19613 2.92954 3.39801 4.077 4.12633 4.095 3.40169 3.18463 1.84296 1.88975 1.19242 1.06192 1.03913 1.10734 1.72972 1.98497 4.06625 4.55724 4.47964 4.32155 4.22868 4.04835 3.3811 3.17844 3.15125 3.18716 3.53503 3.75039 5.35425 5.83928 5.94508 5.98626 5.9338 5.85571 5.80543 5.79557 5.89099 6.32224 6.46397 7.36752 7.51516 7.55313)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-5.10413 -5.4749 -5.59641 -5.83141 -6.1397 -6.34432 -6.33956 -6.78368 -6.88778 -6.80491 -6.72055 -6.54577 -6.54406 -6.27459 -5.60471 -5.37963 -5.21237 -5.13363 -4.21896 -4.21799 -4.25804 -4.0973 -3.90507 -3.65254 -3.12025 -2.97694 -2.88446 -2.82975 -2.7208 -2.60278 -2.75492 -4.74013 -5.5817 -6.3693 -6.68152 -7.20366 -7.54392 -7.73313 -7.72104 -7.19889 -5.93726 -6.16974 -5.06105 -2.85129 -1.67555 -1.68199 -1.0585 -0.3078 0.39407 0.43709 0.49684 0.50032 0.48844 0.46855 0.42361 0.36272 0.39649 0.5851 0.82186 0.97198 1.0348 1.28789 1.34637 1.39729 1.95789 2.20926 4.87882 4.92609 6.25557 6.75262 6.96347 7.09499 7.18185 7.22047 7.38538 7.4545 7.47859 7.64276 7.64121 7.79434 8.31492 8.62012 8.72399 8.86308 9.03598 9.14545 9.59085 9.67857 9.71188 9.7284 9.85079 10.08033 10.13861 10.26334 10.41351 10.66592 10.7554 11.20191 11.22853 11.23952)) (quote (-12.76199 -12.33343 -12.21702 -11.82331 -11.21686 -10.83391 -10.83476 -9.653 -9.36819 -9.0536 -9.0735 -9.02874 -9.03934 -9.05995 -9.13433 -9.17075 -9.22283 -9.24849 -9.44405 -9.42376 -9.20733 -9.09237 -9.02832 -8.91773 -8.65524 -8.54072 -8.43943 -8.3225 -7.99206 -7.91775 -7.42453 -4.90006 -4.12438 -3.43251 -3.12532 -2.76847 -2.448 -2.14679 -2.08843 -1.60054 -1.11923 -0.95685 -1.27287 -1.98654 -2.41246 -2.41793 -2.70028 -2.79032 -2.93457 -2.8151 -2.76429 -2.40688 -1.9998 -1.94134 -1.33647 -0.216 0.4521 1.56735 2.28618 3.05161 3.52683 4.24937 4.30015 4.25661 3.55634 3.32824 1.93942 1.97543 1.2874 1.15983 1.1431 1.2252 1.87109 2.13734 4.2768 4.79408 4.7516 4.60281 4.53313 4.38181 3.7597 3.59225 3.57371 3.61576 3.98062 4.20256 5.88255 6.3813 6.47703 6.50886 6.45489 6.38074 6.32826 6.32083 6.42261 6.87994 7.03102 7.99092 8.14642 8.18997)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-6.69867 -7.01353 -7.11435 -7.29156 -7.52414 -7.68675 -7.68367 -7.9962 -8.07095 -7.95833 -7.88408 -7.70363 -7.70348 -7.43545 -6.76476 -6.54792 -6.39085 -6.31545 -5.41195 -5.40951 -5.3717 -5.16956 -4.95029 -4.67211 -4.07376 -3.91288 -3.80719 -3.76654 -3.65487 -3.58454 -3.6978 -5.3645 -6.08596 -6.76303 -7.02613 -7.50061 -7.80705 -7.96323 -7.95534 -7.50452 -6.1235 -6.26438 -5.08069 -2.82996 -1.70727 -1.71175 -1.14409 -0.44283 0.22197 0.27632 0.33899 0.36699 0.38745 0.37609 0.36756 0.34694 0.37034 0.4805 0.61706 0.69951 0.71999 0.91492 0.97476 1.04877 1.71571 2.0078 4.79417 4.82519 6.19714 6.69718 6.90097 7.00999 7.06859 7.0949 7.20737 7.25474 7.27313 7.44633 7.44707 7.61494 8.17623 8.4878 8.57868 8.71348 8.8723 8.96668 9.33317 9.39261 9.41357 9.42346 9.54702 9.78425 9.84363 9.96904 10.11127 10.34493 10.42653 10.83403 10.85248 10.86042)) (quote (-12.03528 -11.56521 -11.44529 -11.03703 -10.38698 -9.96923 -9.97021 -8.69459 -8.38352 -8.05249 -8.06751 -8.03673 -8.04388 -8.097 -8.26376 -8.32912 -8.40519 -8.44236 -8.77033 -8.75702 -8.61892 -8.5546 -8.52623 -8.44833 -8.26229 -8.16384 -8.075 -7.98262 -7.64788 -7.55111 -7.00276 -4.09206 -3.13824 -2.30247 -1.93066 -1.46784 -1.07301 -0.73116 -0.6759 -0.43495 -0.36818 -0.24076 -0.70799 -1.60563 -2.07641 -2.07977 -2.39573 -2.56286 -2.76171 -2.68136 -2.64744 -2.32916 -1.99681 -1.95725 -1.35538 -0.21301 0.46981 1.63207 2.35856 3.15039 3.62859 4.39052 4.44334 4.39088 3.69523 3.46016 2.03308 2.05768 1.38084 1.25633 1.2454 1.34044 2.00844 2.28501 4.48057 5.02311 5.01517 4.87616 4.82976 4.70849 4.13406 4.00235 3.9913 4.03921 4.42065 4.64826 6.40129 6.9123 6.99681 7.01861 6.96305 6.89338 6.83865 6.83367 6.9413 7.4241 7.58418 8.5993 8.76231 8.81131)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-8.19109 -8.44547 -8.52672 -8.64625 -8.79704 -8.91204 -8.91057 -9.07446 -9.11464 -8.96621 -8.89905 -8.7135 -8.71391 -8.45123 -7.79281 -7.58786 -7.44437 -7.37399 -6.50123 -6.49913 -6.40511 -6.17186 -5.93152 -5.63201 -4.97849 -4.8019 -4.68466 -4.66261 -4.5456 -4.51532 -4.57779 -5.85505 -6.42067 -6.96078 -7.16168 -7.56699 -7.82327 -7.93726 -7.93383 -7.61897 -6.21363 -6.27583 -5.03854 -2.7643 -1.69661 -1.69893 -1.19191 -0.55131 0.06944 0.13048 0.19423 0.24243 0.28788 0.28316 0.31066 0.3313 0.34342 0.36962 0.40588 0.41709 0.39522 0.52696 0.58834 0.68755 1.46366 1.79846 4.7078 4.72306 6.13733 6.64038 6.83699 6.92316 6.9528 6.96642 7.02387 7.04807 7.05845 7.24018 7.24143 7.42183 8.02064 8.33591 8.41332 8.5436 8.68714 8.76614 9.04739 9.07748 9.08739 9.09176 9.21698 9.46205 9.5229 9.64907 9.78313 9.99613 10.06914 10.43306 10.44262 10.44695)) (quote (-11.10978 -10.60544 -10.48522 -10.07057 -9.38644 -8.93854 -8.93922 -7.5846 -7.25026 -6.90564 -6.91374 -6.89786 -6.90141 -6.9871 -7.24773 -7.3405 -7.43873 -7.48696 -7.94752 -7.94109 -7.89626 -7.89058 -7.90331 -7.86257 -7.76451 -7.68463 -7.6099 -7.5372 -7.19448 -7.06288 -6.46183 -3.2085 -2.09792 -1.13751 -0.70988 -0.14824 0.31792 0.6977 0.75323 0.78748 0.41206 0.48444 -0.15381 -1.24654 -1.75233 -1.75387 -2.09398 -2.33009 -2.57937 -2.53893 -2.52206 -2.24439 -1.9888 -1.96877 -1.37193 -0.20964 0.48603 1.68971 2.41257 3.22469 3.70213 4.49866 4.55415 4.49643 3.81759 3.57989 2.1239 2.13649 1.47273 1.3514 1.346 1.45303 2.14173 2.42793 4.67741 5.24413 5.27004 5.14128 5.11814 5.02784 4.50346 4.40785 4.40311 4.45657 4.85407 5.08645 6.90898 7.43068 7.50296 7.51411 7.45696 7.39232 7.33532 7.33283 7.44577 7.95332 8.122 9.19089 9.36099 9.41527)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-9.55664 -9.74689 -9.81013 -9.87321 -9.93734 -9.99966 -9.99966 -9.99957 -10.00025 -9.81025 -9.74686 -9.55695 -9.55695 -9.30356 -8.67083 -8.48119 -8.35436 -8.29063 -7.46834 -7.46834 -7.34213 -7.08931 -6.83475 -6.51895 -5.82292 -5.63282 -5.50586 -5.50603 -5.38016 -5.38005 -5.37989 -6.20334 -6.58159 -6.96194 -7.08931 -7.40522 -7.59519 -7.65788 -7.6581 -7.53194 -6.20327 -6.20327 -4.93717 -2.65824 -1.6458 -1.6458 -1.20291 -0.63313 -0.06302 0.0 0.06302 0.12702 0.18998 0.18998 0.25302 0.31582 0.31582 0.25296 0.18997 0.12696 0.06304 0.127 0.18997 0.31602 1.20289 1.58198 4.6198 4.6198 6.07618 6.58225 6.77156 6.83457 6.8346 6.8352 6.83515 6.8348 6.83493 7.02465 7.02465 7.21533 7.84833 8.16461 8.22816 8.35369 8.48077 8.54414 8.73397 8.73374 8.73397 8.73397 8.86135 9.11436 9.17707 9.30406 9.4298 9.62021 9.68398 9.9998 9.99974 9.9999)) (quote (-9.99975 -9.46885 -9.35121 -8.93805 -8.23023 -7.75765 -7.75765 -6.34176 -5.9881 -5.63408 -5.63394 -5.63397 -5.63397 -5.75183 -6.10595 -6.22413 -6.34222 -6.40079 -6.99119 -6.99119 -7.05019 -7.10938 -7.16767 -7.16799 -7.16791 -7.10889 -7.04972 -6.99113 -6.63731 -6.46009 -5.81097 -2.27108 -1.03194 0.02904 0.50108 1.1501 1.68103 2.09395 2.15303 2.03495 1.20905 1.20905 0.38302 -0.91406 -1.4448 -1.4448 -1.79886 -2.09439 -2.38917 -2.389 -2.38917 -2.15326 -1.97589 -1.97589 -1.3861 -0.20588 0.50072 1.73971 2.44764 3.27354 3.74647 4.57224 4.63111 4.57209 3.92271 3.68694 2.21185 2.21185 1.56304 1.44503 1.4449 1.56294 2.27092 2.56605 4.86719 5.45693 5.51588 5.3978 5.3978 5.33926 4.86712 4.80779 4.80815 4.86684 5.27984 5.51603 7.40407 7.93484 7.99396 7.99396 7.93521 7.8762 7.81693 7.817 7.93472 8.46615 8.64298 9.76385 9.94058 9.9999)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj)) :from-file t)) nil nil (pairlis (quote (winsize winpos picture)) (list (om-make-point 553 656) (om-make-point 743 28) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPC-LIB512" (quote bpc-lib) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "BPF-LIST" (list (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (0)) (quote (0)) (quote bpc) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj))))) (om-make-point 48 378) (om-make-point 137 129) (if (find-class (quote bpc-lib) nil) (make-instance (quote bpc-lib) :bpf-list (list (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (10.0 7.72727 6.71329 6.22378 5.62937 4.86014 4.79021 4.68532 4.68532 5.0 5.83916 6.11888 6.46853 6.88811 7.16783 7.37762 7.55245 8.56643 8.84615 8.98601 9.23077 9.26573 9.3007 9.3007 9.05594 8.6014 8.28671 8.07692 7.93706 7.58741 5.52448 5.20979 4.33566 3.88112 3.70629 3.6014 3.42657 3.07692 2.83217 1.81818 1.01399 0.55944 -1.5035 -3.04196 -3.4965 -4.23077 -4.75524 -8.28671 -8.53147 -9.12587 -9.47553 -9.65035 -9.79021 -9.86014 -9.93007 -9.93007 -9.58042 -9.23077 -8.77622 -8.53147 -8.56643 -8.67133 -8.98601 -9.93007 -10.0 -10.0 -9.79021 -9.33567 -8.91608 -8.18182 -7.55245 -6.95804 -6.25874 -5.31469 -2.62238 -1.64336 -0.87413 0.03497 1.71329 2.55245 2.9021 3.81119 2.27273 1.5035 1.36364 1.3986 1.95804 2.44755 3.25175 4.68532 5.06993 6.04895 7.13287 7.44755 7.62238 7.83217 7.86713 7.76224 7.30769 7.0979)) (quote (-9.02098 -10.0 -10.0 -10.0 -9.90676 -9.72028 -9.67366 -9.5338 -9.44056 -8.92774 -7.85548 -7.34266 -6.92308 -6.17716 -5.66434 -5.29137 -4.82518 -2.54079 -1.79487 -1.42191 -0.53613 -0.34965 0.34965 1.28205 2.12121 3.05361 3.24009 3.28671 3.28671 3.33333 2.72727 2.49417 1.60839 1.09557 0.76923 0.48951 0.11655 -0.86247 -1.56177 -3.47319 -4.54545 -5.05827 -6.82984 -8.1352 -8.32168 -8.6014 -8.78788 -7.669 -7.15618 -5.89744 -5.19814 -4.59207 -4.03263 -3.51981 -2.86713 -2.63403 -2.44755 -2.30769 -1.74825 0.16317 0.81585 1.18881 1.74825 4.73193 5.52448 6.17716 6.68998 7.10956 7.38928 7.71562 7.99534 8.04196 7.94872 7.10956 3.51981 2.63403 2.02797 1.23543 0.25641 0.02331 0.02331 0.20979 5.05828 8.41492 9.67366 9.72028 9.86014 9.86014 9.7669 9.39394 9.25408 8.8345 8.41492 8.27506 8.22844 8.1352 8.27506 8.69464 9.62704 10.0)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (9.44444 7.24196 6.26897 5.81015 5.26359 4.53283 4.47623 4.37426 4.36998 4.65313 5.45616 5.71244 6.0538 6.47027 6.76502 7.01029 7.20306 8.22306 8.4366 8.58112 8.82906 8.86305 8.88422 8.85431 8.54797 8.09751 7.78729 7.58475 7.45305 7.13448 5.1431 4.93544 4.10696 3.67929 3.54778 3.48142 3.31287 2.97578 2.74495 1.77337 1.00719 0.66641 -1.32356 -2.77797 -3.1914 -3.90242 -4.39808 -7.83145 -8.06799 -8.64587 -8.98867 -9.16576 -9.306 -9.38539 -9.4548 -9.46477 -9.12483 -8.7792 -8.33015 -8.0865 -8.07776 -8.15695 -8.46004 -9.37645 -9.45869 -9.49002 -9.31028 -8.91538 -8.51599 -7.80355 -7.19451 -6.61661 -5.92107 -4.99327 -2.37147 -1.41965 -0.67178 0.21206 1.84519 2.66531 3.00667 3.89336 2.39763 1.63695 1.49243 1.5193 2.04895 2.51204 3.27681 4.65061 5.02454 5.97637 7.03018 7.33611 7.50609 7.60464 7.63578 7.52953 7.08191 6.87367)) (quote (-8.53815 -9.48846 -9.48846 -9.48846 -9.40085 -9.2241 -9.18333 -9.04887 -8.95974 -8.47027 -7.43083 -6.93529 -6.53041 -5.80976 -5.32029 -4.96679 -4.5181 -2.3002 -1.58108 -1.22758 -0.37552 -0.19877 0.47048 1.36635 2.16854 3.07201 3.25027 3.28649 3.28042 3.30904 2.71375 2.49168 1.64264 1.15469 0.87385 0.67628 0.32582 -0.6169 -1.28766 -3.1384 -4.17328 -4.63998 -6.36234 -7.63144 -7.81578 -8.08924 -8.27662 -7.19033 -6.69631 -5.47557 -4.80936 -4.23075 -3.69141 -3.20194 -2.56891 -2.35898 -2.18375 -2.06144 -1.52513 0.32864 0.93132 1.27419 1.8105 4.70219 5.43477 6.05111 6.5345 6.90904 7.17188 7.4846 7.74289 7.76241 7.63077 6.79519 3.27935 2.40755 1.79556 1.01896 0.05348 -0.18074 -0.18529 -0.00855 4.70374 7.96714 9.19092 9.23624 9.37222 9.37222 9.28157 8.91897 8.78148 8.35989 7.94589 7.80536 7.757 7.63144 7.77197 8.18748 9.10461 9.47328)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (8.88888 6.75666 5.82465 5.39653 4.89782 4.20551 4.16226 4.0632 4.05465 4.30626 5.07316 5.306 5.63908 6.05244 6.3622 6.64296 6.85366 7.87969 8.02706 8.17624 8.42734 8.46036 8.46775 8.40792 8.04 7.59362 7.28787 7.09258 6.96904 6.68155 4.76172 4.66109 3.87826 3.47746 3.38927 3.36143 3.19917 2.87464 2.65773 1.72857 1.00039 0.77338 -1.14362 -2.51398 -2.88629 -3.57407 -4.04091 -7.37619 -7.6045 -8.16588 -8.50181 -8.68116 -8.8218 -8.91064 -8.97953 -8.99947 -8.66925 -8.32763 -7.88409 -7.64154 -7.58909 -7.64257 -7.93407 -8.82284 -8.91737 -8.98005 -8.83035 -8.49508 -8.11589 -7.42527 -6.83657 -6.27518 -5.58339 -4.67185 -2.12056 -1.19593 -0.46944 0.38916 1.97708 2.77817 3.11124 3.97553 2.52254 1.7704 1.62122 1.63999 2.13986 2.57653 3.30187 4.61591 4.97915 5.90378 6.92748 7.22468 7.3898 7.3771 7.40442 7.29681 6.85612 6.64944)) (quote (-8.05533 -8.97692 -8.97692 -8.97692 -8.89493 -8.72792 -8.693 -8.56394 -8.47892 -8.0128 -7.00619 -6.52793 -6.13773 -5.44236 -4.97624 -4.64221 -4.21103 -2.05962 -1.36728 -1.03326 -0.2149 -0.04789 0.59131 1.45066 2.21587 3.0904 3.26045 3.28626 3.27412 3.28476 2.70022 2.48918 1.6769 1.21382 0.97847 0.86305 0.53509 -0.37132 -1.01356 -2.80361 -3.80112 -4.22169 -5.89484 -7.12768 -7.30987 -7.57709 -7.76535 -6.71167 -6.23645 -5.05371 -4.42058 -3.86943 -3.35018 -2.88407 -2.27068 -2.08393 -1.91995 -1.81518 -1.302 0.49412 1.04679 1.35956 1.87274 4.67244 5.34507 5.92506 6.37903 6.70851 6.95447 7.25358 7.49043 7.48285 7.31283 6.48082 3.03889 2.18107 1.56315 0.80249 -0.14946 -0.38479 -0.3939 -0.22688 4.34921 7.51937 8.70818 8.75221 8.8843 8.8843 8.79624 8.444 8.30887 7.88528 7.47686 7.33567 7.28557 7.12768 7.26888 7.68033 8.58218 8.94656)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (8.33334 6.27137 5.38035 4.98291 4.53206 3.87821 3.84829 3.75215 3.73932 3.95941 4.69017 4.89958 5.22436 5.63462 5.95941 6.27564 6.50428 7.53633 7.61752 7.77137 8.02565 8.05769 8.05129 7.96155 7.53205 7.08975 6.78846 6.60043 6.48505 6.22864 4.38035 4.38676 3.64957 3.27564 3.23077 3.24146 3.08547 2.7735 2.57052 1.68376 0.99359 0.88034 -0.96368 -2.25 -2.5812 -3.24573 -3.68376 -6.92094 -7.14103 -7.6859 -8.01497 -8.19659 -8.33761 -8.4359 -8.50428 -8.53419 -8.21368 -7.87608 -7.43804 -7.19659 -7.10043 -7.12821 -7.40812 -8.26924 -8.37608 -8.47009 -8.35043 -8.0748 -7.71581 -7.04702 -6.47864 -5.93376 -5.24573 -4.35044 -1.86966 -0.97223 -0.2671 0.56624 2.10898 2.89103 3.21581 4.05769 2.64744 1.90385 1.75 1.76068 2.23077 2.64102 3.32692 4.5812 4.93376 5.8312 6.82479 7.11325 7.27351 7.14958 7.17308 7.06411 6.63034 6.42521)) (quote (-7.57252 -8.4654 -8.4654 -8.4654 -8.38904 -8.23176 -8.20268 -8.07903 -7.99812 -7.55535 -6.58155 -6.12058 -5.74507 -5.07497 -4.63221 -4.31764 -3.90396 -1.81904 -1.1535 -0.83894 -0.0543 0.10298 0.71213 1.53496 2.2632 3.1088 3.27063 3.28604 3.26783 3.26047 2.6867 2.48669 1.71115 1.27294 1.08309 1.04981 0.74436 -0.12576 -0.73946 -2.46882 -3.42896 -3.80342 -5.42736 -6.62394 -6.80399 -7.06495 -7.25411 -6.23302 -5.77659 -4.63186 -4.03182 -3.50813 -3.00897 -2.5662 -1.97247 -1.80888 -1.65616 -1.56894 -1.07889 0.65959 1.16225 1.44493 1.93498 4.6427 5.25536 5.79901 6.22356 6.50799 6.73708 7.02256 7.23799 7.20331 6.99489 6.16646 2.79844 1.9546 1.33074 0.58603 -0.35239 -0.58883 -0.60249 -0.44521 3.99468 7.07161 8.22545 8.26819 8.39639 8.39639 8.31092 7.96904 7.83628 7.41068 7.00785 6.86599 6.81415 6.62394 6.76581 7.17319 8.05977 8.41986)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (7.77778 5.78607 4.93603 4.56929 4.16628 3.55089 3.53432 3.44108 3.42399 3.61254 4.30717 4.49314 4.80964 5.21678 5.55659 5.90831 6.15489 7.19295 7.20798 7.36648 7.62393 7.65501 7.63481 7.51515 7.02409 6.58586 6.28904 6.10826 6.00104 5.77571 3.99897 4.11241 3.42087 3.07382 3.07226 3.12147 2.97177 2.67236 2.4833 1.63895 0.98679 0.98731 -0.78374 -1.98602 -2.27609 -2.91738 -3.3266 -6.46568 -6.67755 -7.2059 -7.52811 -7.71199 -7.85341 -7.96115 -8.02901 -8.0689 -7.7581 -7.4245 -6.99197 -6.75162 -6.61176 -6.61383 -6.88215 -7.71562 -7.83476 -7.96012 -7.8705 -7.6545 -7.31572 -6.66874 -6.1207 -5.59233 -4.90805 -4.02901 -1.61875 -0.74851 -0.06475 0.74333 2.24087 3.00389 3.32039 4.13986 2.77234 2.0373 1.87879 1.88138 2.32168 2.70551 3.35198 4.5465 4.88837 5.75861 6.7221 7.00181 7.15722 6.92204 6.94172 6.83139 6.40456 6.20098)) (quote (-7.08969 -7.95386 -7.95386 -7.95386 -7.88312 -7.73558 -7.71235 -7.5941 -7.51729 -7.09788 -6.15691 -5.71321 -5.35239 -4.70757 -4.28816 -3.99306 -3.59688 -1.57846 -0.9397 -0.64461 0.10632 0.25386 0.83296 1.61926 2.31054 3.12719 3.28081 3.28582 3.26153 3.23618 2.67318 2.48419 1.74541 1.33207 1.18771 1.23658 0.95363 0.11982 -0.46535 -2.13403 -3.0568 -3.38513 -4.95986 -6.12018 -6.29808 -6.55279 -6.74284 -5.75435 -5.31673 -4.20999 -3.64304 -3.14681 -2.66774 -2.24833 -1.67424 -1.53383 -1.39236 -1.32268 -0.85576 0.82506 1.27772 1.53031 1.99723 4.61296 5.16566 5.67296 6.06808 6.30747 6.51968 6.79154 6.98554 6.92376 6.67695 5.85209 2.55799 1.72812 1.09833 0.36956 -0.55532 -0.79288 -0.81109 -0.66355 3.64015 6.62383 7.74271 7.78415 7.90847 7.90847 7.82559 7.49407 7.36368 6.93607 6.53883 6.39629 6.34271 6.12018 6.26271 6.66603 7.53733 7.89314)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (7.22222 5.30076 4.49171 4.15566 3.8005 3.22358 3.22034 3.13002 3.10865 3.26567 3.92418 4.0867 4.39491 4.79895 5.15378 5.54098 5.80549 6.84958 6.79843 6.9616 7.22222 7.25233 7.21834 7.06876 6.51612 6.08197 5.78962 5.61609 5.51702 5.32278 3.61759 3.83806 3.19217 2.87199 2.91375 3.00149 2.85806 2.57122 2.39608 1.59415 0.98 1.09428 -0.6038 -1.72203 -1.97099 -2.58903 -2.96943 -6.01042 -6.21406 -6.72591 -7.04125 -7.2274 -7.3692 -7.4864 -7.55374 -7.6036 -7.30251 -6.97293 -6.5459 -6.30666 -6.12309 -6.09946 -6.35618 -7.162 -7.29345 -7.45014 -7.39057 -7.23421 -6.91563 -6.29047 -5.76276 -5.2509 -4.57038 -3.70759 -1.36785 -0.5248 0.13759 0.92043 2.37277 3.11675 3.42496 4.22203 2.89724 2.17075 2.00758 2.00207 2.41259 2.77001 3.37704 4.51179 4.84298 5.68603 6.6194 6.89038 7.04092 6.69451 6.71037 6.59868 6.17877 5.97675)) (quote (-6.60686 -7.44232 -7.44232 -7.44232 -7.37721 -7.23939 -7.22202 -7.10917 -7.03647 -6.64041 -5.73226 -5.30584 -4.95972 -4.34017 -3.94411 -3.66848 -3.28981 -1.33787 -0.72591 -0.45029 0.26693 0.40474 0.95379 1.70356 2.35787 3.14559 3.29099 3.2856 3.25524 3.2119 2.65965 2.4817 1.77966 1.39119 1.29233 1.42334 1.1629 0.36539 -0.19124 -1.79924 -2.68463 -2.96684 -4.49236 -5.61642 -5.79218 -6.04064 -6.23158 -5.27569 -4.85686 -3.78812 -3.25426 -2.78549 -2.32652 -1.93046 -1.37602 -1.25878 -1.12856 -1.07643 -0.63264 0.99054 1.39319 1.61568 2.05948 4.58322 5.07595 5.54691 5.91261 6.10694 6.30227 6.56052 6.73308 6.64421 6.359 5.53772 2.31753 1.50165 0.86592 0.15309 -0.75826 -0.99693 -1.0197 -0.88189 3.28561 6.17605 7.25997 7.30011 7.42055 7.42055 7.34026 7.0191 6.89107 6.46146 6.0698 5.92659 5.87127 5.61642 5.75962 6.15888 7.0149 7.36642)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (6.66666 4.81545 4.04739 3.74203 3.43473 2.89627 2.90637 2.81896 2.79332 2.9188 3.54118 3.68026 3.98018 4.38111 4.75097 5.17365 5.4561 6.50621 6.38888 6.55671 6.82051 6.84964 6.80186 6.62237 6.00815 5.57808 5.2902 5.12392 5.03301 4.86984 3.23621 3.56371 2.96347 2.67016 2.75524 2.88151 2.74436 2.47008 2.30886 1.54934 0.9732 1.20124 -0.42385 -1.45804 -1.66588 -2.26068 -2.61227 -5.55516 -5.75058 -6.24591 -6.55439 -6.74281 -6.885 -7.01165 -7.07847 -7.1383 -6.84693 -6.52136 -6.09984 -5.86169 -5.63441 -5.58508 -5.83022 -6.60839 -6.75213 -6.94017 -6.91064 -6.81391 -6.51553 -5.9122 -5.40482 -4.90947 -4.23271 -3.38617 -1.11694 -0.30109 0.33994 1.09752 2.50467 3.22961 3.52953 4.3042 3.02215 2.3042 2.13637 2.12277 2.5035 2.8345 3.4021 4.47708 4.79759 5.61344 6.51671 6.77894 6.92463 6.46698 6.47902 6.36597 5.95299 5.75252)) (quote (-6.12403 -6.93078 -6.93078 -6.93078 -6.87129 -6.74321 -6.73169 -6.62424 -6.55565 -6.18295 -5.30761 -4.89848 -4.56704 -3.97277 -3.60006 -3.3439 -2.98273 -1.09729 -0.51212 -0.25596 0.42754 0.55562 1.07462 1.78787 2.4052 3.16398 3.30117 3.28537 3.24894 3.18761 2.64613 2.4792 1.81391 1.45032 1.39695 1.61011 1.37217 0.61097 0.08286 -1.46445 -2.31246 -2.54855 -4.02486 -5.11266 -5.28628 -5.52848 -5.72031 -4.79702 -4.39699 -3.36626 -2.86548 -2.42417 -1.98529 -1.61259 -1.0778 -0.98373 -0.86476 -0.83018 -0.40951 1.15601 1.50866 1.70106 2.12172 4.55347 4.98625 5.42086 5.75713 5.90642 6.08487 6.3295 6.48063 6.36465 6.04105 5.22335 2.07707 1.27517 0.63351 -0.06337 -0.96119 -1.20098 -1.2283 -1.10022 2.93108 5.72827 6.77722 6.81607 6.93262 6.93262 6.85492 6.54412 6.41847 5.98685 5.60077 5.4569 5.39983 5.11266 5.25653 5.65172 6.49247 6.8397)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (6.11112 4.33017 3.60309 3.32842 3.06896 2.56896 2.5924 2.50791 2.47799 2.57194 3.15819 3.27383 3.56547 3.96329 4.34817 4.80634 5.10672 6.16285 5.97935 6.15184 6.41881 6.44697 6.3854 6.176 5.5002 5.07421 4.7908 4.63177 4.54902 4.41693 2.85484 3.28937 2.73478 2.46834 2.59674 2.76153 2.63066 2.36895 2.22164 1.50453 0.9664 1.30821 -0.24392 -1.19406 -1.36079 -1.93234 -2.25512 -5.09991 -5.28711 -5.76593 -6.06755 -6.25823 -6.40081 -6.53692 -6.60322 -6.67302 -6.39136 -6.06981 -5.65379 -5.41674 -5.14576 -5.07072 -5.30427 -6.05479 -6.21084 -6.43021 -6.43073 -6.39363 -6.11545 -5.53394 -5.04689 -4.56806 -3.89504 -3.06476 -0.86604 -0.07738 0.54228 1.27461 2.63656 3.34246 3.6341 4.38636 3.14705 2.43765 2.26515 2.24346 2.5944 2.89899 3.42716 4.44238 4.7522 5.54086 6.41402 6.66751 6.80834 6.23945 6.24767 6.13326 5.72721 5.5283)) (quote (-5.64122 -6.41926 -6.41926 -6.41926 -6.3654 -6.24705 -6.24137 -6.13933 -6.07485 -5.72549 -4.88298 -4.49113 -4.17438 -3.60538 -3.25602 -3.01933 -2.67566 -0.85671 -0.29833 -0.06164 0.58815 0.7065 1.19544 1.87217 2.45253 3.18238 3.31135 3.28515 3.24265 3.16333 2.63261 2.47671 1.84817 1.50944 1.50156 1.79687 1.58144 0.85653 0.35696 -1.12967 -1.94031 -2.13028 -3.55738 -4.60892 -4.78039 -5.01635 -5.20907 -4.31837 -3.93714 -2.94441 -2.47671 -2.06287 -1.64408 -1.29473 -0.77958 -0.70869 -0.60097 -0.58393 -0.1864 1.32148 1.62412 1.78643 2.18396 4.52373 4.89654 5.29481 5.60166 5.7059 5.86748 6.09849 6.22819 6.08511 5.72312 4.909 1.83662 1.0487 0.4011 -0.27984 -1.16412 -1.40502 -1.4369 -1.31855 2.57655 5.28051 6.2945 6.33205 6.44472 6.44472 6.36961 6.06917 5.94588 5.51226 5.13176 4.98722 4.92841 4.60892 4.75346 5.14458 5.97006 6.313)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (5.55556 3.84486 3.15877 2.91479 2.70319 2.24165 2.27843 2.19685 2.16266 2.22507 2.77519 2.86739 3.15074 3.54546 3.94535 4.43901 4.75732 5.81948 5.5698 5.74696 6.0171 6.04429 5.96892 5.72961 4.99223 4.57032 4.29138 4.1396 4.06501 3.964 2.47346 3.01502 2.50608 2.26651 2.43823 2.64155 2.51696 2.26781 2.13442 1.45972 0.9596 1.41518 -0.06398 -0.93007 -1.05568 -1.60399 -1.89795 -4.64465 -4.82363 -5.28594 -5.58069 -5.77364 -5.91661 -6.06216 -6.12795 -6.20772 -5.93577 -5.61824 -5.20772 -4.97177 -4.65709 -4.55634 -4.7783 -5.50117 -5.66952 -5.92023 -5.95079 -5.97333 -5.71536 -5.15566 -4.68895 -4.22663 -3.55737 -2.74334 -0.61513 0.14633 0.74462 1.4517 2.76846 3.45532 3.73867 4.46853 3.27195 2.5711 2.39394 2.36415 2.68531 2.96348 3.45222 4.40767 4.70681 5.46827 6.31132 6.55607 6.69205 6.01192 6.01632 5.90055 5.50143 5.30407)) (quote (-5.1584 -5.90772 -5.90772 -5.90772 -5.85948 -5.75087 -5.75104 -5.6544 -5.59403 -5.26803 -4.45834 -4.08376 -3.78171 -3.23798 -2.91198 -2.69475 -2.36858 -0.61612 -0.08454 0.13268 0.74876 0.85738 1.31627 1.95647 2.49986 3.20077 3.32153 3.28493 3.23635 3.13904 2.61909 2.47421 1.88242 1.56856 1.60618 1.98364 1.79071 1.10211 0.63107 -0.79487 -1.56814 -1.71199 -3.08988 -4.10516 -4.27449 -4.50419 -4.6978 -3.83971 -3.47727 -2.52254 -2.08793 -1.70155 -1.30285 -0.97685 -0.48136 -0.43363 -0.33717 -0.33768 0.03673 1.48696 1.73959 1.87181 2.24621 4.49399 4.80684 5.16876 5.44619 5.50537 5.65007 5.86746 5.97573 5.80556 5.40517 4.59463 1.59616 0.82222 0.16869 -0.4963 -1.36705 -1.60907 -1.6455 -1.53689 2.22202 4.83274 5.81176 5.84802 5.9568 5.9568 5.88428 5.5942 5.47328 5.03764 4.66273 4.51752 4.45698 4.10516 4.25037 4.63743 5.44763 5.78628)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (5.0 3.35956 2.71446 2.50117 2.33741 1.91433 1.96445 1.88579 1.84732 1.8782 2.39219 2.46095 2.73601 3.12762 3.54254 4.07168 4.40793 5.47611 5.16025 5.34207 5.61539 5.64161 5.55245 5.28322 4.48426 4.06644 3.79196 3.64743 3.581 3.51107 2.09208 2.74068 2.27739 2.06468 2.27972 2.52156 2.40326 2.16667 2.04721 1.41492 0.9528 1.52215 0.11597 -0.66609 -0.75058 -1.27564 -1.54079 -4.18939 -4.36014 -4.80594 -5.09383 -5.28905 -5.4324 -5.58741 -5.65268 -5.74243 -5.48019 -5.16667 -4.76165 -4.52681 -4.16841 -4.04196 -4.25233 -4.94755 -5.12821 -5.41026 -5.47086 -5.55304 -5.31527 -4.77739 -4.33101 -3.8852 -3.2197 -2.42192 -0.36422 0.37005 0.94697 1.62879 2.90035 3.56819 3.84324 4.5507 3.39686 2.70455 2.52273 2.48485 2.77622 3.02797 3.47728 4.37297 4.66142 5.39569 6.20863 6.44464 6.57576 5.78439 5.78496 5.66783 5.27564 5.07984)) (quote (-4.67557 -5.39618 -5.39618 -5.39618 -5.35357 -5.25469 -5.26071 -5.16948 -5.11321 -4.81056 -4.03369 -3.67639 -3.38903 -2.87058 -2.56793 -2.37017 -2.06151 -0.37554 0.12926 0.32701 0.90938 1.00826 1.4371 2.04077 2.54719 3.21917 3.33171 3.28471 3.23006 3.11475 2.60556 2.47172 1.91668 1.62769 1.7108 2.17041 1.99998 1.34768 0.90518 -0.46008 -1.19597 -1.2937 -2.62238 -3.6014 -3.76858 -3.99203 -4.18654 -3.36104 -3.01741 -2.10067 -1.69915 -1.34023 -0.96163 -0.65898 -0.18314 -0.15858 -0.07337 -0.09142 0.25985 1.65243 1.85506 1.95718 2.30846 4.46425 4.71713 5.04271 5.29071 5.30485 5.43267 5.63644 5.72328 5.52601 5.08722 4.28026 1.35571 0.59574 -0.06372 -0.71277 -1.56999 -1.81312 -1.8541 -1.75523 1.86748 4.38496 5.32902 5.36398 5.46888 5.46888 5.39895 5.11923 5.00067 4.56303 4.1937 4.04783 3.98554 3.6014 3.74728 4.13027 4.9252 5.25956)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (4.44444 2.87425 2.27014 2.08754 1.97164 1.58702 1.65048 1.57472 1.53199 1.53134 2.00919 2.05452 2.32128 2.70978 3.13973 3.70435 4.05853 5.13273 4.75071 4.93719 5.21367 5.23892 5.13597 4.83683 3.97629 3.56255 3.29253 3.15526 3.09699 3.05814 1.7107 2.46633 2.04869 1.86286 2.12121 2.40158 2.28956 2.06552 1.95999 1.37011 0.946 1.62911 0.29591 -0.4021 -0.44548 -0.94729 -1.18363 -3.73413 -3.89666 -4.32594 -4.60697 -4.80445 -4.9482 -5.11266 -5.17741 -5.27713 -5.0246 -4.7151 -4.31559 -4.08184 -3.67974 -3.52758 -3.72636 -4.39394 -4.58689 -4.90028 -4.99093 -5.13274 -4.91517 -4.39912 -3.97306 -3.54377 -2.88202 -2.10049 -0.11331 0.59376 1.14931 1.80589 3.03225 3.68105 3.94781 4.63287 3.52176 2.838 2.65152 2.60554 2.86713 3.09246 3.50233 4.33826 4.61603 5.3231 6.10593 6.3332 6.45947 5.55685 5.55361 5.43512 5.04985 4.8556)) (quote (-4.19274 -4.88463 -4.88463 -4.88463 -4.84765 -4.75851 -4.77038 -4.68455 -4.63239 -4.35309 -3.60904 -3.26903 -2.99636 -2.50317 -2.22388 -2.04559 -1.75443 -0.13495 0.34305 0.52134 1.06999 1.15913 1.55793 2.12508 2.59452 3.23757 3.34189 3.28448 3.22377 3.09047 2.59204 2.46923 1.95093 1.68681 1.81542 2.35718 2.20925 1.59326 1.17928 -0.12529 -0.82381 -0.87541 -2.15488 -3.09764 -3.26268 -3.47988 -3.67527 -2.88237 -2.55754 -1.67881 -1.31037 -0.97891 -0.6204 -0.34111 0.11509 0.11647 0.19043 0.15483 0.48297 1.81791 1.97053 2.04256 2.3707 4.4345 4.62742 4.91666 5.13523 5.10432 5.21527 5.40542 5.47083 5.24645 4.76928 3.96589 1.11525 0.36926 -0.29613 -0.92924 -1.77292 -2.01717 -2.06271 -1.97356 1.51294 3.93718 4.84627 4.87994 4.98095 4.98095 4.91361 4.64425 4.52807 4.08842 3.72467 3.57813 3.5141 3.09764 3.24419 3.62311 4.40277 4.73284)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (3.88888 2.38894 1.82582 1.67391 1.60586 1.25971 1.3365 1.26366 1.21665 1.18447 1.62619 1.64808 1.90656 2.29195 2.73691 3.33702 3.70914 4.78936 4.34116 4.5323 4.81196 4.83624 4.7195 4.39044 3.46833 3.05866 2.79311 2.66309 2.61298 2.60521 1.32932 2.19198 1.81999 1.66103 1.9627 2.2816 2.17586 1.96438 1.87277 1.3253 0.9392 1.73608 0.47585 -0.13811 -0.14037 -0.61894 -0.82646 -3.27887 -3.43317 -3.84595 -4.12011 -4.31986 -4.46399 -4.63791 -4.70214 -4.81183 -4.56902 -4.26353 -3.86952 -3.63688 -3.19107 -3.0132 -3.20039 -3.84032 -4.04558 -4.39031 -4.511 -4.71244 -4.51508 -4.02084 -3.61512 -3.20234 -2.54435 -1.77907 0.1376 0.81747 1.35166 1.98298 3.16415 3.79391 4.05239 4.71504 3.64666 2.97145 2.78031 2.72624 2.95804 3.15695 3.52739 4.30355 4.57064 5.25052 6.00324 6.22177 6.34318 5.32932 5.32226 5.20241 4.82407 4.63137)) (quote (-3.70992 -4.37309 -4.37309 -4.37309 -4.34174 -4.26233 -4.28005 -4.19962 -4.15157 -3.89562 -3.18439 -2.86166 -2.60368 -2.13577 -1.87983 -1.72101 -1.44735 0.10563 0.55684 0.71566 1.2306 1.31001 1.67876 2.20938 2.64186 3.25596 3.35207 3.28426 3.21747 3.06618 2.57852 2.46673 1.98518 1.74594 1.92004 2.54395 2.41852 1.83883 1.45339 0.2095 -0.45164 -0.45713 -1.68738 -2.59388 -2.75678 -2.96772 -3.16401 -2.40371 -2.09767 -1.25694 -0.92159 -0.61759 -0.27918 -0.02324 0.41331 0.39152 0.45423 0.40109 0.7061 1.98338 2.08599 2.12793 2.43295 4.40476 4.53772 4.7906 4.97976 4.9038 4.99786 5.1744 5.21837 4.9669 4.45133 3.65152 0.87479 0.14278 -0.52855 -1.14571 -1.97586 -2.22122 -2.27131 -2.1919 1.15841 3.48941 4.36353 4.39591 4.49303 4.49303 4.42828 4.16928 4.05546 3.61381 3.25565 3.10843 3.04266 2.59388 2.7411 3.11596 3.88034 4.20612)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (3.33334 1.90366 1.38152 1.2603 1.2401 0.9324 1.02254 0.95261 0.90133 0.83761 1.2432 1.24165 1.49184 1.87413 2.33411 2.9697 3.35976 4.446 3.93163 4.12743 4.41026 4.43357 4.30304 3.94406 2.96038 2.55479 2.29371 2.17094 2.12899 2.1523 0.94795 1.91764 1.5913 1.45921 1.8042 2.16162 2.06216 1.86325 1.78555 1.2805 0.9324 1.84305 0.65578 0.12587 0.16472 -0.2906 -0.46931 -2.82362 -2.9697 -3.36597 -3.63327 -3.83528 -3.9798 -4.16318 -4.22689 -4.34655 -4.11345 -3.81197 -3.42347 -3.19193 -2.70241 -2.49884 -2.67444 -3.28672 -3.50428 -3.88035 -4.03109 -4.29216 -4.115 -3.64258 -3.25719 -2.86092 -2.20668 -1.45766 0.3885 1.04118 1.554 2.16006 3.29604 3.90676 4.15696 4.7972 3.77156 3.1049 2.90909 2.84693 3.04895 3.22144 3.55245 4.26885 4.52525 5.17793 5.90055 6.11033 6.22689 5.10179 5.09091 4.9697 4.59829 4.40715)) (quote (-3.22711 -3.86157 -3.86157 -3.86157 -3.83584 -3.76617 -3.78973 -3.71471 -3.67076 -3.43817 -2.75976 -2.45431 -2.21102 -1.76838 -1.53579 -1.39644 -1.14029 0.34621 0.77063 0.90998 1.39121 1.46089 1.79958 2.29368 2.68919 3.27436 3.36225 3.28404 3.21118 3.04189 2.56499 2.46424 2.01944 1.80506 2.02466 2.73071 2.62779 2.0844 1.72749 0.54428 -0.07948 -0.03885 -1.2199 -2.09014 -2.25089 -2.45558 -2.65276 -1.92506 -1.63782 -0.83509 -0.53283 -0.25628 0.06203 0.29462 0.71153 0.66656 0.71802 0.64733 0.92921 2.14885 2.20146 2.2133 2.49519 4.37502 4.44801 4.66456 4.82429 4.70328 4.78047 4.94339 4.96593 4.68736 4.13339 3.33716 0.63434 -0.08369 -0.76095 -1.36217 -2.17878 -2.42526 -2.4799 -2.41023 0.80388 3.04165 3.88081 3.91189 4.00513 4.00513 3.94297 3.69433 3.58287 3.13922 2.78664 2.63875 2.57124 2.09014 2.23802 2.60882 3.35792 3.67942)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (2.77778 1.41835 0.9372 0.84668 0.87432 0.60509 0.70856 0.64155 0.58599 0.49074 0.86021 0.83521 1.07712 1.45629 1.9313 2.60237 3.01036 4.10263 3.52208 3.72255 4.00855 4.03088 3.88656 3.49767 2.45241 2.0509 1.79429 1.67877 1.64498 1.69937 0.56657 1.64329 1.3626 1.25738 1.64569 2.04164 1.94846 1.76211 1.69833 1.23569 0.9256 1.95001 0.83573 0.38986 0.46983 0.03775 -0.11215 -2.36836 -2.50622 -2.88597 -3.14641 -3.35069 -3.4956 -3.68842 -3.75162 -3.88125 -3.65786 -3.3604 -2.9774 -2.74696 -2.21374 -1.98446 -2.14847 -2.7331 -2.96297 -3.37037 -3.55115 -3.87187 -3.7149 -3.26431 -2.89925 -2.51949 -1.86901 -1.13624 0.63941 1.26489 1.75634 2.33716 3.42794 4.01962 4.26153 4.87937 3.89647 3.23835 3.03788 2.96762 3.13986 3.28593 3.57751 4.23414 4.47986 5.10535 5.79785 5.9989 6.1106 4.87426 4.85956 4.73699 4.37251 4.18292)) (quote (-2.74428 -3.35003 -3.35003 -3.35003 -3.32993 -3.26999 -3.2994 -3.22978 -3.18994 -2.9807 -2.33512 -2.04694 -1.81835 -1.40098 -1.19175 -1.07186 -0.83321 0.5868 0.98442 1.10431 1.55182 1.61177 1.92041 2.37798 2.73652 3.29275 3.37243 3.28381 3.20488 3.01761 2.55147 2.46174 2.05369 1.86418 2.12928 2.91748 2.83706 2.32997 2.00159 0.87907 0.29268 0.37944 -0.7524 -1.58638 -1.74499 -1.94343 -2.1415 -1.44639 -1.17796 -0.41323 -0.14405 0.10503 0.40326 0.61249 1.00975 0.94161 0.98182 0.89358 1.15234 2.31433 2.31693 2.29868 2.55743 4.34528 4.35831 4.53851 4.66881 4.50275 4.56307 4.71236 4.71348 4.4078 3.81545 3.02279 0.39388 -0.31017 -0.99336 -1.57864 -2.38172 -2.62931 -2.68851 -2.62856 0.44935 2.59387 3.39806 3.42785 3.5172 3.5172 3.45763 3.21935 3.11027 2.6646 2.31761 2.16906 2.0998 1.58638 1.73493 2.10166 2.83549 3.1527)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (2.22222 0.93304 0.49288 0.43305 0.50855 0.27777 0.39459 0.33049 0.27066 0.14387 0.4772 0.42877 0.66239 1.03846 1.52849 2.23504 2.66097 3.75926 3.11253 3.31766 3.60684 3.6282 3.47008 3.05128 1.94444 1.54701 1.29487 1.1866 1.16096 1.24644 0.18519 1.36894 1.1339 1.05555 1.48718 1.92165 1.83475 1.66097 1.61111 1.19088 0.91881 2.05698 1.01567 0.65385 0.77493 0.3661 0.24502 -1.9131 -2.04273 -2.40598 -2.65955 -2.8661 -3.01139 -3.21367 -3.27635 -3.41595 -3.20228 -2.90883 -2.53134 -2.30199 -1.72507 -1.47009 -1.6225 -2.17948 -2.42165 -2.8604 -3.07122 -3.45157 -3.31481 -2.88604 -2.54131 -2.17806 -1.53134 -0.81482 0.89031 1.4886 1.95869 2.51425 3.55983 4.13248 4.3661 4.96154 4.02137 3.3718 3.16667 3.08832 3.23077 3.35043 3.60257 4.19943 4.43447 5.03276 5.69516 5.88746 5.9943 4.64673 4.6282 4.50427 4.14672 3.95869)) (quote (-2.26145 -2.83849 -2.83849 -2.83849 -2.82401 -2.7738 -2.80907 -2.74485 -2.70912 -2.52323 -1.91047 -1.63958 -1.42567 -1.03358 -0.8477 -0.74728 -0.52613 0.82738 1.19822 1.29863 1.71244 1.76265 2.04124 2.46229 2.78385 3.31115 3.38261 3.28359 3.19859 2.99332 2.53795 2.45925 2.08794 1.92331 2.2339 3.10424 3.04633 2.57555 2.2757 1.21387 0.66485 0.79773 -0.2849 -1.08262 -1.23908 -1.43127 -1.63023 -0.96773 -0.71809 0.00864 0.24473 0.46635 0.74448 0.93037 1.30797 1.21667 1.24562 1.13984 1.37546 2.4798 2.4324 2.38405 2.61968 4.31553 4.2686 4.41246 4.51334 4.30223 4.34566 4.48134 4.46102 4.12825 3.4975 2.70842 0.15342 -0.53664 -1.22577 -1.79511 -2.58465 -2.83336 -2.89711 -2.8469 0.09481 2.14609 2.91532 2.94381 3.02928 3.02928 2.9723 2.74438 2.63766 2.18999 1.84858 1.69936 1.62837 1.08262 1.23184 1.59451 2.31306 2.62598)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (1.66666 0.44774 0.04856 0.01942 0.14277 -0.04954 0.08061 0.01942 -0.04468 -0.203 0.09421 0.02233 0.24766 0.62062 1.12568 1.86771 2.31158 3.41588 2.70298 2.91278 3.20512 3.22552 3.05361 2.60489 1.43647 1.04312 0.79545 0.69444 0.67695 0.79351 -0.1962 1.0946 0.9052 0.85373 1.32867 1.80167 1.72105 1.55983 1.52389 1.14608 0.91201 2.16395 1.19561 0.91783 1.08004 0.69445 0.60218 -1.45784 -1.57925 -1.92598 -2.17269 -2.3815 -2.52719 -2.73892 -2.80108 -2.95066 -2.74669 -2.45726 -2.08527 -1.85703 -1.2364 -0.95571 -1.09653 -1.62587 -1.88034 -2.35042 -2.59129 -3.03127 -2.91472 -2.50777 -2.18337 -1.83663 -1.19366 -0.49339 1.14122 1.71232 2.16104 2.69134 3.69173 4.24534 4.47067 5.04371 4.14627 3.50525 3.29546 3.20901 3.32168 3.41492 3.62763 4.16473 4.38908 4.96018 5.59247 5.77603 5.87801 4.41919 4.39685 4.27156 3.92094 3.73446)) (quote (-1.77862 -2.32695 -2.32695 -2.32695 -2.3181 -2.27762 -2.31874 -2.25992 -2.2283 -2.06576 -1.48582 -1.23221 -1.033 -0.66618 -0.50365 -0.4227 -0.21906 1.06797 1.41201 1.49296 1.87305 1.91353 2.16207 2.54659 2.83118 3.32954 3.39279 3.28337 3.19229 2.96903 2.52442 2.45675 2.1222 1.98243 2.33852 3.29101 3.2556 2.82112 2.54981 1.54866 1.03702 1.21601 0.1826 -0.57886 -0.73318 -0.91912 -1.11897 -0.48906 -0.25822 0.43051 0.63351 0.82767 1.08571 1.24824 1.6062 1.49172 1.50942 1.38609 1.59859 2.64528 2.54786 2.46943 2.68193 4.28579 4.1789 4.2864 4.35786 4.1017 4.12826 4.25032 4.20857 3.8487 3.17955 2.39405 -0.08703 -0.76312 -1.45819 -2.01158 -2.78759 -3.03741 -3.10571 -3.06524 -0.25972 1.69832 2.43258 2.45977 2.54136 2.54136 2.48697 2.26941 2.16506 1.71538 1.37955 1.22966 1.15693 0.57886 0.72875 1.08735 1.79063 2.09926)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (1.11112 -0.03755 -0.39574 -0.39419 -0.22299 -0.37684 -0.23335 -0.29163 -0.36 -0.54985 -0.28878 -0.38409 -0.16705 0.2028 0.72288 1.50039 1.96219 3.07252 2.29345 2.50791 2.80343 2.82285 2.63715 2.15852 0.92852 0.53925 0.29604 0.20228 0.19296 0.34059 -0.57756 0.82026 0.67651 0.65191 1.17016 1.68169 1.60735 1.45869 1.43668 1.10127 0.90521 2.27091 1.37555 1.18181 1.38513 1.02278 0.95933 -1.0026 -1.11578 -1.446 -1.68584 -1.89693 -2.043 -2.26419 -2.32583 -2.48538 -2.29113 -2.00571 -1.63922 -1.41208 -0.74774 -0.44135 -0.57058 -1.07227 -1.33904 -1.84047 -2.11138 -2.61099 -2.51464 -2.12951 -1.82544 -1.49521 -0.856 -0.17198 1.39212 1.93602 2.36337 2.86843 3.82362 4.3582 4.57524 5.12587 4.27117 3.63869 3.42424 3.3297 3.41259 3.47941 3.65268 4.13002 4.3437 4.8876 5.48977 5.6646 5.76172 4.19167 4.1655 4.03885 3.69516 3.51023)) (quote (-1.29581 -1.81543 -1.81543 -1.81543 -1.8122 -1.78146 -1.82842 -1.77501 -1.7475 -1.60831 -1.06119 -0.82486 -0.64034 -0.29879 -0.15961 -0.09813 0.08801 1.30854 1.6258 1.68728 2.03366 2.0644 2.28289 2.63089 2.87851 3.34794 3.40297 3.28315 3.186 2.94475 2.5109 2.45426 2.15645 2.04156 2.44314 3.47777 3.46487 3.06669 2.82391 1.88344 1.40917 1.63429 0.65008 -0.07512 -0.22729 -0.40698 -0.60772 -0.01041 0.20163 0.85236 1.02228 1.18898 1.42692 1.5661 1.90441 1.76676 1.77321 1.63234 1.8217 2.81075 2.66333 2.5548 2.74417 4.25605 4.08919 4.16036 4.20239 3.90119 3.91087 4.01931 3.95613 3.56916 2.86162 2.07969 -0.32748 -0.98959 -1.69059 -2.22804 -2.99052 -3.24145 -3.31431 -3.28357 -0.61425 1.25055 1.94985 1.97575 2.05345 2.05345 2.00165 1.79445 1.69247 1.24079 0.91054 0.75998 0.68551 0.07512 0.22568 0.58021 1.26822 1.57256)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (0.55556 -0.52285 -0.84006 -0.80782 -0.58877 -0.70416 -0.54733 -0.60269 -0.67534 -0.89672 -0.67178 -0.79053 -0.58178 -0.21503 0.32006 1.13307 1.6128 2.72915 1.8839 2.10302 2.40171 2.42016 2.22067 1.71213 0.42055 0.03536 -0.20338 -0.28989 -0.29105 -0.11234 -0.95894 0.54591 0.44781 0.45008 1.01165 1.56171 1.49365 1.35755 1.34946 1.05646 0.89841 2.37788 1.55549 1.4458 1.69024 1.35113 1.3165 -0.54734 -0.6523 -0.96601 -1.19899 -1.41233 -1.5588 -1.78944 -1.85056 -2.02008 -1.83554 -1.55414 -1.19315 -0.96711 -0.25907 0.07303 -0.04461 -0.51865 -0.79773 -1.33049 -1.63145 -2.1907 -2.11454 -1.75123 -1.4675 -1.15379 -0.51832 0.14944 1.64303 2.15974 2.56572 3.04552 3.95552 4.47106 4.67981 5.20804 4.39608 3.77214 3.55303 3.4504 3.5035 3.5439 3.67774 4.09532 4.29831 4.81501 5.38708 5.55316 5.64543 3.96413 3.93415 3.80614 3.46938 3.286)) (quote (-0.81299 -1.30389 -1.30389 -1.30389 -1.30629 -1.28528 -1.33809 -1.29008 -1.26668 -1.15084 -0.63654 -0.41749 -0.24766 0.06861 0.18444 0.22645 0.39509 1.54913 1.83959 1.8816 2.19427 2.21528 2.40372 2.71519 2.92584 3.36633 3.41315 3.28292 3.1797 2.92046 2.49738 2.45176 2.19071 2.10068 2.54776 3.66454 3.67414 3.31226 3.09801 2.21823 1.78134 2.05258 1.11758 0.42864 0.27861 0.10518 -0.09646 0.46825 0.6615 1.27422 1.41105 1.5503 1.76815 1.88397 2.20264 2.04181 2.03701 1.87859 2.04483 2.97622 2.7788 2.64018 2.80641 4.22631 3.99949 4.03431 4.04692 3.70066 3.69346 3.78829 3.70367 3.2896 2.54367 1.76532 -0.56794 -1.21607 -1.923 -2.44451 -3.19345 -3.4455 -3.52291 -3.5019 -0.96878 0.80278 1.46711 1.49172 1.56553 1.56553 1.51632 1.31948 1.21987 0.76618 0.44151 0.29029 0.21407 -0.42864 -0.27741 0.07306 0.74579 1.04585)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (0.0 -1.00816 -1.28438 -1.22144 -0.95454 -1.03147 -0.86131 -0.91375 -0.99068 -1.24359 -1.05478 -1.19697 -0.99651 -0.63287 -0.08275 0.76574 1.2634 2.38578 1.47436 1.69813 2.0 2.01748 1.8042 1.26573 -0.08741 -0.46853 -0.7028 -0.78205 -0.77506 -0.56527 -1.34032 0.27156 0.21911 0.24825 0.85314 1.44173 1.37995 1.25641 1.26224 1.01166 0.89161 2.48485 1.73543 1.70979 1.99534 1.67948 1.67366 -0.09207 -0.18881 -0.48601 -0.71212 -0.92774 -1.07459 -1.31468 -1.37529 -1.55478 -1.37996 -1.10256 -0.74709 -0.52215 0.2296 0.58741 0.48136 0.03496 -0.25641 -0.82051 -1.15152 -1.7704 -1.71445 -1.37296 -1.10956 -0.81236 -0.18065 0.47086 1.89394 2.38345 2.76807 3.22262 4.08741 4.58392 4.78438 5.29021 4.52098 3.9056 3.68182 3.5711 3.59441 3.60839 3.7028 4.06061 4.25292 4.74243 5.28439 5.44173 5.52914 3.7366 3.7028 3.57342 3.24359 3.06177)) (quote (-0.33016 -0.79235 -0.79235 -0.79235 -0.80038 -0.7891 -0.84776 -0.80515 -0.78586 -0.69337 -0.21189 -0.01013 0.14502 0.43601 0.52849 0.55103 0.70216 1.78972 2.05338 2.07593 2.35489 2.36616 2.52455 2.79949 2.97318 3.38473 3.42333 3.2827 3.17341 2.89618 2.48385 2.44927 2.22496 2.1598 2.65238 3.85131 3.88341 3.55784 3.37212 2.55303 2.1535 2.47086 1.58508 0.9324 0.78452 0.61733 0.4148 0.94692 1.12137 1.69609 1.79983 1.91161 2.10937 2.20185 2.50086 2.31686 2.30081 2.12485 2.26795 3.1417 2.89427 2.72555 2.86866 4.19656 3.90978 3.90826 3.89144 3.50014 3.47606 3.55726 3.45122 3.01005 2.22573 1.45095 -0.8084 -1.44255 -2.15541 -2.66098 -3.39639 -3.64955 -3.73152 -3.72024 -1.32332 0.355 0.98437 1.00768 1.07761 1.07761 1.03099 0.84451 0.74726 0.29156 -0.02751 -0.17941 -0.25737 -0.9324 -0.78051 -0.4341 0.22336 0.51913)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-0.55556 -1.49347 -1.7287 -1.63507 -1.32032 -1.35879 -1.17528 -1.22481 -1.30601 -1.59046 -1.43778 -1.60341 -1.41123 -1.05071 -0.48556 0.39841 0.91401 2.04241 1.06481 1.29325 1.59829 1.6148 1.38772 0.81934 -0.59538 -0.97242 -1.20222 -1.27422 -1.25907 -1.0182 -1.72171 -0.00279 -0.00959 0.04642 0.69464 1.32174 1.26625 1.15527 1.17502 0.96685 0.88481 2.59182 1.91537 1.97378 2.30045 2.00784 2.03082 0.36319 0.27468 -0.00601 -0.22526 -0.44315 -0.59038 -0.83993 -0.90002 -1.08948 -0.92437 -0.65099 -0.30102 -0.07718 0.71828 1.10179 1.00733 0.58858 0.2849 -0.31054 -0.67158 -1.3501 -1.31436 -0.99469 -0.75162 -0.47092 0.15702 0.79228 2.14485 2.60716 2.97041 3.39971 4.21931 4.69678 4.88896 5.37238 4.64588 4.03905 3.81061 3.69179 3.68532 3.67288 3.72786 4.0259 4.20752 4.66984 5.18169 5.33029 5.41285 3.50907 3.47144 3.34071 3.0178 2.83754)) (quote (0.15267 -0.28081 -0.28081 -0.28081 -0.29446 -0.29292 -0.35743 -0.32022 -0.30503 -0.23591 0.21275 0.39724 0.53769 0.80341 0.87253 0.87562 1.00924 2.0303 2.26718 2.27026 2.5155 2.51704 2.64538 2.8838 3.02051 3.40313 3.4335 3.28248 3.16712 2.87189 2.47033 2.44678 2.25921 2.21893 2.757 4.03808 4.09268 3.80341 3.64623 2.88782 2.52567 2.88915 2.05258 1.43616 1.29042 1.12949 0.92607 1.42559 1.58123 2.11796 2.18861 2.27293 2.4506 2.51972 2.79908 2.59192 2.56462 2.3711 2.49107 3.30717 3.00973 2.81093 2.93091 4.16682 3.82007 3.7822 3.73596 3.29961 3.25866 3.32624 3.19877 2.7305 1.90778 1.13659 -1.04886 -1.66903 -2.38783 -2.87744 -3.59932 -3.85359 -3.94012 -3.93858 -1.67786 -0.09278 0.50163 0.52364 0.58969 0.58969 0.54566 0.36954 0.27465 -0.18305 -0.49654 -0.64911 -0.7288 -1.43616 -1.2836 -0.94126 -0.29908 -0.0076)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-1.11112 -1.97877 -2.17302 -2.0487 -1.6861 -1.6861 -1.48926 -1.53587 -1.62135 -1.93733 -1.82078 -2.00985 -1.82596 -1.46854 -0.88838 0.03108 0.56462 1.69904 0.65526 0.88836 1.19657 1.21211 0.97124 0.37295 -1.10335 -1.47631 -1.70164 -1.76639 -1.74308 -1.47113 -2.10309 -0.27714 -0.23829 -0.15541 0.53613 1.20176 1.15255 1.05413 1.0878 0.92204 0.87801 2.69879 2.09531 2.23777 2.60555 2.33619 2.38799 0.81845 0.73816 0.47398 0.26159 0.04145 -0.10618 -0.36518 -0.42475 -0.62418 -0.46879 -0.19942 0.14505 0.36779 1.20695 1.61617 1.53329 1.1422 0.82622 0.19944 -0.19165 -0.92981 -0.91426 -0.61641 -0.39368 -0.1295 0.4947 1.1137 2.39576 2.83088 3.17276 3.5768 4.35121 4.80964 4.99353 5.45455 4.77079 4.1725 3.9394 3.81249 3.77623 3.73737 3.75292 3.9912 4.16213 4.59725 5.079 5.21885 5.29656 3.28153 3.24009 3.108 2.79202 2.61331)) (quote (0.63549 0.23073 0.23073 0.23073 0.21145 0.20326 0.1329 0.16471 0.17579 0.22156 0.6374 0.80461 0.93037 1.17081 1.21658 1.2002 1.31632 2.27089 2.48097 2.46458 2.67611 2.66792 2.76621 2.9681 3.06784 3.42152 3.44368 3.28225 3.16082 2.8476 2.45681 2.44428 2.29347 2.27805 2.86162 4.22485 4.30195 4.04898 3.92033 3.22261 2.89784 3.30744 2.52008 1.93992 1.79632 1.64165 1.43733 1.90425 2.0411 2.53982 2.57739 2.63425 2.79182 2.83759 3.09731 2.86697 2.82842 2.61735 2.7142 3.47265 3.1252 2.8963 2.99315 4.13708 3.73037 3.65615 3.58049 3.09908 3.04125 3.09522 2.94631 2.45094 1.58983 0.82222 -1.28932 -1.89551 -2.62024 -3.09391 -3.80225 -4.05764 -4.14872 -4.15691 -2.03239 -0.54055 0.01889 0.03961 0.10177 0.10177 0.06033 -0.10543 -0.19795 -0.65766 -0.96557 -1.1188 -1.20024 -1.93992 -1.78669 -1.44841 -0.82151 -0.53431)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-1.66666 -2.46406 -2.61732 -2.46231 -2.05186 -2.0134 -1.80322 -1.84692 -1.93667 -2.28419 -2.20377 -2.41627 -2.24067 -1.88636 -1.29118 -0.33624 0.21523 1.35568 0.24573 0.48349 0.79488 0.80944 0.55478 -0.07342 -1.6113 -1.98018 -2.20105 -2.25855 -2.22708 -1.92404 -2.48446 -0.55148 -0.46698 -0.35723 0.37762 1.08178 1.03885 0.95299 1.00059 0.87723 0.87121 2.80575 2.27525 2.50175 2.91064 2.66452 2.74514 1.27369 1.20163 0.95396 0.74844 0.52602 0.37801 0.10955 0.0505 -0.1589 -0.01322 0.25213 0.5911 0.81274 1.69561 2.13053 2.05924 1.6958 1.36751 0.70939 0.28826 -0.50953 -0.51418 -0.23815 -0.03575 0.21192 0.83236 1.43511 2.64666 3.05458 3.3751 3.75389 4.4831 4.9225 5.0981 5.53671 4.89569 4.30594 4.06818 3.93318 3.86713 3.80186 3.77798 3.95649 4.11675 4.52467 4.97631 5.10742 5.18027 3.05401 3.00874 2.87529 2.56624 2.38908)) (quote (1.1183 0.74225 0.74225 0.74225 0.71735 0.69942 0.62322 0.64962 0.65659 0.67901 1.06203 1.21196 1.32303 1.5382 1.56062 1.52477 1.62339 2.51146 2.69476 2.6589 2.83672 2.81879 2.88703 3.0524 3.11517 3.43992 3.45386 3.28203 3.15453 2.82332 2.44329 2.44179 2.32772 2.33718 2.96623 4.41161 4.51122 4.29455 4.19443 3.55739 3.26999 3.72572 2.98756 2.44366 2.30221 2.15378 1.94858 2.3829 2.50095 2.96167 2.96616 2.99556 3.13303 3.15545 3.39552 3.14201 3.09221 2.8636 2.93731 3.63811 3.24067 2.98167 3.05539 4.10734 3.64066 3.53011 3.42502 2.89857 2.82386 2.86421 2.69387 2.1714 1.2719 0.50786 -1.52977 -2.12198 -2.85264 -3.31037 -4.00518 -4.26169 -4.35732 -4.37524 -2.38692 -0.98831 -0.46384 -0.44441 -0.38614 -0.38614 -0.42499 -0.58039 -0.67054 -1.13225 -1.43458 -1.58848 -1.67166 -2.44366 -2.28976 -1.95555 -1.34392 -1.06102)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-2.22222 -2.94936 -3.06164 -2.87594 -2.41764 -2.34072 -2.1172 -2.15799 -2.25201 -2.63105 -2.58677 -2.82271 -2.6554 -2.3042 -1.69399 -0.70357 -0.13416 1.0123 -0.16382 0.07861 0.39316 0.40676 0.13831 -0.51981 -2.11927 -2.48407 -2.70047 -2.75071 -2.71108 -2.37697 -2.86584 -0.82582 -0.69568 -0.55905 0.21911 0.9618 0.92515 0.85185 0.91337 0.83243 0.86441 2.91272 2.45519 2.76573 3.21575 2.99287 3.1023 1.72895 1.66511 1.43396 1.2353 1.01062 0.86221 0.5843 0.52577 0.30639 0.44237 0.7037 1.03716 1.2577 2.18428 2.64491 2.58521 2.24941 1.90883 1.21937 0.76819 -0.08923 -0.11409 0.14012 0.32219 0.55335 1.17003 1.75654 2.89757 3.2783 3.57744 3.93098 4.615 5.03536 5.20267 5.61888 5.02059 4.43939 4.19697 4.05387 3.95804 3.86635 3.80303 3.92179 4.07136 4.45209 4.87361 4.99599 5.06398 2.82647 2.77739 2.64258 2.34046 2.16485)) (quote (1.60113 1.25379 1.25379 1.25379 1.22326 1.1956 1.11355 1.13455 1.13741 1.13648 1.48668 1.61933 1.7157 1.9056 1.90467 1.84935 1.93046 2.75205 2.90855 2.85323 2.99733 2.96967 3.00786 3.1367 3.1625 3.45831 3.46404 3.28181 3.14823 2.79903 2.42976 2.43929 2.36198 2.3963 3.07085 4.59838 4.72049 4.54012 4.46854 3.89218 3.64216 4.144 3.45506 2.94742 2.80811 2.66594 2.45984 2.86157 2.96082 3.38354 3.35494 3.35688 3.47426 3.47332 3.69375 3.41706 3.35601 3.10985 3.16044 3.80359 3.35613 3.06705 3.11764 4.0776 3.55096 3.40405 3.26954 2.69804 2.60646 2.63319 2.44142 1.89185 0.95395 0.19349 -1.77022 -2.34846 -3.08505 -3.52684 -4.20812 -4.46573 -4.56592 -4.59358 -2.74145 -1.43609 -0.94658 -0.92845 -0.87406 -0.87406 -0.91032 -1.05536 -1.14314 -1.60686 -1.90361 -2.05818 -2.1431 -2.94742 -2.79285 -2.46271 -1.86635 -1.58773)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-2.77778 -3.43467 -3.50596 -3.28956 -2.78341 -2.66803 -2.43117 -2.46905 -2.56734 -2.97792 -2.96976 -3.22915 -3.07013 -2.72203 -2.0968 -1.0709 -0.48355 0.66893 -0.57337 -0.32628 -0.00855 0.00408 -0.27817 -0.9662 -2.62724 -2.98796 -3.19989 -3.24288 -3.1951 -2.8299 -3.24722 -1.10017 -0.92438 -0.76088 0.0606 0.84181 0.81144 0.75071 0.82615 0.78762 0.85762 3.01969 2.63513 3.02972 3.52085 3.32122 3.45947 2.18422 2.1286 1.91395 1.72216 1.49521 1.34642 1.05905 1.00104 0.77169 0.89795 1.15527 1.48323 1.70267 2.67295 3.15928 3.11118 2.80303 2.45014 1.72934 1.24813 0.33107 0.28601 0.51839 0.68013 0.89478 1.50771 2.07796 3.14848 3.50201 3.77979 4.10807 4.74689 5.14822 5.30724 5.70105 5.14549 4.57284 4.32576 4.17457 4.04895 3.93085 3.82809 3.88708 4.02597 4.3795 4.77092 4.88455 4.94768 2.59894 2.54603 2.40986 2.11467 1.94062)) (quote (2.08396 1.76533 1.76533 1.76533 1.72918 1.69179 1.60388 1.61948 1.61823 1.59395 1.91133 2.02669 2.10838 2.273 2.24872 2.17393 2.23754 2.99263 3.12235 3.04755 3.15795 3.12055 3.12869 3.22101 3.20983 3.47671 3.47422 3.28159 3.14194 2.77474 2.41624 2.4368 2.39623 2.45543 3.17547 4.78514 4.92976 4.7857 4.74265 4.22698 4.01433 4.56229 3.92256 3.45118 3.31402 3.1781 2.97111 3.34023 3.42069 3.80541 3.74372 3.7182 3.81548 3.7912 3.99197 3.69211 3.61981 3.35611 3.38356 3.96906 3.4716 3.15242 3.17989 4.04785 3.46125 3.278 3.11407 2.49752 2.38905 2.40217 2.18896 1.6123 0.636 -0.12088 -2.01068 -2.57493 -3.31747 -3.74331 -4.41105 -4.66978 -4.77452 -4.81192 -3.09599 -1.88387 -1.42932 -1.41249 -1.36198 -1.36198 -1.39565 -1.53033 -1.61575 -2.08148 -2.37264 -2.52788 -2.61454 -3.45118 -3.29594 -2.96986 -2.38878 -2.11445)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-3.33334 -3.91998 -3.95028 -3.70319 -3.14919 -2.99534 -2.74515 -2.78011 -2.88268 -3.32479 -3.35277 -3.63559 -3.48486 -3.13987 -2.49962 -1.43823 -0.83295 0.32556 -0.98292 -0.73116 -0.41026 -0.39861 -0.69464 -1.41259 -3.13521 -3.49185 -3.69931 -3.73505 -3.67911 -3.28284 -3.6286 -1.37452 -1.15308 -0.96271 -0.09791 0.72183 0.69774 0.64957 0.73893 0.74281 0.85082 3.12665 2.81508 3.29371 3.82596 3.64957 3.81663 2.63948 2.59208 2.39395 2.20902 1.9798 1.83062 1.53381 1.47631 1.23699 1.35354 1.60684 1.9293 2.14764 3.16162 3.67366 3.63715 3.35665 2.99146 2.23932 1.72806 0.75136 0.6861 0.89666 1.03807 1.23621 1.84538 2.39938 3.39938 3.72572 3.98213 4.28517 4.87879 5.26108 5.41182 5.78322 5.2704 4.7063 4.45455 4.29526 4.13986 3.99534 3.85315 3.85237 3.98058 4.30692 4.66822 4.77312 4.83139 2.37141 2.31468 2.17715 1.88889 1.71639)) (quote (2.56679 2.27687 2.27687 2.27687 2.23509 2.18797 2.09421 2.10441 2.09905 2.05142 2.33597 2.43406 2.50105 2.64041 2.59276 2.49851 2.54462 3.23322 3.33614 3.24188 3.31856 3.27143 3.24952 3.30531 3.25716 3.4951 3.4844 3.28136 3.13564 2.75046 2.40272 2.4343 2.43048 2.51455 3.28009 4.97191 5.13903 5.03127 5.01675 4.56177 4.38649 4.98058 4.39006 3.95494 3.81992 3.69025 3.48237 3.8189 3.88055 4.22727 4.1325 4.07952 4.15671 4.10907 4.29019 3.96717 3.88361 3.60236 3.60669 4.13454 3.58707 3.2378 3.24213 4.01811 3.37155 3.15195 2.95859 2.29699 2.17165 2.17114 1.93651 1.33274 0.31806 -0.43525 -2.25114 -2.80141 -3.54988 -3.95978 -4.61399 -4.87383 -4.98313 -5.03025 -3.45052 -2.33165 -1.91207 -1.89653 -1.84991 -1.84991 -1.88099 -2.00531 -2.08835 -2.55609 -2.84167 -2.99757 -3.08597 -3.95494 -3.79903 -3.47702 -2.91121 -2.64117)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-3.88888 -4.40526 -4.39458 -4.1168 -3.51495 -3.32265 -3.05911 -3.09116 -3.198 -3.67165 -3.73575 -4.04202 -3.89957 -3.55769 -2.90241 -1.80555 -1.18233 -0.0178 -1.39245 -1.13603 -0.81196 -0.80128 -1.1111 -1.85897 -3.64315 -3.99572 -4.19871 -4.2272 -4.1631 -3.73575 -4.00996 -1.64886 -1.38177 -1.16453 -0.25641 0.60185 0.58404 0.54844 0.65171 0.69801 0.84402 3.23362 2.99501 3.55769 4.13105 3.97791 4.17378 3.09472 3.05555 2.87393 2.69586 2.46438 2.31481 2.00854 1.95156 1.70227 1.80911 2.0584 2.37535 2.59258 3.65028 4.18802 4.1631 3.91025 3.53275 2.74928 2.20797 1.17164 1.08618 1.27492 1.396 1.57763 2.18304 2.72079 3.65028 3.94943 4.18447 4.46225 5.01068 5.37393 5.51638 5.86538 5.3953 4.83974 4.58333 4.41595 4.23077 4.05983 3.87821 3.81767 3.93519 4.23433 4.56553 4.66168 4.7151 2.14388 2.08334 1.94445 1.66311 1.49217)) (quote (3.04959 2.78839 2.78839 2.78839 2.74099 2.68413 2.58453 2.58932 2.57986 2.50887 2.7606 2.84141 2.89371 3.00779 2.9368 2.82308 2.85168 3.4738 3.54993 3.4362 3.47917 3.42231 3.37034 3.38961 3.30449 3.5135 3.49458 3.28114 3.12935 2.72617 2.38919 2.43181 2.46474 2.57367 3.38471 5.15867 5.3483 5.27684 5.29085 4.89655 4.75865 5.39885 4.85754 4.45868 4.3258 4.20239 3.99362 4.29755 4.3404 4.64912 4.52126 4.44082 4.49792 4.42693 4.58841 4.24221 4.1474 3.8486 3.8298 4.30001 3.70254 3.32317 3.30437 3.98837 3.28184 3.02591 2.80312 2.09647 1.95426 1.94013 1.68407 1.0532 1.2E-4 -0.74961 -2.49159 -3.02788 -3.78228 -4.17624 -4.81691 -5.07787 -5.19172 -5.24858 -3.80505 -2.7794 -2.39479 -2.38054 -2.33781 -2.33781 -2.3663 -2.48026 -2.56094 -3.03068 -3.31067 -3.46725 -3.55739 -4.45868 -4.30211 -3.98416 -3.43362 -3.16787)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-4.44444 -4.89057 -4.8389 -4.53043 -3.88073 -3.64996 -3.37309 -3.40222 -3.51334 -4.01852 -4.11875 -4.44846 -4.3143 -3.97552 -3.30523 -2.17288 -1.53172 -0.36117 -1.80199 -1.54092 -1.21367 -1.20396 -1.52758 -2.30536 -4.15112 -4.49961 -4.69813 -4.71937 -4.64711 -4.18868 -4.39135 -1.92321 -1.61047 -1.36636 -0.41492 0.48187 0.47034 0.4473 0.56449 0.6532 0.83722 3.34059 3.17495 3.82168 4.43616 4.30626 4.53095 3.54998 3.51903 3.35392 3.18272 2.94897 2.79902 2.48329 2.42683 2.16757 2.26469 2.50997 2.82142 3.03755 4.13895 4.7024 4.68907 4.46386 4.07407 3.25925 2.6879 1.59194 1.48627 1.6532 1.75394 1.91906 2.52072 3.04221 3.90119 4.17314 4.38682 4.63934 5.14258 5.48679 5.62096 5.94755 5.5202 4.97319 4.71212 4.53665 4.32168 4.12432 3.90327 3.78296 3.8898 4.16175 4.46284 4.55025 4.59881 1.91635 1.85198 1.71173 1.43733 1.26794)) (quote (3.53242 3.29993 3.29993 3.29993 3.2469 3.18031 3.07486 3.07425 3.06068 2.96634 3.18525 3.24878 3.28639 3.37519 3.28085 3.14766 3.15876 3.71438 3.76372 3.63052 3.63978 3.57319 3.49117 3.47391 3.35183 3.53189 3.50476 3.28092 3.12305 2.70188 2.37567 2.42931 2.49899 2.6328 3.48933 5.34544 5.55757 5.52241 5.56496 5.23134 5.13081 5.81714 5.32504 4.96244 4.83171 4.71455 4.50488 4.77621 4.80027 5.07099 4.91004 4.80214 4.83914 4.7448 4.88663 4.51726 4.4112 4.09486 4.05293 4.46548 3.818 3.40855 3.36662 3.95863 3.19214 2.89985 2.64765 1.89595 1.73685 1.70911 1.43161 0.77365 -0.31783 -1.06398 -2.73205 -3.25436 -4.0147 -4.39271 -5.01985 -5.28192 -5.40032 -5.46692 -4.15958 -3.22718 -2.87753 -2.86458 -2.82573 -2.82573 -2.85163 -2.95523 -3.03354 -3.50529 -3.7797 -3.93695 -4.02883 -4.96244 -4.8052 -4.49131 -3.95606 -3.69459)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-5.0 -5.37587 -5.28322 -4.94406 -4.2465 -3.97728 -3.68706 -3.71328 -3.82867 -4.36539 -4.50175 -4.8549 -4.72902 -4.39336 -3.70804 -2.54021 -1.88112 -0.70455 -2.21154 -1.9458 -1.61539 -1.60665 -1.94406 -2.75175 -4.65909 -5.00349 -5.19755 -5.21154 -5.13112 -4.64161 -4.77273 -2.19755 -1.83916 -1.56819 -0.57343 0.36189 0.35664 0.34615 0.47728 0.60839 0.83042 3.44756 3.3549 4.08566 4.74126 4.63461 4.88811 4.00524 3.98252 3.83392 3.66958 3.43356 3.28322 2.95804 2.9021 2.63287 2.72028 2.96154 3.26748 3.48252 4.62762 5.21678 5.21504 5.01748 4.61538 3.76923 3.16783 2.01224 1.88637 2.03147 2.11189 2.26049 2.85839 3.36364 4.1521 4.39686 4.58916 4.81644 5.27448 5.59965 5.72553 6.02972 5.64511 5.10664 4.84091 4.65734 4.41259 4.18881 3.92833 3.74826 3.84441 4.08916 4.36014 4.43881 4.48252 1.68881 1.62063 1.47902 1.21154 1.04371)) (quote (4.01525 3.81148 3.81148 3.81148 3.75282 3.67649 3.56519 3.55918 3.5415 3.42381 3.6099 3.65614 3.67906 3.74259 3.6249 3.47224 3.46584 3.95497 3.97751 3.82485 3.80039 3.72407 3.612 3.55822 3.39916 3.55029 3.51494 3.2807 3.11676 2.6776 2.36215 2.42682 2.53325 2.69192 3.59395 5.53221 5.76684 5.76799 5.83907 5.56613 5.50298 6.23543 5.79254 5.4662 5.33761 5.2267 5.01615 5.25488 5.26014 5.49286 5.29882 5.16346 5.18037 5.06267 5.18485 4.79231 4.675 4.34111 4.27605 4.63096 3.93347 3.49392 3.42887 3.92888 3.10243 2.7738 2.49217 1.69542 1.51945 1.47809 1.17916 0.49409 -0.63577 -1.37835 -2.97251 -3.48084 -4.24711 -4.60918 -5.22278 -5.48597 -5.60893 -5.68526 -4.51412 -3.67496 -3.36028 -3.34862 -3.31366 -3.31366 -3.33697 -3.4302 -3.50615 -3.9799 -4.24873 -4.40664 -4.50027 -5.4662 -5.30829 -4.99847 -4.47849 -4.22131)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-5.55556 -5.86118 -5.72753 -5.35768 -4.61228 -4.30459 -4.00104 -4.02435 -4.14401 -4.71225 -4.88475 -5.26134 -5.14375 -4.8112 -4.11085 -2.90754 -2.23051 -1.04792 -2.62109 -2.35069 -2.0171 -2.00933 -2.36053 -3.19814 -5.16706 -5.50738 -5.69698 -5.70371 -5.61513 -5.09454 -5.15411 -2.4719 -2.06786 -1.77001 -0.73194 0.2419 0.24294 0.24501 0.39006 0.56359 0.82362 3.55452 3.53484 4.34965 5.04637 4.96296 5.24527 4.4605 4.44601 4.31392 4.15644 3.91816 3.76743 3.43279 3.37737 3.09816 3.17586 3.41311 3.71355 3.92748 5.1163 5.73116 5.74101 5.5711 5.1567 4.2792 3.64776 2.43253 2.28646 2.40974 2.46983 2.60192 3.19607 3.68506 4.40301 4.62057 4.79151 4.99353 5.40637 5.71252 5.8301 6.11189 5.77001 5.24009 4.9697 4.77804 4.5035 4.2533 3.95338 3.71355 3.79902 4.01658 4.25745 4.32738 4.36623 1.46128 1.38927 1.2463 0.98575 0.81947)) (quote (4.49808 4.32302 4.32302 4.32302 4.25873 4.17267 4.05552 4.0441 4.02232 3.88128 4.03455 4.06351 4.07174 4.11 3.96895 3.79682 3.77292 4.19555 4.19131 4.01918 3.96101 3.87494 3.73283 3.64252 3.44649 3.56869 3.52512 3.28047 3.11047 2.65331 2.34862 2.42433 2.5675 2.75105 3.69857 5.71898 5.97611 6.01356 6.11317 5.90092 5.87515 6.65372 6.26004 5.96996 5.84352 5.73886 5.52741 5.73355 5.72001 5.91472 5.6876 5.52478 5.5216 5.38055 5.48308 5.06736 4.9388 4.58737 4.49917 4.79643 4.04894 3.5793 3.49111 3.89914 3.01272 2.64775 2.33669 1.4949 1.30205 1.24707 0.92671 0.21454 -0.95372 -1.69272 -3.21296 -3.70732 -4.47952 -4.82565 -5.42572 -5.69002 -5.81753 -5.90359 -4.86866 -4.12274 -3.84302 -3.83266 -3.80158 -3.80158 -3.8223 -3.90518 -3.97876 -4.45451 -4.71776 -4.87634 -4.97171 -5.96996 -5.81138 -5.50563 -5.00092 -4.74803)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-6.11112 -6.34649 -6.17185 -5.77131 -4.97805 -4.6319 -4.31501 -4.33541 -4.45934 -5.05912 -5.26775 -5.66778 -5.55848 -5.22903 -4.51367 -3.27487 -2.57991 -1.39129 -3.03064 -2.75557 -2.41881 -2.41201 -2.77701 -3.64453 -5.67503 -6.01127 -6.1964 -6.19588 -6.09914 -5.54747 -5.53549 -2.74625 -2.29656 -1.97184 -0.89045 0.12192 0.12924 0.14387 0.30284 0.51878 0.81682 3.66149 3.71478 4.61364 5.35147 5.29131 5.60244 4.91577 4.90949 4.79391 4.6433 4.40275 4.25163 3.90755 3.85264 3.56346 3.63145 3.86468 4.15962 4.37245 5.60497 6.24554 6.26698 6.12472 5.69802 4.78918 4.1277 2.85283 2.68655 2.78802 2.82777 2.94335 3.53374 4.00648 4.65392 4.84428 4.99385 5.17062 5.53827 5.82538 5.93467 6.19406 5.89491 5.37355 5.09849 4.89873 4.59441 4.31779 3.97844 3.67884 3.75363 3.94399 4.15475 4.21594 4.24994 1.23375 1.15792 1.01359 0.75997 0.59524)) (quote (4.98091 4.83456 4.83456 4.83456 4.76465 4.66885 4.54585 4.52903 4.50314 4.33875 4.45919 4.47088 4.46441 4.4774 4.313 4.1214 4.07999 4.43614 4.4051 4.2135 4.12162 4.02582 3.85366 3.72682 3.49382 3.58708 3.5353 3.28025 3.10417 2.62902 2.3351 2.42183 2.60175 2.81017 3.80319 5.90575 6.18538 6.25914 6.38728 6.23572 6.24732 7.07201 6.72754 6.47372 6.34942 6.25102 6.03868 6.21221 6.17987 6.33659 6.07638 5.8861 5.86282 5.69842 5.7813 5.34242 5.2026 4.83362 4.7223 4.96191 4.16441 3.66467 3.55336 3.8694 2.92302 2.5217 2.18122 1.29437 1.08464 1.01604 0.67425 -0.06501 -1.27167 -2.00709 -3.45342 -3.9338 -4.71193 -5.04212 -5.62865 -5.89407 -6.02613 -6.12193 -5.22319 -4.57051 -4.32576 -4.3167 -4.2895 -4.2895 -4.30763 -4.38015 -4.45136 -4.92913 -5.18679 -5.34604 -5.44314 -6.47372 -6.31447 -6.01278 -5.52335 -5.27475)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-6.66666 -6.83177 -6.61615 -6.18492 -5.34382 -4.95921 -4.62898 -4.64646 -4.77467 -5.40598 -5.65074 -6.0742 -5.97319 -5.64685 -4.91646 -3.64218 -2.92929 -1.73465 -3.44017 -3.16044 -2.82051 -2.81468 -3.19347 -4.0909 -6.18298 -6.51514 -6.6958 -6.68803 -6.58313 -6.00038 -5.91686 -3.02059 -2.52525 -2.17366 -1.04895 0.00194 0.01554 0.04274 0.21562 0.47397 0.81002 3.76846 3.89471 4.87762 5.65656 5.61965 5.95959 5.37101 5.37296 5.27389 5.13014 4.88733 4.73582 4.38228 4.32789 4.02874 4.08702 4.31623 4.60567 4.8174 6.09362 6.7599 6.79293 6.67831 6.23931 5.29914 4.60761 3.27311 3.08663 3.16628 3.1857 3.28476 3.87141 4.32789 4.90482 5.06799 5.19619 5.34771 5.67016 5.93823 6.03924 6.27622 6.01981 5.50699 5.22727 5.01942 4.68531 4.38228 4.0035 3.64414 3.70824 3.87141 4.05206 4.10451 4.13365 1.00622 0.92658 0.78088 0.53419 0.37102)) (quote (5.46371 5.34608 5.34608 5.34608 5.27054 5.16501 5.03617 5.01394 4.98394 4.7962 4.88382 4.87823 4.85707 4.84478 4.65703 4.44597 4.38706 4.67672 4.61889 4.40782 4.28223 4.1767 3.97448 3.81112 3.54115 3.60548 3.54548 3.28003 3.09788 2.60474 2.32158 2.41934 2.63601 2.86929 3.9078 6.09251 6.39465 6.5047 6.66138 6.5705 6.61947 7.49028 7.19502 6.97746 6.85531 6.76315 6.54992 6.69086 6.63972 6.75844 6.46515 6.2474 6.20403 6.01628 6.07952 5.61746 5.46639 5.07987 4.94541 5.12738 4.27987 3.75004 3.6156 3.83966 2.83331 2.39565 2.02575 1.09385 0.86725 0.78503 0.42181 -0.34455 -1.5896 -2.32144 -3.69387 -4.16027 -4.94434 -5.25858 -5.83158 -6.09811 -6.23473 -6.34026 -5.57772 -5.01827 -4.80848 -4.80071 -4.7774 -4.7774 -4.79294 -4.8551 -4.92395 -5.40372 -5.6558 -5.81572 -5.91456 -6.97746 -6.81754 -6.51992 -6.04576 -5.80145)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-7.22222 -7.31708 -7.06047 -6.59855 -5.70959 -5.28652 -4.94295 -4.95752 -5.09 -5.75285 -6.03374 -6.48064 -6.38792 -6.06469 -5.31928 -4.00951 -3.27868 -2.07802 -3.84972 -3.56533 -3.22222 -3.21737 -3.60995 -4.53729 -6.69095 -7.01903 -7.19522 -7.1802 -7.06715 -6.45331 -6.29824 -3.29494 -2.75395 -2.37549 -1.20746 -0.11804 -0.09816 -0.0584 0.1284 0.42916 0.80322 3.87542 4.07466 5.14161 5.96167 5.948 6.31675 5.82627 5.83644 5.75389 5.617 5.37192 5.22002 4.85703 4.80316 4.49404 4.5426 4.7678 5.05173 5.26237 6.58229 7.27428 7.3189 7.23193 6.78062 5.80911 5.08754 3.6934 3.48673 3.54455 3.54364 3.62619 4.20908 4.64931 5.15573 5.2917 5.39854 5.5248 5.80206 6.05109 6.14381 6.35839 6.14472 5.64044 5.35606 5.14012 4.77622 4.44677 4.02856 3.60943 3.66285 3.79882 3.94937 3.99307 4.01736 0.77869 0.69522 0.54817 0.30841 0.14679)) (quote (5.94654 5.85762 5.85762 5.85762 5.77646 5.6612 5.5265 5.49887 5.46476 5.25367 5.30847 5.28559 5.24975 5.21219 5.00108 4.77055 4.69413 4.9173 4.83268 4.60215 4.44284 4.32758 4.09531 3.89543 3.58848 3.62387 3.55566 3.2798 3.09158 2.58045 2.30806 2.41684 2.67026 2.92842 4.01242 6.27928 6.60392 6.75028 6.93548 6.90529 6.99164 7.90857 7.66252 7.48122 7.36121 7.27531 7.06119 7.16953 7.09959 7.1803 6.85393 6.60872 6.54526 6.33415 6.37774 5.89251 5.73019 5.32612 5.16854 5.29285 4.39534 3.83542 3.67784 3.80991 2.74361 2.2696 1.87027 0.89333 0.64985 0.55401 0.16936 -0.62411 -1.90755 -2.63581 -3.93433 -4.38675 -5.17675 -5.47504 -6.03451 -6.30216 -6.44333 -6.55859 -5.93225 -5.46605 -5.29123 -5.28475 -5.26533 -5.26533 -5.27828 -5.33008 -5.39655 -5.87833 -6.12483 -6.28541 -6.386 -7.48122 -7.32063 -7.02708 -6.56819 -6.32817)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-7.77778 -7.80239 -7.50479 -7.01218 -6.07537 -5.61384 -5.25693 -5.26858 -5.40534 -6.09972 -6.41674 -6.88708 -6.80265 -6.48252 -5.72209 -4.37684 -3.62808 -2.42139 -4.25927 -3.97021 -3.62393 -3.62005 -4.02642 -4.98368 -7.19891 -7.52292 -7.69464 -7.67237 -7.55116 -6.90624 -6.67962 -3.56929 -2.98265 -2.57732 -1.36597 -0.23802 -0.21187 -0.15954 0.04118 0.38436 0.79643 3.98239 4.2546 5.4056 6.26677 6.27635 6.67392 6.28153 6.29993 6.23388 6.10386 5.85651 5.70423 5.33178 5.27843 4.95934 4.99819 5.21937 5.4978 5.70733 7.07097 7.78866 7.84486 7.78555 7.32194 6.31909 5.56747 4.1137 3.88682 3.92282 3.90158 3.96762 4.54675 4.97073 5.40663 5.51542 5.60088 5.7019 5.93396 6.16395 6.24838 6.44056 6.26962 5.77389 5.48485 5.26081 4.86713 4.51127 4.05362 3.57472 3.61746 3.72624 3.84667 3.88164 3.90106 0.55116 0.46387 0.31546 0.08262 -0.07744)) (quote (6.42937 6.36916 6.36916 6.36916 6.28237 6.15738 6.01683 5.9838 5.94558 5.71113 5.73312 5.69296 5.64242 5.57959 5.34513 5.09513 5.00121 5.15789 5.04647 4.79647 4.60345 4.47846 4.21614 3.97973 3.63581 3.64227 3.56584 3.27958 3.08529 2.55617 2.29453 2.41435 2.70451 2.98754 4.11704 6.46604 6.81319 6.99585 7.20959 7.24008 7.36381 8.32686 8.13002 7.98498 7.86712 7.78746 7.57245 7.64819 7.55946 7.60217 7.24271 6.97004 6.88648 6.65202 6.67596 6.16756 5.99399 5.57237 5.39166 5.45833 4.51081 3.92079 3.74009 3.78017 2.6539 2.14355 1.7148 0.6928 0.43244 0.32299 -0.0831 -0.90366 -2.22549 -2.95018 -4.17479 -4.61322 -5.40916 -5.69151 -6.23745 -6.50621 -6.65194 -6.77693 -6.28679 -5.91383 -5.77397 -5.76879 -5.75325 -5.75325 -5.76361 -5.80505 -5.86916 -6.35294 -6.59385 -6.75511 -6.85744 -7.98498 -7.82372 -7.53423 -7.09063 -6.85489)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-8.33334 -8.28769 -7.94911 -7.4258 -6.44115 -5.94115 -5.57091 -5.57965 -5.72067 -6.44659 -6.79974 -7.29352 -7.21737 -6.90036 -6.12491 -4.74417 -3.97747 -2.76477 -4.66881 -4.3751 -4.02565 -4.02273 -4.4429 -5.43008 -7.70688 -8.02681 -8.19406 -8.16454 -8.03517 -7.35918 -7.061 -3.84364 -3.21135 -2.77914 -1.52448 -0.35801 -0.32557 -0.26068 -0.04604 0.33955 0.78963 4.08936 4.43454 5.66959 6.57188 6.6047 7.03108 6.73679 6.76341 6.71388 6.59072 6.34111 6.18843 5.80653 5.7537 5.42464 5.45377 5.67095 5.94387 6.1523 7.55964 8.30304 8.37083 8.33917 7.86325 6.82906 6.0474 4.534 4.28691 4.3011 4.25952 4.30905 4.88443 5.29216 5.65754 5.73913 5.80323 5.87899 6.06585 6.27681 6.35296 6.52273 6.39452 5.90734 5.61364 5.38151 4.95804 4.57576 4.07868 3.54002 3.57207 3.65365 3.74398 3.7702 3.78477 0.32362 0.23251 0.08274 -0.14316 -0.30167)) (quote (6.9122 6.8807 6.8807 6.8807 6.78829 6.65356 6.50716 6.46873 6.42641 6.1686 6.15777 6.10033 6.0351 5.94699 5.68918 5.41971 5.30829 5.39847 5.26027 4.9908 4.76407 4.62934 4.33697 4.06403 3.68315 3.66066 3.57602 3.27936 3.07899 2.53188 2.28101 2.41185 2.73877 3.04667 4.22166 6.65281 7.02246 7.24143 7.4837 7.57488 7.73597 8.74515 8.59752 8.48874 8.37302 8.29962 8.08372 8.12686 8.01933 8.02404 7.63149 7.33136 7.22771 6.9699 6.97419 6.44261 6.25779 5.81863 5.61479 5.6238 4.62628 4.00617 3.80234 3.75043 2.5642 2.0175 1.55932 0.49228 0.21504 0.09197 -0.33555 -1.18321 -2.54344 -3.26455 -4.41525 -4.8397 -5.64157 -5.90798 -6.44038 -6.71026 -6.86054 -6.99527 -6.64133 -6.36161 -6.25671 -6.25283 -6.24117 -6.24117 -6.24894 -6.28002 -6.34176 -6.82756 -7.06288 -7.22481 -7.32888 -8.48874 -8.32682 -8.04139 -7.61306 -7.38161)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-8.88888 -8.77298 -8.39341 -7.83942 -6.80691 -6.26845 -5.88487 -5.89069 -6.036 -6.79344 -7.18272 -7.69994 -7.63208 -7.31818 -6.5277 -5.11149 -4.32685 -3.10812 -5.07834 -4.77997 -4.42734 -4.4254 -4.85936 -5.87645 -8.21483 -8.53068 -8.69347 -8.65669 -8.51916 -7.81209 -7.44237 -4.11797 -3.44004 -2.98096 -1.68298 -0.47798 -0.43927 -0.36182 -0.13325 0.29474 0.78283 4.19632 4.61448 5.93356 6.87697 6.93304 7.38823 7.19204 7.22688 7.19386 7.07756 6.82568 6.67262 6.28127 6.22895 5.88991 5.90934 6.1225 6.38992 6.59725 8.04829 8.81739 8.89678 8.89276 8.40455 7.33902 6.52732 4.95428 4.68699 4.67935 4.61745 4.65047 5.22209 5.61357 5.90844 5.96283 6.00557 6.05607 6.19775 6.38967 6.45753 6.60489 6.51942 6.04079 5.74242 5.5022 5.04895 4.64025 4.10373 3.50531 3.52668 3.58107 3.64129 3.65877 3.66848 0.0961 0.00117 -0.14996 -0.36894 -0.5259)) (quote (7.395 7.39222 7.39222 7.39222 7.29418 7.14972 6.99747 6.95364 6.90721 6.62605 6.5824 6.50768 6.42776 6.31438 6.03321 5.74428 5.61535 5.63905 5.47405 5.18512 4.92467 4.78021 4.45779 4.14833 3.73048 3.67906 3.5862 3.27914 3.0727 2.50759 2.26749 2.40936 2.77302 3.10579 4.32628 6.83957 7.23173 7.48699 7.7578 7.90965 8.10813 9.16342 9.065 8.99248 8.8789 8.81176 8.59496 8.60551 8.47917 8.44589 8.02025 7.69266 7.56892 7.28776 7.2724 6.71766 6.52158 6.06487 5.8379 5.78927 4.74174 4.09154 3.86458 3.72069 2.47449 1.89145 1.40385 0.29176 -0.00235 -0.13905 -0.58799 -1.46275 -2.86138 -3.57891 -4.65569 -5.06617 -5.87398 -6.12444 -6.64331 -6.9143 -7.06913 -7.2136 -6.99585 -6.80936 -6.73944 -6.73685 -6.72907 -6.72907 -6.73426 -6.75497 -6.81435 -7.30215 -7.53189 -7.69449 -7.8003 -8.99248 -8.82989 -8.54853 -8.13547 -7.90831)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-9.44444 -9.25828 -8.83773 -8.25304 -7.17268 -6.59577 -6.19884 -6.20176 -6.35133 -7.14031 -7.56572 -8.10638 -8.04681 -7.73601 -6.93052 -5.47882 -4.67625 -3.4515 -5.48789 -5.18485 -4.82906 -4.82809 -5.27583 -6.32284 -8.7228 -9.03457 -9.19289 -9.14886 -9.00317 -8.26502 -7.82375 -4.39232 -3.66874 -3.18279 -1.84149 -0.59797 -0.55297 -0.46296 -0.22047 0.24994 0.77603 4.30329 4.79442 6.19755 7.18208 7.26139 7.7454 7.6473 7.69036 7.67386 7.56442 7.31028 7.15683 6.75602 6.70422 6.35521 6.36492 6.57407 6.83598 7.04221 8.53697 9.33177 9.42275 9.44638 8.94586 7.849 7.00725 5.37457 5.08709 5.05763 4.97539 4.9919 5.55976 5.93499 6.15935 6.18655 6.20791 6.23317 6.32964 6.50253 6.5621 6.68706 6.64433 6.17424 5.87121 5.6229 5.13986 4.70474 4.12879 3.47061 3.48129 3.50849 3.53859 3.54734 3.55219 -0.13144 -0.23019 -0.38268 -0.59473 -0.75013)) (quote (7.87783 7.90376 7.90376 7.90376 7.8001 7.6459 7.48781 7.43857 7.38803 7.08352 7.00704 6.91504 6.82044 6.68178 6.37726 6.06886 5.92243 5.87963 5.68785 5.37944 5.08529 4.93109 4.57862 4.23264 3.77781 3.69745 3.59638 3.27891 3.0664 2.48331 2.25396 2.40686 2.80728 3.16492 4.4309 7.02634 7.441 7.73256 8.0319 8.24445 8.48029 9.58171 9.5325 9.49624 9.38481 9.32391 9.10622 9.08417 8.93904 8.86775 8.40903 8.05398 7.91015 7.60563 7.57063 6.99271 6.78538 6.31113 6.06103 5.95475 4.85721 4.17691 3.92682 3.69094 2.38479 1.7654 1.24838 0.09124 -0.21976 -0.37007 -0.84045 -1.74231 -3.17932 -3.89328 -4.89615 -5.29265 -6.10639 -6.34091 -6.84625 -7.11835 -7.27774 -7.43193 -7.35038 -7.25714 -7.22218 -7.22088 -7.217 -7.217 -7.21959 -7.22995 -7.28696 -7.77676 -8.00092 -8.16418 -8.27173 -9.49624 -9.33298 -9.05568 -8.6579 -8.43503)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-10.0 -9.74359 -9.28205 -8.66667 -7.53846 -6.92308 -6.51282 -6.51282 -6.66667 -7.48718 -7.94872 -8.51282 -8.46154 -8.15385 -7.33333 -5.84615 -5.02564 -3.79487 -5.89744 -5.58974 -5.23077 -5.23077 -5.69231 -6.76923 -9.23077 -9.53846 -9.69231 -9.64103 -9.48718 -8.71795 -8.20513 -4.66667 -3.89744 -3.38462 -2.0 -0.71795 -0.66667 -0.5641 -0.30769 0.20513 0.76923 4.41026 4.97436 6.46154 7.48718 7.58974 8.10256 8.10256 8.15385 8.15385 8.05128 7.79487 7.64103 7.23077 7.17949 6.82051 6.82051 7.02564 7.28205 7.48718 9.02564 9.84615 9.94872 10.0 9.48718 8.35897 7.48718 5.79487 5.48718 5.4359 5.33333 5.33333 5.89744 6.25641 6.41026 6.41026 6.41026 6.41026 6.46154 6.61539 6.66667 6.76923 6.76923 6.30769 6.0 5.74359 5.23077 4.76923 4.15385 3.4359 3.4359 3.4359 3.4359 3.4359 3.4359 -0.35897 -0.46154 -0.61539 -0.82051 -0.97436)) (quote (8.36066 8.4153 8.4153 8.4153 8.30601 8.14208 7.97814 7.9235 7.86885 7.54099 7.43169 7.32241 7.21311 7.04918 6.72131 6.39344 6.22951 6.12022 5.90164 5.57377 5.2459 5.08197 4.69945 4.31694 3.82514 3.71585 3.60656 3.27869 3.06011 2.45902 2.24044 2.40437 2.84153 3.22404 4.53552 7.21311 7.65027 7.97814 8.30601 8.57924 8.85246 10.0 10.0 10.0 9.89071 9.83607 9.61749 9.56284 9.39891 9.28962 8.79781 8.4153 8.25137 7.9235 7.86885 7.26776 7.04918 6.55738 6.28415 6.12022 4.97268 4.26229 3.98907 3.6612 2.29508 1.63935 1.0929 -0.10929 -0.43716 -0.60109 -1.0929 -2.02186 -3.49727 -4.20765 -5.13661 -5.51913 -6.3388 -6.55738 -7.04918 -7.3224 -7.48634 -7.65027 -7.70492 -7.70492 -7.70492 -7.70492 -7.70492 -7.70492 -7.70492 -7.70492 -7.75956 -8.25137 -8.46995 -8.63388 -8.74317 -10.0 -9.83607 -9.56284 -9.18033 -8.96175)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj)) :from-file t)) nil nil (pairlis (quote (winsize winpos picture)) (list (om-make-point 808 744) (om-make-point 487 0) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPC-LIB4" (quote bpc-lib) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "BPF-LIST" (list (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (0)) (quote (0)) (quote bpc) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj))))) (om-make-point 224 31) (om-make-point 156 160) (if (find-class (quote bpc-lib) nil) (make-instance (quote bpc-lib) :bpf-list (list (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-10.0004 -9.75513 -9.44881 -8.62185 -7.82495 -5.16087 -4.76323 -4.36398 -3.93605 -3.66001 -3.32296 -3.07794 -2.68008 -2.52696 -2.25107 -2.25111 -2.31199 -2.46595 -3.50722 -4.82401 -5.43578 -5.80419 -6.59991 -6.75317 -6.81508 -6.87609 -6.90733 -6.93746 -6.93684 -6.96828 -6.96815 -6.69151 -6.44715 -6.32531 -6.20169 -6.01826 -5.46702 -2.86424 -1.72971 -1.33216 -0.84201 -0.50501 0.32196 0.93393 1.51606 3.10889 3.9361 4.39494 5.28289 5.5282 5.52805 5.40578 5.16119 4.91577 4.67109 3.62904 2.68031 2.34315 2.03729 1.79197 1.42447 1.33203 1.20964 0.62799 0.41308 -0.01502 -1.05707 -1.21009 -1.42412 -1.45489 -0.16803 0.81198 6.78435 7.70273 7.97931 8.52989 8.95883 9.38697 9.96905 9.99983 9.99983 9.90773 9.78587 9.63172 7.88684 7.67223 7.58007 7.58008 7.58008 7.61111 7.73407 7.79481 8.13204 8.315 8.65183 8.74384 8.86712 8.89669 8.92814 8.98938)) (quote (5.97421 6.19318 6.49885 7.15495 7.76807 9.38682 9.56233 9.69401 9.8249 9.91184 9.9561 10.00003 10.00009 9.99965 9.69407 9.2562 8.90579 8.38074 5.58038 3.43497 2.73487 2.42913 1.86 1.72902 1.55398 1.37897 1.24706 0.94106 0.76596 0.32801 -0.10898 -1.02789 -1.37909 -1.46613 -1.59694 -1.6411 -1.64102 0.066 1.37878 1.86019 2.56009 2.95414 4.22274 5.01071 5.62425 7.15475 7.85611 8.16195 8.59999 8.46828 8.24898 7.85576 7.3303 6.97966 6.45523 4.44204 2.82337 2.16614 1.51021 0.94097 -0.06603 -0.37201 -0.50286 -1.64094 -2.07937 -3.25997 -6.32427 -7.06816 -8.20635 -8.73061 -9.08145 -8.64294 -2.29809 -0.941 -0.76607 -0.37198 -0.19705 0.02195 0.19699 0.15307 -0.1529 -0.72201 -1.247 -1.68499 -6.76079 -8.03134 -8.90593 -9.47504 -9.86892 -9.956 -10.00022 -9.9999 -9.95595 -9.86913 -9.56174 -9.47495 -9.38721 -9.29977 -9.30011 -9.25626)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-9.90955 -9.66588 -9.35305 -8.46973 -7.67376 -5.07985 -4.6762 -4.27978 -3.85636 -3.53677 -3.17974 -2.89531 -2.49161 -2.32662 -2.05392 -2.05122 -2.10879 -2.26994 -3.35126 -4.70728 -5.30511 -5.68105 -6.46934 -6.61615 -6.63247 -6.69563 -6.72962 -6.78139 -6.81528 -6.92656 -6.96932 -6.79432 -6.59701 -6.49429 -6.55134 -6.37709 -5.84255 -3.12864 -1.80677 -1.3103 -0.69058 -0.30231 0.63802 1.29502 1.90125 3.54208 4.38627 4.93478 5.83466 6.06761 6.05954 5.91931 5.66149 5.38721 5.12924 3.96435 2.95954 2.58668 2.25813 2.00082 1.65106 1.30038 1.16322 0.45024 0.18682 -0.35322 -1.66388 -1.85708 -2.08538 -1.9876 -0.71122 0.26416 6.53247 7.55025 7.83256 8.40257 8.82717 9.25885 9.82863 9.83537 9.7862 9.62233 9.44077 9.24193 7.03033 6.73904 6.63223 6.59524 6.57814 6.61182 6.73285 6.79551 7.14819 7.33844 7.70043 7.79696 7.93937 7.97957 8.01155 8.07502)) (quote (6.09489 6.30181 6.58452 7.20906 7.80963 9.35863 9.5548 9.69292 9.82611 9.94062 9.99134 10.04151 10.03374 10.0248 9.71481 9.27506 8.91678 8.40895 5.70733 3.65511 3.02207 2.81311 2.32228 2.21002 2.07814 1.93023 1.8163 1.54727 1.41561 1.02053 0.60302 -0.3063 -0.66724 -0.7598 -0.89912 -0.96039 -1.02611 0.41907 1.7366 2.20488 2.8271 3.18296 4.3127 5.0032 5.53627 6.88998 7.51436 7.74363 8.1108 7.96928 7.76221 7.38962 6.89479 6.52499 5.93987 4.0462 2.52255 1.92964 1.33759 0.80932 -0.21587 -0.5455 -0.66985 -1.71813 -2.12411 -3.22228 -6.08287 -6.78825 -7.8911 -8.49799 -8.97726 -8.6164 -2.92469 -1.71027 -1.57887 -1.26851 -1.1689 -1.02049 -0.94256 -1.03192 -1.36381 -1.92133 -2.41416 -2.81637 -7.47546 -8.65702 -9.46581 -10.01094 -10.3867 -10.47112 -10.52372 -10.52812 -10.5181 -10.45176 -10.1918 -10.12028 -10.09924 -10.03942 -10.04609 -10.02209)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-9.81725 -9.57544 -9.25655 -8.31762 -7.52276 -4.99928 -4.58951 -4.19582 -3.77685 -3.41337 -3.03618 -2.71219 -2.30281 -2.12626 -1.85684 -1.85153 -1.90621 -2.07391 -3.19082 -4.58053 -5.15923 -5.5324 -6.30636 -6.44489 -6.40989 -6.4714 -6.50547 -6.57284 -6.63319 -6.81593 -6.89766 -6.81918 -6.66806 -6.58408 -6.82003 -6.65643 -6.14626 -3.34664 -1.83065 -1.23838 -0.50228 -0.0682 0.96833 1.65944 2.28144 3.95411 4.80903 5.43717 6.34359 6.5641 6.54984 6.39391 6.1258 5.81818 5.53398 4.25826 3.20526 2.80613 2.46427 2.19999 1.86091 1.24588 1.09349 0.26308 -0.0443 -0.68373 -2.23297 -2.46142 -2.70312 -2.49644 -1.24243 -0.27709 6.22293 7.32133 7.60352 8.18174 8.59108 9.01623 9.55968 9.53262 9.42835 9.19428 8.95898 8.72167 6.1125 5.75875 5.6469 5.5768 5.54527 5.58201 5.70049 5.76463 6.12906 6.32442 6.70592 6.80509 6.95587 7.002 7.0336 7.09623)) (quote (6.21421 6.40919 6.66889 7.2605 7.84864 9.32984 9.54653 9.69113 9.82668 9.96788 10.02452 10.07965 10.06384 10.04595 9.73155 9.28961 8.92316 8.4326 5.82992 3.87144 3.30306 3.19115 2.77538 2.68026 2.58319 2.46117 2.36446 2.13319 2.04916 1.70799 1.3141 0.4255 0.06089 -0.034 -0.14156 -0.21799 -0.34515 0.83059 2.11874 2.55764 3.08482 3.39687 4.37848 4.96942 5.42183 6.59936 7.14749 7.29048 7.58734 7.437 7.24212 6.89065 6.42562 6.03943 5.39416 3.62648 2.19435 1.66572 1.13505 0.64508 -0.40383 -0.71674 -0.83297 -1.7759 -2.14415 -3.14981 -5.78464 -6.45073 -7.52417 -8.23352 -8.8409 -8.5554 -3.52429 -2.4584 -2.36965 -2.1423 -2.11438 -2.03408 -2.04727 -2.17556 -2.52479 -3.06137 -3.5157 -3.87821 -8.08546 -9.17745 -9.92738 -10.44701 -10.8052 -10.88831 -10.94935 -10.95886 -10.98524 -10.93996 -10.7293 -10.67306 -10.72081 -10.68954 -10.70263 -10.69836)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-9.72353 -9.48381 -9.15932 -8.16555 -7.37199 -4.91918 -4.50317 -4.11212 -3.69753 -3.28982 -2.89232 -2.52863 -2.11376 -1.92597 -1.65991 -1.65214 -1.70436 -1.87798 -3.02602 -4.4439 -4.99845 -5.35852 -6.11161 -6.24024 -6.14924 -6.20551 -6.23717 -6.31419 -6.39253 -6.637 -6.75338 -6.7651 -6.65853 -6.59245 -6.99863 -6.84677 -6.36779 -3.50866 -1.79768 -1.11502 -0.27774 0.19614 1.31098 2.02525 2.65478 4.34345 5.20303 5.89994 6.80761 7.0157 6.99691 6.82753 6.55186 6.20672 5.88354 4.50922 3.41481 2.99841 2.65184 2.38502 2.04926 1.16861 1.00071 0.06868 -0.27754 -1.00301 -2.75915 -3.01813 -3.27345 -2.97956 -1.75977 -0.8096 5.85858 7.0187 7.29518 7.87079 8.25476 8.66397 9.16835 9.09907 8.93529 8.63384 8.35136 8.08207 5.14581 4.74299 4.63412 4.53471 4.49116 4.53112 4.64639 4.71153 5.08369 5.28193 5.6772 5.77718 5.92537 5.97264 6.00298 6.06175)) (quote (6.33216 6.5153 6.75193 7.30926 7.88511 9.30045 9.53751 9.68863 9.82662 9.9936 10.05564 10.11446 10.0904 10.0631 9.7443 9.29989 8.92497 8.4517 5.94801 4.0835 3.577 3.56156 3.217 3.13729 3.0661 2.96835 2.88778 2.69431 2.66097 2.38347 2.01678 1.15905 0.79653 0.70231 0.66601 0.57646 0.39311 1.29423 2.51827 2.91235 3.3291 3.59248 4.41853 4.90888 5.2812 6.28452 6.75761 6.80575 7.03323 6.87505 6.69211 6.36205 5.92572 5.52652 4.82345 3.1871 1.8425 1.37685 0.90391 0.44899 -0.62802 -0.88268 -0.98893 -1.81312 -2.13899 -3.04375 -5.43472 -6.06123 -7.11071 -7.93931 -8.67345 -8.46069 -4.09159 -3.17781 -3.13009 -2.98364 -3.02237 -3.00637 -3.10284 -3.26193 -3.61894 -4.12547 -4.53591 -4.85575 -8.58598 -9.58959 -10.28861 -10.78168 -11.12311 -11.20628 -11.27579 -11.29072 -11.35558 -11.3317 -11.17156 -11.13042 -11.24768 -11.2453 -11.26475 -11.27971)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-9.62839 -9.39102 -9.06138 -8.01356 -7.22147 -4.83953 -4.41718 -4.02866 -3.6184 -3.16614 -2.74819 -2.34469 -1.9245 -1.72581 -1.4632 -1.45312 -1.50334 -1.68224 -2.85699 -4.29751 -4.8231 -5.15977 -5.8859 -6.0032 -5.85258 -5.90034 -5.9273 -6.00817 -6.09576 -6.39105 -6.53742 -6.63196 -6.56763 -6.51816 -7.07919 -6.93979 -6.49789 -3.606 -1.70504 -0.93951 -0.018 0.48921 1.66399 2.39049 3.01949 4.70874 5.56709 6.32122 7.22503 7.42077 7.39906 7.21842 6.93773 6.55124 6.17667 4.71613 3.58593 3.16069 2.81713 2.55155 2.21155 1.06906 0.88561 -0.13073 -0.51018 -1.30769 -3.23794 -3.52296 -3.79307 -3.43529 -2.26147 -1.33131 5.44272 6.64578 6.91131 7.47409 7.82354 8.2082 8.6623 8.54399 8.31789 7.95308 7.63046 7.33578 4.14297 3.70342 3.60383 3.4788 3.42536 3.46847 3.57985 3.64545 4.02106 4.21992 4.62315 4.72217 4.85683 4.90048 4.92866 4.98065)) (quote (6.44873 6.62014 6.83364 7.35538 7.91906 9.27048 9.52776 9.68543 9.82594 10.0178 10.0847 10.14593 10.11341 10.07628 9.75307 9.3059 8.92224 8.46627 6.06144 4.29085 3.84313 3.92266 3.64495 3.57878 3.52406 3.44857 3.38279 3.22642 3.2457 3.04025 2.70368 1.88588 1.53078 1.44003 1.51268 1.41208 1.17847 1.80233 2.92782 3.26276 3.55584 3.76647 4.43144 4.82124 5.11478 5.94714 6.34684 6.29275 6.45217 6.28707 6.11565 5.80709 5.39813 4.98983 4.23308 2.7323 1.47092 1.06583 0.64589 0.22236 -0.88604 -1.04028 -1.13449 -1.82889 -2.10837 -2.90563 -5.03864 -5.62573 -6.65609 -7.61755 -8.47606 -8.3331 -4.62164 -3.86133 -3.85235 -3.78338 -3.88241 -3.9257 -4.09598 -4.27641 -4.6309 -5.09866 -5.46086 -5.73601 -8.97369 -9.89168 -10.54848 -11.01435 -11.34008 -11.42466 -11.50259 -11.52323 -11.62816 -11.62582 -11.51683 -11.4904 -11.67652 -11.70272 -11.72838 -11.76168)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-9.53187 -9.29709 -8.96276 -7.86171 -7.07126 -4.76035 -4.33155 -3.94547 -3.53946 -3.04235 -2.6038 -2.16044 -1.73512 -1.52587 -1.26679 -1.25458 -1.30324 -1.48679 -2.68386 -4.14152 -4.63355 -4.93664 -5.63018 -5.73495 -5.52223 -5.55851 -5.57871 -5.65789 -5.74583 -6.08004 -6.25153 -6.42062 -6.39557 -6.36103 -7.05513 -6.92855 -6.52859 -3.63101 -1.55079 -0.71185 0.27547 0.80917 2.02517 2.75313 3.37378 5.04869 5.90016 6.69936 7.5944 7.77792 7.7548 7.56505 7.28163 6.85037 6.41262 4.87828 3.71682 3.29042 2.95655 2.69533 2.3435 0.94815 0.74937 -0.33274 -0.73941 -1.59457 -3.66547 -3.97236 -4.25924 -3.86212 -2.74579 -1.84021 4.97914 6.20674 6.45649 6.99693 7.30385 7.65633 8.05067 7.87829 7.58882 7.16583 6.81042 6.49689 3.11691 2.65179 2.56606 2.41895 2.35741 2.40339 2.51018 2.57567 2.9502 3.14744 3.55284 3.6492 3.75952 3.79488 3.82003 3.86245)) (quote (6.5639 6.72369 6.91403 7.39885 7.9505 9.23991 9.51727 9.68154 9.82463 10.04047 10.11169 10.17406 10.13288 10.08548 9.75789 9.30766 8.915 8.47632 6.17006 4.49303 4.10065 4.27278 4.05705 4.00242 3.9544 3.8988 3.8462 3.72558 3.79823 3.67164 3.36747 2.59742 2.25459 2.16981 2.38624 2.27664 1.99929 2.34593 3.33964 3.60251 3.76104 3.91566 4.41597 4.70629 4.9231 5.58902 5.91742 5.75495 5.84799 5.67683 5.51635 5.22916 4.84608 4.43308 3.62847 2.26642 1.08381 0.73583 0.36324 -0.03295 -1.17497 -1.18654 -1.26643 -1.82257 -2.0524 -2.73734 -4.60238 -5.15058 -6.16595 -7.27055 -8.25001 -8.17363 -5.10976 -4.50211 -4.52896 -4.53284 -4.68467 -4.7812 -5.01443 -5.20568 -5.54687 -5.96772 -6.27832 -6.5077 -9.24666 -10.08316 -10.70694 -11.14535 -11.45661 -11.54391 -11.63017 -11.65672 -11.80285 -11.82194 -11.7641 -11.75182 -12.00475 -12.05863 -12.09023 -12.14062)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-9.43399 -9.20202 -8.86346 -7.71003 -6.92139 -4.68165 -4.24629 -3.86254 -3.46072 -2.91847 -2.4592 -1.97593 -1.54567 -1.32623 -1.07077 -1.0566 -1.10418 -1.29175 -2.50677 -3.97612 -4.43024 -4.68974 -5.34559 -5.43684 -5.16071 -5.18288 -5.19453 -5.26677 -5.34619 -5.7066 -5.89817 -6.13283 -6.14355 -6.12191 -6.9214 -6.80764 -6.45347 -3.57726 -1.33392 -0.43275 0.60078 1.15387 2.39223 3.11113 3.71589 5.36217 6.20137 7.03301 7.91458 8.08608 8.06295 7.86615 7.58207 7.10308 6.59114 4.99536 3.80609 3.38541 3.06677 2.8123 2.44113 0.80719 0.59365 -0.53488 -0.96248 -1.86071 -4.03862 -4.36349 -4.66977 -4.25871 -3.21114 -2.33436 4.47204 5.70639 5.93604 6.4455 6.70311 7.01686 7.34386 7.11429 6.76217 6.28726 5.90658 5.58062 2.08054 1.59968 1.53065 1.3648 1.29665 1.345 1.44647 1.51123 1.88002 2.07342 2.47527 2.56736 2.64283 2.66538 2.68666 2.71693)) (quote (6.67766 6.82593 6.99308 7.43968 7.97943 9.20877 9.50604 9.67695 9.82269 10.06161 10.13662 10.19886 10.1488 10.09072 9.75876 9.3052 8.90329 8.48187 6.27373 4.68962 4.34883 4.61026 4.45117 4.406 4.35469 4.31631 4.27505 4.18814 4.31374 4.27119 4.00101 3.28526 2.95899 2.88233 3.27357 3.15691 2.84274 2.91494 3.74574 3.92522 3.9408 4.037 4.37103 4.56398 4.70682 5.21202 5.47163 5.19588 5.22458 5.04815 4.89788 4.63175 4.27285 3.86005 3.01503 1.79379 0.68551 0.39028 0.05863 -0.31452 -1.49141 -1.31854 -1.3817 -1.79378 -1.97143 -2.54108 -4.13217 -4.64238 -5.64607 -6.90067 -7.99669 -7.98338 -5.55168 -5.09381 -5.15301 -5.22401 -5.42018 -5.56297 -5.8472 -6.038 -6.35494 -6.72144 -6.97815 -7.16156 -9.40444 -10.16473 -10.76489 -11.17597 -11.47413 -11.56539 -11.65979 -11.69241 -11.88033 -11.92052 -11.91323 -11.91436 -12.23072 -12.31077 -12.34793 -12.41383)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-9.33476 -9.10585 -8.76351 -7.55856 -6.7719 -4.60342 -4.1614 -3.77988 -3.38219 -2.79452 -2.31442 -1.79123 -1.35624 -1.12697 -0.87522 -0.85928 -0.90625 -1.09721 -2.32586 -3.8015 -4.21362 -4.41978 -5.03338 -5.11036 -4.77069 -4.77653 -4.7781 -4.83857 -4.90069 -5.27401 -5.48057 -5.77126 -5.81378 -5.80273 -6.67464 -6.5734 -6.26775 -3.4397 -1.05439 -0.10365 0.95564 1.52085 2.76276 3.4624 4.0441 5.64815 6.46997 7.32111 8.18475 8.34446 8.32262 8.12074 7.83781 7.30865 6.71249 5.06751 3.85286 3.44381 3.14476 2.8987 2.50083 0.64791 0.42054 -0.73465 -1.17663 -2.10342 -4.35499 -4.69427 -5.0231 -4.6239 -3.65598 -2.8119 3.92601 5.15015 5.35594 5.82675 6.02969 6.29934 6.55339 6.26555 5.85332 5.3337 4.93532 4.60308 1.04661 0.55842 0.50721 0.32575 0.25215 0.30218 0.3976 0.46101 0.81924 1.00662 1.39935 1.4857 1.51627 1.52171 1.53834 1.55406)) (quote (6.78998 6.92686 7.07078 7.47789 8.00588 9.17705 9.4941 9.67167 9.82013 10.08124 10.15949 10.2203 10.1612 10.09202 9.75571 9.29855 8.88716 8.48295 6.3723 4.88015 4.58689 4.93348 4.8253 4.7874 4.72269 4.69858 4.66665 4.61082 4.78778 4.83271 4.59742 3.94113 3.63508 3.56831 4.16068 4.03876 3.69495 3.49829 4.13797 4.22456 4.09143 4.12767 4.29574 4.39444 4.46671 4.81807 5.01176 4.61918 4.58587 4.40493 4.26398 4.01843 3.68187 3.27457 2.3981 1.3187 0.28048 0.03289 -0.26482 -0.61941 -1.83151 -1.43355 -1.47745 -1.74243 -1.86617 -2.31934 -3.63448 -4.10789 -5.10236 -6.51038 -7.71756 -7.76358 -5.94353 -5.63059 -5.71819 -5.8496 -6.0809 -6.26224 -6.5847 -6.76333 -7.04515 -7.35074 -7.55229 -7.69036 -9.44801 -10.13827 -10.72421 -11.10839 -11.39491 -11.49125 -11.59355 -11.63232 -11.86211 -11.92283 -11.9649 -11.97852 -12.35363 -12.45774 -12.5 -12.57948)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-9.2342 -9.00857 -8.66292 -7.40735 -6.62283 -4.52566 -4.07688 -3.6975 -3.30386 -2.67052 -2.16948 -1.60639 -1.16687 -0.92815 -0.6802 -0.66269 -0.70954 -0.90328 -2.14128 -3.61787 -3.9842 -4.12757 -4.69496 -4.75715 -4.35498 -4.34265 -4.33293 -4.3772 -4.41356 -4.7861 -5.0026 -5.33943 -5.40944 -5.40642 -6.31324 -6.22394 -5.96849 -3.21477 -0.7131 0.27336 1.33741 1.9074 3.1343 3.80491 4.35677 5.90579 6.70545 7.5629 8.40442 8.5526 8.53321 8.32812 8.04789 7.46669 6.77742 5.09524 3.85669 3.46419 3.1878 2.95106 2.51942 0.47236 0.23253 -0.92951 -1.37924 -2.3203 -4.61293 -4.9634 -5.31828 -4.95678 -4.07895 -3.27112 3.34594 4.54395 4.72273 5.14831 5.29263 5.51407 5.69165 5.34647 4.87846 4.3222 3.91359 3.58083 0.02744 -0.46113 -0.49506 -0.68927 -0.76746 -0.71663 -0.62797 -0.5666 -0.22374 -0.04448 0.33372 0.41298 0.3892 0.37352 0.38475 0.38384)) (quote (6.90086 7.02646 7.14714 7.51349 8.02985 9.14475 9.48143 9.6657 9.81696 10.09933 10.18029 10.23841 10.17006 10.0894 9.74874 9.28772 8.86666 8.47958 6.46565 5.06423 4.81416 5.24089 5.17751 5.14467 5.05644 5.04345 5.01867 4.99075 5.21635 5.35038 5.15023 4.55716 4.27432 4.21879 5.03313 4.90755 4.54135 4.08423 4.50817 4.49436 4.20942 4.18505 4.18941 4.19791 4.20367 4.4091 4.54013 4.02844 3.93577 3.75099 3.61835 3.39272 3.07654 2.68041 1.78286 0.84532 -0.12679 -0.33248 -0.60364 -0.94424 -2.19105 -1.52903 -1.55111 -1.66869 -1.73758 -2.07483 -3.11588 -3.5539 -4.5407 -6.10215 -7.41414 -7.51554 -6.28194 -6.10725 -6.21889 -6.40322 -6.65983 -6.87147 -7.21889 -7.37353 -7.60974 -7.84883 -7.99497 -8.08909 -9.37974 -10.00683 -10.58766 -10.94565 -11.22201 -11.32446 -11.43433 -11.47925 -11.75043 -11.83092 -11.92055 -11.94564 -12.37355 -12.49909 -12.54588 -12.63673)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-9.13233 -8.91023 -8.56171 -7.25643 -6.47421 -4.44839 -3.99274 -3.6154 -3.22574 -2.54648 -2.02441 -1.42147 -0.97763 -0.72987 -0.4858 -0.46694 -0.51415 -0.71006 -1.95317 -3.42548 -3.74251 -3.81405 -4.33186 -4.37899 -3.91655 -3.88465 -3.86271 -3.8869 -3.88942 -4.24734 -4.46882 -4.84177 -4.93466 -4.93699 -5.83749 -5.75932 -5.55469 -2.90055 -0.31199 0.69546 1.74305 2.31051 3.50426 4.13657 4.65228 6.13434 6.90739 7.7579 8.57337 8.71032 8.69441 8.48783 8.21157 7.57707 6.78715 5.07947 3.81765 3.44552 3.19357 2.96634 2.49413 0.283 0.03249 -1.11694 -1.56775 -2.50926 -4.81151 -5.1703 -5.55492 -5.25655 -4.47873 -3.71036 2.73705 3.89424 4.0435 4.41845 4.50171 4.67214 4.77183 4.37231 3.85455 3.27041 2.85881 2.53087 -0.96503 -1.44852 -1.46728 -1.67163 -1.75388 -1.70329 -1.62211 -1.56342 -1.24079 -1.07164 -0.71311 -0.64215 -0.72901 -0.76944 -0.76427 -0.78366)) (quote (7.01027 7.12473 7.22215 7.54648 8.05136 9.11188 9.46805 9.65904 9.81317 10.11591 10.19903 10.25318 10.17539 10.08287 9.73789 9.27275 8.84181 8.4718 6.55364 5.24142 5.02994 5.53094 5.50595 5.47591 5.35418 5.34897 5.32907 5.32538 5.59583 5.81874 5.65329 5.1258 4.86845 4.82504 5.87603 5.74813 5.36673 4.66033 4.84822 4.72863 4.29153 4.20675 4.05153 3.97481 3.91869 3.98715 4.05907 3.42734 3.27822 3.09022 2.96477 2.75823 2.46039 2.08142 1.17439 0.37776 -0.53175 -0.70172 -0.95396 -1.28511 -2.56542 -1.60271 -1.60042 -1.57304 -1.58695 -1.81052 -2.58299 -2.98727 -3.96701 -5.6785 -7.08807 -7.2407 -6.56396 -6.5192 -6.6502 -6.87927 -7.15102 -7.38432 -7.74324 -7.86228 -8.04307 -8.21118 -8.3026 -8.35483 -9.20329 -9.7745 -10.35885 -10.69161 -10.9593 -11.06871 -11.18575 -11.23676 -11.54829 -11.64756 -11.78244 -11.81782 -12.2914 -12.43522 -12.48588 -12.58563)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-9.02919 -8.81082 -8.4599 -7.10586 -6.32609 -4.37161 -3.909 -3.5336 -3.14784 -2.42242 -1.87924 -1.23654 -0.78859 -0.53219 -0.2921 -0.2721 -0.32018 -0.51764 -1.76169 -3.22458 -3.48914 -3.48024 -3.94577 -3.97781 -3.45849 -3.40605 -3.37127 -3.37202 -3.33316 -3.66273 -3.88444 -4.28348 -4.3945 -4.39938 -5.24959 -5.18159 -5.02739 -2.49678 0.14607 1.15916 2.16918 2.72693 3.87001 4.45533 4.92909 6.33322 7.07557 7.90588 8.6917 8.81774 8.80617 8.59972 8.32844 7.63999 6.74331 5.02147 3.73624 3.38721 3.16018 2.94191 2.42273 0.08256 -0.17636 -1.29446 -1.73975 -2.66857 -4.95056 -5.31513 -5.73321 -5.52265 -4.85415 -4.12808 2.10481 3.2079 3.32582 3.64592 3.66723 3.78518 3.80764 3.35876 2.79886 2.19617 1.78849 1.47018 -1.91951 -2.39393 -2.40109 -2.61326 -2.69932 -2.65015 -2.57713 -2.52182 -2.22414 -2.06702 -1.73299 -1.6714 -1.82917 -1.89761 -1.89909 -1.93845)) (quote (7.11821 7.22164 7.29581 7.57689 8.07043 9.07844 9.45395 9.65171 9.80877 10.13097 10.2157 10.26462 10.17722 10.07245 9.72317 9.25367 8.81269 8.45962 6.63614 5.41131 5.23355 5.80217 5.8089 5.77938 5.61444 5.61355 5.59614 5.61261 5.92304 6.23279 6.10097 5.64001 5.40968 5.37883 6.67438 6.54525 6.15562 5.21384 5.15021 4.92167 4.33477 4.19066 3.88184 3.72572 3.61292 3.55425 3.57093 2.81953 2.61713 2.42645 2.30697 2.11857 1.83694 1.48136 0.57754 -0.08005 -0.92989 -1.07064 -1.31161 -1.63776 -2.9497 -1.65261 -1.6235 -1.45622 -1.41583 -1.52955 -2.04243 -2.41474 -3.38712 -5.24198 -6.74104 -6.94059 -6.78718 -6.86252 -7.00798 -7.27311 -7.54968 -7.79582 -8.15291 -8.22527 -8.34176 -8.43558 -8.47387 -8.48688 -8.92361 -9.44644 -10.04222 -10.35088 -10.61133 -10.72841 -10.85214 -10.90909 -11.25937 -11.37624 -11.55353 -11.59791 -12.10896 -12.26743 -12.32123 -12.42717)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-8.92478 -8.71038 -8.3575 -6.95566 -6.17851 -4.29532 -3.82564 -3.45208 -3.07017 -2.29837 -1.734 -1.05165 -0.59982 -0.3352 -0.09918 -0.07826 -0.12773 -0.32614 -1.56701 -3.01546 -3.22469 -3.1273 -3.53847 -3.55564 -2.98395 -2.91045 -2.86257 -2.8371 -2.74997 -3.03773 -3.25518 -3.67053 -3.79488 -3.79949 -4.55372 -4.49478 -4.3897 -2.00496 0.65725 1.66034 2.61213 3.1532 4.22886 4.75917 5.18573 6.50196 7.20992 8.00694 8.75979 8.87525 8.86873 8.66387 8.39829 7.65594 6.648 4.92287 3.61349 3.28914 3.08622 2.87565 2.30348 -0.12591 -0.39054 -1.45968 -1.89302 -2.7968 -5.03061 -5.39876 -5.85391 -5.75469 -5.20415 -4.52284 1.45487 2.49212 2.57756 2.8399 2.79987 2.8652 2.81312 2.32174 1.72877 1.11724 0.71995 0.41548 -2.82545 -3.28827 -3.28871 -3.50664 -3.59655 -3.55011 -3.48592 -3.43464 -3.16652 -3.0232 -2.71816 -2.66682 -2.90236 -3.00157 -3.0102 -3.0707)) (quote (7.22465 7.3172 7.3681 7.60472 8.08707 9.04445 9.43915 9.6437 9.80376 10.14451 10.23031 10.27273 10.17553 10.05817 9.7046 9.2305 8.77932 8.44309 6.71303 5.5735 5.42437 6.05316 6.08474 6.0535 5.83597 5.83588 5.81855 5.85074 6.19535 6.58805 6.48818 6.0933 5.89081 5.87246 7.41337 7.28378 6.89254 5.73188 5.40651 5.06813 4.33649 4.13497 3.68026 3.45137 3.28757 3.11245 3.07804 2.20864 1.95633 1.76346 1.64865 1.47731 1.20974 0.88396 -0.00305 -0.52436 -1.31682 -1.43495 -1.67216 -1.99755 -3.3387 -1.67711 -1.61892 -1.31928 -1.22602 -1.2352 -1.50065 -1.84291 -2.80673 -4.79517 -6.37478 -6.61682 -6.94971 -7.13405 -7.28889 -7.58109 -7.8522 -8.1024 -8.44471 -8.46017 -8.50463 -8.52213 -8.50971 -8.48664 -8.54677 -9.0287 -9.64292 -9.92879 -10.18335 -10.3086 -10.43846 -10.50113 -10.88803 -11.02112 -11.23749 -11.28949 -11.8288 -11.99791 -12.05402 -12.16327)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-8.81913 -8.60892 -8.25454 -6.80589 -6.03149 -4.21952 -3.7427 -3.37087 -2.99273 -2.17434 -1.58873 -0.86688 -0.41139 -0.13897 0.09289 0.11448 0.06311 -0.13564 -1.36929 -2.79841 -2.94983 -2.75646 -3.11188 -3.11463 -2.4962 -2.40156 -2.34061 -2.28679 -2.14525 -2.37831 -2.58736 -3.0096 -3.14252 -3.1441 -3.756 -3.70498 -3.64685 -1.42838 1.21676 2.19425 3.0679 3.58565 4.57809 5.0461 5.42082 6.64027 7.31052 8.06143 8.77832 8.88354 8.88262 8.68065 8.42122 7.62571 6.50368 4.78564 3.45084 3.15165 2.97079 2.76597 2.13521 -0.33917 -0.60631 -1.61029 -2.02552 -2.89292 -5.05287 -5.42274 -5.91832 -5.95246 -5.52778 -4.89334 0.79306 1.75438 1.80693 2.00987 1.9106 1.92448 1.80248 1.2772 0.66146 0.05104 -0.32995 -0.61696 -3.67315 -4.12319 -4.12293 -4.34489 -4.43893 -4.39659 -4.34186 -4.29525 -4.06112 -3.93319 -3.66123 -3.62087 -3.93993 -4.07218 -4.08837 -4.17079)) (quote (7.32958 7.41138 7.43903 7.63 8.1013 9.0099 9.42365 9.63503 9.79814 10.15653 10.24286 10.27751 10.17035 10.04004 9.68222 9.20329 8.74177 8.42224 6.78419 5.72759 5.60179 6.28257 6.33198 6.2968 6.01782 6.01496 5.9953 6.0385 6.41058 6.88055 6.81041 6.47986 6.30528 6.29891 8.07853 7.94896 7.56225 6.20163 5.60989 5.16307 4.29438 4.03815 3.44697 3.15267 2.94401 2.66386 2.58272 1.59826 1.29962 1.10499 0.99347 0.838 0.58233 0.29287 -0.56301 -0.9516 -1.68823 -1.79033 -2.03096 -2.35955 -3.72703 -1.67501 -1.5857 -1.16353 -1.0196 -0.93088 -0.96398 -1.27816 -2.2314 -4.34061 -5.99111 -6.2711 -7.0502 -7.33135 -7.49047 -7.80057 -8.05621 -8.30186 -8.61717 -8.56665 -8.53274 -8.47318 -8.4132 -8.35759 -8.07994 -8.52823 -9.16683 -9.4313 -9.68119 -9.81493 -9.95029 -10.01839 -10.43922 -10.587 -10.83867 -10.89683 -11.45433 -11.62966 -11.68721 -11.79674)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-8.71225 -8.50646 -8.15102 -6.65657 -5.88508 -4.14422 -3.66015 -3.28996 -2.91551 -2.05035 -1.44344 -0.68227 -0.22335 0.05643 0.28404 0.30605 0.25227 0.05375 -1.1687 -2.57373 -2.66521 -2.36903 -2.66799 -2.65702 -1.99849 -1.88308 -1.80942 -1.72572 -1.52451 -1.69071 -1.88763 -2.30792 -2.4448 -2.44072 -2.86441 -2.82018 -2.80606 -0.77204 1.81901 2.75563 3.5323 4.0205 4.91502 5.31422 5.63307 6.74797 7.37763 8.06997 8.74826 8.84357 8.84861 8.65068 8.39759 7.55036 6.31317 4.61202 3.25019 2.97554 2.81349 2.61187 1.91731 -0.55378 -0.81983 -1.74416 -2.13545 -2.95626 -5.01922 -5.38928 -5.92826 -6.11597 -5.82425 -5.23841 0.12524 1.0023 1.02224 1.1654 1.01045 0.97528 0.78977 0.2407 -0.38644 -0.98581 -1.34519 -1.61176 -4.45396 -4.89131 -4.89735 -5.12185 -5.22055 -5.18376 -5.13906 -5.09776 -4.90174 -4.79067 -4.55542 -4.5266 -4.93375 -5.10074 -5.12479 -5.22954)) (quote (7.43299 7.50418 7.50859 7.65273 8.11314 8.97479 9.40744 9.62568 9.79192 10.16704 10.25334 10.27897 10.16169 10.01809 9.65605 9.17206 8.70009 8.39711 6.84951 5.87322 5.76526 6.48914 6.54928 6.50801 6.15931 6.15014 6.12577 6.17506 6.56712 7.10699 7.06383 6.79462 6.64734 6.65194 8.65612 8.52672 8.1501 6.61065 5.75367 5.20205 4.2065 3.89903 3.18232 2.83064 2.58362 2.2105 2.08722 0.99186 0.65061 0.45459 0.34496 0.20406 -0.04186 -0.28842 -1.09832 -1.35852 -2.04006 -2.13252 -2.38325 -2.71861 -4.10915 -1.64548 -1.52338 -0.99053 -0.79884 -0.62004 -0.43841 -0.7265 -1.66635 -3.88082 -5.59182 -5.90515 -7.08787 -7.45277 -7.6111 -7.92993 -8.16057 -8.39345 -8.6705 -8.54631 -8.42926 -8.29323 -8.18948 -8.10516 -7.53117 -7.95266 -8.62036 -8.86492 -9.1112 -9.25352 -9.39368 -9.46682 -9.9184 -10.07916 -10.36197 -10.42479 -10.98964 -11.16651 -11.22457 -11.33123)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-8.60418 -8.40301 -8.04697 -6.50776 -5.73931 -4.06942 -3.57802 -3.20936 -2.83853 -1.92642 -1.29817 -0.49788 -0.03576 0.25093 0.47418 0.49637 0.43964 0.24195 -0.9654 -2.34176 -2.37156 -1.96644 -2.20891 -2.18513 -1.49414 -1.35878 -1.27308 -1.15865 -0.89344 -0.98159 -1.16311 -1.57332 -1.7098 -1.69763 -1.88883 -1.85032 -1.87665 -0.04268 2.45752 3.33866 4.00087 4.45375 5.23692 5.56165 5.82128 6.82505 7.41163 8.03346 8.67082 8.75656 8.76776 8.57483 8.32799 7.43119 6.07965 4.40456 3.01385 2.76209 2.61451 2.41293 1.64976 -0.76619 -1.02712 -1.85931 -2.22125 -2.98651 -4.93216 -5.30119 -5.88602 -6.24538 -6.09287 -5.55697 -0.54263 0.24366 0.23195 0.31623 0.11049 0.02986 -0.21114 -0.77257 -1.39899 -1.97745 -2.31058 -2.55442 -5.16018 -5.58609 -5.60619 -5.83205 -5.93611 -5.90635 -5.8722 -5.83679 -5.68273 -5.58978 -5.39442 -5.37751 -5.876 -6.07885 -6.11097 -6.23807)) (quote (7.53487 7.59559 7.57678 7.67293 8.1226 8.93914 9.39055 9.61567 9.7851 10.17604 10.26177 10.27711 10.14955 9.99235 9.62611 9.13686 8.65434 8.36773 6.90888 6.01 5.91423 6.67168 6.73543 6.68598 6.25999 6.24108 6.20968 6.26001 6.66387 7.26465 7.24529 7.03329 6.912 6.92615 9.13323 9.00384 8.6422 6.94704 5.83173 5.18114 4.07131 3.71678 2.88694 2.48648 2.20796 1.75447 1.59378 0.39287 0.01289 -0.18421 -0.29342 -0.42111 -0.65936 -0.85648 -1.60525 -1.74206 -2.36843 -2.45729 -2.72412 -3.06939 -4.47941 -1.58818 -1.43201 -0.80209 -0.5662 -0.30619 0.07036 -0.19367 -1.11662 -3.41832 -5.17881 -5.52082 -7.06246 -7.49743 -7.65004 -7.96862 -8.16536 -8.37778 -8.60652 -8.40261 -8.1994 -7.98879 -7.84561 -7.73659 -6.90936 -7.31032 -8.01049 -8.23665 -8.4802 -8.631 -8.77519 -8.85293 -9.33156 -9.50347 -9.8129 -9.87882 -10.43959 -10.61305 -10.67065 -10.77125)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-8.49494 -8.29859 -7.94241 -6.35949 -5.59423 -3.99513 -3.4963 -3.12907 -2.7618 -1.80256 -1.15295 -0.31377 0.1513 0.44444 0.66326 0.68535 0.62514 0.42885 -0.75959 -2.10285 -2.06962 -1.55017 -1.73684 -1.7014 -0.98648 -0.83239 -0.73563 -0.59028 -0.25776 -0.25783 -0.42121 -0.81407 -0.94615 -0.9237 -0.84085 -0.80713 -0.86981 0.75127 3.12509 3.93706 4.46898 4.88135 5.5411 5.7866 5.98435 6.8716 7.41307 7.95302 8.5475 8.62398 8.64134 8.45423 8.21329 7.26981 5.80655 4.16604 2.74453 2.51303 2.37459 2.1694 1.33316 -0.97276 -1.2242 -1.95396 -2.28165 -2.98374 -4.79475 -5.16181 -5.79435 -6.34103 -6.33306 -5.84809 -1.20459 -0.51374 -0.55547 -0.52799 -0.77837 -0.89981 -1.18685 -1.74818 -2.3612 -2.90925 -3.21223 -3.43167 -5.78529 -6.20201 -6.24448 -6.47079 -6.58107 -6.55982 -6.53668 -6.50772 -6.39906 -6.3253 -6.17248 -6.16767 -6.75944 -6.99866 -7.03893 -7.188)) (quote (7.6352 7.68559 7.6436 7.69062 8.12969 8.90294 9.37297 9.605 9.77769 10.18353 10.26814 10.27196 10.13395 9.96284 9.59243 9.09772 8.60457 8.33414 6.96219 6.13759 6.0482 6.8291 6.88936 6.82977 6.31972 6.28772 6.24709 6.29338 6.70029 7.35148 7.35236 7.19241 7.09519 7.11706 9.49811 9.3683 9.02577 7.19966 5.83869 5.09703 3.88769 3.49091 2.56166 2.12154 1.81863 1.29781 1.10459 -0.19538 -0.61013 -0.80805 -0.9183 -1.0342 -1.26682 -1.40806 -2.08043 -2.09949 -2.66974 -2.76055 -3.04867 -3.40645 -4.83214 -1.50321 -1.3122 -0.60027 -0.32434 0.00718 0.55702 0.31508 -0.5869 -2.95555 -4.75398 -5.11997 -6.97432 -7.46526 -7.60741 -7.91708 -8.07189 -8.25686 -8.42868 -8.14083 -7.85025 -7.56826 -7.39042 -7.2608 -6.22409 -6.61004 -7.34466 -7.55392 -7.79542 -7.95435 -8.10174 -8.18355 -8.68511 -8.86622 -9.19745 -9.26491 -9.80966 -9.97462 -10.03076 -10.12208)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-8.38454 -8.19324 -7.83735 -6.2118 -5.44986 -3.92135 -3.41501 -3.04911 -2.68531 -1.67881 -1.00781 -0.13002 0.33776 0.63689 0.85118 0.87291 0.80867 0.61436 -0.55145 -1.85738 -1.76016 -1.12183 -1.25405 -1.20831 -0.47882 -0.30766 -0.20107 -0.02526 0.37675 0.47345 0.33039 -0.03882 -0.1629 -0.12833 0.26631 0.29598 0.20142 1.59984 3.8138 4.54414 4.93183 5.29914 5.82493 5.98737 6.12128 6.88788 7.38264 7.83004 8.38002 8.44753 8.4709 8.29022 8.0546 7.06803 5.49759 3.89946 2.44532 2.23056 2.09506 1.88213 0.9687 -1.16986 -1.40714 -2.02654 -2.31564 -2.94838 -4.61057 -4.97501 -5.65642 -6.40346 -6.54438 -6.11096 -1.85476 -1.26213 -1.33164 -1.35771 -1.64548 -1.80212 -2.12458 -2.67257 -3.25932 -3.76793 -4.0376 -4.23162 -6.32392 -6.73457 -6.80805 -7.03414 -7.15164 -7.14035 -7.12862 -7.10658 -7.04635 -6.99265 -6.88449 -6.89181 -7.57736 -7.85282 -7.9012 -8.07146)) (quote (7.73396 7.77418 7.70904 7.70582 8.13445 8.8662 9.35471 9.59367 9.76967 10.18952 10.27246 10.26351 10.11492 9.9296 9.55505 9.05469 8.55085 8.2964 7.00934 6.25564 6.16672 6.9604 7.01016 6.93858 6.33861 6.29037 6.23843 6.27562 6.67638 7.36613 7.38339 7.26945 7.19382 7.22119 9.74036 9.60944 9.28937 7.35842 5.76993 4.94705 3.65497 3.22133 2.20757 1.73731 1.41734 0.84256 0.62179 -0.76971 -1.21517 -1.41371 -1.52645 -1.63203 -1.86094 -1.94002 -2.52088 -2.42837 -2.94069 -3.03836 -3.35202 -3.72432 -5.16166 -1.39116 -1.1651 -0.38731 -0.07605 0.31661 1.0167 0.79491 -0.08153 -2.49494 -4.31924 -4.70456 -6.82433 -7.35697 -7.48424 -7.77682 -7.88264 -8.03403 -8.14193 -7.76788 -7.39067 -7.04174 -6.83432 -6.68819 -5.48553 -5.86113 -6.63069 -6.82451 -7.0644 -7.23092 -7.3806 -7.46592 -7.98585 -8.1741 -8.52206 -8.5895 -9.106 -9.25725 -9.31091 -9.38979)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-8.27301 -8.08695 -7.73182 -6.06472 -5.30624 -3.84808 -3.33414 -2.96947 -2.60907 -1.55516 -0.86277 0.05334 0.52358 0.82823 1.03788 1.05897 0.99018 0.79839 -0.34114 -1.60571 -1.44396 -0.68304 -0.76284 -0.70835 0.02561 0.21182 0.32671 0.53187 1.00445 1.20511 1.08394 0.74359 0.6306 0.67879 1.4181 1.44423 1.3225 2.49168 4.5152 5.15296 5.3846 5.70297 6.08585 6.16239 6.23121 6.87427 7.32116 7.66612 8.17033 8.22913 8.25817 8.08437 7.85323 6.82789 5.15667 3.60799 2.11958 1.91729 1.7778 1.55264 0.55816 -1.35393 -1.57217 -2.07576 -2.32255 -2.88122 -4.38363 -4.74506 -5.47573 -6.43335 -6.72655 -6.34492 -2.48742 -1.99396 -2.08841 -2.16374 -2.48069 -2.66609 -3.01242 -3.53342 -4.08104 -4.54184 -4.77582 -4.94399 -6.77199 -7.18036 -7.29361 -7.51905 -7.64485 -7.64493 -7.6449 -7.63024 -7.62098 -7.588 -7.52607 -7.54534 -8.32376 -8.63469 -8.69104 -8.88131)) (quote (7.83114 7.86135 7.7731 7.71853 8.13688 8.82893 9.33577 9.58169 9.76107 10.194 10.27473 10.25178 10.09246 9.89264 9.514 9.0078 8.49323 8.25454 7.05025 6.36383 6.26936 7.06467 7.09709 7.01181 6.31703 6.24961 6.18446 6.20759 6.59267 7.30797 7.33751 7.26281 7.20579 7.23615 9.8512 9.71827 9.42317 7.41444 5.62173 4.7292 3.37292 2.9083 1.82593 1.33538 1.00582 0.39068 0.1474 -1.32711 -1.79919 -1.99817 -2.11485 -2.21159 -2.4386 -2.44951 -2.92404 -2.72661 -3.17835 -3.28706 -3.62942 -4.01761 -5.46244 -1.2531 -0.99241 -0.16563 0.17581 0.61878 1.44506 1.24159 0.39562 -2.03877 -3.87649 -4.27648 -6.61391 -7.17402 -7.28235 -7.5503 -7.60123 -7.71384 -7.75258 -7.29217 -6.831 -6.42072 -6.18902 -6.03037 -4.70413 -5.0731 -5.87657 -6.05638 -6.29486 -6.46819 -6.61924 -6.7074 -7.2408 -7.43405 -7.7935 -7.85936 -8.3352 -8.46752 -8.51769 -8.58102)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-8.16036 -7.97975 -7.62581 -5.9183 -5.16341 -3.77533 -3.25371 -2.89016 -2.53309 -1.43164 -0.71786 0.23624 0.70869 1.01837 1.2233 1.24346 1.16956 0.98085 -0.12886 -1.34824 -1.12183 -0.23552 -0.2656 -0.2041 0.5236 0.72247 0.84389 1.07667 1.61971 1.92987 1.83155 1.5241 1.42472 1.48758 2.59863 2.62144 2.47739 3.41408 5.22031 5.75621 5.82232 6.08862 6.32135 6.31014 6.31337 6.83127 7.22957 7.46307 7.92059 7.97093 8.00512 7.83847 7.61077 6.55163 4.78787 3.29495 1.77101 1.57625 1.42527 1.18309 0.10395 -1.52153 -1.71569 -2.10058 -2.302 -2.78339 -4.11836 -4.47662 -5.25614 -6.43154 -6.87936 -6.54942 -3.09695 -2.70179 -2.81783 -2.93717 -3.27427 -3.48135 -3.83935 -4.31956 -4.81556 -5.22097 -5.41766 -5.56009 -7.12661 -7.53701 -7.69866 -7.92323 -8.05846 -8.07122 -8.08312 -8.07621 -8.11996 -8.10813 -8.09342 -8.12431 -8.99321 -9.33819 -9.40225 -9.61095)) (quote (7.92674 7.94709 7.83577 7.72879 8.13701 8.79113 9.31616 9.56906 9.75188 10.19699 10.27495 10.23677 10.06658 9.85201 9.46931 8.9571 8.43177 8.20861 7.08483 6.46185 6.35575 7.14112 7.14957 7.04905 6.25563 6.16632 6.08627 6.09057 6.45025 7.17706 7.21465 7.17184 7.13005 7.16061 9.8236 9.68759 9.41915 7.36023 5.39127 4.44225 3.04177 2.55248 1.41826 0.91751 0.5859 -0.05586 -0.3166 -1.8647 -2.35928 -2.55857 -2.68057 -2.76997 -2.99674 -2.93377 -3.28772 -2.99245 -3.38015 -3.50322 -3.87627 -4.28103 -5.72906 -1.09057 -0.79636 0.06218 0.42825 0.91042 1.83826 1.65138 0.84101 -1.58932 -3.42767 -3.83776 -6.34504 -6.91868 -7.00445 -7.24097 -7.23235 -7.30207 -7.26827 -6.7235 -6.18296 -5.718 -5.46743 -5.30008 -3.89072 -4.25573 -5.09061 -5.25771 -5.49473 -5.67392 -5.82534 -5.91565 -6.45728 -6.65334 -7.0189 -7.08167 -7.50443 -7.61265 -7.65831 -7.70313)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-8.04663 -7.87166 -7.51937 -5.77258 -5.0214 -3.7031 -3.17372 -2.81119 -2.45736 -1.30827 -0.57312 0.41862 0.89302 1.20724 1.40735 1.42629 1.34673 1.16165 0.08519 -1.0854 -0.79464 0.21895 0.23525 0.30184 1.01202 1.22083 1.34681 1.60488 2.21707 2.64048 2.56534 2.29359 2.20975 2.28789 3.79102 3.81041 3.64887 4.35327 5.91975 6.34643 6.24005 6.45193 6.52907 6.42927 6.36714 6.75953 7.10896 7.22293 7.63317 7.67525 7.7139 7.55449 7.32898 6.2417 4.39543 2.96377 1.40352 1.21084 1.04048 0.77629 -0.39095 -1.66937 -1.8344 -2.10024 -2.25396 -2.65634 -3.81951 -4.17466 -5.00178 -6.39904 -7.00277 -6.72406 -3.67797 -3.3785 -3.51232 -3.66955 -4.0172 -4.23833 -4.59543 -5.02128 -5.45379 -5.79721 -5.95573 -6.07306 -7.38616 -7.8032 -8.02158 -8.24525 -8.39104 -8.4177 -8.44166 -8.44279 -8.54103 -8.55056 -8.58348 -8.6255 -9.58102 -9.95799 -10.02936 -10.25456)) (quote (8.02074 8.03139 7.89706 7.7366 8.13486 8.7528 9.29588 9.55579 9.7421 10.19848 10.27314 10.21851 10.03732 9.80773 9.42102 8.90264 8.36655 8.15866 7.11299 6.54939 6.42555 7.18906 7.16717 7.05004 6.15528 6.04169 5.94528 5.9262 6.25071 6.97422 7.01555 6.99689 6.96661 6.9944 9.65248 9.51219 9.27128 7.18989 5.07678 4.08566 2.66224 2.15492 0.98629 0.48558 0.15946 -0.49518 -0.76831 -2.37976 -2.89273 -3.09224 -3.2209 -3.30445 -3.53245 -3.39031 -3.61019 -3.22444 -3.54392 -3.68374 -4.08823 -4.50948 -5.9563 -0.90556 -0.57966 0.29342 0.67829 1.18847 2.19305 2.02115 1.2516 -1.14874 -2.9747 -3.39037 -6.0202 -6.59389 -6.65401 -6.85317 -6.7817 -6.80555 -6.69781 -6.07281 -5.45938 -4.94735 -4.68332 -4.51083 -3.05618 -3.41885 -4.28115 -4.43674 -4.67203 -4.85589 -5.00666 -5.09839 -5.64276 -5.83939 -6.20562 -6.26385 -6.62127 -6.70034 -6.7405 -6.76399)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-7.93183 -7.76271 -7.41249 -5.62759 -4.88024 -3.63139 -3.09417 -2.73257 -2.3819 -1.18507 -0.42857 0.60042 1.07652 1.39477 1.58997 1.60738 1.52162 1.3407 0.30082 -0.81761 -0.46322 0.67854 0.73725 0.80687 1.48785 1.70359 1.83196 2.11241 2.79124 3.3298 3.27753 3.04304 2.97598 3.0695 4.97761 4.99314 4.81877 5.29455 6.60384 6.91605 6.63284 6.78879 6.70672 6.51854 6.39201 6.65979 6.96052 6.94788 7.31061 7.3446 7.38686 7.2346 7.00986 5.90071 3.98365 2.61798 1.02127 0.82483 0.62697 0.33567 -0.92302 -1.79445 -1.92536 -2.0743 -2.17869 -2.50184 -3.49208 -3.84437 -4.717 -6.337 -7.09682 -6.86856 -4.22535 -4.01732 -4.16472 -4.35303 -4.70117 -4.9284 -5.27195 -5.63039 -5.98848 -6.26433 -6.38456 -6.47786 -7.55026 -7.97872 -8.26159 -8.4845 -8.64195 -8.68359 -8.71963 -8.72904 -8.88266 -8.91352 -8.9939 -9.04639 -10.08322 -10.48949 -10.56767 -10.80708)) (quote (8.11312 8.11423 7.95697 7.74199 8.13045 8.71395 9.27494 9.54188 9.73175 10.19849 10.26928 10.197 10.00469 9.75984 9.36916 8.84446 8.29764 8.10475 7.13466 6.62619 6.47846 7.20791 7.14964 7.01475 6.01711 5.87718 5.76317 5.71652 5.99616 6.70095 6.74175 6.73927 6.71656 6.73849 9.33481 9.18904 8.97572 6.89927 4.67748 3.65974 2.23554 1.71703 0.53194 0.04156 -0.27156 -0.92543 -1.20595 -2.86977 -3.39707 -3.59673 -3.7333 -3.81245 -4.04301 -3.81683 -3.89013 -3.42154 -3.66792 -3.82587 -4.26124 -4.69814 -6.13923 -0.7005 -0.34551 0.5253 0.92292 1.45002 2.50677 2.34836 1.62481 -0.71909 -2.51946 -2.93634 -5.64237 -6.20334 -6.23526 -6.39211 -6.25592 -6.23211 -6.05097 -5.35201 -4.67394 -4.12328 -3.8511 -3.67673 -2.2114 -2.57226 -3.4566 -3.60173 -3.83474 -4.02193 -4.17102 -4.26337 -4.80478 -4.99975 -5.36118 -5.41349 -5.69362 -5.73868 -5.77241 -5.77198)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-7.816 -7.65291 -7.30521 -5.48338 -4.73999 -3.56021 -3.01508 -2.65429 -2.30671 -1.06206 -0.28425 0.78158 1.2591 1.58089 1.77108 1.78667 1.69415 1.51791 0.51783 -0.54531 -0.12846 1.14136 1.23793 1.30838 1.94819 2.16759 2.296 2.59542 3.33719 3.99082 3.96048 3.76351 3.71381 3.82232 6.14018 6.15105 5.96826 6.22249 7.26274 7.45745 6.99586 7.09518 6.85218 6.57683 6.38761 6.53293 6.78556 6.64031 6.95561 6.98164 7.0265 6.88115 6.65558 5.53142 3.55689 2.26115 0.62853 0.42229 0.18876 -0.13476 -1.48812 -1.89406 -1.98602 -2.02261 -2.07683 -2.32194 -3.14127 -3.49112 -4.40633 -6.24669 -7.16172 -6.98279 -4.73428 -4.61188 -4.76835 -4.98033 -5.31871 -5.54392 -5.86148 -6.14032 -6.41422 -6.61813 -6.70063 -6.77132 -7.61975 -8.06437 -8.41875 -8.64117 -8.81133 -8.86885 -8.91692 -8.93474 -9.14403 -9.19598 -9.32305 -9.38521 -10.49661 -10.92887 -11.01326 -11.26425)) (quote (8.20388 8.19562 8.01548 7.74498 8.12379 8.67458 9.25334 9.52734 9.72081 10.19701 10.2634 10.17227 9.96872 9.70838 9.31377 8.78261 8.22509 8.04692 7.14977 6.69198 6.51423 7.19723 7.09692 6.9433 5.8425 5.67451 5.54197 5.4639 5.68921 6.35952 6.39561 6.40129 6.38209 6.39501 8.86982 8.71735 8.53097 6.48607 4.19372 3.16555 1.76335 1.24066 0.05738 -0.41245 -0.70519 -1.34485 -1.62782 -3.33243 -3.87003 -4.0698 -4.21544 -4.29159 -4.52581 -4.21128 -4.12665 -3.58301 -3.75087 -3.92728 -4.39161 -4.84254 -6.27324 -0.47824 -0.09752 0.75495 1.15916 1.69239 2.77735 2.63113 1.95857 -0.30232 -2.06386 -2.47768 -5.21501 -5.75137 -5.75314 -5.86376 -5.66246 -5.59044 -5.33843 -4.57381 -3.841 -3.2608 -2.98556 -2.81223 -1.36708 -1.7256 -2.62528 -2.76087 -2.99084 -3.17984 -3.32618 -3.41835 -3.95095 -4.14203 -4.49327 -4.53836 -4.72973 -4.73621 -4.76258 -4.73591)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-7.69914 -7.54227 -7.19754 -5.33998 -4.60065 -3.48956 -2.93644 -2.57636 -2.23179 -0.93925 -0.14017 0.96206 1.44074 1.76554 1.95063 1.96407 1.86425 1.6932 0.73603 -0.26896 0.20877 1.60555 1.73486 1.80381 2.39029 2.60986 2.73587 3.05035 3.85018 4.61683 4.6069 4.44643 4.41397 4.53655 7.26038 7.26542 7.07824 7.12135 7.88661 7.96309 7.32436 7.36723 6.96347 6.60321 6.35369 6.37993 6.58547 6.30271 6.57098 6.58915 6.63545 6.49661 6.26846 5.13671 3.11949 1.8968 0.22967 0.00751 -0.26967 -0.63046 -2.08172 -1.96583 -2.01435 -1.94537 -1.94929 -2.11893 -2.77236 -3.12032 -4.07439 -6.12952 -7.19776 -7.06674 -5.20031 -5.15636 -5.31716 -5.54498 -5.86331 -6.0784 -6.35804 -6.54624 -6.72761 -6.85641 -6.90238 -6.95221 -7.59667 -8.06195 -8.49396 -8.71625 -8.90007 -8.97421 -9.03414 -9.06043 -9.32504 -9.3976 -9.57005 -9.64094 -10.81879 -11.27317 -11.36303 -11.62268)) (quote (8.293 8.27554 8.0726 7.74559 8.11492 8.6347 9.2311 9.51216 9.7093 10.19404 10.25549 10.14432 9.92941 9.65338 9.25489 8.71714 8.14898 7.98524 7.15826 6.74653 6.53267 7.15667 7.0091 6.83602 5.633 5.43564 5.28389 5.17101 5.33288 5.95281 5.98022 5.98619 5.9664 5.96718 8.25893 8.09864 7.93788 5.94993 3.6269 2.60492 1.24777 0.72795 -0.43511 -0.87429 -1.13947 -1.75175 -2.03236 -3.76564 -4.30964 -4.50947 -4.66525 -4.73975 -4.9785 -4.57187 -4.3193 -3.70852 -3.79194 -3.98605 -4.47611 -4.93864 -6.35413 -0.24197 0.16036 0.97953 1.38413 1.91317 3.00339 2.8682 2.2513 0.09977 -1.6097 -2.01635 -4.74197 -5.24286 -5.21319 -5.27478 -5.00947 -4.88992 -4.57145 -3.75138 -2.97517 -2.37503 -2.10158 -1.93179 -0.53359 -0.88817 -1.79529 -1.92211 -2.14803 -2.33719 -2.47972 -2.57087 -3.08876 -3.27375 -3.6095 -3.64618 -3.73795 -3.7016 -3.71978 -3.66482)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-7.58129 -7.43082 -7.08949 -5.19742 -4.46227 -3.41945 -2.85825 -2.49878 -2.15715 -0.81666 0.00363 1.14178 1.62135 1.94866 2.12854 2.13953 2.03185 1.86649 0.95521 0.01099 0.54756 2.06914 2.22554 2.29058 2.81152 3.02761 3.14865 3.47389 4.32579 5.20138 5.20972 5.08351 5.06749 5.20271 8.31979 8.31749 8.12947 7.97503 8.46559 8.42552 7.61378 7.60122 7.03881 6.59686 6.29015 6.20188 6.36174 5.93773 6.1597 6.17005 6.2165 6.08359 5.85103 4.71957 2.67578 1.52848 -0.17085 -0.41495 -0.74345 -1.14634 -2.69875 -2.00783 -2.0088 -1.84306 -1.79734 -1.89534 -2.39068 -2.73746 -3.72593 -5.98702 -7.20536 -7.12055 -5.61937 -5.64542 -5.80566 -6.0412 -6.3294 -6.52645 -6.75699 -6.84499 -6.9271 -6.97895 -6.99015 -7.02109 -7.48416 -7.97423 -8.48887 -8.7115 -8.90978 -9.00107 -9.07259 -9.10733 -9.42628 -9.51876 -9.73469 -9.81324 -11.04812 -11.52018 -11.6147 -11.87982)) (quote (8.38047 8.35398 8.12833 7.74383 8.10384 8.59431 9.20821 9.49636 9.69722 10.1896 10.24556 10.11317 9.8868 9.59487 9.19256 8.64811 8.06937 7.91975 7.16007 6.7896 6.5336 7.08603 6.88645 6.69342 5.39043 5.16276 4.99146 4.84085 4.93065 5.48444 5.49946 5.49816 5.47377 5.45937 7.50592 7.33687 7.19982 5.29254 2.97958 1.98054 0.69143 0.18148 -0.94303 -1.34169 -1.57236 -2.14454 -2.4181 -4.16753 -4.7141 -4.91397 -5.08081 -5.15493 -5.39888 -4.89706 -4.46805 -3.79803 -3.79076 -4.00073 -4.51194 -4.98287 -6.3781 0.00478 0.42385 1.19616 1.59503 2.1102 3.18407 3.05894 2.50192 0.48547 -1.15881 -1.55435 -4.22754 -4.68332 -4.62158 -4.63249 -4.30574 -4.14056 -3.76188 -2.8983 -2.09127 -1.48111 -1.21394 -1.04979 0.27912 -0.06899 -0.97462 -1.09324 -1.31392 -1.50146 -1.63912 -1.7284 -2.22566 -2.40242 -2.71755 -2.74475 -2.72686 -2.64385 -2.65307 -2.56809)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-7.46246 -7.31858 -6.98108 -5.05574 -4.32487 -3.34987 -2.78054 -2.42157 -2.08279 -0.69431 0.14713 1.3207 1.80088 2.13016 2.30476 2.31296 2.19686 2.03769 1.17516 0.29404 0.88699 2.53018 2.70753 2.76618 3.20944 3.41827 3.53172 3.86303 4.75992 5.73838 5.76234 5.66696 5.6659 5.81182 9.30034 9.28885 9.103 8.76755 8.99007 8.8375 7.85973 7.79362 7.07655 6.55716 6.19703 5.99997 6.11596 5.54815 5.7248 5.72734 5.77253 5.64485 5.40592 4.28308 2.23 1.15967 -0.56856 -0.84036 -1.22731 -1.67688 -3.3337 -2.01855 -1.96842 -1.71652 -1.62253 -1.65391 -2.00156 -2.34794 -3.36567 -5.8208 -7.18505 -7.14445 -5.9878 -6.07433 -6.22906 -6.4641 -6.71246 -6.88391 -7.05523 -7.03513 -7.01307 -6.98747 -6.96618 -6.98034 -7.2864 -7.80488 -8.40593 -8.6294 -8.84278 -8.95155 -9.03428 -9.07734 -9.44902 -9.5605 -9.81748 -9.90252 -11.18377 -11.66858 -11.76684 -12.03399)) (quote (8.46629 8.43094 8.18267 7.73973 8.09059 8.55342 9.18467 9.47993 9.68457 10.18369 10.23361 10.07884 9.84091 9.5329 9.12683 8.57556 7.98636 7.85052 7.15514 6.821 6.51691 6.98521 6.72941 6.51617 5.11674 4.85829 4.66739 4.47667 4.4864 4.95864 4.9579 4.94226 4.90944 4.87702 6.61688 6.43836 6.32264 4.51763 2.25541 1.29586 0.09739 -0.39586 -1.46369 -1.81231 -2.00183 -2.52167 -2.78369 -4.53643 -5.0819 -5.28178 -5.46048 -5.53539 -5.78493 -5.18554 -4.57327 -3.85188 -3.74745 -3.97037 -4.49686 -4.97218 -6.34184 0.25823 0.68845 1.40203 1.7892 2.2816 3.31921 3.20333 2.70985 0.85322 -0.71294 -1.09363 -3.67636 -4.07874 -3.98496 -3.94471 -3.56056 -3.35283 -2.92187 -2.02822 -1.20396 -0.59387 -0.33703 -0.18021 1.0616 0.72341 -0.17088 -0.28173 -0.49577 -0.67982 -0.81158 -0.89813 -1.36891 -1.53538 -1.82499 -1.84175 -1.70508 -1.57205 -1.57162 -1.45526)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-7.34268 -7.20557 -6.87234 -4.91498 -4.18851 -3.28083 -2.7033 -2.34473 -2.00872 -0.57222 0.29028 1.49876 1.97926 2.30999 2.47919 2.48428 2.35923 2.20672 1.39568 0.5797 1.22615 2.98668 3.17841 3.22813 3.58178 3.77948 3.8827 4.21511 5.14891 6.22216 6.25861 6.18953 6.20129 6.35549 10.18456 10.16173 9.98043 9.48318 9.4507 9.19208 8.05809 7.94113 7.07529 6.48364 6.0745 5.77547 5.84979 5.13682 5.26944 5.26414 5.30654 5.18325 4.93594 3.83042 1.7863 0.79376 -0.95904 -1.26389 -1.71571 -2.21611 -3.98067 -1.99699 -1.89284 -1.56689 -1.42672 -1.39753 -1.61021 -1.95707 -2.99834 -5.6326 -7.13747 -7.13883 -6.30239 -6.43899 -6.58329 -6.80962 -7.00904 -7.14786 -7.25109 -7.11696 -6.98777 -6.88556 -6.83449 -6.83406 -7.00859 -7.55841 -8.24827 -8.47312 -8.70205 -8.8284 -8.92186 -8.97302 -9.39518 -9.52452 -9.81963 -9.90988 -11.22568 -11.71787 -11.81887 -12.08444)) (quote (8.55043 8.50641 8.2356 7.73331 8.07519 8.51203 9.16051 9.46289 9.67135 10.17631 10.21966 10.04135 9.79177 9.46752 9.05773 8.49955 7.9 7.77762 7.14343 6.84054 6.48256 6.85428 6.53861 6.30517 4.81413 4.52483 4.31461 4.08196 4.00438 4.38026 4.36081 4.32442 4.27962 4.22659 5.60026 5.41186 5.31471 3.63107 1.4592 0.55513 -0.53083 -1.0008 -1.99426 -2.28373 -2.42585 -2.8817 -3.12789 -4.87091 -5.41175 -5.61163 -5.80281 -5.87959 -6.13488 -5.43626 -4.63575 -3.87073 -3.66258 -3.89452 -4.4292 -4.90417 -6.24261 0.51435 0.9495 1.59442 1.96416 2.42582 3.4092 3.30196 2.87501 1.20158 -0.27382 -0.63613 -3.09342 -3.43555 -3.31047 -3.21975 -2.78361 -2.53754 -2.06374 -1.15474 -0.32756 0.27244 0.51531 0.66356 1.80508 1.48102 0.60863 0.5053 0.29945 0.12083 -0.004 -0.08701 -0.52557 -0.6798 -0.93925 -0.94476 -0.68127 -0.49536 -0.4847 -0.33599)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-7.22198 -7.0918 -6.76328 -4.77518 -4.0532 -3.21234 -2.62653 -2.26826 -1.93494 -0.4504 0.43308 1.6759 2.15646 2.48808 2.65181 2.65345 2.51888 2.37351 1.61656 0.86749 1.56412 3.4367 3.63585 3.67407 3.9265 4.10916 4.19953 4.52782 5.48952 6.64762 6.69297 6.64466 6.66654 6.82614 10.956 10.91943 10.7444 10.1069 9.83864 9.48271 8.20502 8.04071 7.03381 6.376 5.92287 5.52972 5.56492 4.70663 4.79678 4.78356 4.82155 4.70167 4.44394 3.36474 1.34863 0.43399 -1.33799 -1.68068 -2.20289 -2.75783 -4.63351 -1.94265 -1.78234 -1.39561 -1.212 -1.1292 -1.22164 -1.56993 -2.62854 -5.4242 -7.06337 -7.10418 -6.56046 -6.73603 -6.86509 -7.07471 -7.21684 -7.31668 -7.34444 -7.09242 -6.8552 -6.67852 -6.60074 -6.58792 -6.65674 -7.24007 -8.0197 -8.24644 -8.49116 -8.63495 -8.73857 -8.79754 -9.26728 -9.41318 -9.74299 -9.83709 -11.17461 -11.6684 -11.77107 -12.03129)) (quote (8.63289 8.58038 8.28714 7.72459 8.05767 8.47015 9.13571 9.44524 9.65757 10.16747 10.2037 10.00072 9.7394 9.39875 8.9853 8.42014 7.81037 7.70109 7.12491 6.84805 6.43051 6.69338 6.31482 6.06143 4.48488 4.16513 3.93619 3.66039 3.48908 3.75464 3.71401 3.65127 3.5913 3.5154 4.46659 4.26827 4.18668 2.64065 0.59669 -0.23674 -1.18937 -1.62982 -2.53184 -2.75354 -2.84242 -3.22335 -3.44964 -5.16983 -5.7027 -5.90251 -6.10667 -6.18626 -6.4472 -5.6485 -4.65664 -3.85554 -3.53718 -3.77323 -4.30788 -4.77703 -6.07819 0.76904 1.2023 1.77074 2.11764 2.54161 3.45505 3.35601 2.99782 1.52932 0.15693 -0.18367 -2.48391 -2.76047 -2.60549 -2.46616 -1.98473 -1.70555 -1.19968 -0.291 0.52433 1.1044 1.33022 1.46905 2.50162 2.19658 1.35716 1.26127 1.06528 0.89408 0.77713 0.69852 0.29769 0.15756 -0.06744 -0.06104 0.33613 0.57717 0.59854 0.78018)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-7.10037 -6.97729 -6.65391 -4.63636 -3.91898 -3.14439 -2.55024 -2.19216 -1.86145 -0.32887 0.57549 1.85207 2.33239 2.66438 2.82253 2.82038 2.67576 2.53798 1.83759 1.15689 1.89998 3.87824 4.0775 4.10166 4.24171 4.40547 4.4804 4.7992 5.77896 7.01011 7.06043 7.0265 7.05522 7.21696 11.59929 11.54639 11.37866 10.62438 10.14554 9.70324 8.29701 8.0896 6.95115 6.23412 5.7426 5.26419 5.26313 4.2606 4.31003 4.28879 4.32067 4.20315 3.93291 2.88926 0.92079 0.08346 -1.70122 -2.0858 -2.6829 -3.29549 -5.2857 -1.85558 -1.63781 -1.20442 -0.98074 -0.85205 -0.8407 -1.19138 -2.26078 -5.19748 -6.96358 -7.04113 -6.7598 -6.96273 -7.07195 -7.25718 -7.33464 -7.38997 -7.33654 -6.96505 -6.621 -6.3733 -6.27214 -6.24907 -6.23768 -6.8558 -7.72463 -7.95376 -8.21428 -8.37512 -8.48822 -8.5546 -9.06845 -9.22941 -9.59005 -9.68658 -11.03207 -11.52136 -11.62455 -11.87554)) (quote (8.71367 8.65285 8.33729 7.7136 8.03803 8.42777 9.11029 9.42697 9.64323 10.15718 10.18576 9.95697 9.68383 9.32664 8.9096 8.33738 7.71755 7.62101 7.09954 6.8434 6.3608 6.50284 6.059 5.78618 4.13148 3.78212 3.53536 3.21581 2.94535 3.0877 3.02395 2.93021 2.85236 2.7517 3.22865 3.02079 2.95162 1.55623 -0.32522 -1.07404 -1.87392 -2.27903 -3.07332 -3.21925 -3.24953 -3.54536 -3.74796 -5.43223 -5.95397 -6.15366 -6.37111 -6.45432 -6.72054 -5.82172 -4.63747 -3.80759 -3.37274 -3.60711 -4.13248 -4.58967 -5.84699 1.01804 1.44215 1.92855 2.24759 2.62808 3.45828 3.3672 3.07917 1.8353 0.57771 0.26188 -1.8533 -2.06061 -1.87777 -1.69281 -1.174 -0.86786 -0.34178 0.55024 1.33882 1.88952 2.09571 2.22467 3.14405 2.86342 2.06836 1.97997 1.79562 1.63384 1.52571 1.45228 1.09444 0.97009 0.78347 0.8023 1.3387 1.6365 1.66897 1.88366)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-6.97788 -6.86208 -6.54425 -4.49857 -3.78587 -3.077 -2.47444 -2.11645 -1.78825 -0.20765 0.71748 2.02721 2.50701 2.83881 2.99129 2.98502 2.8298 2.70005 2.05855 1.44739 2.2328 4.30935 4.50114 4.50868 4.52578 4.66681 4.7238 5.02765 6.0149 7.30564 7.35668 7.32998 7.36183 7.52207 12.10056 12.02861 11.86853 11.02245 10.36373 9.84806 8.33093 8.08538 6.82655 6.05806 5.53427 4.98036 4.94625 3.80171 3.81246 3.78303 3.80703 3.6907 3.40591 2.40719 0.50635 -0.25489 -2.04471 -2.47442 -3.14969 -3.82238 -5.93057 -1.73636 -1.46081 -0.99534 -0.73555 -0.56925 -0.47191 -0.82598 -1.89936 -4.95438 -6.83903 -6.95041 -6.89872 -7.11713 -7.20219 -7.35587 -7.36236 -7.36858 -7.23007 -6.73986 -6.29231 -5.97826 -5.85725 -5.82595 -5.7589 -6.41215 -7.36802 -7.6 -7.87607 -8.05334 -8.17515 -8.24846 -8.80235 -8.97669 -9.3639 -9.46139 -10.80033 -11.27873 -11.38126 -11.61908)) (quote (8.79275 8.7238 8.38604 7.70036 8.01632 8.38491 9.08425 9.4081 9.62834 10.14543 10.16582 9.91012 9.62509 9.25124 8.83068 8.25133 7.62162 7.53743 7.0673 6.82647 6.27351 6.28307 5.77225 5.4808 3.75651 3.37882 3.11548 2.75223 2.37824 2.38578 2.29756 2.16922 2.07131 1.94449 1.90118 1.68464 1.62474 0.38955 -1.2987 -1.95039 -2.57981 -2.9443 -3.61555 -3.67835 -3.64521 -3.84662 -4.02202 -5.65741 -6.16509 -6.36458 -6.59544 -6.68295 -6.95381 -5.9557 -4.58009 -3.72841 -3.17118 -3.39728 -3.90324 -4.34172 -5.54805 1.25712 1.66442 2.06558 2.35223 2.68465 3.42094 3.33776 3.12039 2.11854 0.98701 0.69877 -1.20724 -1.34323 -1.13522 -0.90867 -0.36143 -0.03529 0.4983 1.35698 2.10406 2.61653 2.80106 2.92006 3.72612 3.47566 2.73648 2.65578 2.48494 2.33453 2.23608 2.16861 1.85866 1.75166 1.60693 1.63852 2.31827 2.67381 2.71761 2.96509)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-6.85453 -6.74616 -6.43432 -4.36183 -3.65391 -3.01016 -2.39912 -2.04112 -1.71537 -0.08676 0.85903 2.20127 2.68025 3.01132 3.15804 3.1473 2.98093 2.85964 2.27923 1.73846 2.56166 4.72809 4.90458 4.89301 4.77728 4.89188 4.92856 5.21196 6.19553 7.53083 7.57814 7.55095 7.58179 7.73663 12.44769 12.3539 12.20116 11.28928 10.48631 9.91214 8.30401 8.02594 6.65951 5.84808 5.29861 4.6798 4.61612 3.33302 3.30727 3.26949 3.28381 3.16741 2.86605 1.92172 0.10865 -0.57834 -2.36469 -2.8418 -3.5972 -4.33168 -6.56122 -1.58615 -1.25349 -0.77064 -0.47917 -0.28399 -0.11946 -0.47793 -1.54839 -4.69687 -6.69076 -6.83285 -6.9761 -7.19801 -7.25497 -7.37053 -7.30101 -7.2546 -7.02902 -6.42326 -5.87765 -5.50301 -5.36579 -5.32812 -5.22844 -5.91615 -6.95534 -7.19053 -7.48165 -7.67448 -7.80414 -7.88383 -8.47314 -8.65904 -9.06818 -9.16513 -10.48236 -10.94331 -11.04395 -11.26465)) (quote (8.87011 8.79323 8.43339 7.6849 7.99254 8.34157 9.0576 9.38863 9.6129 10.13224 10.14392 9.86019 9.5632 9.17259 8.74857 8.16205 7.52266 7.45044 7.02816 6.79715 6.16876 6.03465 5.45586 5.14682 3.36267 2.95839 2.67999 2.27373 1.79297 1.6556 1.54218 1.37684 1.2573 1.10341 0.50074 0.27689 0.22322 -0.8459 -2.31501 -2.85884 -3.30206 -3.62125 -4.15524 -4.12831 -4.02751 -4.12613 -4.27114 -5.84494 -6.33583 -6.53501 -6.77921 -6.87155 -7.14616 -6.05045 -4.48668 -3.61981 -2.93482 -3.1454 -3.62107 -4.03355 -5.1811 1.48211 1.86471 2.17981 2.43007 2.71108 3.34553 3.2704 3.12325 2.37826 1.3834 1.1253 -0.5515 -0.61578 -0.38587 -0.12275 0.44307 0.7816 1.30942 2.11807 2.80939 3.27547 3.43687 3.54613 4.24256 4.02827 3.35634 3.28369 3.12821 2.99113 2.90314 2.84233 2.58482 2.49652 2.39671 2.44128 3.26699 3.68053 3.73581 4.0153)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-6.73035 -6.62958 -6.32415 -4.2262 -3.52314 -2.94388 -2.32431 -1.96619 -1.64279 0.03378 1.00009 2.37418 2.85207 3.18184 3.32271 3.30715 3.1291 3.01669 2.49941 2.02956 2.88562 5.13253 5.28575 5.25263 4.99501 5.07963 5.09378 5.35131 6.31952 7.68297 7.72198 7.68614 7.71157 7.85687 12.63048 12.51213 12.36575 11.41455 10.50729 9.89111 8.21395 7.90955 6.44981 5.60462 5.03649 4.36414 4.27463 2.85755 2.7977 2.75136 2.75416 2.63639 2.31651 1.43602 -0.26926 -0.88438 -2.65765 -3.18336 -4.0194 -4.81652 -7.1707 -1.40662 -1.01864 -0.53283 -0.21458 5.4E-4 0.21282 -0.15103 -1.2117 -4.42697 -6.51986 -6.6894 -6.99133 -7.20493 -7.23027 -7.30193 -7.15272 -7.05127 -6.73864 -6.02289 -5.38667 -4.95827 -4.8085 -4.76611 -4.65477 -5.37525 -6.49245 -6.73115 -7.03655 -7.24383 -7.38041 -7.46584 -8.08546 -8.28095 -8.70706 -8.80196 -10.08185 -10.51868 -10.61617 -10.81584)) (quote (8.94576 8.86114 8.47934 7.66723 7.96674 8.29776 9.03034 9.36857 9.59691 10.11761 10.12004 9.80721 9.49821 9.09075 8.66333 8.06961 7.42075 7.3601 6.98212 6.75538 6.04675 5.75828 5.11127 4.78593 2.95277 2.52405 2.23241 1.78447 1.19493 0.90425 0.76557 0.56204 0.41999 0.23869 -0.95447 -1.18372 -1.23395 -2.13496 -3.36455 -3.79178 -4.03534 -4.30523 -4.68906 -4.56661 -4.39453 -4.38299 -4.49474 -5.99459 -6.46622 -6.66493 -6.92222 -7.01975 -7.29696 -6.10625 -4.3597 -3.48384 -2.66639 -2.85364 -3.28758 -3.66632 -4.74653 1.68897 2.03887 2.26945 2.4799 2.7075 3.23501 3.16824 3.08991 2.61378 1.7655 1.53982 0.10805 0.11423 0.36223 0.656 1.2298 1.5726 2.08108 2.82341 3.44548 3.85788 3.9952 4.09522 4.68911 4.51702 3.92339 3.85925 3.72101 3.59909 3.5223 3.46879 3.26777 3.19936 3.14703 3.2046 4.1773 4.64838 4.71511 5.02543)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-6.60536 -6.51234 -6.21373 -4.09168 -3.39358 -2.87816 -2.24999 -1.89164 -1.57052 0.15397 1.14067 2.54592 3.0224 3.35032 3.48524 3.46451 3.27426 3.17113 2.71888 2.32017 3.2038 5.52084 5.64269 5.58567 5.17804 5.22935 5.21892 5.44527 6.3861 7.76009 7.78616 7.73332 7.74871 7.88021 12.64096 12.49542 12.35385 11.38979 10.42162 9.78131 8.0589 7.73486 6.19743 5.32828 4.74888 4.03502 3.92366 2.37826 2.28686 2.23173 2.22116 2.10067 1.76041 0.95312 -0.62464 -1.17078 -2.92041 -3.49479 -4.41045 -5.27019 -7.75209 -1.2 -0.75957 -0.28461 0.0552 0.28123 0.52159 0.1514 -0.89281 -4.1467 -6.32751 -6.5211 -6.9444 -7.13818 -7.1289 -7.15172 -6.92059 -6.7629 -6.36527 -5.54745 -4.82996 -4.3555 -4.1968 -4.15108 -4.04661 -4.79715 -5.98553 -6.22792 -6.54658 -6.76698 -6.90946 -6.99993 -7.64427 -7.84728 -8.28516 -8.37648 -9.6031 -10.00907 -10.10215 -10.27697)) (quote (9.01969 8.92751 8.5239 7.64738 7.93894 8.25347 9.00248 9.34791 9.58038 10.10155 10.0942 9.75121 9.43013 9.00574 8.57501 7.97406 7.31597 7.26647 6.92917 6.70109 5.90769 5.45475 4.74 4.39994 2.52964 2.07903 1.77626 1.2886 0.58953 0.13899 -0.02436 -0.26593 -0.43067 -0.63915 -2.44503 -2.6772 -2.72646 -3.4612 -4.43707 -4.74123 -4.77418 -4.99151 -5.21368 -4.99079 -4.74446 -4.61644 -4.69242 -6.10641 -6.55654 -6.75461 -7.02453 -7.12747 -7.40584 -6.12363 -4.20183 -3.32271 -2.36891 -2.52464 -2.90504 -3.2419 -4.24538 1.87387 2.18311 2.33301 2.50086 2.67434 3.09266 3.03475 3.02291 2.82463 2.13207 1.9408 0.76559 0.83936 1.10118 1.41887 1.98954 2.32815 2.8037 3.4641 4.00449 4.35692 4.46976 4.56124 5.06262 4.93865 4.43384 4.37874 4.25959 4.15457 4.08958 4.044 3.90301 3.85547 3.85265 3.92306 5.04217 5.56958 5.64763 5.98713)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-6.47959 -6.39447 -6.1031 -3.95833 -3.26525 -2.813 -2.17618 -1.8175 -1.49856 0.27379 1.28071 2.71641 3.19119 3.51671 3.64559 3.61934 3.41635 3.32289 2.93743 2.60975 3.5153 5.89118 5.97352 5.89039 5.32565 5.34054 5.30372 5.49378 6.39498 7.76092 7.76947 7.6912 7.69184 7.8052 12.47345 12.29831 12.15951 11.20842 10.22531 9.57985 7.83749 7.50094 5.90267 5.01987 4.43692 3.69416 3.56511 1.89815 1.77787 1.7137 1.68793 1.56332 1.20095 0.47604 -0.95505 -1.43555 -3.1501 -3.77199 -4.76466 -5.68601 -8.29841 -0.96899 -0.48016 -0.02884 0.32699 0.55502 0.80391 0.42647 -0.59492 -3.8581 -6.11496 -6.32908 -6.83581 -6.99883 -6.95249 -6.92251 -6.60875 -6.39486 -5.91631 -5.00655 -4.21892 -3.70682 -3.54271 -3.49479 -3.41293 -4.18979 -5.44109 -5.68722 -6.01785 -6.24982 -6.39713 -6.49186 -7.15495 -7.3633 -7.80753 -7.89377 -9.05104 -9.41948 -9.50687 -9.65317)) (quote (9.09188 8.99235 8.56706 7.62538 7.90915 8.20873 8.97402 9.32667 9.5633 10.08406 10.06641 9.6922 9.35901 8.91763 8.48365 7.87547 7.20841 7.16962 6.86931 6.63426 5.75185 5.12502 4.34378 3.99081 2.09619 1.62665 1.31509 0.7903 -0.01773 -0.63266 -0.81941 -1.09753 -1.28439 -1.51916 -3.95022 -4.18231 -4.2326 -4.80683 -5.52161 -5.69866 -5.51278 -5.67509 -5.72569 -5.39837 -5.07552 -4.82582 -4.8639 -6.18065 -6.60732 -6.80452 -7.08641 -7.19478 -7.47267 -6.10335 -4.016 -3.13886 -2.04578 -2.16156 -2.47639 -2.76299 -3.67946 2.03324 2.29407 2.36927 2.49242 2.61236 2.9221 2.87375 2.92511 3.01049 2.48192 2.32677 1.41526 1.55219 1.82315 2.15738 2.71344 3.03921 3.46856 4.03246 4.48008 4.76735 4.85578 4.9396 5.36091 5.29071 4.88449 4.83907 4.74075 4.65424 4.60159 4.56444 4.48648 4.46057 4.50874 4.59171 5.8549 6.4367 6.52579 6.89238)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-6.35305 -6.27598 -5.99227 -3.82616 -3.13819 -2.74841 -2.10288 -1.74376 -1.42692 0.3932 1.4202 2.8856 3.35839 3.68093 3.80368 3.77155 3.55531 3.47191 3.15483 2.89776 3.81922 6.24178 6.2765 6.16517 5.43735 5.41304 5.34824 5.49716 6.3464 7.68497 7.67153 7.55955 7.54074 7.63167 12.12479 11.91797 11.77945 10.86603 9.9155 9.28465 7.54886 7.20725 5.56608 4.68039 4.10183 3.34326 3.20089 1.42009 1.27373 1.20028 1.15748 1.02736 0.64128 0.00769 -1.25839 -1.67696 -3.34426 -4.01124 -5.07665 -6.05761 -8.80285 -0.71679 -0.18473 0.23143 0.59759 0.81899 1.05735 0.67183 -0.32087 -3.56322 -5.88352 -6.11456 -6.66663 -6.78868 -6.70345 -6.61775 -6.22223 -5.95346 -5.40003 -4.41059 -3.56545 -3.02475 -2.85856 -2.8093 -2.76271 -3.56121 -4.86579 -5.11561 -5.45667 -5.69846 -5.84947 -5.94762 -6.62313 -6.83458 -7.27959 -7.35929 -8.43117 -8.75549 -8.83596 -8.95023)) (quote (9.16233 9.05565 8.60882 7.60126 7.87742 8.16351 8.94497 9.30485 9.54569 10.06516 10.03669 9.63022 9.28487 8.82647 8.38932 7.77391 7.09813 7.06964 6.80254 6.55488 5.57956 4.77015 3.92446 3.56061 1.65537 1.17021 0.85243 0.2937 -0.62137 -1.40308 -1.61129 -1.92311 -2.13075 -2.39032 -5.44857 -5.67701 -5.72981 -6.15313 -6.60667 -6.6552 -6.2452 -6.35091 -6.22168 -5.78693 -5.386 -5.0106 -5.00903 -6.21781 -6.61931 -6.81536 -7.10838 -7.22204 -7.49754 -6.04641 -3.80533 -2.93485 -1.70064 -1.76798 -2.00525 -2.23303 -3.05125 2.16387 2.36889 2.37735 2.45438 2.52263 2.7272 2.68927 2.79967 3.17118 2.81398 2.69634 2.05129 2.2455 2.52055 2.86341 3.39324 3.69755 4.06799 4.52218 4.86751 5.08564 5.15021 5.22734 5.58291 5.57172 5.2729 5.23783 5.16199 5.09543 5.05554 5.02728 5.01471 5.01098 5.11103 5.2061 6.60937 7.24287 7.34257 7.73374)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-6.22578 -6.1569 -5.88127 -3.69523 -3.01243 -2.68439 -2.0301 -1.67044 -1.35561 0.51221 1.5591 3.05345 3.52394 3.84294 3.95947 3.92111 3.69109 3.6181 3.37085 3.18364 4.11468 6.57092 6.55 6.40855 5.51291 5.44692 5.35285 5.45611 6.24115 7.53248 7.49284 7.33921 7.29638 7.36069 11.59445 11.35429 11.21324 10.36045 9.49057 8.89451 7.19272 6.85372 5.1885 4.31102 3.74502 2.9841 2.83288 0.94694 0.77738 0.69436 0.6328 0.49576 0.08456 -0.44915 -1.53289 -1.89357 -3.50079 -4.20917 -5.34138 -6.37889 -9.25876 -0.44702 0.122 0.4931 0.86374 1.07034 1.27998 0.88563 -0.07311 -3.26409 -5.63458 -5.87885 -6.43848 -6.51025 -6.38498 -6.24176 -5.76693 -5.44583 -4.82546 -3.77049 -2.88181 -2.32196 -2.15678 -2.10674 -2.1049 -2.91947 -4.26646 -4.51978 -4.8695 -5.11917 -5.2727 -5.37341 -6.0547 -6.26695 -6.70707 -6.77883 -7.74947 -8.02333 -8.09566 -8.17464)) (quote (9.23102 9.11739 8.64918 7.57504 7.84376 8.11785 8.91534 9.28245 9.52754 10.04484 10.00503 9.56529 9.20776 8.7323 8.29206 7.66943 6.98525 6.96661 6.7289 6.46298 5.39119 4.39135 3.484 3.11157 1.21012 0.713 0.39178 -0.19714 -1.21596 -2.16461 -2.39165 -2.733 -2.95931 -3.24152 -6.91802 -7.13875 -7.19493 -7.48061 -7.68032 -7.60166 -6.96534 -7.01376 -6.69824 -6.15409 -5.67428 -5.17037 -5.12779 -6.21859 -6.5935 -6.78808 -7.09116 -7.20981 -7.4808 -5.95403 -3.57307 -2.71338 -1.33739 -1.3479 -1.49586 -1.65621 -2.36393 2.26294 2.4053 2.35669 2.38692 2.40654 2.51203 2.48555 2.64999 3.30669 3.12722 3.04821 2.66802 2.91226 3.18612 3.52927 4.02135 4.29574 4.59543 4.92838 5.16372 5.30996 5.35163 5.42311 5.72859 5.78103 5.59732 5.57331 5.52144 5.47609 5.44928 5.43025 5.48481 5.50358 5.65584 5.76238 7.30001 7.98174 8.09151 8.50432)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-6.09779 -6.03724 -5.77009 -3.56555 -2.88799 -2.62094 -1.95783 -1.59752 -1.28463 0.63078 1.6974 3.2199 3.68779 4.00268 4.11291 4.06795 3.82366 3.76143 3.5853 3.46686 4.40086 6.87699 6.79257 6.61926 5.55235 5.44257 5.31821 5.37167 6.08048 7.30447 7.2347 7.03199 6.96081 6.99452 10.88456 10.60986 10.46328 9.69184 8.95005 8.40908 6.76924 6.44067 4.77098 3.91309 3.3679 2.6184 2.46293 0.48138 0.29156 0.19871 0.11669 -0.02864 -0.4662 -0.89186 -1.77718 -2.08426 -3.61806 -4.36285 -5.55428 -6.6442 -9.65977 -0.16364 0.43499 0.75297 1.12228 1.3065 1.4704 1.06658 0.14636 -2.96268 -5.36953 -5.62329 -6.15347 -6.16672 -6.00094 -5.79954 -5.24944 -4.87979 -4.20216 -3.09747 -2.18027 -1.61095 -1.44962 -1.3991 -1.44816 -2.27245 -3.6499 -3.90638 -4.26277 -4.51822 -4.67307 -4.77541 -5.45566 -5.66638 -6.09591 -6.15839 -7.01235 -7.22967 -7.29268 -7.3334)) (quote (9.29797 9.17758 8.68815 7.54674 7.8082 8.07173 8.88513 9.25948 9.50887 10.02312 9.97145 9.49744 9.1277 8.63517 8.19193 7.56211 6.86983 6.86057 6.64838 6.35858 5.18714 3.98989 3.02445 2.64592 0.76336 0.25822 -0.06349 -0.67833 -1.79626 -2.90969 -3.15232 -3.51772 -3.75983 -4.06192 -8.3365 -8.54499 -8.60475 -8.76949 -8.73045 -8.52877 -7.66712 -7.65847 -7.15209 -6.49759 -5.93886 -5.30485 -5.2203 -6.18393 -6.53108 -6.72382 -7.0357 -7.15886 -7.42301 -5.82762 -3.32257 -2.47721 -0.96009 -0.90567 -0.953 -1.03735 -1.62131 2.32809 2.40162 2.30709 2.29053 2.26572 2.28077 2.26693 2.47969 3.41717 3.4208 3.38122 3.26005 3.54585 3.81304 4.14794 4.59096 4.82734 5.04558 5.24768 5.3673 5.44022 5.4603 5.52714 5.79894 5.91896 5.85676 5.84455 5.81795 5.79487 5.78134 5.77182 5.89454 5.93588 6.1401 6.25735 7.92189 8.64768 8.76683 9.19796)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-5.96912 -5.91703 -5.65877 -3.43715 -2.76491 -2.55807 -1.88609 -1.52503 -1.21397 0.74892 1.83507 3.3849 3.84989 4.1601 4.26393 4.21202 3.95296 3.90183 3.79795 3.74686 4.67691 7.15843 7.00286 6.79617 5.55591 5.40063 5.24526 5.24526 5.86615 7.00271 6.89929 6.6408 6.53728 6.53671 9.99999 9.69018 9.53497 8.86283 8.29484 7.82894 6.27922 5.96893 4.31491 3.48813 2.97209 2.24792 2.09288 0.02604 -0.18105 -0.28399 -0.38806 -0.54303 -1.00796 -1.31792 -1.99021 -2.24817 -3.69484 -4.46981 -5.71124 -6.84835 -9.99978 0.12904 0.74895 1.00785 1.37004 1.52505 1.62775 1.21393 0.33591 -2.66098 -5.08984 -5.34934 -5.81421 -5.76195 -5.55591 -5.29687 -4.67706 -4.26383 -3.5402 -2.40302 -1.47306 -0.90401 -0.74903 -0.69805 -0.80095 -1.62788 -3.02294 -3.28212 -3.64299 -3.90199 -4.05695 -4.15997 -4.83219 -5.03903 -5.45231 -5.50422 -6.22664 -6.38171 -6.43429 -6.43408)) (quote (9.36314 9.23622 8.72573 7.5164 7.77077 8.02516 8.85435 9.23594 9.48967 10.0 9.93596 9.4267 9.04474 8.53514 8.08898 7.45201 6.75197 6.75163 6.56103 6.24175 4.96788 3.56719 2.548 2.16606 0.31802 -0.19095 -0.51005 -1.14605 -2.35711 -3.63079 -3.88517 -4.2679 -4.52224 -4.8408 -9.68188 -9.8732 -9.93603 -9.99966 -9.74468 -9.42699 -8.34432 -8.27978 -7.5799 -6.81523 -6.1783 -5.41386 -5.28682 -6.11494 -6.43345 -6.62392 -6.94316 -7.07018 -7.32498 -5.66882 -3.05728 -2.22919 -0.57298 -0.44599 -0.38204 -0.38204 -0.82793 2.35747 2.35686 2.22871 2.1661 2.10206 2.03767 2.03783 2.29252 3.50291 3.69392 3.69426 3.82213 4.13992 4.39488 4.71288 5.09607 5.28687 5.41433 5.47812 5.47842 5.47791 5.47803 5.54121 5.79592 5.98662 6.05091 6.05121 6.051 6.05099 6.05082 6.05098 6.24221 6.30597 6.56127 6.68833 8.47066 9.23563 9.36335 9.80913)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj)) :from-file t)) "x" nil (pairlis (quote (winsize winpos picture)) (list (om-make-point 808 744) (om-make-point 139 0) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPC-LIB111" (quote bpc-lib) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "BPF-LIST" (list (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (0)) (quote (0)) (quote bpc) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj))))) (om-make-point 48 230) (om-make-point 140 148) (if (find-class (quote bpc-lib) nil) (make-instance (quote bpc-lib) :bpf-list (list (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-7.789 -7.912 -8.144 -6.357 -5.412 -6.562 -5.597 -5.293 -4.89 3.127 8.457 16.119 19.225 22.099 24.002 26.578 27.823 28.478 29.448 30.573 43.146 63.511 69.764 71.524 85.245 89.976 92.834 99.098 107.995 112.542 113.797 116.072 114.604 114.443 119.206 119.048 115.399 110.871 110.349 109.919 111.898 112.579 116.529 117.689 116.738 115.375 113.408 125.715 114.043 108.085 101.21 93.7 83.559 73.265 71.451 58.278 50.011 29.232 -1.171 -90.088 -146.214 -235.059 -267.615 -302.068 -311.709 -318.115 -322.784 -320.137 -304.314 -269.222 -260.132 -262.512 -265.681 -280.374 -286.577 -293.657 -303.869 -311.216 -321.919 -336.193 -344.095 -341.914 -329.296 -329.432 -319.997 -309.372 -293.458 -283.061 -270.294 -246.295 -235.401 -226.913 -217.335 -209.715 -207.618 -206.459 -207.183 -206.939 -202.911 -190.609)) (quote (-31.571 -31.672 -31.942 -23.738 -18.823 -16.417 -10.643 -7.739 -5.406 2.926 6.162 11.416 12.729 13.67 14.016 12.746 12.116 9.51 6.06 4.978 3.306 0.431 -5.815 -10.711 -15.949 -19.311 -22.636 -25.494 -29.269 -33.443 -36.096 -39.867 -49.086 -53.95 -61.366 -64.789 -72.305 -82.921 -85.497 -87.174 -89.1 -90.128 -95.005 -97.603 -100.915 -107.142 -110.59 -128.483 -141.34 -146.995 -152.704 -158.811 -168.226 -178.648 -200.725 -217.573 -256.352 -262.68 -266.17 -251.138 -221.333 -276.79 -266.432 -237.627 -238.216 -235.771 -233.897 -224.104 -207.519 -178.059 -161.087 -154.551 -146.344 -121.823 -113.8 -104.394 -91.877 -79.114 -56.392 -9.068 24.273 77.687 124.976 126.319 146.966 152.21 158.348 172.584 187.482 215.38 225.757 233.357 237.938 243.515 243.865 245.204 248.686 251.064 254.519 265.379)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-7.315 -7.428 -7.641 -5.946 -5.03 -6.043 -5.083 -4.754 -4.339 3.206 8.255 15.46 18.395 21.111 22.911 25.385 26.567 27.265 28.302 29.411 41.53 61.263 67.578 69.543 82.97 87.717 90.673 96.873 105.691 110.397 111.79 114.241 113.544 113.784 119.13 119.257 116.409 113.006 112.707 112.388 114.356 115.067 119.184 120.474 119.837 119.077 117.536 130.841 121.149 116.154 110.329 103.98 95.57 87.141 87.862 77.605 74.318 55.978 28.519 -54.719 -109.955 -185.748 -217.313 -253.123 -262.153 -268.501 -273.175 -271.956 -259.265 -230.154 -223.863 -226.941 -230.987 -248.006 -254.914 -262.861 -274.203 -282.92 -296.293 -316.996 -329.903 -337.132 -334.003 -334.39 -329.503 -320.561 -306.859 -299.963 -291.049 -274.44 -266.494 -260.224 -252.339 -246.482 -244.631 -243.85 -245.329 -245.642 -242.68 -233.742)) (quote (-29.96 -30.063 -30.349 -22.54 -17.819 -15.543 -9.996 -7.233 -5.029 3.163 6.408 11.682 13.04 14.035 14.432 13.33 12.78 10.366 7.188 6.236 5.326 3.73 -1.719 -6.154 -10.267 -13.124 -16.045 -18.354 -21.376 -25.008 -27.396 -30.767 -39.396 -43.927 -50.655 -53.86 -61.105 -71.335 -73.797 -75.452 -77.134 -78.081 -82.412 -84.772 -87.934 -93.859 -97.214 -113.298 -126.111 -131.818 -137.665 -143.945 -153.588 -164.194 -185.226 -202.329 -240.042 -248.072 -254.563 -250.912 -230.575 -295.767 -291.014 -269.381 -271.382 -270.074 -269.001 -259.419 -241.414 -208.469 -191.265 -185.585 -178.503 -158.284 -151.934 -144.472 -134.72 -124.308 -105.453 -65.09 -36.358 12.324 57.284 58.476 78.881 85.494 93.848 108.664 124.526 154.371 165.863 174.392 180.354 186.887 187.602 189.054 192.174 194.424 198.342 210.599)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-6.85 -6.952 -7.148 -5.544 -4.657 -5.541 -4.588 -4.236 -3.808 3.275 8.045 14.801 17.566 20.123 21.82 24.185 25.301 26.031 27.116 28.2 39.824 58.852 65.16 67.281 80.33 85.049 88.063 94.154 102.834 107.647 109.147 111.729 111.709 112.297 118.149 118.523 116.407 114.03 113.93 113.717 115.649 116.384 120.606 121.994 121.639 121.416 120.266 134.353 126.512 122.423 117.595 112.349 105.582 98.913 101.912 94.419 95.734 79.871 55.521 -20.958 -74.034 -135.988 -165.745 -201.696 -209.924 -216.035 -220.589 -220.685 -211.187 -188.287 -184.67 -188.261 -192.938 -211.394 -218.666 -227.076 -238.974 -248.534 -263.66 -288.948 -305.543 -320.429 -325.46 -326.045 -325.242 -318.09 -306.821 -303.22 -297.996 -288.492 -283.451 -279.384 -273.314 -269.254 -267.702 -267.289 -269.4 -270.201 -268.301 -262.701)) (quote (-28.347 -28.453 -28.753 -21.34 -16.812 -14.66 -9.338 -6.709 -4.628 3.406 6.648 11.918 13.311 14.351 14.791 13.843 13.367 11.139 8.224 7.395 7.191 6.788 2.105 -1.876 -4.929 -7.3 -9.827 -11.61 -13.911 -17.006 -19.129 -22.103 -30.109 -34.288 -40.295 -43.268 -50.185 -59.947 -62.279 -63.904 -65.355 -66.22 -70.013 -72.132 -75.124 -80.703 -83.929 -98.172 -110.747 -116.404 -122.269 -128.586 -138.249 -148.808 -168.538 -185.515 -221.585 -230.892 -239.795 -245.92 -234.211 -306.575 -306.871 -292.084 -295.324 -295.071 -294.754 -285.57 -266.689 -231.351 -214.335 -209.548 -203.637 -187.743 -183.051 -177.523 -170.509 -162.486 -147.632 -114.764 -91.16 -48.539 -7.493 -6.49 12.824 20.401 30.41 45.078 61.071 91.218 103.133 112.058 118.944 125.988 126.988 128.461 131.067 133.072 137.186 149.996)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-6.392 -6.485 -6.664 -5.15 -4.295 -5.056 -4.112 -3.739 -3.298 3.333 7.829 14.142 16.737 19.138 20.731 22.983 24.029 24.781 25.896 26.947 38.04 56.294 62.534 64.766 77.359 82.009 85.042 90.984 99.47 104.34 105.918 108.589 109.15 110.036 116.313 116.9 115.443 113.987 114.062 113.949 115.825 116.574 120.844 122.3 122.192 122.44 121.643 136.298 130.164 126.918 123.021 118.808 113.578 108.54 113.535 108.614 114.092 100.686 79.519 10.579 -39.278 -87.061 -114.337 -149.353 -156.626 -162.344 -166.665 -167.944 -161.611 -144.967 -143.839 -147.766 -152.841 -171.906 -179.23 -187.732 -199.657 -209.566 -225.577 -253.656 -272.625 -293.307 -304.964 -305.691 -308.378 -303.039 -294.304 -293.663 -291.809 -288.81 -286.486 -284.498 -280.26 -277.933 -276.71 -276.637 -279.229 -280.427 -279.526 -277.054)) (quote (-26.731 -26.84 -27.155 -20.137 -15.801 -13.769 -8.667 -6.17 -4.206 3.654 6.88 12.126 13.544 14.618 15.093 14.288 13.877 11.828 9.167 8.453 8.895 9.597 5.645 2.106 0.043 -1.864 -4.009 -5.295 -6.91 -9.479 -11.341 -13.925 -21.284 -25.098 -30.359 -33.09 -39.631 -48.856 -51.048 -52.634 -53.868 -54.653 -57.92 -59.801 -62.604 -67.803 -70.869 -83.267 -95.431 -100.946 -106.725 -112.956 -122.45 -132.757 -150.973 -167.483 -201.41 -211.589 -222.328 -236.576 -232.523 -309.493 -314.184 -305.739 -310.024 -310.718 -311.093 -302.468 -283.24 -246.586 -230.138 -226.251 -221.512 -209.812 -206.7 -203.025 -198.618 -192.923 -182.023 -156.786 -138.531 -102.836 -66.883 -66.094 -48.551 -40.401 -29.299 -15.399 -0.002 29.005 40.72 49.559 56.926 64.067 65.268 66.682 68.659 70.325 74.394 86.993)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-5.942 -6.026 -6.19 -4.767 -3.942 -4.589 -3.655 -3.263 -2.811 3.38 7.605 13.485 15.913 18.158 19.647 21.782 22.756 23.52 24.648 25.66 36.189 53.612 59.724 62.024 74.094 78.635 81.653 87.407 95.649 100.527 102.155 104.874 105.925 107.057 113.681 114.445 113.572 112.932 113.159 113.139 114.937 115.695 119.956 121.451 121.556 122.206 121.725 136.738 132.158 129.681 126.644 123.382 119.564 116.011 122.705 120.128 129.28 118.258 100.267 39.354 -6.445 -40.167 -64.442 -97.603 -103.807 -109.005 -112.997 -115.31 -112.03 -101.509 -102.638 -106.735 -111.993 -130.926 -138.026 -146.29 -157.779 -167.594 -183.699 -212.9 -233.0 -257.604 -274.253 -275.065 -280.563 -276.988 -270.776 -272.662 -273.739 -276.394 -276.488 -276.362 -273.88 -273.139 -272.257 -272.479 -275.382 -276.87 -276.861 -277.157)) (quote (-25.114 -25.225 -25.554 -18.931 -14.787 -12.871 -7.986 -5.614 -3.763 3.908 7.106 12.303 13.737 14.836 15.339 14.665 14.31 12.435 10.016 9.41 10.437 12.151 8.89 5.778 4.629 3.16 1.381 0.561 -0.408 -2.464 -4.072 -6.276 -12.975 -16.417 -20.916 -23.398 -29.526 -38.159 -40.201 -41.741 -42.776 -43.482 -46.242 -47.889 -50.49 -55.285 -58.165 -68.735 -80.341 -85.637 -91.235 -97.272 -106.435 -116.313 -132.848 -148.593 -179.954 -190.63 -202.656 -223.375 -225.909 -304.996 -313.355 -310.607 -315.724 -317.238 -318.228 -310.294 -291.22 -254.284 -238.737 -235.724 -232.121 -224.35 -222.691 -220.727 -218.708 -215.194 -208.041 -190.212 -177.245 -148.898 -118.798 -118.233 -102.96 -94.604 -82.942 -70.307 -56.103 -29.423 -18.434 -10.093 -2.651 4.224 5.541 6.828 8.102 9.362 13.181 24.924)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-5.499 -5.575 -5.726 -4.392 -3.6 -4.139 -3.218 -2.809 -2.346 3.416 7.376 12.83 15.093 17.185 18.571 20.584 21.486 22.251 23.379 24.344 34.284 50.823 56.757 59.085 70.568 74.967 77.936 83.469 91.42 96.262 97.913 100.641 102.093 103.423 110.314 111.222 110.86 110.928 111.282 111.348 113.05 113.81 118.01 119.516 119.799 120.785 120.58 135.751 132.561 130.777 128.52 126.12 123.578 121.346 129.434 128.944 141.247 132.488 117.59 64.921 23.796 3.624 -17.289 -47.847 -52.911 -57.492 -61.077 -64.263 -63.849 -59.156 -62.27 -66.39 -71.637 -89.802 -96.446 -104.195 -114.859 -124.2 -139.714 -168.556 -188.661 -215.397 -235.403 -236.245 -243.834 -241.91 -238.112 -242.031 -245.519 -252.807 -254.933 -256.386 -255.506 -256.141 -255.592 -256.054 -259.091 -260.755 -261.493 -264.087)) (quote (-23.494 -23.608 -23.95 -17.723 -13.771 -11.965 -7.293 -5.043 -3.299 4.167 7.324 12.453 13.892 15.005 15.53 14.973 14.669 12.959 10.771 10.264 11.815 14.444 11.83 9.128 8.813 7.754 6.321 5.934 5.569 4.004 2.643 0.805 -5.23 -8.299 -12.026 -14.256 -19.944 -27.943 -29.829 -31.318 -32.171 -32.8 -35.077 -36.499 -38.89 -43.263 -45.938 -54.718 -65.645 -70.654 -75.992 -81.746 -90.437 -99.738 -114.471 -129.201 -157.658 -168.487 -181.29 -206.869 -214.87 -293.731 -304.994 -307.189 -312.919 -315.112 -316.626 -309.486 -291.026 -254.774 -240.405 -238.218 -235.681 -231.464 -231.092 -230.646 -230.728 -229.177 -225.43 -214.483 -206.498 -185.505 -161.618 -161.274 -148.586 -140.35 -128.618 -117.612 -105.05 -81.595 -71.748 -64.233 -57.07 -50.759 -49.406 -48.296 -47.758 -46.941 -43.535 -33.15)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-5.065 -5.133 -5.271 -4.026 -3.267 -3.707 -2.8 -2.377 -1.905 3.44 7.14 12.179 14.28 16.22 17.504 19.393 20.222 20.981 22.094 23.007 32.336 47.95 53.656 55.976 66.821 71.046 73.936 79.217 86.836 91.599 93.25 95.952 97.719 99.199 106.28 107.298 107.375 108.046 108.503 108.647 110.238 110.991 115.083 116.574 117.001 118.256 118.288 133.424 131.459 130.287 128.727 127.094 125.68 124.598 133.769 135.09 149.997 143.343 131.389 86.93 50.879 43.377 26.035 -1.355 -5.248 -9.142 -12.264 -16.156 -18.356 -19.05 -23.848 -27.861 -32.931 -49.809 -55.815 -62.829 -72.364 -80.924 -95.286 -122.521 -141.668 -168.91 -190.717 -191.54 -200.504 -200.067 -198.493 -203.923 -209.256 -220.063 -223.785 -226.488 -226.997 -228.753 -228.514 -229.154 -232.151 -233.875 -235.193 -239.549)) (quote (-21.873 -21.989 -22.344 -16.512 -12.751 -11.051 -6.591 -4.458 -2.816 4.43 7.535 12.574 14.009 15.128 15.666 15.215 14.952 13.4 11.432 11.015 13.026 16.474 14.459 12.145 12.579 11.9 10.792 10.803 10.994 9.9 8.774 7.284 1.907 -0.792 -3.745 -5.724 -10.953 -18.29 -20.018 -21.45 -22.14 -22.696 -24.518 -25.725 -27.903 -31.845 -34.301 -41.35 -51.501 -56.171 -61.184 -66.578 -74.682 -83.289 -96.145 -109.658 -134.959 -145.637 -158.75 -187.663 -199.997 -276.496 -289.888 -296.202 -302.325 -305.048 -306.987 -300.715 -283.276 -248.577 -235.609 -234.179 -232.609 -231.491 -232.21 -233.055 -234.899 -235.037 -234.256 -229.418 -225.91 -211.916 -194.229 -194.092 -184.127 -176.287 -164.917 -155.765 -145.148 -125.516 -117.104 -110.653 -104.058 -98.533 -97.216 -96.319 -96.507 -96.14 -93.262 -84.584)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-4.638 -4.699 -4.826 -3.669 -2.944 -3.292 -2.403 -1.967 -1.488 3.453 6.898 11.534 13.476 15.266 16.45 18.213 18.968 19.713 20.799 21.655 30.357 45.012 50.45 52.727 62.89 66.913 69.697 74.701 81.95 86.597 88.224 90.867 92.869 94.454 101.651 102.748 103.191 104.361 104.898 105.113 106.578 107.319 111.259 112.711 113.249 114.709 114.938 129.861 128.951 128.311 127.36 126.395 125.958 125.847 135.796 138.638 155.591 150.851 141.637 105.132 74.35 78.327 64.617 40.78 38.05 34.88 32.261 27.831 23.324 17.805 11.643 7.843 3.087 -12.109 -17.345 -23.463 -31.655 -39.204 -51.985 -76.633 -94.049 -120.396 -142.605 -143.366 -153.029 -153.879 -154.275 -160.698 -167.304 -180.495 -185.356 -188.963 -190.608 -193.207 -193.24 -193.994 -196.788 -198.463 -200.188 -205.743)) (quote (-20.249 -20.368 -20.735 -15.299 -11.728 -10.131 -5.878 -3.859 -2.315 4.697 7.739 12.666 14.089 15.204 15.749 15.39 15.162 13.76 11.999 11.663 14.07 18.237 16.772 14.823 15.919 15.586 14.78 15.149 15.849 15.199 14.296 13.133 8.4 6.063 3.879 2.146 -2.613 -9.272 -10.841 -12.211 -12.76 -13.246 -14.647 -15.653 -17.617 -21.129 -23.355 -28.754 -38.056 -42.345 -46.98 -51.957 -59.384 -67.209 -78.158 -90.301 -112.279 -122.544 -135.556 -166.39 -181.945 -254.209 -268.973 -278.548 -284.85 -287.95 -290.213 -284.854 -268.782 -236.391 -224.986 -224.227 -223.509 -224.978 -226.573 -228.459 -231.696 -233.217 -234.888 -235.21 -235.523 -227.873 -216.057 -216.102 -208.836 -201.618 -190.968 -183.77 -175.251 -159.747 -152.942 -147.697 -141.887 -137.297 -136.075 -135.409 -136.275 -136.34 -134.055 -127.275)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-4.219 -4.273 -4.391 -3.322 -2.632 -2.895 -2.026 -1.58 -1.095 3.454 6.651 10.894 12.681 14.325 15.411 17.047 17.728 18.452 19.5 20.296 28.358 42.029 47.162 49.368 58.813 62.61 65.265 69.969 76.818 81.312 82.895 85.451 87.612 89.261 96.5 97.646 98.387 99.956 100.552 100.828 102.157 102.881 106.628 108.02 108.637 110.241 110.629 125.174 125.152 124.961 124.532 124.135 124.52 125.202 135.63 139.699 158.141 155.101 148.38 119.381 93.876 107.884 97.732 77.658 76.046 73.608 71.511 66.707 60.243 50.56 43.363 39.861 35.525 22.279 17.895 12.773 6.051 -0.337 -11.248 -32.61 -47.729 -72.051 -93.471 -94.138 -103.898 -105.808 -107.874 -114.804 -122.136 -136.624 -142.176 -146.344 -148.85 -152.009 -152.267 -153.073 -155.521 -157.052 -159.01 -165.217)) (quote (-18.624 -18.744 -19.124 -14.083 -10.703 -9.204 -5.156 -3.247 -1.796 4.968 7.935 12.731 14.132 15.234 15.779 15.5 15.3 14.039 12.471 12.209 14.948 19.734 18.765 17.155 18.823 18.802 18.272 18.961 20.118 19.884 19.189 18.33 14.22 12.233 10.805 9.311 5.025 -0.953 -2.366 -3.671 -4.101 -4.52 -5.537 -6.359 -8.112 -11.202 -13.195 -17.037 -25.442 -29.322 -33.541 -38.057 -44.743 -51.728 -60.783 -71.452 -90.026 -99.661 -112.216 -143.705 -161.421 -227.879 -243.301 -255.279 -261.559 -264.889 -267.372 -262.942 -248.517 -219.056 -209.316 -209.133 -209.136 -212.656 -214.906 -217.572 -221.822 -224.399 -227.974 -232.397 -235.775 -233.592 -227.055 -227.252 -222.524 -216.095 -206.45 -201.184 -194.783 -183.44 -178.298 -174.313 -169.432 -165.848 -164.769 -164.335 -165.796 -166.249 -164.577 -159.741)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-3.807 -3.856 -3.966 -2.984 -2.329 -2.516 -1.669 -1.217 -0.728 3.442 6.397 10.262 11.897 13.4 14.389 15.897 16.505 17.202 18.202 18.935 26.353 39.021 43.821 45.929 54.629 58.18 60.685 65.071 71.493 75.805 77.326 79.767 82.019 83.693 90.906 92.074 93.048 94.92 95.554 95.882 97.066 97.766 101.287 102.599 103.267 104.956 105.467 119.484 120.187 120.365 120.371 120.444 121.497 122.796 133.42 138.424 157.812 156.241 151.732 129.635 109.247 131.65 124.862 108.595 108.025 106.303 104.726 99.707 91.665 78.551 70.647 67.502 63.66 52.515 49.014 44.931 39.721 34.568 25.681 8.021 -4.447 -25.909 -45.597 -46.146 -55.494 -58.23 -61.638 -68.641 -76.204 -91.007 -96.836 -101.245 -104.334 -107.784 -108.215 -109.016 -111.002 -112.307 -114.341 -120.699)) (quote (-16.997 -17.119 -17.51 -12.865 -9.675 -8.27 -4.425 -2.621 -1.259 5.242 8.123 12.77 14.139 15.219 15.758 15.547 15.366 14.238 12.851 12.653 15.66 20.964 20.439 19.139 21.288 21.544 21.261 22.23 23.791 23.942 23.438 22.858 19.343 17.688 17.0 15.734 11.917 6.612 5.35 4.113 3.78 3.423 2.749 2.093 0.542 -2.138 -3.898 -6.297 -13.778 -17.232 -21.009 -25.036 -30.939 -37.054 -44.27 -53.41 -68.58 -77.413 -89.216 -120.257 -139.157 -198.574 -214.005 -227.557 -233.634 -237.053 -239.655 -236.146 -223.576 -197.524 -189.493 -189.784 -190.371 -195.401 -198.088 -201.279 -206.169 -209.477 -214.397 -221.824 -227.464 -229.723 -227.687 -228.0 -225.539 -220.01 -211.573 -208.122 -203.743 -196.355 -192.831 -190.081 -186.2 -183.625 -182.722 -182.506 -184.452 -185.231 -184.152 -181.173)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-3.404 -3.448 -3.55 -2.655 -2.037 -2.154 -1.332 -0.877 -0.387 3.419 6.139 9.638 11.126 12.49 13.386 14.768 15.303 15.968 16.913 17.58 24.352 36.008 40.45 42.438 50.376 53.666 56.004 60.058 66.033 70.134 71.578 73.883 76.162 77.826 84.947 86.112 87.257 89.343 89.995 90.368 91.4 92.071 95.337 96.554 97.244 98.966 99.566 112.92 114.193 114.663 115.02 115.466 117.038 118.783 129.341 134.995 154.81 154.471 151.871 135.953 120.38 149.414 145.696 133.134 133.502 132.453 131.379 126.293 117.066 101.299 93.005 90.256 86.952 77.945 75.316 72.261 68.529 64.613 57.777 43.97 34.302 16.233 -1.045 -1.463 -10.001 -13.327 -17.74 -24.455 -31.827 -46.109 -51.853 -56.222 -59.632 -63.13 -63.678 -64.426 -65.865 -66.885 -68.858 -74.941)) (quote (-15.368 -15.491 -15.894 -11.645 -8.644 -7.33 -3.685 -1.984 -0.707 5.519 8.302 12.781 14.111 15.16 15.686 15.531 15.363 14.36 13.14 12.996 16.209 21.93 21.792 20.773 23.313 23.807 23.745 24.951 26.861 27.364 27.035 26.706 23.752 22.411 22.438 21.387 18.026 13.377 12.259 11.092 10.833 10.532 10.158 9.648 8.289 5.997 4.465 3.386 -3.167 -6.188 -9.51 -13.034 -18.137 -23.379 -28.847 -36.448 -48.291 -56.196 -67.018 -96.686 -115.893 -167.39 -182.262 -196.62 -202.335 -205.714 -208.343 -205.721 -195.138 -172.825 -166.492 -167.154 -168.187 -174.208 -177.128 -180.599 -185.781 -189.509 -195.239 -204.592 -211.698 -217.302 -218.871 -219.263 -218.719 -214.149 -207.046 -205.211 -202.664 -198.837 -196.799 -195.191 -192.315 -190.694 -189.985 -189.964 -192.263 -193.292 -192.75 -191.436)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-3.008 -3.047 -3.143 -2.335 -1.754 -1.811 -1.016 -0.561 -0.073 3.384 5.876 9.023 10.369 11.6 12.405 13.661 14.126 14.754 15.636 16.236 22.367 33.011 37.077 38.926 46.093 49.109 51.266 54.979 60.492 64.36 65.712 67.862 70.113 71.736 78.704 79.843 81.103 83.32 83.974 84.381 85.258 85.896 88.884 89.991 90.68 92.386 93.042 105.619 107.314 108.004 108.63 109.358 111.306 113.339 123.591 129.628 149.386 150.038 149.034 138.487 127.312 161.161 160.138 151.053 152.232 151.795 151.191 146.171 136.156 118.53 110.144 107.809 105.06 98.127 96.32 94.236 91.882 89.143 84.275 74.229 67.324 52.894 38.435 38.152 30.703 27.013 21.926 15.782 8.937 -4.165 -9.532 -13.631 -17.122 -20.466 -21.076 -21.733 -22.574 -23.273 -25.075 -30.549)) (quote (-13.737 -13.862 -14.276 -10.422 -7.611 -6.385 -2.936 -1.336 -0.141 5.799 8.474 12.766 14.049 15.059 15.566 15.455 15.292 14.406 13.339 13.241 16.595 22.635 22.828 22.06 24.898 25.593 25.722 27.123 29.329 30.149 29.976 29.868 27.436 26.386 27.099 26.248 23.327 19.307 18.324 17.228 17.018 16.769 16.649 16.263 15.083 13.153 11.841 11.944 6.305 3.714 0.848 -2.174 -6.479 -10.87 -14.715 -20.809 -29.473 -36.368 -46.039 -73.598 -92.357 -135.414 -149.255 -163.73 -168.951 -172.18 -174.749 -172.962 -164.426 -146.029 -141.331 -142.263 -143.609 -150.143 -153.111 -156.643 -161.806 -165.672 -171.722 -182.004 -189.825 -197.681 -201.914 -202.348 -203.323 -199.722 -194.004 -193.534 -192.56 -191.761 -191.013 -190.403 -188.481 -187.71 -187.2 -187.339 -189.849 -191.042 -190.958 -191.039)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-2.621 -2.656 -2.747 -2.024 -1.482 -1.486 -0.721 -0.27 0.215 3.336 5.608 8.418 9.628 10.73 11.447 12.58 12.977 13.565 14.378 14.911 20.409 30.047 33.725 35.421 41.817 44.551 46.518 49.884 54.926 58.54 59.79 61.771 63.945 65.5 72.259 73.352 74.676 76.948 77.587 78.02 78.742 79.342 82.035 83.021 83.687 85.334 86.017 97.722 99.703 100.544 101.366 102.29 104.481 106.656 116.392 122.563 141.823 143.232 143.511 137.482 130.2 167.056 168.297 162.355 164.205 164.301 164.122 159.285 148.869 130.166 121.96 120.038 117.836 112.832 111.764 110.556 109.424 107.751 104.675 98.096 93.757 82.947 71.467 71.314 65.117 61.271 55.823 50.444 44.37 32.918 28.145 24.489 21.117 18.085 17.465 16.925 16.697 16.334 14.782 10.149)) (quote (-12.104 -12.23 -12.655 -9.197 -6.575 -5.433 -2.18 -0.676 0.44 6.08 8.637 12.726 13.953 14.916 15.398 15.319 15.155 14.377 13.449 13.388 16.824 23.083 23.552 23.003 26.048 26.907 27.196 28.751 31.196 32.299 32.261 32.346 30.393 29.609 30.975 30.306 27.802 24.376 23.517 22.491 22.306 22.103 22.19 21.906 20.889 19.29 18.185 19.324 14.569 12.395 9.976 7.445 3.916 0.332 -2.045 -6.702 -12.401 -18.245 -26.657 -51.557 -69.243 -103.697 -116.14 -130.142 -134.769 -137.754 -140.19 -139.166 -132.665 -118.213 -115.04 -116.149 -117.683 -124.31 -127.169 -130.572 -135.453 -139.215 -145.162 -155.497 -163.369 -172.451 -178.425 -178.866 -180.95 -178.284 -173.936 -174.548 -174.845 -176.455 -176.76 -176.968 -175.903 -175.845 -175.526 -175.787 -178.362 -179.632 -179.909 -181.066)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-2.241 -2.272 -2.36 -1.723 -1.22 -1.179 -0.447 -0.003 0.475 3.275 5.335 7.825 8.904 9.882 10.515 11.527 11.859 12.403 13.144 13.61 18.488 27.136 30.42 31.951 37.584 40.034 41.803 44.821 49.387 52.734 53.874 55.674 57.73 59.194 65.691 66.722 68.064 70.325 70.936 71.385 71.953 72.513 74.897 75.756 76.38 77.932 78.616 89.371 91.515 92.447 93.394 94.438 96.752 98.939 107.979 114.062 132.435 134.381 135.637 133.259 129.307 167.437 170.477 167.271 169.637 170.178 170.366 165.813 155.359 136.327 128.538 127.012 125.329 122.041 121.607 121.151 121.047 120.289 118.758 115.195 113.099 105.668 97.105 97.068 92.179 88.357 82.831 78.332 73.178 63.654 59.616 56.514 53.422 50.812 50.226 49.817 50.184 50.151 48.893 45.23)) (quote (-10.47 -10.597 -11.032 -7.97 -5.536 -4.476 -1.417 -0.007 1.035 6.362 8.792 12.661 13.824 14.733 15.184 15.127 14.954 14.275 13.474 13.441 16.898 23.282 23.969 23.609 26.772 27.756 28.175 29.843 32.473 33.82 33.899 34.146 32.626 32.08 34.061 33.556 31.443 28.567 27.82 26.864 26.681 26.518 26.763 26.557 25.685 24.381 23.469 25.492 21.574 19.796 17.807 15.744 12.951 10.111 9.024 5.697 2.697 -2.096 -9.196 -31.072 -47.194 -73.221 -84.005 -97.057 -101.02 -103.69 -105.93 -105.586 -101.042 -90.421 -88.625 -89.825 -91.437 -97.805 -100.427 -103.552 -107.944 -111.405 -116.907 -126.578 -133.951 -143.354 -150.219 -150.637 -153.431 -151.631 -148.58 -149.981 -151.232 -154.601 -155.699 -156.528 -156.192 -156.689 -156.543 -156.885 -159.383 -160.645 -161.18 -163.078)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-1.868 -1.897 -1.983 -1.431 -0.967 -0.89 -0.194 0.24 0.707 3.202 5.058 7.244 8.197 9.058 9.611 10.506 10.775 11.274 11.939 12.338 16.616 24.297 27.186 28.545 33.432 35.597 37.166 39.838 43.93 46.997 48.022 49.634 51.539 52.893 59.082 60.037 61.356 63.548 64.119 64.577 64.995 65.511 67.582 68.308 68.876 70.301 70.964 80.713 82.912 83.879 84.891 85.985 88.314 90.402 98.602 104.405 121.558 123.837 125.784 126.209 124.995 162.799 167.162 166.229 168.958 169.847 170.338 166.15 155.988 137.313 130.141 128.981 127.771 125.941 126.02 126.173 126.878 126.86 126.577 125.471 125.205 120.74 114.848 114.909 111.29 107.645 102.284 98.7 94.532 87.036 83.797 81.305 78.606 76.479 75.963 75.689 76.603 76.872 75.926 73.266)) (quote (-8.834 -8.962 -9.407 -6.741 -4.496 -3.514 -0.647 0.672 1.641 6.645 8.938 12.572 13.665 14.51 14.925 14.878 14.691 14.104 13.415 13.402 16.823 23.237 24.089 23.885 27.078 28.15 28.671 30.409 33.17 34.725 34.9 35.279 34.143 33.808 36.362 36.002 34.248 31.876 31.227 30.338 30.134 30.005 30.36 30.208 29.46 28.414 27.677 30.425 27.286 25.877 24.291 22.665 20.554 18.379 18.382 16.254 15.637 11.864 6.076 -12.583 -26.79 -44.875 -53.85 -65.589 -68.851 -71.155 -73.154 -73.394 -70.667 -63.638 -63.034 -64.252 -65.847 -71.681 -73.974 -76.708 -80.465 -83.482 -88.285 -96.754 -103.213 -112.191 -119.217 -119.588 -122.727 -121.697 -119.825 -121.733 -123.625 -128.117 -129.75 -131.001 -131.245 -132.135 -132.133 -132.517 -134.808 -135.985 -136.677 -138.991)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-1.504 -1.531 -1.616 -1.148 -0.725 -0.619 0.037 0.457 0.912 3.116 4.777 6.676 7.511 8.26 8.737 9.518 9.729 10.18 10.768 11.103 14.803 21.545 24.045 25.23 29.396 31.279 32.647 34.981 38.604 41.387 42.292 43.713 45.44 46.67 52.511 53.379 54.642 56.715 57.237 57.694 57.97 58.44 60.198 60.79 61.289 62.564 63.187 71.893 74.053 75.01 76.032 77.118 79.37 81.268 88.519 93.883 109.549 111.978 114.354 116.783 117.709 153.773 158.992 159.847 162.784 163.923 164.649 160.885 151.304 133.591 127.193 126.359 125.565 124.908 125.371 125.982 127.267 127.798 128.445 129.179 130.281 128.25 124.649 124.786 122.324 118.975 113.979 111.28 108.086 102.564 100.123 98.244 96.008 94.38 93.962 93.815 95.2 95.729 95.086 93.377)) (quote (-7.196 -7.325 -7.78 -5.51 -3.453 -2.546 0.13 1.359 2.258 6.929 9.076 12.459 13.474 14.251 14.624 14.577 14.369 13.866 13.275 13.274 16.603 22.958 23.921 23.842 26.982 28.105 28.697 30.467 33.305 35.032 35.283 35.762 34.96 34.808 37.891 37.654 36.226 34.307 33.742 32.916 32.668 32.566 32.982 32.861 32.217 31.387 30.807 34.119 31.69 30.616 29.402 28.173 26.679 25.076 25.958 24.873 26.288 23.472 18.951 3.543 -8.528 -19.431 -26.548 -36.732 -39.286 -41.197 -42.922 -43.643 -42.544 -38.751 -39.133 -40.308 -41.807 -46.912 -48.818 -51.09 -54.127 -56.609 -60.552 -67.472 -72.742 -80.735 -87.341 -87.648 -90.823 -90.447 -89.597 -91.758 -94.005 -99.041 -100.967 -102.452 -103.119 -104.245 -104.353 -104.742 -106.715 -107.744 -108.498 -110.935)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-1.147 -1.173 -1.258 -0.874 -0.494 -0.367 0.247 0.649 1.087 3.018 4.493 6.122 6.845 7.489 7.894 8.567 8.722 9.126 9.636 9.909 13.058 18.899 21.02 22.03 25.507 27.118 28.288 30.295 33.461 35.954 36.74 37.969 39.501 40.598 46.053 46.827 48.005 49.92 50.387 50.836 50.978 51.401 52.851 53.311 53.732 54.84 55.408 63.055 65.1 66.007 66.995 68.023 70.124 71.761 77.992 82.791 96.768 99.193 101.767 105.474 107.961 141.098 146.736 148.895 151.895 153.186 154.077 150.778 142.015 125.771 120.259 119.705 119.262 119.484 120.205 121.121 122.761 123.654 124.913 126.862 128.859 128.667 126.895 127.084 125.609 122.643 118.165 116.27 113.976 110.249 108.55 107.244 105.497 104.347 104.044 104.011 105.769 106.504 106.132 105.259)) (quote (-5.556 -5.686 -6.151 -4.277 -2.407 -1.574 0.913 2.054 2.886 7.213 9.205 12.324 13.254 13.955 14.281 14.224 13.99 13.562 13.058 13.06 16.244 22.455 23.476 23.493 26.498 27.638 28.272 30.035 32.899 34.761 35.068 35.618 35.101 35.101 38.666 38.533 37.395 35.872 35.376 34.609 34.297 34.215 34.644 34.531 33.969 33.313 32.868 36.585 34.787 34.013 33.134 32.257 31.305 30.173 31.712 31.496 34.567 32.621 29.285 17.025 7.19 2.481 -2.825 -11.327 -13.196 -14.708 -16.14 -17.238 -17.533 -16.527 -17.671 -18.755 -20.098 -24.359 -25.852 -27.63 -29.92 -31.829 -34.841 -40.048 -44.0 -50.64 -56.411 -56.645 -59.611 -59.761 -59.753 -61.953 -64.306 -69.394 -71.402 -72.959 -73.894 -75.116 -75.297 -75.659 -77.227 -78.057 -78.796 -81.114)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-0.799 -0.824 -0.911 -0.61 -0.272 -0.134 0.436 0.816 1.233 2.906 4.205 5.582 6.2 6.746 7.084 7.655 7.759 8.114 8.548 8.762 11.39 16.375 18.132 18.97 21.799 23.148 24.128 25.821 28.546 30.752 31.42 32.461 33.786 34.743 39.783 40.458 41.531 43.258 43.664 44.098 44.117 44.493 45.646 45.979 46.317 47.247 47.749 54.34 56.208 57.036 57.954 58.886 60.777 62.105 67.282 71.43 83.584 85.876 88.454 92.805 96.318 125.601 131.27 134.269 137.2 138.553 139.539 136.727 128.964 114.582 110.022 109.699 109.536 110.355 111.214 112.293 114.081 115.16 116.732 119.309 121.754 122.797 122.359 122.576 121.885 119.358 115.502 114.294 112.782 110.582 109.528 108.721 107.456 106.732 106.55 106.609 108.632 109.51 109.364 109.165)) (quote (-3.915 -4.045 -4.52 -3.042 -1.36 -0.598 1.702 2.757 3.522 7.496 9.324 12.167 13.006 13.624 13.899 13.822 13.557 13.197 12.767 12.765 15.754 21.737 22.768 22.85 25.645 26.768 27.417 29.135 31.978 33.938 34.283 34.875 34.592 34.715 38.715 38.663 37.779 36.596 36.153 35.441 35.043 34.974 35.371 35.242 34.741 34.216 33.884 37.847 36.6 36.085 35.499 34.926 34.435 33.666 35.639 36.11 40.444 39.263 36.997 27.668 20.058 20.38 16.754 9.956 8.722 7.598 6.459 5.093 3.667 2.407 0.735 -0.223 -1.37 -4.743 -5.828 -7.117 -8.688 -10.032 -12.126 -15.627 -18.259 -23.372 -28.061 -28.218 -30.803 -31.348 -31.987 -34.057 -36.319 -41.073 -42.994 -44.489 -45.551 -46.75 -46.966 -47.278 -48.379 -48.978 -49.641 -51.661)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-0.458 -0.483 -0.573 -0.355 -0.061 0.082 0.603 0.957 1.35 2.781 3.914 5.059 5.579 6.034 6.309 6.784 6.841 7.149 7.507 7.666 9.808 13.986 15.4 16.074 18.302 19.403 20.202 21.599 23.904 25.828 26.381 27.241 28.356 29.171 33.771 34.346 35.297 36.815 37.159 37.571 37.482 37.809 38.683 38.896 39.149 39.897 40.325 45.885 47.532 48.259 49.079 49.888 51.528 52.522 56.646 60.093 70.36 72.422 74.847 79.315 83.374 108.165 113.534 116.954 119.701 121.036 122.053 119.728 113.087 100.84 97.252 97.11 97.159 98.316 99.208 100.323 102.079 103.19 104.817 107.512 110.012 111.729 112.142 112.364 112.247 110.183 107.005 106.345 105.471 104.478 103.946 103.545 102.721 102.353 102.289 102.416 104.585 105.542 105.567 105.858)) (quote (-2.272 -2.403 -2.887 -1.805 -0.31 0.383 2.496 3.466 4.167 7.778 9.435 11.988 12.731 13.261 13.479 13.373 13.072 12.772 12.404 12.391 15.138 20.817 21.811 21.931 24.445 25.518 26.157 27.796 30.568 32.593 32.958 33.564 33.467 33.686 38.069 38.08 37.412 36.511 36.106 35.442 34.94 34.878 35.198 35.031 34.568 34.132 33.891 37.947 37.164 36.868 36.533 36.212 36.097 35.584 37.769 38.738 43.94 43.406 42.074 35.367 29.881 33.95 31.806 26.64 25.969 25.202 24.347 22.815 20.543 17.587 15.62 14.811 13.884 11.377 10.669 9.832 8.908 8.081 6.824 4.876 3.448 -0.134 -3.653 -3.736 -5.839 -6.646 -7.734 -9.557 -11.584 -15.735 -17.447 -18.782 -19.848 -20.934 -21.148 -21.394 -21.995 -22.346 -22.893 -24.501)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-0.125 -0.15 -0.244 -0.109 0.141 0.278 0.749 1.073 1.437 2.644 3.62 4.552 4.982 5.352 5.571 5.956 5.972 6.232 6.519 6.627 8.322 11.748 12.844 13.364 15.043 15.915 16.545 17.668 19.577 21.227 21.672 22.361 23.268 23.944 28.085 28.561 29.381 30.679 30.959 31.343 31.162 31.442 32.057 32.16 32.331 32.899 33.25 37.819 39.217 39.829 40.534 41.204 42.569 43.223 46.335 49.066 57.449 59.214 61.371 65.547 69.744 89.699 94.511 97.989 100.461 101.707 102.697 100.845 95.387 85.418 82.778 82.769 82.966 84.239 85.077 86.126 87.707 88.727 90.201 92.612 94.855 96.765 97.6 97.809 98.061 96.458 93.97 93.714 93.322 93.2 93.056 92.958 92.513 92.418 92.459 92.63 94.827 95.799 95.938 96.533)) (quote (-0.628 -0.758 -1.251 -0.566 0.741 1.367 3.294 4.181 4.819 8.059 9.537 11.789 12.43 12.866 13.024 12.881 12.538 12.292 11.975 11.945 14.405 19.708 20.621 20.753 22.92 23.913 24.517 26.045 28.704 30.761 31.127 31.721 31.764 32.051 36.77 36.822 36.335 35.658 35.276 34.654 34.029 33.967 34.169 33.943 33.497 33.108 32.938 36.938 36.535 36.416 36.289 36.168 36.345 35.98 38.164 39.446 45.124 45.112 44.566 40.11 36.571 43.044 42.131 38.447 38.249 37.795 37.2 35.6 32.775 28.718 26.683 26.033 25.336 23.62 23.235 22.789 22.405 22.014 21.455 20.795 20.368 18.176 15.782 15.763 14.178 13.233 11.89 10.383 8.68 5.287 3.861 2.746 1.777 0.864 0.685 0.514 0.418 0.312 -0.097 -1.244)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (0.2 0.174 0.074 0.127 0.332 0.457 0.872 1.162 1.495 2.494 3.324 4.062 4.41 4.704 4.871 5.173 5.153 5.368 5.586 5.648 6.937 9.674 10.481 10.86 12.05 12.713 13.188 14.061 15.603 16.991 17.335 17.868 18.576 19.118 22.786 23.166 23.851 24.926 25.146 25.497 25.241 25.474 25.858 25.865 25.958 26.354 26.627 30.265 31.403 31.894 32.474 32.998 34.082 34.411 36.584 38.62 45.186 46.619 48.432 52.027 56.033 71.109 75.183 78.428 80.555 81.659 82.571 81.161 76.887 69.215 67.455 67.536 67.821 69.036 69.756 70.662 71.968 72.809 73.986 75.837 77.608 79.341 80.254 80.436 80.877 79.708 77.883 77.894 77.833 78.26 78.372 78.476 78.334 78.427 78.555 78.744 80.857 81.787 81.986 82.714)) (quote (1.018 0.887 0.386 0.675 1.794 2.355 4.097 4.901 5.477 8.337 9.63 11.57 12.104 12.441 12.535 12.347 11.959 11.76 11.483 11.429 13.563 18.423 19.215 19.336 21.095 21.982 22.528 23.916 26.421 28.478 28.831 29.389 29.529 29.858 34.861 34.936 34.594 34.087 33.713 33.124 32.362 32.293 32.338 32.035 31.586 31.204 31.083 34.888 34.783 34.801 34.837 34.868 35.253 34.933 36.918 38.333 44.114 44.5 44.583 41.973 40.152 47.683 47.718 45.306 45.477 45.281 44.912 43.334 40.246 35.682 33.792 33.302 32.831 31.789 31.663 31.527 31.55 31.493 31.458 31.744 32.055 31.007 29.585 29.619 28.532 27.563 26.145 24.979 23.642 21.055 19.948 19.081 18.282 17.574 17.46 17.363 17.751 17.875 17.606 16.911)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (0.517 0.489 0.383 0.355 0.513 0.616 0.974 1.225 1.522 2.331 3.025 3.59 3.863 4.089 4.21 4.437 4.386 4.559 4.712 4.734 5.662 7.776 8.326 8.579 9.346 9.823 10.161 10.81 12.018 13.158 13.412 13.803 14.327 14.745 17.931 18.223 18.775 19.631 19.794 20.109 19.798 19.987 20.169 20.095 20.118 20.357 20.555 23.337 24.217 24.59 25.044 25.426 26.236 26.277 27.614 29.008 33.887 34.979 36.413 39.257 42.826 53.269 56.503 59.302 61.042 61.965 62.76 61.746 58.598 53.118 52.135 52.266 52.589 53.622 54.186 54.9 55.876 56.489 57.293 58.444 59.634 60.95 61.7 61.846 62.331 61.55 60.325 60.485 60.62 61.315 61.566 61.778 61.857 62.059 62.248 62.434 64.363 65.201 65.416 66.136)) (quote (2.665 2.535 2.025 1.917 2.85 3.347 4.904 5.626 6.139 8.613 9.713 11.333 11.755 11.988 12.015 11.774 11.336 11.178 10.932 10.849 12.621 16.978 17.613 17.7 18.998 19.755 20.223 21.444 23.757 25.786 26.111 26.611 26.808 27.156 32.394 32.475 32.243 31.854 31.474 30.911 29.998 29.915 29.769 29.37 28.9 28.488 28.396 31.878 31.991 32.108 32.269 32.403 32.918 32.551 34.153 35.537 41.073 41.736 42.295 41.118 40.752 48.053 48.737 47.349 47.776 47.775 47.591 46.115 43.039 38.539 36.983 36.646 36.387 35.879 35.935 36.019 36.307 36.47 36.766 37.624 38.382 38.165 37.495 37.565 36.917 36.023 34.691 33.855 32.884 31.065 30.274 29.651 29.072 28.577 28.548 28.521 29.347 29.673 29.533 29.236)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (0.827 0.796 0.682 0.573 0.683 0.757 1.054 1.262 1.519 2.154 2.724 3.137 3.344 3.509 3.59 3.751 3.674 3.806 3.902 3.889 4.502 6.065 6.395 6.54 6.951 7.269 7.489 7.944 8.854 9.764 9.939 10.206 10.567 10.872 13.573 13.784 14.209 14.861 14.973 15.248 14.903 15.05 15.067 14.929 14.891 14.993 15.123 17.14 17.778 18.041 18.376 18.627 19.186 18.99 19.625 20.46 23.836 24.606 25.661 27.698 30.669 36.991 39.364 41.583 42.918 43.64 44.29 43.615 41.482 37.974 37.63 37.781 38.101 38.882 39.275 39.779 40.415 40.788 41.208 41.657 42.261 43.054 43.512 43.619 44.047 43.59 42.875 43.087 43.307 44.05 44.345 44.59 44.805 45.047 45.268 45.435 47.095 47.803 47.998 48.61)) (quote (4.314 4.184 3.666 3.161 3.907 4.342 5.714 6.354 6.806 8.887 9.787 11.078 11.384 11.509 11.465 11.165 10.674 10.552 10.328 10.21 11.587 15.386 15.833 15.867 16.659 17.262 17.636 18.665 20.754 22.728 23.012 23.435 23.654 24.0 29.425 29.496 29.344 29.023 28.625 28.079 27.002 26.899 26.531 26.022 25.513 25.038 24.956 27.999 28.259 28.441 28.688 28.883 29.457 28.959 30.02 31.226 36.204 37.034 37.928 37.787 38.6 44.497 45.533 44.9 45.468 45.596 45.55 44.244 41.429 37.515 36.457 36.261 36.194 36.067 36.228 36.441 36.849 37.119 37.555 38.616 39.534 39.813 39.646 39.738 39.441 38.705 37.597 37.054 36.417 35.266 34.756 34.354 34.021 33.724 33.795 33.827 35.027 35.517 35.485 35.501)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (1.128 1.094 0.971 0.781 0.843 0.879 1.111 1.273 1.485 1.965 2.422 2.703 2.852 2.965 3.011 3.114 3.019 3.114 3.157 3.116 3.464 4.551 4.7 4.757 4.887 5.072 5.195 5.487 6.138 6.839 6.947 7.11 7.333 7.54 9.756 9.898 10.207 10.674 10.743 10.977 10.621 10.729 10.618 10.436 10.351 10.339 10.411 11.766 12.19 12.358 12.588 12.728 13.071 12.707 12.794 13.18 15.286 15.775 16.485 17.76 20.048 23.003 24.565 26.151 27.091 27.607 28.094 27.693 26.418 24.56 24.689 24.835 25.122 25.631 25.862 26.166 26.495 26.652 26.74 26.607 26.714 27.007 27.154 27.222 27.537 27.33 27.008 27.207 27.431 28.069 28.337 28.56 28.833 29.062 29.284 29.418 30.745 31.298 31.451 31.898)) (quote (5.965 5.835 5.308 4.407 4.965 5.339 6.527 7.086 7.476 9.157 9.852 10.806 10.992 11.005 10.887 10.522 9.976 9.884 9.673 9.517 10.47 13.666 13.896 13.861 14.107 14.54 14.802 15.62 17.455 19.352 19.584 19.913 20.123 20.448 26.014 26.06 25.961 25.664 25.236 24.698 23.449 23.319 22.703 22.072 21.509 20.94 20.853 23.354 23.697 23.913 24.214 24.432 25.004 24.307 24.694 25.596 29.747 30.649 31.752 32.291 34.016 37.495 38.608 38.462 39.059 39.249 39.291 38.208 35.872 32.999 32.567 32.497 32.596 32.701 32.896 33.151 33.548 33.82 34.225 35.166 35.989 36.455 36.548 36.646 36.605 36.092 35.316 35.015 34.663 34.041 33.762 33.541 33.457 33.332 33.508 33.587 35.082 35.693 35.741 35.972)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (1.422 1.384 1.25 0.98 0.993 0.982 1.147 1.257 1.421 1.764 2.118 2.289 2.389 2.458 2.476 2.53 2.421 2.483 2.481 2.418 2.553 3.242 3.252 3.242 3.168 3.251 3.3 3.462 3.895 4.408 4.463 4.545 4.658 4.784 6.522 6.606 6.813 7.123 7.158 7.349 7.005 7.079 6.882 6.676 6.56 6.463 6.487 7.296 7.546 7.638 7.781 7.837 8.011 7.558 7.275 7.341 8.45 8.72 9.144 9.79 11.382 11.92 12.789 13.76 14.339 14.659 14.98 14.781 14.166 13.549 13.966 14.09 14.322 14.588 14.686 14.824 14.915 14.912 14.771 14.278 14.058 13.982 13.892 13.927 14.113 14.071 14.012 14.16 14.336 14.787 14.986 15.152 15.412 15.593 15.784 15.879 16.829 17.214 17.315 17.584)) (quote (7.617 7.487 6.953 5.655 6.026 6.339 7.343 7.819 8.147 9.422 9.908 10.519 10.581 10.479 10.285 9.849 9.245 9.178 8.974 8.776 9.282 11.832 11.825 11.707 11.375 11.621 11.761 12.351 13.908 15.706 15.877 16.098 16.274 16.564 22.224 22.235 22.163 21.853 21.384 20.845 19.418 19.255 18.37 17.605 16.975 16.287 16.181 18.054 18.426 18.651 18.978 19.191 19.708 18.76 18.369 18.871 21.974 22.872 24.081 25.007 27.397 27.653 28.602 28.693 29.215 29.404 29.483 28.663 26.979 25.515 25.804 25.842 26.081 26.288 26.455 26.676 26.953 27.144 27.381 27.958 28.492 28.891 29.046 29.138 29.262 29.017 28.651 28.537 28.411 28.169 28.063 27.976 28.13 28.141 28.423 28.532 30.235 30.921 31.021 31.37)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (1.708 1.666 1.519 1.17 1.133 1.067 1.16 1.214 1.326 1.549 1.813 1.895 1.955 1.989 1.985 1.998 1.884 1.915 1.876 1.799 1.774 2.146 2.061 2.008 1.809 1.82 1.818 1.885 2.144 2.493 2.511 2.535 2.569 2.633 3.903 3.943 4.067 4.249 4.262 4.411 4.104 4.148 3.908 3.701 3.57 3.42 3.411 3.798 3.922 3.963 4.043 4.047 4.105 3.652 3.191 3.082 3.5 3.627 3.848 4.063 5.006 4.232 4.578 5.018 5.29 5.441 5.602 5.528 5.347 5.496 6.0 6.09 6.255 6.344 6.354 6.381 6.332 6.249 6.021 5.462 5.141 4.909 4.726 4.738 4.813 4.848 4.91 4.991 5.095 5.339 5.454 5.55 5.737 5.848 5.979 6.033 6.585 6.8 6.85 6.963)) (quote (9.27 9.141 8.599 6.904 7.087 7.342 8.16 8.555 8.82 9.684 9.954 10.216 10.152 9.932 9.659 9.149 8.484 8.438 8.235 7.991 8.031 9.903 9.64 9.429 8.496 8.544 8.551 8.901 10.159 11.841 11.944 12.047 12.17 12.411 18.125 18.09 18.026 17.669 17.152 16.602 14.991 14.79 13.62 12.714 12.008 11.181 11.045 12.217 12.576 12.793 13.124 13.309 13.733 12.5 11.259 11.294 13.184 14.023 15.264 16.36 19.209 15.675 16.27 16.382 16.737 16.87 16.936 16.404 15.498 15.711 16.774 16.904 17.258 17.463 17.556 17.688 17.766 17.817 17.799 17.871 18.002 18.173 18.261 18.338 18.555 18.605 18.695 18.716 18.764 18.762 18.773 18.776 19.144 19.253 19.631 19.757 21.575 22.294 22.42 22.807)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (1.985 1.938 1.779 1.351 1.263 1.132 1.151 1.145 1.2 1.322 1.507 1.522 1.55 1.558 1.539 1.522 1.407 1.413 1.344 1.259 1.129 1.269 1.135 1.062 0.82 0.791 0.764 0.771 0.9 1.112 1.108 1.099 1.088 1.111 1.925 1.936 1.997 2.088 2.091 2.199 1.953 1.973 1.736 1.551 1.424 1.256 1.228 1.327 1.379 1.396 1.44 1.427 1.432 1.073 0.636 0.51 0.566 0.636 0.748 0.778 1.162 0.284 0.316 0.359 0.398 0.418 0.438 0.411 0.417 0.808 1.193 1.243 1.336 1.342 1.323 1.306 1.234 1.164 1.016 0.722 0.555 0.427 0.333 0.334 0.341 0.362 0.398 0.417 0.445 0.512 0.546 0.575 0.639 0.676 0.719 0.734 0.888 0.944 0.953 0.958)) (quote (10.925 10.796 10.247 8.154 8.151 8.347 8.98 9.291 9.491 9.94 9.991 9.9 9.707 9.366 9.014 8.424 7.696 7.669 7.461 7.17 6.729 7.897 7.365 7.054 5.504 5.346 5.214 5.313 6.258 7.809 7.84 7.817 7.874 8.058 13.785 13.698 13.625 13.198 12.625 12.055 10.259 10.015 8.547 7.497 6.707 5.726 5.552 5.969 6.287 6.481 6.803 6.946 7.254 5.72 3.592 3.125 3.696 4.447 5.675 6.815 9.966 2.344 2.453 2.42 2.532 2.563 2.571 2.336 2.279 4.324 6.175 6.381 6.828 6.967 6.959 6.969 6.806 6.691 6.389 5.938 5.646 5.536 5.519 5.575 5.841 6.193 6.752 6.871 7.049 7.182 7.265 7.32 7.868 8.044 8.501 8.631 10.475 11.186 11.321 11.692)) (quote bpc) 3))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj)) :from-file t)) "x" nil (pairlis (quote (winsize winpos picture)) (list (om-make-point 808 744) (om-make-point 32 0) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPC-LIB11" (quote bpc-lib) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "BPF-LIST" (list (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (0)) (quote (0)) (quote bpc) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj))))) (om-make-point 226 192) (om-make-point 152 154) (if (find-class (quote bpc-lib) nil) (make-instance (quote bpc-lib) :bpf-list (list (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-85.90318 -81.88854 -77.7671 -70.90416 -66.91353 -66.90621 -66.66056 -70.19878 -72.05776 -78.39601 -81.14563 -80.46872 -78.34027 -78.26277 -72.10528 -71.89308 -72.16224 -71.57575 -70.79428 -70.34873 -48.57125 -38.01617 -32.26073 -34.11827 -24.11517 -24.70782 -25.16198 -34.9771 -59.59546 -99.28522 -116.65034 -156.98429 -172.45055 -177.50727 -181.89385 -186.67867 -191.80924 -194.21298 -195.43862 -145.0316 70.97039 139.01908 161.257 178.63335 181.16408 184.18276 192.05054 200.59473 202.49488 206.10938 207.27294 210.3433 212.9333 218.23992 223.56766 225.32492 145.2245 97.60934 -33.62543 -30.32434 -22.79426 -19.79284 -11.54949 22.39857 87.95556 129.99106 230.89022 253.83284 262.01883 273.25525 281.36328 284.157 285.4214 284.09656 310.89505 306.3019 285.54208 287.34753 274.8221 260.93063 222.49895 184.53868 171.4517 170.47919 173.9712 177.0234 178.49614 183.79923 191.6611 190.10265 180.73748 177.71714 176.6628 175.68247 173.92128 172.90608 171.51676 170.00734 169.27959 167.20458)) (quote (105.56446 109.14858 112.08828 116.75452 117.25008 116.26422 114.68156 109.70346 106.56904 99.30574 92.16156 86.35556 82.7036 79.488 72.2943 68.86354 67.11129 66.21723 66.18093 66.9056 84.27046 89.48666 91.93182 105.89122 112.61188 119.142 124.16308 129.54102 135.74294 121.28556 110.9178 89.83662 64.4286 56.03253 47.7461 35.00341 23.47984 19.01877 19.29725 136.5419 189.07413 149.64424 126.9195 101.69242 98.58526 98.12562 88.0168 70.9634 67.36109 58.73901 58.07447 51.58352 54.2483 48.05504 28.41363 -20.43878 -175.30312 -206.02852 -226.1266 -227.90744 -231.5588 -234.18708 -237.42024 -236.24758 -223.1054 -203.71537 -89.92286 -88.42876 -90.9166 -95.42498 -105.90888 -127.23458 -145.10334 -154.09139 -173.0278 -189.15378 -229.426 -243.0942 -272.79578 -304.2826 -354.51495 -377.32373 -384.87003 -385.7075 -384.51608 -382.18503 -381.13513 -377.5633 -371.92575 -353.3544 -332.30966 -322.6256 -318.81305 -315.21185 -312.41086 -311.36658 -311.447 -312.4511 -313.01083 -315.00977)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0.0 1.0 0.0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-81.1118 -77.24089 -73.2835 -66.70999 -62.90053 -62.90182 -62.67697 -66.09506 -67.89578 -74.01635 -76.72206 -76.14602 -74.1569 -74.12632 -68.333 -68.18059 -68.46646 -67.915 -67.16426 -66.7285 -45.75807 -35.68587 -30.20402 -31.86946 -22.36314 -22.89609 -23.31103 -32.64897 -55.99886 -93.91138 -110.63492 -149.78398 -165.3327 -170.48336 -175.0074 -180.10334 -185.54978 -188.07265 -189.25974 -137.9885 67.52474 132.67134 154.33927 171.47269 173.96683 176.88715 184.61566 193.13172 195.03446 198.6972 199.83104 202.9378 205.31674 210.65357 216.44649 220.10648 152.65364 109.75144 -12.74844 -9.51222 -2.15916 0.88166 8.90927 40.79751 101.65748 140.00002 228.81124 250.85036 258.89734 269.99658 278.4054 282.28104 284.52533 283.77844 310.80173 307.37656 290.0897 292.77518 282.91046 272.00668 239.30374 205.02712 193.13434 192.2449 195.45415 198.1326 199.42287 204.13642 211.07566 208.05764 197.4775 193.83838 192.52342 191.29718 189.37532 188.32485 187.00513 185.6566 185.01485 183.20664)) (quote (104.96652 108.25268 110.93142 115.19018 115.52218 114.55968 113.0131 108.30508 105.33596 98.55588 91.7905 86.1957 82.617 79.52973 72.39862 69.09312 67.41587 66.53144 66.45675 67.12248 83.04587 87.79092 90.02384 103.52138 109.85732 116.19718 121.07464 126.43286 132.94915 120.18888 110.89444 92.53658 69.14233 61.43452 53.79468 41.93664 31.2234 27.05827 27.33295 136.2903 184.66654 148.12133 126.85384 103.14894 100.24122 99.8958 90.57224 74.80871 71.49681 63.58632 63.04989 57.18047 60.10231 54.53326 36.24018 -9.85845 -160.75998 -192.99846 -222.26755 -223.6903 -226.55368 -228.8229 -231.21654 -227.36733 -210.11219 -188.9757 -75.99517 -73.72241 -75.78665 -79.66891 -89.33562 -109.53894 -126.5163 -135.13175 -152.0623 -167.57646 -206.71668 -219.66564 -248.52982 -279.24222 -329.36118 -353.40137 -361.4893 -362.38315 -361.04788 -358.69135 -357.61365 -353.8992 -348.08423 -330.25464 -310.49094 -301.3471 -297.75165 -294.3579 -291.79138 -290.85898 -291.0249 -292.07758 -292.6622 -294.70145)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-76.40628 -72.68405 -68.89376 -62.61252 -58.984 -58.99337 -58.78845 -62.08357 -63.82381 -69.71963 -72.37252 -71.88996 -70.03592 -70.04772 -64.61111 -64.51359 -64.81343 -64.29616 -63.57699 -63.1527 -43.01052 -33.41813 -28.20619 -29.68848 -20.66949 -21.14534 -21.52267 -30.39361 -52.50015 -88.63988 -104.7039 -142.58422 -158.11444 -163.31919 -167.9405 -173.2872 -178.99195 -181.613 -182.76395 -131.0428 64.15958 126.42606 147.49839 164.3479 166.79936 169.61869 177.18306 185.62116 187.51395 191.1918 192.2903 195.40184 197.55927 202.89295 209.06496 214.4042 158.79923 120.51044 7.15534 10.29731 17.41109 20.45794 28.2028 57.88576 113.9212 148.60659 225.93015 247.05204 254.9394 265.8685 274.51593 279.3615 282.49097 282.27496 309.38626 307.0396 292.9955 296.47495 289.09372 280.98865 253.75237 223.08386 212.378 211.5752 214.50513 216.8304 217.94579 222.08806 228.13716 223.7675 212.10718 207.91254 206.36396 204.91773 202.86052 201.78536 200.5391 199.3484 198.7911 197.2414)) (quote (104.196 107.19852 109.63006 113.5031 113.68194 112.74254 111.23184 106.78296 103.97268 97.65402 91.25454 85.86878 82.36705 79.4061 72.35129 69.16963 67.56562 66.69188 66.58126 67.19038 81.74499 86.04476 88.07708 101.11134 107.07912 113.22844 117.96224 123.28958 130.07868 118.9124 110.63322 94.85684 73.40593 66.36605 59.35646 48.36722 38.45399 34.58244 34.85319 135.78186 180.21427 146.41844 126.55378 104.32168 101.60652 101.3683 92.79856 78.27706 75.24488 68.0203 67.60536 62.33367 65.48815 60.52284 43.55043 0.2018 -146.03469 -179.33347 -216.53449 -217.62543 -219.76132 -221.68529 -223.30129 -217.10572 -196.35312 -173.85584 -62.51497 -59.53119 -61.18915 -64.46723 -73.32074 -92.37058 -108.4231 -116.64172 -131.60157 -146.44979 -184.26647 -196.45494 -224.31682 -254.05316 -303.60288 -328.52094 -337.03033 -337.9728 -336.52405 -334.17746 -333.08984 -329.29 -323.3857 -306.39905 -287.978 -279.40952 -276.04648 -272.8747 -270.54968 -269.7288 -269.97205 -271.05808 -271.65945 -273.7151)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-71.79241 -68.22309 -64.60226 -58.61516 -55.16693 -55.18386 -54.99802 -58.16785 -59.84568 -65.51074 -68.10266 -67.70646 -65.98321 -66.03303 -60.9452 -60.89784 -61.20904 -60.72512 -60.03819 -59.62693 -40.33055 -31.214 -26.26799 -27.57604 -19.03458 -19.45592 -19.79727 -28.21159 -49.10093 -83.47628 -98.86576 -135.40262 -150.82003 -156.04138 -160.72188 -166.26165 -172.16933 -174.86832 -175.9853 -124.20288 60.87552 120.2879 140.74138 157.26866 159.67173 162.38787 169.76512 178.07898 179.95017 183.61226 184.6703 187.7573 189.68465 194.9839 201.453 208.25495 163.67179 129.86096 25.92189 28.94435 35.76555 38.78774 46.19176 73.56388 124.71114 155.80767 222.28745 242.48184 250.19016 260.9179 269.74332 275.44772 279.36768 279.63528 306.7023 305.34372 294.30573 298.49197 293.40964 287.90402 265.84293 238.6789 229.14276 228.42893 231.08612 233.0813 234.03086 237.6244 242.82276 237.21544 224.6121 219.92682 218.17232 216.53275 214.36582 213.27628 212.1067 211.06937 210.59458 209.29306)) (quote (103.25688 105.99004 108.18798 111.69666 111.73258 110.816 109.34102 105.14046 102.48266 96.60384 90.55732 85.3783 81.95709 79.12036 72.15525 69.09587 67.56334 66.70129 66.55715 67.11199 80.36995 84.24978 86.09286 98.6626 104.27828 110.2368 114.82692 120.11248 127.134 117.46028 110.13862 96.80052 77.21884 70.82472 64.427 54.28747 45.16071 41.57905 41.84597 135.02104 175.71858 144.53888 126.02266 105.21324 102.68356 102.54556 94.69774 81.36894 78.60546 72.03997 71.73977 67.04072 70.40327 66.01982 50.33607 9.72016 -131.23354 -165.16648 -209.0719 -209.85894 -211.33106 -212.92603 -213.83028 -205.6186 -181.96999 -158.47888 -49.52743 -45.89942 -47.16937 -49.86696 -57.91553 -75.78926 -90.89136 -98.693 -111.7262 -125.86266 -162.1883 -173.58327 -200.29775 -228.87908 -277.44247 -302.9055 -311.7211 -312.7043 -311.17056 -308.86578 -307.7845 -303.95264 -298.04025 -281.98572 -264.95633 -256.99176 -253.87392 -250.93572 -248.85662 -248.14597 -248.45816 -249.5633 -250.17377 -252.22348)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-67.27531 -63.8624 -60.41279 -54.72079 -51.45182 -51.4758 -51.30823 -54.35088 -55.96467 -61.39398 -63.91757 -63.60084 -62.00404 -62.08771 -57.34034 -57.33861 -57.65871 -57.20727 -56.55311 -56.15631 -37.71979 -29.07431 -24.38991 -25.53264 -17.45857 -17.828 -18.13495 -26.10322 -45.80239 -78.42541 -93.12822 -128.25572 -143.47286 -148.67559 -153.37944 -159.05748 -165.1151 -167.8725 -168.95748 -117.4764 57.67282 114.26074 134.07447 150.24388 152.5932 155.20418 162.37334 170.52028 172.35909 175.9768 176.9898 180.02523 181.71578 186.95142 193.63985 201.69582 167.29067 137.7907 43.40709 46.2889 52.77352 55.74322 62.75726 87.7507 134.00572 161.61135 217.92552 237.18558 244.69672 255.19373 264.1382 270.59174 275.20837 275.91223 302.8081 302.34665 294.07376 298.87973 295.90634 292.793 275.59042 251.80298 243.40987 242.78739 245.18009 246.87068 247.66463 250.73586 255.12859 248.40254 234.9945 229.88428 227.95209 226.1461 223.89475 222.80094 221.71053 220.82114 220.42636 219.36116)) (quote (102.1533 104.63114 106.60888 109.77422 109.67724 108.7832 107.34374 103.38086 100.86926 95.40896 89.70252 84.72786 81.3906 78.67594 71.81356 68.87477 67.41192 66.56256 66.3873 66.89022 78.92277 82.4074 84.07232 96.17632 101.4555 107.22298 111.66938 116.9026 124.11722 115.83672 109.41538 98.37176 80.58198 74.80993 69.00402 59.69211 51.33522 48.03869 48.30202 134.01274 171.18018 142.4859 125.26388 105.8266 103.47528 103.43046 96.27228 84.08592 81.57968 75.64559 75.4532 71.30081 74.84671 71.02194 56.59117 18.67799 -116.45878 -150.62886 -200.03719 -200.54936 -201.42348 -202.70789 -202.96897 -193.06728 -167.10388 -142.96442 -37.0733 -32.86682 -33.76788 -35.91012 -43.16601 -59.84957 -73.98278 -81.35142 -92.51038 -105.8975 -140.5883 -151.16436 -176.60648 -203.87664 -251.07697 -276.77438 -285.78683 -286.8023 -285.21057 -282.97556 -281.9153 -278.10053 -272.25433 -257.20856 -241.6072 -234.26898 -231.40596 -228.71044 -226.87944 -226.27669 -226.6496 -227.76032 -228.37252 -230.39588)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-62.86046 -59.60675 -56.32948 -50.93263 -47.84148 -47.87205 -47.72192 -50.63599 -52.1844 -57.37402 -59.82262 -59.57879 -58.10399 -58.21758 -53.80186 -53.8414 -54.1681 -53.74822 -53.12727 -52.74616 -35.18012 -27.00007 -22.57266 -23.55896 -15.94179 -16.2619 -16.53606 -24.06904 -42.60604 -73.49253 -87.49944 -121.16058 -136.09693 -141.24826 -145.94184 -151.70635 -157.8634 -160.66046 -161.71524 -110.87144 54.55209 108.34908 127.50444 143.28296 145.5737 148.07788 155.01988 162.96079 164.75734 168.30442 169.26839 172.22745 173.67638 178.82122 185.65569 194.76543 169.68274 144.29795 59.48406 62.20817 68.32099 71.21321 77.79718 100.38068 141.79518 166.03469 212.88947 231.21158 238.50876 248.7474 257.75427 264.84912 270.0699 271.16293 297.7664 298.11136 292.3602 297.6991 296.641 295.70667 283.02506 262.464 255.17864 254.6488 256.7877 258.20065 258.85028 261.42932 265.0667 257.34442 243.27007 237.80126 235.71958 233.77434 231.46372 230.37506 229.36566 228.61788 228.29982 227.4579)) (quote (100.88956 103.12598 104.89672 107.73936 107.51928 106.6475 105.24338 101.50772 99.1361 94.0733 88.69414 83.9213 80.67129 78.07644 71.32947 68.50951 67.1145 66.27874 66.07479 66.5281 77.40567 80.51927 82.01679 93.654 98.6118 104.18804 108.49068 113.6613 121.03082 114.04612 108.4685 99.57516 83.4971 78.32196 73.08605 64.57706 56.97046 53.9532 54.21328 132.76197 166.60034 140.26294 124.28104 106.16492 103.98472 104.02608 97.52494 86.42976 84.16906 78.83777 78.7461 75.11354 78.81797 75.52769 62.31056 27.05793 -101.81136 -135.85272 -189.60033 -189.86727 -190.21024 -191.20432 -190.8926 -179.61894 -151.89694 -127.43134 -25.19177 -20.47144 -21.0236 -22.63714 -29.11633 -44.60383 -57.75731 -64.68065 -74.02579 -86.63388 -119.5698 -129.3095 -153.37432 -179.20014 -224.7021 -250.34722 -259.4534 -260.49292 -258.86786 -256.72693 -255.7007 -251.94727 -246.23406 -232.2612 -218.1117 -211.41582 -208.81468 -206.3682 -204.78469 -204.28702 -204.7122 -205.81612 -206.42346 -208.40154)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 1.0 0.2871953 7.750988E-4)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-58.55301 -55.4606 -52.35617 -47.25364 -44.33854 -44.37521 -44.24176 -47.02625 -48.50823 -53.4552 -55.82292 -55.64563 -54.28837 -54.4281 -50.33482 -50.41147 -50.7426 -50.35338 -49.7659 -49.40159 -32.71323 -24.99217 -20.81684 -21.6556 -14.48451 -14.75788 -15.00085 -22.10947 -39.5132 -68.68261 -81.98709 -114.13372 -128.71562 -133.78533 -138.43738 -144.2397 -150.44837 -153.26706 -154.29314 -104.39568 51.51379 102.55704 121.03776 136.39508 138.6227 141.01882 147.71656 155.41593 157.16123 160.6137 161.5251 164.38536 165.58972 170.61888 177.53054 187.50278 170.88288 149.39315 74.04663 76.59986 82.31434 85.10722 91.22962 111.40592 148.08277 169.10462 207.22623 224.60999 231.67777 241.63239 250.64714 258.27805 264.01218 265.44794 291.64395 292.70538 289.23212 295.01807 295.6799 296.70755 288.19272 270.68878 264.46835 264.0315 265.92908 267.09287 267.61023 269.7298 272.66614 264.07285 249.46952 243.70827 241.50545 239.4479 237.1023 236.02805 235.10076 234.48748 234.24265 233.6096)) (quote (99.47018 101.47884 103.05556 105.5957 105.26208 104.41228 103.04332 99.52456 97.28688 92.60086 87.53624 82.96265 79.80303 77.32571 70.70642 68.00347 66.6744 65.85317 65.62284 66.02891 75.82084 78.58702 79.92761 91.09702 95.74808 101.13286 105.29176 110.38978 117.87718 112.09306 107.30328 100.41616 85.9672 81.36255 76.67349 68.94007 62.06162 59.31669 59.57397 131.274 161.98004 137.8736 123.078 106.23172 104.2153 104.33582 98.4589 88.40286 86.3758 81.61803 81.61998 78.47947 82.31784 79.53682 67.49082 34.84537 -87.38794 -120.96728 -177.9405 -177.9921 -177.87082 -178.5962 -177.7829 -165.44384 -136.48957 -111.99494 -13.91824 -8.7476 -8.9716 -10.08432 -15.80657 -30.09991 -42.2696 -48.73941 -56.33843 -68.14591 -99.23014 -108.12362 -130.72566 -154.99716 -198.50746 -223.83878 -232.94258 -233.9978 -232.36196 -230.33528 -229.35439 -225.7021 -220.1811 -207.33232 -194.64617 -188.60239 -186.26725 -184.07349 -182.73493 -182.33849 -182.8077 -183.89342 -184.48946 -186.40543)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-54.3581 -51.42841 -48.49674 -43.68681 -40.94558 -40.98792 -40.87038 -43.52477 -44.93954 -49.64189 -51.92353 -51.8067 -50.56242 -50.72473 -46.94428 -47.05406 -47.38758 -47.02806 -46.47423 -46.12769 -30.32086 -23.05155 -19.12308 -19.82317 -13.08702 -13.31624 -13.5296 -20.225 -36.52528 -64.00058 -76.59899 -107.19168 -121.35246 -126.31278 -130.8944 -136.68897 -142.90422 -145.72753 -146.72624 -98.05688 48.55849 96.88892 114.68102 129.58948 131.7498 134.03694 140.47522 147.90119 149.58708 152.92336 153.77916 156.52062 157.47927 162.36997 169.29476 179.94774 170.93325 153.0976 87.00902 89.382 94.67982 97.3543 102.99232 120.79564 152.8841 170.85732 200.98479 217.4328 224.25716 233.90415 242.87479 250.9395 257.09848 258.83124 284.51147 286.20087 284.763 290.9118 293.098 295.8688 291.15405 276.5219 271.31653 270.97256 272.64252 273.58658 273.98413 275.67963 277.97247 268.63455 253.63767 247.64936 245.35329 243.21027 240.85324 239.80207 238.95722 238.47058 238.29496 237.85543)) (quote (97.8998 99.69422 101.08958 103.34698 102.90916 102.0811 100.74706 97.43516 95.32538 90.99582 86.23316 81.85614 78.7899 76.42778 69.94803 67.36019 66.09511 65.28931 65.03495 65.39609 74.17063 76.61228 77.80615 88.5069 92.86536 98.05854 102.07364 107.08946 114.65884 109.98232 105.92532 100.9008 87.9964 83.93468 79.76799 72.78055 66.60565 64.12512 64.38021 129.55445 157.32054 135.32157 121.65874 106.03076 104.17076 104.3634 99.07776 90.00824 88.20262 83.98856 84.07694 81.40029 85.34812 83.05023 72.1299 42.0277 -73.28161 -106.09972 -165.24486 -165.11064 -164.5912 -165.07068 -163.82672 -150.714 -121.01998 -96.76692 -3.28528 2.27347 2.35634 1.71525 -3.27319 -16.38196 -27.57081 -33.58233 -39.51026 -50.50283 -79.66136 -87.70608 -108.7795 -131.40924 -172.67707 -197.45917 -206.47199 -207.53458 -205.90836 -204.01209 -203.0863 -199.5698 -194.29244 -182.60625 -171.38286 -165.99462 -163.92702 -161.98686 -160.88832 -160.5885 -161.09386 -162.15088 -162.72998 -164.56906)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-50.28027 -47.51405 -44.75448 -40.23464 -37.66478 -37.71236 -37.60998 -40.13413 -41.48118 -45.93788 -48.12894 -48.06675 -46.93088 -47.11239 -43.63478 -43.77388 -44.10792 -43.77714 -43.257 -42.92903 -28.00444 -21.17889 -17.49181 -18.06208 -11.74945 -11.9371 -12.12244 -18.41588 -33.64329 -59.45077 -71.34201 -100.34982 -114.02976 -118.85546 -123.34014 -129.08477 -135.26448 -138.0762 -139.04872 -91.86194 45.68644 91.3483 108.43994 122.87448 124.96382 127.1413 133.30686 140.43106 142.05033 145.25115 146.0489 148.65377 149.36736 154.099 160.97759 172.13974 169.88297 155.44412 98.30784 100.49474 105.36536 107.90544 113.04418 128.5374 156.22734 171.3378 194.21514 209.7328 216.30109 225.61878 234.496 242.8959 249.39397 251.37918 276.44232 278.67316 279.0316 285.4613 288.9778 293.27344 291.98428 280.02548 275.77948 275.52747 276.98505 277.73898 278.02975 279.33807 281.04736 271.09125 255.8332 249.68192 247.32 245.11742 242.77172 241.75159 240.98917 240.62064 240.5099 240.2479)) (quote (96.18314 97.77646 99.0029 100.99678 100.46388 99.65724 98.35796 95.24304 93.25534 89.2623 84.78922 80.60604 77.63603 75.38675 69.05804 66.58332 65.38034 64.59078 64.31468 64.63319 72.45716 74.59658 75.65354 85.88486 89.96436 94.96574 98.83706 103.76134 111.37804 107.71854 104.3403 101.03592 89.59008 86.0429 82.37306 76.10008 70.60195 68.37709 68.6305 127.60892 152.62268 132.61042 120.02732 105.56602 103.85504 104.11288 99.38556 91.24962 89.65322 85.95256 86.12014 83.8787 87.91188 86.07042 76.22779 48.59557 -59.57919 -91.37136 -151.70417 -151.41298 -150.5596 -150.81668 -149.2121 -135.59983 -105.6212 -81.85295 6.67911 12.5652 12.93306 12.73334 8.45233 -3.48837 -13.70567 -19.25786 -23.59594 -33.76659 -60.94717 -68.14764 -87.64532 -108.56814 -147.3848 -171.40894 -180.24999 -181.31165 -179.71306 -177.95958 -177.09664 -173.74588 -168.75559 -158.25804 -148.4852 -143.75022 -141.94889 -140.26107 -139.39534 -139.18704 -139.72046 -140.7397 -141.2966 -143.04564)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-46.3243 -43.72169 -41.133 -36.8999 -34.49856 -34.55097 -34.46304 -36.85725 -38.13633 -42.34725 -44.44393 -44.4308 -43.39868 -43.59622 -40.41107 -40.57587 -40.90866 -40.60566 -40.11912 -39.81039 -25.76558 -19.37506 -15.92363 -16.37292 -10.47208 -10.62074 -10.77964 -16.68256 -30.86854 -55.03782 -66.22351 -93.6239 -106.77024 -111.43864 -115.80234 -121.4582 -127.56312 -130.34804 -131.29524 -85.81816 42.89815 85.93922 102.32086 116.25904 118.27402 120.3415 126.22302 133.02066 134.567 137.61536 138.35314 140.80606 141.27703 145.83129 152.6091 164.11933 167.78762 156.47528 107.89978 109.89802 114.3381 116.7306 121.36292 134.63439 158.15164 170.59928 186.96923 201.56472 207.86579 216.8347 225.57209 234.21244 240.96692 243.16135 267.51355 270.20166 272.12222 278.75357 283.40964 289.014 290.77173 281.27765 277.93027 277.76843 279.02966 279.62317 279.82037 280.77972 281.967 271.51798 256.1272 249.87534 247.4741 245.23737 242.92429 241.94274 241.26178 241.00252 240.95212 240.85102)) (quote (94.32514 95.73032 96.79992 98.54904 97.92986 97.14436 95.87962 92.9521 91.08076 87.40474 83.20899 79.21688 76.34584 74.20703 68.04038 65.67678 64.53392 63.76144 63.46585 63.74398 70.68284 72.54164 73.47122 83.2324 87.0461 91.85554 95.58306 100.40678 108.03736 105.30672 102.55422 100.8289 90.75458 87.69276 84.49328 78.90151 74.05138 72.07254 72.32495 125.44342 147.8876 129.74404 118.18806 104.84188 103.27248 103.58862 99.3866 92.13108 90.73154 87.5137 87.7533 85.91804 90.01294 88.60056 79.78548 54.54116 -46.36373 -76.90042 -137.51322 -137.09302 -135.96736 -136.0261 -134.12906 -120.2714 -90.42314 -67.35479 15.9492 22.10336 22.73377 22.94426 19.34131 8.54518 -0.71602 -5.81112 -8.64648 -17.99533 -43.1669 -49.53435 -67.42749 -86.5998 -122.79842 -145.8831 -154.47972 -155.53237 -153.97714 -152.37487 -151.58092 -148.42064 -143.7531 -134.45803 -126.11214 -122.02216 -120.48338 -119.0439 -118.40208 -118.27924 -118.83328 -119.8065 -120.33648 -121.98464)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-42.49469 -40.05519 -37.63561 -33.68512 -31.44914 -31.50597 -31.43179 -33.69675 -34.90785 -38.87379 -40.87293 -40.90354 -39.97049 -40.18106 -37.27762 -37.4647 -37.79463 -37.51839 -37.06527 -36.77632 -23.60574 -17.64084 -14.41904 -14.75617 -9.25511 -9.36735 -9.5014 -15.02539 -28.20215 -50.76607 -61.25029 -87.02908 -99.59592 -104.08688 -108.308 -113.83966 -119.83366 -122.57758 -123.50014 -79.93251 40.19407 80.6655 96.32974 109.7517 111.68938 113.64684 119.23486 125.68476 127.15254 130.03392 130.7103 132.9982 133.2307 137.59134 144.21878 155.92687 164.70886 156.2437 115.76318 117.57334 121.58596 123.82066 127.9465 139.10704 158.70738 168.7029 179.29998 192.98412 199.0082 207.61098 216.16518 224.95565 231.88755 234.24944 257.80466 260.869 264.12396 270.88098 276.49027 283.19153 287.6175 280.3721 277.85852 277.7845 278.8661 279.32846 279.4453 280.09457 280.82193 270.00317 254.60306 248.31084 245.89579 243.64916 241.38877 240.45252 239.85175 239.69242 239.69744 239.7404)) (quote (92.33092 93.56052 94.48508 96.00758 95.31074 94.5461 93.3157 90.5662 88.8056 85.42762 81.4972 77.69332 74.92385 72.89311 66.89913 64.6446 63.55991 62.80527 62.4924 62.73237 68.85002 70.4491 71.26049 80.55098 84.11148 88.72888 92.31262 97.02708 104.63926 102.75198 100.57336 100.28786 91.49734 88.89114 86.1348 81.18943 76.95684 75.21367 75.46575 123.06414 143.11646 126.72634 116.14546 103.86286 102.4276 102.79518 99.0857 92.65738 91.44228 88.67656 88.981 87.52274 91.6562 90.64522 82.80564 59.85928 -33.71208 -62.7989 -122.86712 -122.34434 -121.00504 -120.88948 -118.7657 -104.89474 -75.54965 -53.36782 24.50323 30.86773 31.73789 32.32652 29.36956 19.68819 11.36181 6.71834 5.29306 -3.24056 -26.39221 -31.94437 -48.22172 -65.62075 -99.07534 -121.06602 -129.35395 -130.38973 -128.89112 -127.4447 -126.72426 -123.77446 -119.4575 -111.36678 -104.41354 -100.95488 -99.67258 -98.47514 -98.04636 -98.00244 -98.56974 -99.48992 -99.98906 -101.52722)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-38.79574 -36.51824 -34.26547 -30.59275 -28.51863 -28.57951 -28.51839 -30.65516 -31.79854 -35.52113 -37.42022 -37.4895 -36.65079 -36.87158 -34.23878 -34.44483 -34.77044 -34.51994 -34.09994 -33.83117 -21.52634 -15.97693 -12.97851 -13.21229 -8.09875 -8.17715 -8.28791 -13.44472 -25.64522 -46.63969 -56.42906 -80.58007 -92.52834 -96.8243 -100.88368 -106.2591 -112.10918 -114.79892 -115.69724 -74.21165 37.57461 75.53083 90.47244 103.36082 105.2186 107.06636 112.3533 118.43764 119.82236 122.52438 123.13844 125.25054 125.25044 129.40354 135.83586 147.60272 160.71382 154.81122 121.89752 123.52276 127.11702 129.18634 132.81224 141.99163 157.95539 165.71686 171.26134 184.04738 189.78624 198.00765 206.3385 215.19355 222.22765 224.71723 247.39736 250.76018 255.13013 261.9404 268.32275 275.91504 282.63428 277.41724 275.66937 275.68005 276.59918 276.95883 277.00836 277.38654 277.7159 266.64746 251.35572 245.08052 242.6759 240.44242 238.25336 237.3684 236.84589 236.77709 236.83254 237.00249)) (quote (90.20568 91.27192 92.06288 93.3764 92.61014 91.8661 90.66984 88.08924 86.434 83.33552 79.65869 76.04022 73.37474 71.44968 65.63853 63.491 62.46251 61.72645 61.39846 61.60245 66.96109 68.32065 69.02272 77.84204 81.16146 85.5867 89.02666 93.62348 101.18626 100.0595 98.4042 99.42146 91.82686 89.64616 87.30518 82.97022 79.32318 77.80465 78.057 120.47742 138.31032 123.5613 113.90412 102.63382 101.32524 101.7375 98.48792 92.8338 91.79074 89.44634 89.80854 88.6981 92.84766 92.21002 85.2924 64.54721 -21.69497 -49.17225 -107.95906 -107.35864 -105.86042 -105.59462 -103.30662 -89.63096 -61.11806 -39.9808 32.32292 38.84166 39.92847 40.86254 38.51691 29.91454 22.49629 18.29587 18.18346 10.45233 -10.68758 -15.44808 -30.11503 -45.73808 -76.36244 -97.13154 -105.05498 -106.06626 -104.63538 -103.34576 -102.70166 -99.9774 -96.03144 -89.13534 -83.53029 -80.68405 -79.64976 -78.686 -78.45748 -78.48561 -79.05915 -79.92042 -80.38513 -81.80623)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-35.23169 -33.11451 -31.02576 -27.62519 -25.70914 -25.7737 -25.72497 -27.735 -28.81112 -32.29287 -34.09004 -34.19313 -33.44399 -33.67234 -31.29877 -31.52071 -31.84064 -31.61486 -31.22757 -30.97924 -19.52878 -14.38409 -11.60255 -11.74177 -7.00322 -7.05034 -7.13938 -11.94093 -23.19886 -42.66283 -51.76636 -74.29139 -85.58878 -89.67462 -93.55556 -98.74624 -104.4225 -107.0459 -107.92028 -68.66233 35.04023 70.53897 84.75482 97.09484 98.87054 100.60916 105.58926 111.29384 112.59172 115.10432 115.65564 117.58348 117.35828 121.29206 127.48948 139.1875 155.87474 152.24828 126.3225 127.76852 130.9586 132.8575 135.9959 143.3396 155.96627 161.7163 162.90814 174.81177 180.2586 188.08568 196.15642 204.99564 212.06107 214.64032 236.37578 239.9632 245.23795 252.03342 259.016 267.301 275.9459 272.5351 271.48264 271.57422 272.34818 272.6323 272.62723 272.773 272.76553 261.56308 246.4907 240.28684 237.91558 235.71686 233.61597 232.78762 232.34095 232.35305 232.45384 232.73365)) (quote (87.9548 88.86962 89.53802 90.65958 89.8319 89.10818 87.94586 85.52534 83.97016 81.13323 77.69851 74.26261 71.70338 69.8816 64.26301 62.22035 61.24613 60.52934 60.18831 60.35847 65.01854 66.15805 66.7593 75.1071 78.19706 82.43007 85.72626 90.1974 97.68102 97.23468 96.05346 98.23906 91.75266 89.96714 88.01334 84.25178 81.15702 79.85149 80.10475 117.68996 133.47045 120.25314 111.46894 101.15992 99.9706 100.42082 97.59884 92.66614 91.78278 89.82902 90.24198 89.45028 93.59418 93.30174 87.2513 68.60436 -10.37698 -36.11921 -92.979 -92.32392 -90.7174 -90.3251 -87.93166 -74.63505 -47.23867 -27.27592 39.39345 46.01203 47.2921 48.53828 46.76714 39.20251 32.66063 28.89193 29.99099 23.04367 3.88946 -0.10868 -13.18631 -27.04956 -54.79581 -74.24227 -81.75379 -82.73352 -81.37887 -80.24378 -79.67728 -77.18898 -73.62699 -67.90483 -63.59404 -61.33637 -60.53946 -59.79897 -59.75666 -59.84929 -60.42232 -61.2199 -61.64723 -62.94622)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-31.80622 -29.84714 -27.91913 -24.78443 -23.02238 -23.09027 -23.05328 -24.93836 -25.94793 -29.19212 -30.88608 -31.01837 -30.35398 -30.58744 -28.46139 -28.69628 -29.00932 -28.80721 -28.4521 -28.22437 -17.61421 -12.86285 -10.29149 -10.34492 -5.9686 -5.98701 -6.05591 -10.51419 -20.8639 -38.83906 -47.26803 -68.1764 -78.79711 -82.66024 -86.3485 -91.32932 -96.80502 -99.35104 -100.20152 -63.29041 32.59115 65.69303 79.18199 90.96132 92.65312 94.28356 98.95286 104.26672 105.47482 107.79022 108.27886 110.0162 109.57496 113.2798 119.2075 130.7206 150.26764 148.63286 129.07826 130.35268 133.1571 134.88304 137.55168 143.21723 152.81932 156.7817 154.29486 165.33396 170.48348 177.90543 185.68268 194.4311 201.46149 204.09468 224.8242 228.56667 234.5469 241.26396 248.68254 257.47113 267.68506 265.85962 265.43076 265.59888 266.24484 266.47913 266.4316 266.38287 266.09784 254.8719 240.12273 234.04096 231.7242 229.58036 227.58278 226.81558 226.4419 226.52526 226.66625 227.03919)) (quote (85.58362 86.3585 86.91502 87.86098 86.9796 86.2759 85.14732 82.87838 81.41814 78.82537 75.62162 72.36542 69.91463 68.19377 62.77698 60.83708 59.9152 59.21834 58.86631 59.00469 63.0247 63.96286 64.47145 72.34743 75.219 79.25972 82.41214 86.74986 94.12582 94.28272 93.52788 96.7505 91.28532 89.86456 88.26952 85.04368 82.46699 81.36235 81.61705 114.70832 128.5976 116.80576 108.84464 99.44634 98.36894 98.85052 96.4242 92.1608 91.42484 89.83132 90.28808 89.78634 93.9037 93.92834 88.68952 72.03299 0.18536 -23.72913 -78.10918 -77.4205 -75.75172 -75.25583 -72.81166 -60.05244 -34.01228 -15.32648 45.70444 52.37005 53.81988 55.34444 54.10894 47.53598 41.8342 38.48332 40.68889 34.50154 17.29043 14.02037 2.49632 -9.64075 -34.49725 -52.54544 -59.60618 -60.54747 -59.27562 -58.28942 -57.80033 -55.55389 -52.38194 -47.80295 -44.72378 -43.0263 -42.45433 -41.92475 -42.05306 -42.20244 -42.76878 -43.49891 -43.88644 -45.05985)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-28.5232 -26.71943 -24.94843 -22.07267 -20.46026 -20.53114 -20.50526 -22.26751 -23.21146 -26.22215 -27.81217 -27.96927 -27.38481 -27.62109 -25.73052 -25.97561 -26.28065 -26.10116 -25.77762 -25.5705 -15.78391 -11.41389 -9.04578 -9.02217 -4.9951 -4.98736 -5.03768 -9.16486 -18.64132 -35.17216 -42.9401 -62.24864 -72.17337 -75.80368 -79.28738 -84.03668 -89.28826 -91.74694 -92.57336 -58.10213 30.22784 60.99657 73.75959 84.96834 86.57478 88.09818 92.45454 97.3701 98.48638 100.59898 101.02548 102.5683 101.9216 105.39004 111.018 122.24188 143.97296 144.0502 130.22303 131.33528 133.77626 135.32892 137.55014 141.70374 148.60208 150.99935 145.47716 155.67173 160.52008 167.52832 174.98236 183.5707 190.50452 193.15822 212.82935 216.66172 223.16004 229.73992 237.43994 246.55358 257.99387 257.53616 257.65863 257.89832 258.4332 258.64133 258.56296 258.35623 257.85083 246.70577 232.37563 226.46276 224.22 222.1494 220.2684 219.56597 219.26209 219.40717 219.58312 220.0328)) (quote (83.09777 83.74382 84.19874 84.98486 84.0571 83.37319 82.27816 80.15252 78.78232 76.41693 73.43328 70.35398 68.01362 66.39134 61.1851 59.34585 58.47439 57.79811 57.43704 57.54565 60.9821 61.73686 62.16059 69.56459 72.2283 76.07669 79.08538 83.28227 90.52336 91.20928 90.8346 94.96626 90.4363 89.35004 88.08524 85.35698 83.26332 82.347 82.60361 111.53948 123.69308 113.2235 106.0364 97.49874 96.52592 97.03238 94.97024 91.32458 90.72392 89.4605 89.95438 89.71416 93.78504 94.09874 89.61546 74.83724 9.94152 -12.08437 -63.5255 -62.82208 -61.13219 -60.55498 -58.11034 -46.02102 -21.53225 -4.19912 51.24824 57.90996 59.50598 61.27485 60.5344 54.90242 50.0003 47.05084 50.2552 44.79908 29.47315 26.89233 16.87258 6.41151 -15.57787 -32.17693 -38.75633 -39.65281 -38.46804 -37.62228 -37.20897 -35.2061 -32.42374 -28.94729 -27.02895 -25.85925 -25.49791 -25.16534 -25.44753 -25.64558 -26.19927 -26.8592 -27.20521 -28.2514)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-25.38619 -23.73446 -22.11628 -19.49187 -18.02448 -18.09803 -18.08265 -19.72454 -20.60399 -23.38596 -24.87192 -25.04964 -24.54024 -24.77719 -23.10982 -23.3625 -23.65858 -23.50062 -23.20794 -23.02136 -14.03903 -10.0378 -7.8658 -7.77389 -4.08286 -4.05155 -4.08484 -7.89319 -16.53205 -31.66567 -38.78827 -56.52095 -65.7367 -69.12644 -72.39611 -76.89561 -81.9027 -84.26516 -85.06718 -53.10331 27.95066 56.45288 68.49286 79.12359 80.64358 82.0614 86.10436 90.61736 91.64054 93.54686 93.91228 95.2587 94.41856 97.64524 102.94838 113.79048 137.07395 138.59148 129.83304 130.79386 132.89643 134.27767 136.07775 138.89102 143.40937 144.45978 136.51042 145.88242 150.42733 157.01552 164.12023 172.48522 179.26596 181.90914 200.47818 204.34024 211.1821 217.5713 225.40888 234.6809 247.02167 247.72005 248.3217 248.62744 249.06754 249.27114 249.17275 248.8429 248.17118 237.20467 223.3807 217.6794 215.52819 213.5473 211.7942 211.15938 210.92165 211.11913 211.32497 211.83553)) (quote (80.50296 81.03083 81.39401 82.03534 81.0683 80.40388 79.34221 77.35196 76.06706 73.91288 71.13887 68.23361 66.00558 64.47957 59.49218 57.75146 56.92853 56.2734 55.9052 55.98598 58.89327 59.48179 59.82812 66.76005 69.22592 72.88195 75.7469 79.79594 86.87622 88.01992 87.9809 92.89738 89.21804 88.43624 87.47332 85.20422 83.55805 82.81711 83.07601 108.19064 118.75798 109.51068 103.04946 95.32294 94.44742 94.97242 93.2435 90.16492 89.68758 88.72464 89.2491 89.24246 93.24796 93.82296 90.03892 77.02368 18.84861 -1.25775 -49.39355 -48.69211 -47.0172 -46.38 -43.98019 -32.66772 -9.88196 6.04825 56.0212 62.62989 64.34854 66.3274 66.04005 61.29441 57.14769 54.58125 58.67438 53.91635 40.404 38.46924 29.89227 21.04225 1.86524 -13.25724 -19.33276 -20.1786 -19.08327 -18.3667 -18.02646 -16.26478 -13.86531 -11.442 -10.60679 -9.92869 -9.76209 -9.61107 -10.0295 -10.26784 -10.80341 -11.39147 -11.69452 -12.61364)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-22.39864 -20.89517 -19.42519 -17.04396 -15.71672 -15.79264 -15.78715 -17.31145 -18.12773 -20.6865 -22.06878 -22.26314 -21.82391 -22.05956 -20.60281 -20.86063 -21.14689 -21.00938 -20.74675 -20.58051 -12.38072 -8.73516 -6.75194 -6.60045 -3.23205 -3.17971 -3.19754 -6.69947 -14.53695 -28.32302 -34.81802 -51.00578 -59.50569 -62.64949 -65.69792 -69.93275 -74.67813 -76.93661 -77.71376 -48.29973 25.76001 52.06527 63.38708 73.43466 74.86746 76.18148 79.91234 84.0217 84.9513 86.65006 86.95582 88.10606 87.08598 90.06754 95.02556 105.40508 129.65674 132.35364 128.00096 128.82215 130.6135 131.82698 133.23545 134.88227 137.34238 137.25778 127.45008 136.0235 140.26403 146.42816 153.16104 161.24558 167.822 170.42624 187.85845 191.69509 198.71974 204.87023 212.71294 221.9896 234.92456 236.5753 237.5851 237.95087 238.31177 238.53002 238.42147 238.00135 237.21392 226.51592 213.27625 207.82462 205.78044 203.90383 202.2879 201.72269 201.54714 201.78794 202.01865 202.57497)) (quote (77.80504 78.22496 78.50584 79.01676 78.01718 77.37199 76.34349 74.48102 73.27684 71.31838 68.74388 66.00992 63.89592 62.4639 57.70313 56.05884 55.2826 54.64917 54.27564 54.33047 56.76081 57.19945 57.47548 63.93537 66.21289 69.67654 72.39781 76.29225 83.18711 84.72054 84.9743 90.55544 87.64392 87.137 86.44782 84.5995 83.36489 82.78614 83.04757 104.66918 113.79358 105.67186 99.88924 92.92504 92.13966 92.67696 91.25092 88.68968 88.32398 87.63248 88.18112 88.38078 92.30312 93.11206 89.97112 78.60107 26.87121 8.68713 -35.8677 -35.1826 -33.55386 -32.87677 -30.56224 -20.10821 0.86493 15.36614 60.02316 66.53147 68.34922 70.50386 70.62642 66.70898 63.27025 61.06638 65.93666 61.83969 50.05694 48.72154 41.51483 34.19717 17.74858 4.10802 -1.44889 -2.2388 -1.23331 -0.63263 -0.36134 1.16509 3.1938 4.62151 4.45779 4.68373 4.67279 4.65904 4.12288 3.8527 3.34029 2.82488 2.56557 1.77193)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-19.56349 -18.20406 -16.87729 -14.73051 -13.53832 -13.61631 -13.62013 -15.02989 -15.78452 -18.12624 -19.40572 -19.61297 -19.23897 -19.47149 -18.21258 -18.47323 -18.74894 -18.63078 -18.39731 -18.2511 -10.80988 -7.5064 -5.70446 -5.50208 -2.44273 -2.37192 -2.37584 -5.58384 -12.65667 -25.14711 -31.03417 -45.71448 -53.49756 -56.3923 -59.21459 -63.17309 -67.64263 -69.79048 -70.54209 -43.69635 23.65609 47.83649 58.44678 67.90842 69.25368 70.46588 73.88761 77.59529 78.43161 79.92353 80.17151 81.12788 79.94253 82.67771 87.27494 97.12282 121.8086 125.4372 124.83412 125.52812 127.03688 128.08802 129.13684 129.79003 130.50702 129.49022 118.35028 126.1508 130.08748 135.8257 142.16806 149.92127 156.2476 158.7871 175.05654 178.81797 185.87923 191.74857 199.47634 208.61777 221.86254 224.27194 225.62064 226.03997 226.3363 226.58574 226.47594 225.99594 225.13936 214.79178 202.20499 197.03638 195.11269 193.35279 191.88126 191.38677 191.26918 191.5446 191.79526 192.38309)) (quote (75.00975 75.33148 75.539 75.93318 74.90742 74.28121 73.28572 71.54376 70.41597 68.6384 66.2537 63.6883 61.68995 60.34968 55.82285 54.2729 53.54152 52.93032 52.55322 52.58386 54.58714 54.89143 55.10388 61.09182 63.18991 66.46121 69.03884 72.77227 79.45841 81.31668 81.82225 87.95234 85.728 85.46698 85.02382 83.5582 82.69916 82.26921 82.53331 100.98228 108.80066 101.71116 96.56106 90.31118 89.60886 90.15236 88.99958 86.90714 86.64162 86.19324 86.75996 87.13944 90.962 91.97802 89.4245 79.58057 33.98232 17.69741 -23.08778 -22.43123 -20.87472 -20.17661 -17.98278 -8.44458 10.64631 23.71476 63.25793 69.62039 71.51399 73.8101 74.29856 71.1484 68.3674 66.50413 72.03894 68.56282 58.41495 57.62926 51.71068 45.83511 32.00445 19.8309 14.79997 14.07057 14.98755 15.48783 15.69503 16.99564 18.6708 19.1674 18.09412 17.91011 17.74001 17.57935 16.94452 16.65103 16.16636 15.72349 15.50827 14.83707)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-16.8838 -15.66374 -14.47481 -12.55321 -11.49075 -11.57052 -11.58308 -12.88164 -13.57631 -15.70778 -16.88584 -17.10239 -16.78869 -17.0164 -15.94228 -16.20361 -16.46814 -16.36823 -16.16294 -16.03636 -9.32751 -6.35203 -4.72368 -4.4791 -1.71504 -1.62831 -1.61987 -4.54655 -10.892 -22.14104 -27.44171 -40.65841 -47.72936 -50.37414 -52.96753 -56.64132 -60.82394 -62.85559 -63.58089 -39.29846 21.63929 43.76963 53.67696 62.55207 63.80976 64.92247 68.03955 71.35061 72.09475 73.3825 73.57508 74.34178 73.00714 75.49655 79.72195 88.9807 113.61864 117.94674 120.45322 121.03298 122.28844 123.18408 123.90714 123.73586 123.01412 121.25708 109.26544 116.32042 119.95532 125.26796 131.20478 138.58232 144.61818 147.06996 162.1597 165.80155 172.76833 178.31996 185.82555 194.70656 208.00069 210.98676 212.60749 213.0735 213.3189 213.61324 213.51 212.99788 212.11425 202.19019 190.31496 185.45789 183.66584 182.03298 180.71092 180.28746 180.22336 180.52512 180.79102 181.39702)) (quote (72.12313 72.35596 72.49862 72.78897 71.74312 71.13565 70.17295 68.54457 67.48902 65.87824 63.67405 61.27453 59.39327 58.14259 53.85647 52.39882 51.71053 51.12204 50.74303 50.75118 52.37491 52.55956 52.71479 58.23099 60.15806 63.23704 65.67102 69.23738 75.69285 77.81433 78.53256 85.10064 83.48538 83.44194 83.21766 82.09707 81.57779 81.28311 81.54985 97.13772 103.7805 97.63328 93.07062 87.4879 86.8617 87.40544 86.497 84.8262 84.64966 84.41692 84.99582 85.52948 89.237 90.4339 88.41288 79.97529 40.16197 25.72948 -11.18046 -10.5624 -9.09938 -8.39785 -6.35494 2.23325 19.40982 31.06248 65.73249 71.90548 73.85185 76.25547 77.06517 74.61888 72.44306 70.89699 76.98346 74.08502 65.46811 65.17996 60.45909 55.92498 44.5782 33.83801 29.33342 28.66857 29.49985 29.91679 30.0658 31.15276 32.49592 32.13228 30.24339 29.69393 29.38397 29.09505 28.38098 28.07272 27.61989 27.24867 27.07745 26.52439)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-14.36232 -13.27656 -12.21974 -10.51356 -9.57528 -9.65658 -9.67732 -10.86828 -11.50484 -13.43346 -14.51193 -14.73438 -14.47601 -14.69737 -13.7948 -14.05479 -14.30761 -14.22484 -14.04668 -13.93924 -7.9345 -5.27248 -3.8099 -3.53177 -1.04907 -0.94897 -0.92973 -3.58779 -9.24361 -19.30759 -24.04519 -35.84813 -42.21711 -44.61315 -46.97704 -50.36082 -54.24844 -56.15944 -56.8575 -35.1109 19.70992 39.86753 49.08222 57.37246 58.54287 59.55865 62.37721 65.29963 65.95336 67.04161 67.18149 67.76465 66.29782 68.54399 72.39101 81.01454 105.17644 109.98922 114.99056 115.46902 116.50052 117.24892 117.68134 116.84826 114.97756 112.65952 100.2488 106.58726 109.92378 114.81336 120.3335 127.2974 133.00814 135.35196 149.25392 152.73744 159.49422 164.6976 171.88706 180.39783 193.50637 196.90044 198.72939 199.23494 199.4417 199.79174 199.70177 199.18233 198.30892 188.87232 177.75727 173.23505 171.58362 170.08592 168.9163 168.56333 168.548 168.86835 169.14498 169.75693)) (quote (69.15129 69.30395 69.3898 69.5885 68.52828 67.93927 67.0092 65.48784 64.50057 63.04319 61.01066 58.7744 57.01155 55.84835 51.80922 50.44184 49.79493 49.22958 48.85022 48.83751 50.12672 50.2056 50.3096 55.35436 57.11826 60.00497 62.29537 65.68892 71.89307 74.2195 75.11322 82.01332 80.93183 81.07854 81.04669 80.23421 80.01918 79.84619 80.11537 93.14322 98.73422 93.4428 89.42366 84.46192 83.90496 84.44318 83.75106 82.45606 82.35774 82.31404 82.89955 83.56273 87.14128 88.4936 86.95124 79.80051 45.39821 32.75028 -0.25623 0.31543 1.6684 2.35728 4.22396 11.84963 27.1146 37.38709 67.45742 73.3992 75.37561 77.85308 78.93897 77.1314 75.50645 74.25296 80.77853 78.41233 71.21496 71.3702 67.74972 64.44795 55.43045 46.07324 42.08882 41.49185 42.2417 42.59362 42.6909 43.57903 44.6156 43.4678 40.86065 39.99202 39.56223 39.16435 38.39062 38.07603 37.65875 37.35751 37.22978 36.78937)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-12.00159 -11.04468 -10.11391 -8.61292 -7.79311 -7.87567 -7.90404 -8.99125 -9.57172 -11.30545 -12.28657 -12.51171 -12.3037 -12.51729 -11.77281 -12.0296 -12.27029 -12.20352 -12.05137 -11.96248 -6.63168 -4.26817 -2.96336 -2.66032 -0.44491 -0.33399 -0.30549 -2.70774 -7.71212 -16.64937 -20.84888 -31.29363 -36.97599 -39.12653 -41.26235 -44.3538 -47.94128 -49.72824 -50.39806 -31.13827 17.86829 36.13292 44.667 52.37617 53.45994 54.38158 56.90928 59.45384 60.01969 60.9149 61.00519 61.41278 59.8319 61.83921 65.30561 73.25898 96.57142 101.67314 108.58794 108.9779 109.81436 110.42482 110.6023 109.26138 106.51342 103.79942 91.35258 97.00498 100.04794 104.5192 109.61518 116.13404 121.49066 123.70914 136.42392 139.71614 146.16329 150.99378 157.78694 165.83344 178.54839 182.1964 184.17339 184.71099 184.89014 185.30367 185.2324 184.72728 183.89635 175.0017 164.685 160.51589 159.01165 157.65506 156.63874 156.35485 156.38349 156.71514 156.99832 157.6051)) (quote (66.10036 66.18112 66.21768 66.33615 65.26689 64.69613 63.79853 62.37794 61.45523 60.13864 58.26934 56.19381 54.55053 53.47276 49.68638 48.4073 47.80008 47.25829 46.88007 46.84801 47.84522 47.83135 47.8897 52.46344 54.07146 56.76597 58.91282 62.12819 68.06173 70.53823 71.57225 78.70375 78.08386 78.3943 78.52929 77.98889 78.04315 77.97837 78.24958 89.00668 93.66298 89.14438 85.62612 81.24015 80.74575 81.27282 80.76984 79.80649 79.77597 79.89576 80.48255 81.2518 84.68886 86.17196 85.05576 79.07355 49.68698 38.73724 9.59119 10.11058 11.34129 12.00285 13.67294 20.34348 33.73115 42.6756 68.44674 74.11746 76.10161 78.61968 79.93682 78.7014 77.57157 76.5852 83.43827 81.55722 75.66191 76.20502 73.58229 71.39685 64.53673 56.4974 53.02105 52.49457 53.16838 53.47445 53.52706 54.23336 54.99183 53.14013 49.91464 48.77444 48.24528 47.75822 46.94438 46.63172 46.25313 46.01959 45.93448 45.60017)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-9.80401 -8.97015 -8.15906 -6.8526 -6.14535 -6.22892 -6.26439 -7.25192 -7.77848 -9.32578 -10.21222 -10.43697 -10.27433 -10.47886 -9.87887 -10.13068 -10.35892 -10.30704 -10.17968 -10.10869 -5.41983 -3.33947 -2.18431 -1.86499 0.09735 0.21656 0.25277 -1.90655 -6.29815 -14.16888 -17.85684 -27.00438 -32.02039 -33.93061 -35.84173 -38.64148 -41.92648 -43.58706 -44.22756 -27.38503 16.11472 32.56852 40.43572 47.56972 48.5678 49.39836 51.64429 53.82456 54.30569 55.01614 55.06031 55.30202 53.62622 55.40073 58.48846 65.74768 87.8926 93.10782 101.39514 101.709 102.3783 102.86104 102.81938 101.11368 97.73932 94.77884 82.62794 87.62622 90.38182 94.4416 99.10964 105.15866 110.13776 112.21642 123.75338 126.8269 132.88085 137.32003 143.65042 151.1548 163.29622 167.05979 169.12865 169.6907 169.8518 170.3335 170.28513 169.81276 169.05115 160.74317 151.25264 147.4496 146.09688 144.88504 144.02079 143.8038 143.87142 144.20783 144.49346 145.08524)) (quote (62.97665 62.99325 62.98755 63.03642 61.96314 61.41036 60.54507 59.21941 58.35776 57.17008 55.45609 53.53881 52.01612 51.02183 47.4934 46.30068 45.73156 45.21368 44.83799 44.78801 45.5331 45.43864 45.45658 49.55979 51.01869 53.5211 55.52447 58.55659 64.20161 66.77674 67.91801 75.18581 74.95885 75.40769 75.68487 75.38163 75.67102 75.70098 75.97368 84.7363 88.56806 84.74288 81.68405 77.82981 77.39141 77.90192 77.56186 76.88771 76.91497 77.17387 77.75696 78.60992 81.89451 83.48479 82.74385 77.81372 53.03181 43.67823 18.28548 18.74849 19.84877 20.46987 21.92767 27.66842 39.24117 46.92404 68.7178 74.07952 76.04962 78.57569 80.07917 79.34867 78.65736 77.91199 84.98248 83.5382 78.82322 79.69786 77.96621 76.77603 71.88735 65.08811 62.10226 61.64821 62.25228 62.53229 62.54772 63.09081 63.60206 61.13001 57.38766 56.02423 55.4164 54.8601 54.02544 53.72275 53.38563 53.21689 53.17313 52.93759)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-7.77155 -7.0546 -6.35656 -5.23359 -4.63284 -4.71719 -4.75924 -5.65138 -6.12632 -7.49614 -8.29091 -8.51238 -8.39011 -8.5844 -8.11513 -8.36034 -8.57588 -8.53774 -8.43394 -8.3801 -4.29955 -2.48666 -1.47289 -1.1459 0.5777 0.70264 0.74502 -1.18431 -5.00209 -11.86818 -15.07255 -22.98876 -27.36329 -29.04019 -30.73181 -33.2432 -36.22608 -37.75898 -38.36899 -23.85498 14.44937 29.17656 36.39217 42.95888 43.87256 44.61532 46.58997 48.42207 48.8223 49.35794 49.35981 49.44697 47.69621 49.24568 51.96068 58.51219 79.2268 84.40138 93.56688 93.81642 94.3449 94.71094 94.48544 92.5454 88.77202 85.69804 74.12369 78.50106 80.97677 84.63396 88.87394 94.43472 99.0186 100.94576 111.32262 114.1558 119.74898 123.7843 129.59958 136.50012 147.9167 151.67392 153.78308 154.3618 154.5129 155.06443 155.04192 154.61728 153.9465 146.26004 137.6131 134.18395 132.9847 131.91909 131.20359 131.05052 131.1521 131.48725 131.77175 132.3399)) (quote (59.78625 59.74586 59.70442 59.69353 58.62084 58.08585 57.25271 56.0165 55.21262 54.14278 52.57666 50.81525 49.41407 48.50135 45.23558 44.12736 43.59478 43.10116 42.72928 42.66271 43.19287 43.02911 43.01147 46.64472 47.9607 50.27111 52.13103 54.97521 60.31512 62.94097 64.15856 71.47344 71.57443 72.13761 72.53347 72.4338 72.92508 73.03654 73.30995 80.33991 83.45026 80.24279 77.60334 74.23793 73.84916 74.33786 74.13558 73.71009 73.78559 74.16043 74.73516 75.65087 78.77352 80.44842 80.03379 76.04211 55.44415 47.57192 25.76926 26.17349 27.13879 27.70773 28.94196 33.79392 43.63837 50.13797 68.29124 73.3079 75.24266 77.74481 79.39036 79.09727 78.78754 78.25669 85.43674 84.38022 80.72116 81.87078 80.92108 80.60177 77.48807 71.84074 69.32315 68.94265 69.4842 69.75785 69.74377 70.1436 70.44023 67.43362 63.27632 61.73831 61.07251 60.46687 59.63022 59.34524 59.05182 58.94452 58.94061 58.79574)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-5.90618 -5.29971 -4.70784 -3.75696 -3.25649 -3.3414 -3.38951 -4.19074 -4.61648 -5.81822 -6.52469 -6.7401 -6.65319 -6.83619 -6.48372 -6.72081 -6.92351 -6.89797 -6.8164 -6.77892 -3.27149 -1.71004 -0.82932 -0.50323 0.99607 1.12421 1.17121 -0.54116 -3.82446 -9.74938 -12.49949 -19.25498 -23.01723 -24.46952 -25.94857 -28.17757 -30.86131 -32.26624 -32.84456 -20.55207 12.87255 25.95955 32.54043 38.54968 39.38054 40.03902 41.75424 43.2568 43.5806 43.953 43.91669 43.86215 42.05717 43.39093 45.74298 51.58339 70.65969 75.66143 85.2622 85.45838 85.8706 86.13146 85.75654 83.69849 79.72824 76.65653 65.88785 69.67877 71.88343 75.14896 78.9643 84.02488 88.2014 89.96828 99.21094 101.78774 106.86864 110.49358 115.75518 122.00642 132.57588 136.22196 138.32468 138.91216 139.05992 139.6797 139.68485 139.3195 138.75547 131.71549 123.91924 120.86648 119.82048 118.90032 118.32834 118.2355 118.36598 118.69456 118.9745 119.5118)) (quote (56.5356 56.44484 56.37367 56.31205 55.24423 54.72677 53.92565 52.77377 52.02462 51.06236 49.63717 48.02934 46.75041 45.91748 42.91853 41.89298 41.39547 40.92639 40.55953 40.47757 40.82729 40.60461 40.55584 43.71982 44.89852 47.01705 48.73358 51.38544 56.40505 59.03728 60.30244 67.58123 67.94921 68.60398 69.09621 69.16802 69.82908 70.00904 70.28216 75.82592 78.31085 75.64905 73.39026 70.47214 70.1268 70.58863 70.50004 70.28461 70.3993 70.86824 71.43033 72.38924 75.3421 77.08026 76.94512 73.78168 56.94257 50.42686 32.00281 32.34725 33.17623 33.68285 34.68632 38.7039 46.92708 52.33141 67.19075 71.82821 73.70701 76.15417 77.8982 77.97531 77.99024 77.6473 84.83182 84.11388 81.3852 82.7535 82.4756 82.90106 81.35845 76.76667 74.69081 74.38425 74.87094 75.15784 75.12203 75.3993 75.515 72.06071 67.59006 65.92591 65.22259 64.58721 63.7668 63.50686 63.25896 63.20933 63.24348 63.18069)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-4.20962 -3.70692 -3.21409 -2.42358 -2.01705 -2.10229 -2.15596 -2.87094 -3.25002 -4.29348 -4.91533 -5.12206 -5.0655 -5.23623 -4.98653 -5.21408 -5.40387 -5.38979 -5.32909 -5.3071 -2.33621 -1.00987 -0.25374 0.06289 1.35243 1.48124 1.53132 0.0228 -2.76565 -7.81435 -10.14076 -15.81041 -18.99358 -20.23156 -21.50662 -23.46166 -25.85169 -27.12933 -27.67474 -17.47982 11.38451 22.91974 28.88423 34.34779 35.09768 35.6756 37.14456 38.33857 38.59096 38.81319 38.74314 38.56124 36.72344 37.85228 39.85477 44.9904 62.2741 66.99314 76.64146 76.79433 77.11265 77.28034 76.78907 74.71417 70.72251 67.75116 57.96628 61.20643 63.15006 66.03684 69.43453 73.98917 77.75174 79.35227 87.4947 89.80464 94.33736 97.55124 102.2343 107.80682 117.43592 120.88352 122.9381 123.5266 123.67584 124.35964 124.39278 124.09492 123.64814 117.2697 110.32102 107.64216 106.74688 105.96932 105.53368 105.4967 105.6509 105.96832 106.24068 106.74118)) (quote (53.2311 53.09604 53.00058 52.89646 51.83739 51.33726 50.56802 49.49576 48.79852 47.93439 46.64368 45.18725 44.03122 43.27634 40.54783 39.6032 39.13935 38.69507 38.33433 38.2381 38.43903 38.16694 38.09113 40.78658 41.8331 43.7599 45.3331 47.78862 52.47411 55.07197 56.35821 63.52399 64.10221 64.82731 65.39492 65.60778 66.40783 66.6436 66.91521 71.20272 73.15101 70.96659 69.05117 66.54009 66.23212 66.66229 66.66444 66.62265 66.76798 67.31057 67.85612 68.84014 71.61701 73.3983 73.49826 71.05709 57.55294 52.26183 36.96537 37.25025 37.94425 38.37979 39.14917 42.39767 49.12304 53.52724 65.44306 69.66909 71.47203 73.83407 75.63401 76.0149 76.29813 76.11659 83.2038 82.77568 80.85225 82.38382 82.66778 83.7121 83.53263 79.89395 78.22991 77.99694 78.43679 78.75585 78.70591 78.88185 78.8506 75.03572 70.3519 68.60922 67.88845 67.24253 66.45568 66.22768 66.02671 66.0306 66.10083 66.11112)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-2.68337 -2.27752 -1.8764 -1.23425 -0.91518 -1.00055 -1.05928 -1.69284 -2.0279 -2.92324 -3.46443 -3.65997 -3.62874 -3.78634 -3.62528 -3.84197 -4.01885 -4.01509 -3.97383 -3.9664 -1.4942 -0.38639 0.25372 0.55234 1.64674 1.77368 1.82531 0.5075 -1.82606 -6.06481 -7.99922 -12.66189 -15.30288 -16.33833 -17.41945 -19.11125 -21.21535 -22.36734 -22.87862 -14.64163 9.98554 20.05936 25.42729 30.35873 31.02981 31.53112 32.76818 33.6769 33.86348 33.95004 33.85094 33.55735 31.7087 32.64481 34.31455 38.76094 54.15011 58.49882 67.86489 67.98346 68.22792 68.31467 67.73851 65.73194 61.86671 59.07601 50.40309 53.12928 54.82315 57.346 60.33633 64.38549 67.73286 69.16378 76.2476 78.28556 82.24958 85.0574 89.1505 94.03058 102.65486 105.83414 107.80428 108.38602 108.54026 109.28066 109.34118 109.1155 108.79108 103.07954 96.96538 94.6529 93.90366 93.26374 92.9555 92.96924 93.14216 93.44444 93.70652 94.16566)) (quote (49.87933 49.70547 49.59066 49.45141 48.40461 47.9216 47.18409 46.18714 45.53921 44.76461 43.60248 42.29536 41.26266 40.58423 38.12923 37.26384 36.8323 36.41305 36.05941 35.94993 36.03091 35.71801 35.61881 37.84664 38.76551 40.50074 41.93068 44.18618 48.52514 51.05154 52.33467 59.31698 60.05316 60.82886 61.45227 61.77756 62.68731 62.96652 63.23522 66.47899 67.97206 66.2005 64.59265 62.44976 62.17336 62.56723 62.6384 62.73598 62.90401 63.5013 64.02678 65.01947 67.61587 69.42151 69.71475 67.89476 57.30812 53.10539 40.65468 40.88124 41.44381 41.80094 42.33623 44.8894 50.25274 53.75684 63.07793 66.86225 68.57016 70.81804 72.63253 73.25207 73.74822 73.70191 80.59397 80.40766 79.16641 80.80716 81.54479 83.08371 84.05866 81.26683 79.98181 79.82126 80.22246 80.59156 80.53496 80.63068 80.4861 76.3969 71.59783 69.82315 69.10424 68.46627 67.72928 67.53968 67.38647 67.43962 67.54373 67.61793)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-1.32859 -1.01242 -0.69553 -0.18949 0.04867 -0.03663 -0.09993 -0.65702 -0.95079 -1.70848 -2.17323 -2.35518 -2.34427 -2.48794 -2.40129 -2.60592 -2.76997 -2.77537 -2.7521 -2.75827 -0.7458 0.16027 0.69299 0.96509 1.87903 2.00158 2.0532 0.91291 -1.00591 -4.50207 -6.07715 -9.81515 -11.95415 -12.80016 -13.69878 -15.14019 -16.96829 -17.99712 -18.47307 -12.04024 8.67573 17.38022 22.1727 26.58729 27.18199 27.61081 28.63152 29.28027 29.40714 29.37383 29.25066 28.86223 27.02515 27.782 29.13896 32.92026 46.36302 50.2758 59.08905 59.18129 59.36935 59.38756 58.75597 56.88661 53.26771 50.72024 43.23922 45.48928 46.94579 49.12134 51.71787 55.26787 58.20395 59.46464 65.53874 67.30482 70.69432 73.10655 76.61112 80.80017 88.38312 91.24166 93.0964 93.66376 93.82492 94.612 94.69804 94.5459 94.34386 89.2951 83.99286 82.03449 81.42459 80.9154 80.7239 80.78268 80.96929 81.25328 81.50267 81.91719)) (quote (46.4865 46.27874 46.14896 45.98114 44.94973 44.48363 43.77775 42.85216 42.25122 41.55837 40.51946 39.35969 38.45068 37.84717 35.66823 34.88048 34.48 34.08594 33.7403 33.61845 33.60541 33.25941 33.14012 34.90124 35.69644 37.24028 38.52702 40.57916 44.56052 46.98205 48.2402 54.97523 55.82175 56.62995 57.29112 57.70221 58.69395 59.00475 59.26884 61.66289 62.77476 61.35539 60.02084 58.20878 57.95838 58.31155 58.43125 58.63636 58.81966 59.45429 59.9566 60.94311 63.35629 65.16896 65.61655 64.32221 56.24755 52.9956 43.08718 43.25744 43.6938 43.96652 44.27072 46.20807 50.35325 53.05967 60.12754 63.44168 65.0363 67.1421 68.93135 69.72618 70.38129 70.44464 77.04808 77.05706 76.37833 78.07608 79.16221 81.07489 82.99798 80.94522 80.00431 79.91435 80.28496 80.72068 80.6644 80.70058 80.47534 76.19628 71.37664 69.6147 68.91614 68.30371 67.63175 67.48632 67.38146 67.47936 67.61508 67.74389)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (-0.14636 0.08744 0.32777 0.71014 0.87407 0.78902 0.72163 0.23593 -0.01937 -0.65017 -1.04291 -1.20898 -1.21337 -1.34241 -1.31589 -1.50731 -1.65866 -1.67208 -1.6653 -1.68407 -0.09138 0.62997 1.06399 1.30106 2.04928 2.16491 2.215 1.23898 -0.30546 -3.1275 -4.37683 -7.27565 -8.95583 -9.62673 -10.35552 -11.56131 -13.12539 -14.03443 -14.47393 -9.67851 7.45537 14.88429 19.12378 23.0385 23.5595 23.92018 24.74114 25.15724 25.231 25.09486 24.95277 24.48752 22.68475 23.27701 24.34408 27.49257 38.98493 42.41753 50.4671 50.53978 50.68642 50.6485 49.98888 48.30905 45.02864 42.76961 36.5142 38.32693 39.55963 41.40629 43.62569 46.68857 49.22231 50.31468 55.43497 56.93428 59.75761 61.78993 64.71984 68.23378 74.76609 77.26844 78.98242 79.52799 79.69657 80.51782 80.62635 80.5461 80.46139 76.06217 71.54005 69.91896 69.43972 69.0524 68.96548 69.06304 69.25839 69.52153 69.75627 70.1242)) (quote (43.05926 42.82191 42.68099 42.49031 41.47704 41.02766 40.3533 39.49554 38.9395 38.32149 37.40097 36.38667 35.60158 35.07157 33.17066 32.45902 32.08841 31.71971 31.38285 31.2494 31.16536 30.79306 30.65655 31.95202 32.62695 33.9796 35.12323 36.96899 40.5831 42.87007 44.08377 50.51448 51.42853 52.25287 52.93536 53.40772 54.45553 54.78649 55.04409 56.76328 57.56044 56.43648 55.34252 53.8255 53.59569 53.904 54.05305 54.33625 54.52801 55.18429 55.66072 56.62798 58.85697 60.66083 61.22684 60.36881 54.41697 51.97938 44.29666 44.41318 44.72974 44.91334 44.99201 46.39637 49.47152 51.48288 56.62693 59.44441 60.90834 62.84545 64.57133 65.48033 66.24227 66.39052 72.61684 72.77629 72.54531 74.25014 75.58397 77.75436 80.42485 79.00384 78.37066 78.34864 78.69647 79.21373 79.16426 79.16072 78.88582 74.49858 69.74907 68.04251 67.38169 66.81137 66.21817 66.12215 66.06575 66.20386 66.36882 66.54306)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (0.86248 1.02141 1.19295 1.46429 1.5607 1.4761 1.40509 0.98557 0.76587 0.25096 -0.07439 -0.22237 -0.23707 -0.35082 -0.3701 -0.54725 -0.6861 -0.70638 -0.71458 -0.74489 0.46878 1.02258 1.36666 1.56024 2.15753 2.2637 2.31072 1.4857 0.27508 -1.94214 -2.9001 -5.04799 -6.31516 -6.82632 -7.39909 -8.38575 -9.69965 -10.49306 -10.89503 -7.55887 6.32462 12.57337 16.28355 19.71696 20.16718 20.46422 21.10312 21.31569 21.34337 21.12254 20.96691 20.44383 18.69837 19.14175 19.94453 22.49997 32.08291 35.01156 42.14537 42.20419 42.32178 42.24008 41.57752 40.12348 37.24644 35.3044 30.26467 31.67984 32.7033 34.24114 36.10306 38.69629 40.84142 41.76982 45.99877 47.24115 49.52008 51.19311 53.5739 56.4425 61.94073 64.06779 65.621 66.13774 66.31272 67.15338 67.28054 67.26741 67.29038 63.51876 59.73623 58.4312 58.07209 57.79617 57.8002 57.92984 58.1291 58.36952 58.58789 58.90854)) (quote (39.60413 39.34093 39.19214 38.98348 37.99071 37.55787 36.91491 36.12186 35.60885 35.05962 34.25322 33.38268 32.72156 32.26373 30.6423 30.00532 29.66349 29.32025 28.99284 28.84847 28.71348 28.32074 28.16951 29.00048 29.558 30.71968 31.72025 33.35701 36.59559 38.72207 39.8742 45.95051 46.89432 47.72019 48.40922 48.92055 50.00038 50.34066 50.58963 51.7889 52.33025 51.44886 50.56435 49.30816 49.09379 49.35332 49.51391 49.8483 50.04236 50.70627 51.15457 52.09131 54.13689 55.91773 56.56946 56.06504 51.86796 50.11213 44.33414 44.39979 44.60365 44.69462 44.55547 45.5105 47.66401 49.08092 52.61352 54.90975 56.22656 57.96973 59.59608 60.5608 61.37963 61.58906 67.35511 67.62249 67.73066 69.39556 70.88174 73.20021 76.42565 75.53168 75.169 75.2116 75.54401 76.15573 76.11889 76.09418 75.79846 71.38111 66.78746 65.17636 64.56941 64.05646 63.55433 63.51229 63.50408 63.6779 63.8696 64.08034)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (1.69735 1.78899 1.89962 2.0727 2.10838 2.02439 1.95024 1.59162 1.40459 0.99438 0.73163 0.60387 0.58387 0.48597 0.43526 0.27336 0.14677 0.12077 0.09915 0.05836 0.93451 1.33807 1.601 1.74261 2.20378 2.29799 2.34039 1.65306 0.7356 -0.9469 -1.64851 -3.13605 -4.03826 -4.40599 -4.83748 -5.6231 -6.70232 -7.38503 -7.74851 -5.68346 5.28368 10.44909 13.65481 16.62699 17.00962 17.24768 17.72313 17.76299 17.75202 17.46565 17.30201 16.74098 15.07593 15.3871 15.95364 17.96262 25.71879 28.13907 34.26195 34.31152 34.41002 34.29675 33.65399 32.44631 30.01154 28.3992 24.52458 25.58283 26.41261 27.66335 29.19019 31.33642 33.11119 33.88229 37.28852 38.28828 40.05702 41.39601 43.26419 45.52996 50.03496 51.7833 53.16115 53.64224 53.82147 54.66469 54.80569 54.85214 54.96886 51.7947 48.70311 47.68896 47.43779 47.2611 47.34122 47.49573 47.69424 47.91072 48.11136 48.38524)) (quote (36.1277 35.84176 35.68783 35.46517 34.49487 34.07839 33.46675 32.73568 32.2641 31.7785 31.0825 30.35408 29.81687 29.43002 28.08894 27.52526 27.2112 26.89349 26.5761 26.42136 26.25249 25.84429 25.68044 26.04812 26.49052 27.46146 28.31906 29.74451 32.60071 34.54451 35.62042 41.29927 42.24015 43.05481 43.73734 44.26768 45.35751 45.69684 45.93483 46.74851 47.08535 46.3976 45.69308 44.6652 44.46136 44.66843 44.82414 45.18544 45.3763 46.03559 46.45394 47.35074 49.21557 50.96073 51.66886 51.44264 48.65758 47.45711 43.26683 43.28462 43.38302 43.379 43.03147 43.61927 44.99607 45.91506 48.12695 49.87927 51.03355 52.55903 54.05181 55.01689 55.8453 56.09338 61.32193 61.65738 62.00353 63.58468 65.1345 67.49906 71.09825 70.63108 70.50154 70.60469 70.92842 71.6453 71.62611 71.59722 71.30673 66.93283 62.57514 61.09667 60.55826 60.11658 59.71615 59.73192 59.77122 59.97636 60.19238 60.43107)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (2.35783 2.38989 2.44756 2.53523 2.51702 2.43382 2.35698 2.05391 1.89656 1.57969 1.37462 1.26914 1.24883 1.16734 1.09957 0.95384 0.83921 0.80865 0.77517 0.72499 1.30564 1.57638 1.76699 1.84822 2.18811 2.26782 2.30408 1.74109 1.076 -0.14247 -0.62331 -1.54307 -2.13025 -2.37163 -2.67745 -3.28144 -4.14299 -4.72063 -5.04477 -4.05423 4.33275 8.51304 11.24027 13.77274 14.09117 14.27511 14.60662 14.5061 14.4643 14.1324 13.96646 13.38811 11.82655 12.02305 12.38352 13.89884 19.94908 21.87445 26.94526 26.98921 27.07628 26.9434 26.34081 25.38536 23.40724 22.12253 19.32527 20.06808 20.72071 21.70754 22.92435 24.65103 26.07797 26.70065 29.35846 30.134 31.43833 32.47284 33.87499 35.59228 39.16751 40.54819 41.74127 42.18042 42.36048 43.18772 43.33692 43.43297 43.62563 41.01114 38.55426 37.80206 37.64515 37.55406 37.69432 37.86619 38.05941 38.25136 38.43323 38.66196)) (quote (32.63665 32.33051 32.17359 31.94009 30.99385 30.59356 30.01314 29.34175 28.91024 28.48394 27.8952 27.3074 26.8939 26.57692 25.51652 25.02486 24.73764 24.4455 24.13859 23.9739 23.78522 23.36559 23.19082 23.09654 23.42557 24.20604 24.92076 26.13295 28.60132 30.34406 31.33153 36.57704 37.48759 38.28018 38.94497 39.47675 40.55667 40.88545 41.10985 41.65122 41.8271 41.28807 40.73576 39.90537 39.70739 39.85857 39.99442 40.36108 40.54389 41.18815 41.57522 42.42457 44.1131 45.81166 46.5504 46.53462 44.84804 44.08499 41.17708 41.14988 41.14992 41.04958 40.5044 40.80327 41.54135 42.05297 43.20919 44.39688 45.3743 46.65993 47.98743 48.90099 49.69465 49.9603 54.58037 54.94701 55.43859 56.89584 58.4283 60.74599 64.55142 64.41711 64.48381 64.64282 64.96377 65.79399 65.79663 65.77861 65.51609 61.25387 57.20594 55.89387 55.43708 55.07893 54.78912 54.86581 54.95168 55.18387 55.4218 55.68037)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (2.84383 2.82405 2.83675 2.85194 2.78668 2.70443 2.62538 2.37244 2.24176 2.00678 1.85439 1.7732 1.75754 1.69294 1.62247 1.49379 1.3908 1.35682 1.31305 1.25459 1.58217 1.73755 1.8647 1.87713 2.11055 2.17326 2.20182 1.74984 1.29629 0.47072 0.17467 -0.27135 -0.59492 -0.72765 -0.92406 -1.36696 -2.02915 -2.508 -2.7921 -2.67263 3.47189 6.76646 9.04217 11.15776 11.4156 11.5504 11.75826 11.55108 11.48656 11.12995 10.96749 10.39308 8.95803 9.05807 9.24455 10.3244 14.82357 16.28371 20.31132 20.35239 20.43366 20.29288 19.74848 19.0376 17.50798 16.53543 14.69451 15.16412 15.65698 16.40448 17.3387 18.67773 19.78328 20.26836 22.25722 22.83072 23.72687 24.49026 25.48201 26.71574 29.44506 30.48251 31.48637 31.87771 32.05417 32.84547 32.99661 33.13 33.37745 31.27796 29.39272 28.87022 28.79253 28.77218 28.95577 29.13713 29.32071 29.48808 29.65044 29.83668)) (quote (29.13728 28.81284 28.65452 28.41249 27.4915 27.10725 26.55798 25.94435 25.55181 25.1814 24.69733 24.24879 23.95867 23.71057 22.93066 22.50983 22.24862 21.98204 21.68596 21.51165 21.3142 20.88625 20.70187 20.14703 20.36385 20.95412 21.52604 22.52334 24.59981 26.1269 27.01618 31.79962 32.65778 33.41936 34.05702 34.57521 35.6275 35.93678 36.14481 36.50549 36.55622 36.12504 35.69886 35.03692 34.84042 34.93255 35.03501 35.38825 35.55887 36.17957 36.53444 37.33081 38.84932 40.49208 41.23934 41.37436 40.50551 40.07248 38.16081 38.09123 37.9993 37.80227 37.07108 37.15347 37.38054 37.56749 37.90349 38.50772 39.29508 40.32029 41.45336 42.26734 42.98517 43.24885 47.19611 47.56049 48.11466 49.41181 50.85453 53.04248 56.90275 57.01546 57.2425 57.45211 57.7752 58.72432 58.75191 58.7576 58.54204 54.45385 50.78239 49.66682 49.30302 49.03901 48.86688 49.0068 49.1379 49.39319 49.65066 49.92172)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (3.15537 3.09153 3.06729 3.02293 2.91749 2.83634 2.75554 2.5473 2.44024 2.27562 2.17083 2.1159 2.10986 2.0626 2.00377 1.89297 1.80124 1.76499 1.71252 1.64689 1.76409 1.82163 1.89417 1.82941 1.97117 2.01437 2.03371 1.67936 1.39648 0.89235 0.74479 0.67732 0.56484 0.52256 0.41875 0.11547 -0.3668 -0.75372 -0.99724 -1.54004 2.7013 5.21069 7.06284 8.78566 8.98672 9.07749 9.18277 8.90383 8.82501 8.46515 8.31206 7.76333 6.47756 6.49999 6.54613 7.25347 10.38645 11.42547 14.46414 14.50432 14.58364 14.44633 13.97594 13.48982 12.38033 11.69252 10.65766 10.89706 11.24833 11.7824 12.46368 13.45112 14.26534 14.62551 16.02958 16.42664 16.98011 17.50923 18.15431 18.97881 20.96434 21.69493 22.50982 22.84803 23.01558 23.74984 23.89615 24.05273 24.33099 22.69553 21.31272 20.98476 20.97006 21.0045 21.21384 21.39662 21.56642 21.70969 21.85207 21.99938)) (quote (25.6363 25.29487 25.13619 24.88707 23.99214 23.62377 23.10559 22.54822 22.19379 21.87673 21.49531 21.1848 21.01758 20.83749 20.33729 19.98621 19.75025 19.5092 19.2242 19.04045 18.84225 18.40819 18.2151 17.2012 17.30643 17.70677 18.13598 18.91714 20.59904 21.89971 22.68353 26.98348 27.77256 28.49619 29.09919 29.59131 30.60056 30.88212 31.07075 31.32047 31.27407 30.91391 30.58953 30.06886 29.8697 29.89984 29.95694 30.28083 30.43582 31.02636 31.3486 32.08843 33.44502 35.0246 35.762 35.99667 35.70057 35.50244 34.32649 34.21674 34.03824 33.74507 32.84009 32.77062 32.6014 32.53705 32.25541 32.25929 32.84458 33.59058 34.50268 35.17322 35.77775 36.02172 39.23884 39.57124 40.11573 41.22096 42.51105 44.49761 48.27949 48.56282 48.91592 49.17022 49.49937 50.56998 50.62462 50.66435 50.51071 46.65211 43.41624 42.52341 42.26206 42.10095 42.05161 42.25627 42.43102 42.70571 42.98043 43.2573)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (3.29273 3.19262 3.13945 3.04847 2.9097 2.82982 2.74772 2.57871 2.49224 2.38641 2.3241 2.29736 2.30588 2.2764 2.2435 2.15137 2.07051 2.03313 1.97355 1.90185 1.85148 1.8287 1.85548 1.70516 1.77007 1.79124 1.79981 1.52974 1.37665 1.12233 1.08676 1.30196 1.3473 1.37695 1.34855 1.16272 0.83999 0.53762 0.33501 -0.65748 2.02109 3.84688 5.30429 6.65964 6.80792 6.8599 6.88431 6.5696 6.48513 6.14401 6.00624 5.50532 4.39125 4.35538 4.29616 4.69791 6.67505 7.34941 9.49324 9.53389 9.61368 9.49091 9.10823 8.8166 8.08134 7.64053 7.23671 7.28959 7.51821 7.86596 8.32594 9.00151 9.55776 9.80735 10.71492 10.96412 11.24848 11.58322 11.95229 12.44989 13.80957 14.28012 14.9106 15.19094 15.34355 15.99892 16.13325 16.29732 16.58011 15.35231 14.39733 14.22617 14.25731 14.32966 14.54668 14.72266 14.87474 14.99485 15.11707 15.22986)) (quote (22.14027 21.78256 21.62399 21.36835 20.4999 20.14728 19.66012 19.15793 18.841 18.57563 18.29543 18.12184 18.07691 17.96405 17.74226 17.45992 17.24856 17.03297 16.75917 16.56607 16.37211 15.9332 15.73193 14.26055 14.25423 14.46497 14.75156 15.31566 16.60171 17.669 18.34261 22.14494 22.85375 23.53445 24.09715 24.55333 25.50644 25.75283 25.91884 26.10514 25.98184 25.65992 25.41481 25.01004 24.80438 24.76989 24.77117 25.0527 25.18934 25.74504 26.03474 26.7165 27.92114 29.43191 30.14499 30.43693 30.50704 30.46265 29.79335 29.64507 29.38413 28.99617 27.92978 27.76381 27.2973 27.04425 26.31179 25.70043 26.07284 26.52265 27.19012 27.67783 28.13547 28.34387 30.7808 31.0555 31.52953 32.41565 33.50047 35.22601 38.81635 39.20477 39.6518 39.94434 40.28228 41.47397 41.55665 41.63802 41.55675 37.97614 35.2268 34.5786 34.42722 34.37584 34.45241 34.72254 34.93904 35.22984 35.5197 35.79656)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (3.25643 3.1278 3.05367 2.92894 2.76368 2.68522 2.60228 2.46705 2.3981 2.33952 2.31458 2.31795 2.34594 2.33467 2.34192 2.26921 2.19882 2.16142 2.09632 2.01965 1.8445 1.75889 1.74875 1.50454 1.50734 1.50398 1.50025 1.30109 1.23697 1.16077 1.20063 1.60231 1.75188 1.83476 1.86434 1.77328 1.58899 1.36332 1.20174 -0.02569 1.4314 2.67607 3.76843 4.78268 4.88237 4.90093 4.86676 4.55313 4.47186 4.17189 4.05541 3.62466 2.70426 2.62976 2.50114 2.66744 3.71994 4.09626 5.47303 5.51507 5.59673 5.49917 5.21602 5.07993 4.65843 4.41835 4.4505 4.36122 4.48677 4.67639 4.94849 5.35525 5.68976 5.84457 6.34756 6.48006 6.57563 6.7584 6.9279 7.18755 8.05245 8.31856 8.77318 8.99158 9.12262 9.67696 9.79188 9.94657 10.20596 9.32476 8.71848 8.66431 8.72335 8.81604 9.02236 9.18323 9.31391 9.4122 9.51426 9.59765)) (quote (18.65587 18.28198 18.12343 17.86101 17.01908 16.68205 16.22588 15.77819 15.4984 15.28393 15.10408 15.0664 15.14302 15.09676 15.15151 14.93699 14.74966 14.55942 14.29683 14.09435 13.90659 13.46319 13.25384 11.32668 11.20832 11.22979 11.37388 11.72035 12.61071 13.44149 14.00259 17.30055 17.92335 18.55811 19.07683 19.48985 20.37611 20.58066 20.72066 20.86874 20.68089 20.36855 20.18197 19.86967 19.65391 19.55245 19.48903 19.71813 19.83448 20.35266 20.61034 21.23458 22.29901 23.7372 24.41544 24.73129 25.00177 25.04517 24.68999 24.50413 24.16336 23.6827 22.46724 22.24935 21.56674 21.17569 20.12109 18.88157 19.03158 19.17007 19.57223 19.84247 20.12373 20.28272 21.89709 22.09261 22.44761 23.09231 23.93016 25.34786 28.65515 29.09517 29.60655 29.93049 30.27856 31.58786 31.69833 31.82612 31.8229 28.56092 26.34047 25.95439 25.91838 25.98157 26.18516 26.52056 26.77673 27.0807 27.38369 27.65569)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (3.04717 2.89771 2.81054 2.66484 2.4799 2.403 2.31969 2.21278 2.15834 2.13551 2.14286 2.17823 2.2306 2.23794 2.29949 2.24694 2.18659 2.15032 2.08126 2.00071 1.74337 1.61236 1.57412 1.22768 1.18308 1.15268 1.1351 0.99351 0.9776 1.00797 1.08676 1.57887 1.77913 1.89652 1.96657 1.94736 1.87988 1.72266 1.60201 0.35494 0.93229 1.69907 2.45676 3.15728 3.21269 3.2033 3.13333 2.85837 2.78933 2.55321 2.464 2.12588 1.42055 1.32731 1.16599 1.16935 1.54426 1.69699 2.46131 2.50543 2.58969 2.52768 2.35418 2.32808 2.14849 2.05629 2.31425 2.12774 2.17042 2.23106 2.35022 2.53405 2.68557 2.76264 2.95593 3.00499 2.99749 3.07277 3.12366 3.23937 3.75093 3.87517 4.16593 4.319 4.42154 4.8526 4.94064 5.0683 5.2753 4.67595 4.33557 4.35692 4.42543 4.52042 4.6975 4.83498 4.94075 5.01891 5.10106 5.1607)) (quote (15.18934 14.79878 14.6396 14.36927 13.5535 13.23197 12.80673 12.41327 12.17052 12.00705 11.92723 12.02463 12.22195 12.24173 12.57063 12.42312 12.25936 12.09433 11.84286 11.63084 11.4482 10.99975 10.78206 8.40085 8.16939 8.00193 8.0036 8.13221 8.62842 9.22334 9.67212 12.46621 13.00272 13.59062 14.06352 14.42886 15.23998 15.3968 15.50721 15.61985 15.37193 15.04467 14.89768 14.65637 14.42725 14.25673 14.12129 14.29094 14.38575 14.86576 15.09245 15.66174 16.59951 17.96325 18.6001 18.91575 19.2632 19.34469 19.15165 18.92846 18.50873 17.93818 16.58565 16.34851 15.51148 15.02025 13.73206 11.85339 11.77276 11.58675 11.70595 11.72908 11.80879 11.90673 12.66387 12.76317 12.96341 13.34941 13.90999 14.98648 17.94216 18.39321 18.94233 19.29039 19.64867 21.06885 21.20568 21.38164 21.45727 18.54643 16.88831 16.77721 16.85991 17.0404 17.36998 17.76971 18.06313 18.37788 18.6922 18.9554)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (2.6659 2.5032 2.41084 2.25682 2.05895 1.98376 1.90053 1.81654 1.77359 1.77512 1.80973 1.87902 1.96064 1.987 2.11688 2.08523 2.03448 2.00045 1.929 1.84561 1.54838 1.38931 1.33174 0.87477 0.79741 0.73746 0.7045 0.60714 0.59881 0.66445 0.74581 1.23285 1.43069 1.56398 1.65706 1.68672 1.7141 1.61673 1.53663 0.48421 0.52386 0.91667 1.37078 1.78584 1.80147 1.76966 1.68713 1.48899 1.44127 1.29188 1.23589 1.01282 0.54328 0.45128 0.29436 0.20897 0.16431 0.17337 0.49958 0.5464 0.6338 0.6173 0.56216 0.59598 0.57839 0.57661 0.84014 0.60192 0.58245 0.54413 0.54658 0.5558 0.56516 0.58256 0.56353 0.5641 0.5432 0.55703 0.57353 0.64294 0.95006 1.00015 1.14214 1.22717 1.29408 1.58007 1.63382 1.71639 1.84163 1.45651 1.29641 1.35066 1.40985 1.48881 1.61826 1.72411 1.80177 1.86172 1.92435 1.96639)) (quote (11.7473 11.33898 11.17797 10.89777 10.10742 9.80126 9.40693 9.06784 8.86227 8.75077 8.77125 9.003 9.32 9.4054 10.00552 9.9243 9.78371 9.6437 9.40318 9.18134 8.99977 8.54479 8.31807 5.48468 5.1385 4.78248 4.64184 4.5527 4.65767 5.02123 5.36036 7.6584 8.11383 8.65584 9.08308 9.39885 10.12899 10.23307 10.31012 10.3677 10.05636 9.69376 9.56932 9.3795 9.13405 8.89263 8.67955 8.78572 8.85852 9.30172 9.49894 10.01793 10.8444 12.13361 12.7266 13.02733 13.37199 13.45888 13.31964 13.05857 12.55902 11.902 10.42385 10.18758 9.23691 8.66985 7.19512 4.66835 4.35018 3.82853 3.65031 3.4019 3.25937 3.28677 3.16015 3.1509 3.17385 3.28917 3.55402 4.26987 6.82923 7.26448 7.82812 8.1926 8.55973 10.08092 10.2415 10.46417 10.61442 8.07875 7.00708 7.17905 7.38157 7.68002 8.13256 8.59478 8.92291 9.24644 9.57045 9.8221)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj)) :from-file t)) "x" nil (pairlis (quote (winsize winpos picture)) (list (om-make-point 808 744) (om-make-point 128 22) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote nil) 6.19 nil "" (om-make-point 798 171) (om-make-point 442 581)) (quote nil) (om-make-point 1149 669) nil nil nil "some-examples"))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPC11" (quote bpc) (quote ((om-load-inputfun (quote input-funbox) "object" "SELF" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "X-POINTS" (list 0 10)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "Y-POINTS" (list 0 100)) (om-load-inputfun (quote input-funbox) "precision (integer)" "DECIMALS" 0))) (om-make-point 1160 326) (om-make-point 78 79) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (2.0 4.0 -1.0 -4.0 2.151235 3.9701767 -1.0043578 -3.9801348 1.8391014 3.4708345 -1.099077 -4.5513735 1.740731 3.9877265 -0.857624 -4.278397 1.974185 4.2178645 -0.8850264 -4.4005938 2.2097578 3.9626413 -0.8549116 -3.8307705 1.7385463 3.5219705 -1.0747744 -3.7157712 1.7818405 3.750033 -1.0694624 -3.5577293)) (quote (-4.0 2.0 3.0 -2.0 -4.4594045 1.7001116 2.7702365 -1.8944646 -3.9255956 2.1242528 3.4149428 -2.0536604 -3.5140872 1.7011598 2.6950128 -2.2994373 -4.1816764 1.7951017 2.9391296 -1.9443857 -4.0883727 1.843515 2.789146 -2.283288 -3.5766609 1.8491256 2.682692 -1.7075408 -3.8794728 1.8704087 2.6185494 -2.2478865)) (quote bpc) 7))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf "BPC11") newbpf)))) (when newobj) newobj) nil nil (pairlis (quote (picture winpos winsize)) (list nil (om-make-point 10 40) (om-make-point 658 333))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list3" (quote list) (quote nil) (om-make-point 1227 189) (om-make-point 28 30) 15 "15" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list2" (quote list) (quote nil) (om-make-point 1190 186) (om-make-point 21 30) 7 "7" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "CLUSTERS" (quote clusters) (quote ((om-load-inputfun (quote input-funbox) "list of values" "SELF" nil) (om-load-inputfun (quote input-funbox) "how many components" "AMOUNT" 7) (om-load-inputfun (quote input-funbox) "how much deviation (in percent)" "DEVIATION" 5))) (om-make-point 1172 250) nil nil nil nil 2))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPC" (quote bpc) (quote ((om-load-inputfun (quote input-funbox) "object" "SELF" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "X-POINTS" (list 0 10)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "Y-POINTS" (list 0 100)) (om-load-inputfun (quote input-funbox) "precision (integer)" "DECIMALS" 0))) (om-make-point 1136 169) (om-make-point 40 60) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (2.0 4.0 -1.0 -4.0)) (quote (-4.0 2.0 3.0 -2.0)) (quote bpc) 7))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf "BPC") newbpf)))) (when newobj) newobj) "x" nil (pairlis (quote (picture winpos winsize)) (list nil (om-make-point 10 40) (om-make-point 658 333))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BOARD111" (quote board) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "DATA" nil))) (om-make-point 113 141) (om-make-point 77 83) (if (find-class (quote board) nil) (make-instance (quote board) :data (list (list 36 342 142156) (list 36 341 142154) (list 36 340 142150) (list 36 339 142147) (list 36 338 142144) (list 41 327 142139) (list 46 320 142135) (list 46 317 142131) (list 48 312 142127) (list 51 306 142122) (list 55 296 142119) (list 55 294 142115) (list 55 288 142111) (list 55 282 142108) (list 55 273 142106) (list 55 268 142101) (list 54 265 142098) (list 53 250 142095) (list 52 247 142092) (list 51 241 142088) (list 48 232 142085) (list 46 221 142081) (list 45 218 142077) (list 40 203 142075) (list 38 195 142069) (list 38 193 142066) (list 38 184 142063) (list 38 180 142060) (list 38 177 142057) (list 48 168 142053) (list 54 164 142049) (list 57 163 142046) (list 65 161 142042) (list 69 160 142038) (list 79 159 142035) (list 120 151 142032) (list 122 150 142029) (list 131 147 142026) (list 135 145 142022) (list 138 143 142017) (list 138 141 142014) (list 137 137 142009) (list 136 136 142005) (list 133 131 142002) (list 132 129 141998) (list 131 126 141994) (list 131 125 141991) (list 132 125 141986) (list 137 125 141982) (list 140 125 141979) (list 149 125 141975) (list 193 125 141971) (list 197 125 141967) (list 209 125 141964) (list 217 125 141961) (list 219 124 141957) (list 223 124 141954) (list 223 123 141947) (list 220 121 141943) (list 214 117 141939) (list 210 115 141937) (list 205 113 141930) (list 196 110 141927) (list 190 107 141921) (list 181 104 141917) (list 166 100 141915) (list 154 97 141911) (list 139 92 141907) (list 101 79 141903) (list 78 67 141899) (list 73 63 141895) (list 73 62 141891) (list 73 60 141884) (list 74 60 141879) (list 80 60 141876) (list 84 60 141873) (list 86 60 141870) (list 95 60 141866) (list 108 60 141862) (list 110 60 141858) (list 119 61 141854) (list 129 64 141850) (list 141 66 141846) (list 161 68 141844) (list 195 76 141841) (list 252 89 141836) (list 267 90 141833) (list 287 91 141829) (list 304 91 141827) (list 310 91 141823) (list 310 90 141817) (list 308 89 141812) (list 306 88 141810) (list 285 82 141806) (list 265 76 141803) (list 223 67 141801) (list 215 64 141797) (list 209 61 141794) (list 209 60 141787) (list 218 60 141784) (list 227 58 141778) (list 235 58 141775) (list 239 56 141766) (list 230 49 141761) (list 226 47 141754) (list 216 41 141751) (list 207 36 141749) (list 194 27 141745) (list 191 22 141742) (list 190 21 141735) (list 191 21 141731) (list 192 21 141727) (list 199 21 141723) (list 204 21 141721) (list 210 21 141717) (list 219 21 141713) (list 227 21 141709) (list 242 21 141705) (list 258 20 141704) (list 265 19 141698) (list 271 18 141689) (list 270 15 141685) (list 267 11 141680) (list 344 59 141621) (list 357 71 141618) (list 364 82 141613) (list 364 88 141611) (list 364 89 141608) (list 362 92 141604) (list 354 98 141601) (list 344 106 141598) (list 341 108 141594) (list 341 109 141591) (list 341 111 141587) (list 341 112 141584) (list 341 113 141580) (list 343 116 141577) (list 350 122 141571) (list 359 132 141568) (list 368 140 141565) (list 382 155 141561) (list 386 166 141558) (list 386 182 141554) (list 384 188 141550) (list 383 190 141547) (list 377 197 141544) (list 371 203 141540) (list 364 210 141537) (list 355 214 141534) (list 310 233 141531) (list 293 242 141527) (list 282 246 141524) (list 262 255 141520) (list 256 259 141517) (list 249 264 141513) (list 239 274 141509) (list 232 285 141506) (list 230 292 141504) (list 230 301 141500) (list 230 313 141496) (list 231 319 141493) (list 231 322 141490) (list 234 327 141486) (list 247 331 141481) (list 260 331 141477) (list 275 331 141474) (list 297 327 141472) (list 314 323 141468) (list 336 323 141464) (list 338 325 141454) (list 335 329 141451) (list 335 330 141443) (list 340 330 141440) (list 343 330 141436) (list 349 333 141433) (list 349 336 141426) (list 348 342 141424) (list 347 346 141420) (list 344 349 141417) (list 343 350 141413) (list 341 352 141402) (list 356 352 141400) (list 368 352 141395) (list 384 356 141392) (list 385 358 141385) (list 385 361 141382) (list 384 363 141377) (list 381 366 141374) (list 381 367 141371)) :from-file t)) "x" nil (pairlis (quote (winpos winsize)) (list (om-make-point 282 293) (om-make-point 761 587))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BOARD1111" (quote board) (quote ((om-load-inputfun (quote input-funbox) "objs" "SELF" nil) (om-load-inputfun (quote input-funbox) "no documentation" "DATA" nil))) (om-make-point 197 137) (om-make-point 86 88) (if (find-class (quote board) nil) (make-instance (quote board) :data (list (list 341 342 1337274) (list 340 341 1337266) (list 339 341 1337262) (list 335 341 1337258) (list 331 341 1337255) (list 325 342 1337252) (list 315 346 1337248) (list 302 348 1337244) (list 288 348 1337242) (list 275 347 1337238) (list 264 344 1337234) (list 255 340 1337229) (list 247 335 1337228) (list 240 332 1337224) (list 234 330 1337220) (list 228 330 1337218) (list 221 330 1337215) (list 213 331 1337210) (list 204 337 1337207) (list 192 342 1337205) (list 181 347 1337200) (list 172 348 1337197) (list 165 347 1337195) (list 158 345 1337190) (list 153 342 1337186) (list 147 336 1337182) (list 142 330 1337180) (list 136 320 1337176) (list 129 308 1337172) (list 122 299 1337168) (list 117 292 1337165) (list 112 287 1337161) (list 106 285 1337157) (list 102 285 1337155) (list 100 287 1337152) (list 99 288 1337147) (list 99 293 1337144) (list 98 302 1337141) (list 98 312 1337136) (list 95 321 1337133) (list 90 334 1337131) (list 85 342 1337127) (list 76 345 1337123) (list 65 345 1337120) (list 55 343 1337117) (list 45 338 1337114) (list 38 334 1337110) (list 33 331 1337108) (list 28 326 1337104) (list 25 322 1337100) (list 22 318 1337097) (list 21 314 1337094) (list 21 310 1337090) (list 21 307 1337086) (list 24 302 1337084) (list 28 297 1337080) (list 34 291 1337076) (list 41 286 1337071) (list 49 281 1337070) (list 57 276 1337066) (list 65 271 1337061) (list 72 265 1337059) (list 76 260 1337056) (list 76 256 1337051) (list 76 252 1337048) (list 74 247 1337046) (list 70 241 1337042) (list 70 237 1337038) (list 71 233 1337035) (list 74 228 1337032) (list 79 224 1337028) (list 86 219 1337024) (list 93 215 1337022) (list 99 212 1337018) (list 105 209 1337014) (list 108 206 1337011) (list 109 203 1337009) (list 109 199 1337005) (list 109 195 1337000) (list 108 192 1336999) (list 106 187 1336995) (list 105 184 1336990) (list 105 181 1336987) (list 105 179 1336986) (list 107 176 1336981) (list 112 173 1336977) (list 121 170 1336976) (list 130 169 1336971) (list 141 169 1336967) (list 151 166 1336964) (list 160 163 1336961) (list 165 159 1336958) (list 168 154 1336954) (list 169 149 1336951) (list 168 144 1336948) (list 163 136 1336944) (list 153 125 1336939) (list 139 113 1336938) (list 122 100 1336934) (list 106 86 1336929) (list 93 73 1336928) (list 84 60 1336924) (list 82 49 1336920) (list 86 37 1336916) (list 95 30 1336914) (list 102 29 1336910) (list 91 50 1336905) (list 103 49 1336903) (list 119 49 1336900) (list 133 49 1336896) (list 147 49 1336892) (list 158 49 1336890) (list 166 51 1336885) (list 168 53 1336882) (list 168 57 1336878) (list 166 62 1336875) (list 165 69 1336872) (list 166 76 1336868) (list 169 84 1336865) (list 177 92 1336861) (list 187 99 1336857) (list 197 109 1336854) (list 207 119 1336852) (list 213 129 1336848) (list 218 136 1336843) (list 223 142 1336842) (list 225 147 1336838) (list 225 152 1336833) (list 225 158 1336829) (list 223 166 1336828) (list 219 174 1336823) (list 214 180 1336819) (list 205 185 1336817) (list 196 192 1336814) (list 192 199 1336810) (list 186 208 1336806) (list 180 215 1336803) (list 179 223 1336799) (list 183 231 1336796) (list 191 244 1336792) (list 203 258 1336789) (list 217 271 1336785) (list 233 283 1336780) (list 249 294 1336779) (list 264 300 1336775) (list 279 301 1336770) (list 293 301 1336767) (list 306 301 1336764) (list 319 301 1336760) (list 327 297 1336756) (list 327 290 1336754) (list 324 278 1336750) (list 317 265 1336746) (list 310 251 1336743) (list 309 237 1336740) (list 310 227 1336736) (list 305 230 1336732) (list 306 225 1336731) (list 306 217 1336725) (list 302 209 1336721) (list 294 201 1336718) (list 284 188 1336715) (list 279 180 1336712) (list 278 174 1336708) (list 280 168 1336705) (list 284 165 1336702) (list 289 161 1336698) (list 291 159 1336693) (list 291 156 1336692) (list 290 153 1336688) (list 286 149 1336683) (list 281 145 1336681) (list 278 142 1336678) (list 278 138 1336673) (list 279 134 1336669) (list 283 129 1336668) (list 289 124 1336664) (list 296 120 1336660) (list 301 117 1336656) (list 305 112 1336653) (list 305 108 1336649) (list 305 104 1336646) (list 303 99 1336643) (list 299 93 1336639) (list 293 85 1336635) (list 286 79 1336631) (list 279 74 1336630) (list 273 69 1336626) (list 267 64 1336622) (list 261 60 1336620) (list 258 55 1336616) (list 255 51 1336612) (list 253 48 1336608) (list 253 45 1336607) (list 253 42 1336603) (list 256 38 1336599) (list 263 36 1336597) (list 275 36 1336593) (list 288 37 1336589) (list 301 38 1336585) (list 309 43 1336583)) :from-file t)) "x" nil (pairlis (quote (winpos winsize)) (list (om-make-point 615 287) (om-make-point 410 388))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 240 231) (om-make-point 28 30) 50 "50" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPC-LIB" (quote bpc-lib) (quote ((om-load-inputfun (quote input-funbox) "object" "SELF" nil) (om-load-inputfun (quote input-funbox) "" "BPF-LIST" (list (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (0)) (quote (0)) (quote bpc) 0))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj))))) (om-make-point 178 332) (om-make-point 90 93) (if (find-class (quote bpc-lib) nil) (make-instance (quote bpc-lib) :bpf-list (list (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (9.71428 9.88571 9.94286 9.94286 9.88571 8.97143 8.28572 7.42857 7.54286 7.6 7.77143 7.77143 7.82857 7.88572 7.88572 7.54286 7.37143 7.08571 7.08571 7.25714 7.14286 7.14286 5.88571 4.91429 3.65714 2.8 2.05714 1.31429 1.14286 1.14286 1.08571 1.08572 1.08572 1.2 1.6 2.17143 2.57143 2.91429 4.05714 4.05714 4.68571 5.65714 8.22857 8.74286 9.14286 9.48571 9.82857 9.88571 10.0 10.0 9.77143 8.97143 8.45714 7.94285 7.54286 7.42857 7.42857 7.42857 7.42857 7.42857 7.6 8.17143 8.62857 8.74286 8.74286 8.74286 8.74286 8.34286 7.6 3.2 3.37143 3.42857 3.08571 2.68571 1.77143 1.77143 0.91428 0.45714 -0.05714 -0.4 -0.68572 -1.08572 -1.14286 -1.2 -1.14286 -0.97143 -0.22857 0.28572 0.85714 0.85714 1.08572 1.6 1.37143 0.91429 0.4 -0.11428 -0.11429 -0.11429 0.22857 0.68571 3.08571 4.22857 5.42857 5.54286 5.65714 5.65714 5.31428 4.34286 3.2 2.34285 -0.91429 -2.85715 -4.0 -4.68572 -5.25715 -5.77143 -5.88572 -6.62858 -6.62858 -7.14286 -7.25715 -7.48572 -7.82858 -7.88572 -7.88572 -7.88572 -7.60001 -6.28572 -4.11429 -3.25715 -2.57143 -1.71429 -1.2 -1.2 -0.85714 -0.34286 -0.05715 0.17143 0.51428 0.68571 0.68571 0.45714 0.34285 -0.11429 -0.8 -1.02857 -3.54286 -4.05714 -4.22857 -4.51429 -4.57143 -4.57143 -4.51429 -4.45714 -4.28572 -4.22857 -4.17143 -4.17143 -4.34286 -4.34286 -4.57143 -5.08572 -5.2 -7.54286 -8.11429 -8.34286 -8.8 -8.97143 -9.31429 -9.88572 -9.88571 -9.88571 -9.88571 -9.88571 -9.77143 -9.48571 -9.42857 -9.31428 -9.14286 -9.08571 -9.02857 -8.97143 -8.91428 -8.91429 -8.91428 -8.91428 -8.91428 -8.91428 -8.91428 -9.14285 -9.31428 -9.42857 -9.42857 -9.42857 -9.71428 -10.0 -10.0 -10.0 -10.0 -10.0 -9.99999)) (quote (-10.0 -9.83099 -9.71831 -9.5493 -9.43662 -9.21127 -9.21127 -9.21127 -9.09859 -9.04225 -8.87324 -8.87324 -8.64789 -8.30986 -8.14084 -7.97183 -7.97183 -7.97183 -7.91549 -7.69014 -7.57746 -7.57746 -7.57746 -7.80282 -8.02817 -8.02817 -8.02817 -7.80282 -7.52113 -7.35211 -7.01409 -6.33803 -5.83099 -5.43662 -4.8169 -4.25352 -3.97183 -3.74648 -3.23944 -3.23944 -3.01408 -2.50704 -1.43662 -1.21127 -0.8169 -0.47887 -0.0845 0.02817 0.3662 1.26761 1.88733 2.7324 3.1831 3.74648 4.08451 4.25352 4.30986 4.3662 4.47887 4.53521 4.64789 5.09859 5.43662 5.60563 5.66198 6.0 6.0 6.61972 7.29578 10.0 9.77465 9.60564 9.5493 9.49296 9.43662 9.43662 9.43662 9.43662 9.43662 9.43662 9.43662 9.43662 9.43662 9.43662 9.38028 9.09859 8.59155 8.30986 7.97183 7.97183 7.85916 7.46479 7.35211 7.35211 7.23944 7.23944 7.1831 7.1831 7.01408 6.84507 6.33803 6.0 5.66197 5.60563 5.5493 5.49296 5.49296 5.49296 5.5493 5.60563 6.33803 6.78873 6.90141 7.01408 7.18309 7.23943 7.23943 7.23944 7.23944 7.23943 7.23943 7.23943 7.23943 7.23943 7.12676 7.07042 6.84506 6.16901 5.43662 5.15493 4.98591 4.76056 4.59155 4.59155 4.42254 4.25352 4.14084 4.02817 3.80282 3.69014 3.6338 3.6338 3.57747 3.57747 3.57746 3.57746 3.57746 3.57746 3.57746 3.57746 3.57746 3.52112 3.35211 3.23943 2.95774 2.90141 2.67606 2.56338 2.4507 2.4507 2.33803 2.16901 2.11267 1.66197 1.60563 1.54929 1.43661 1.38027 1.15492 0.64788 0.47887 0.25351 -0.25352 -0.3662 -0.81691 -1.66198 -1.83099 -2.45071 -2.95775 -3.29578 -3.46479 -4.30986 -4.47888 -4.76057 -5.26761 -5.60564 -5.60564 -5.94367 -6.05634 -6.61972 -6.95775 -7.23944 -7.23944 -7.40846 -7.80282 -8.42254 -8.42254 -8.47888 -8.53522 -8.59155 -8.6479)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (12.45695 12.49517 12.47932 12.40036 12.28319 11.52414 11.01696 10.39728 10.38814 10.34697 10.33087 10.27877 10.18169 10.05885 9.9621 9.61938 9.41655 9.15345 9.08093 9.08899 8.92443 8.82759 7.86087 7.14353 6.24011 5.56647 5.00076 4.3666 4.11741 4.01458 3.82453 3.58334 3.3964 3.33407 3.39183 3.63061 3.79946 3.97769 4.78636 4.84746 5.3999 6.17293 8.13745 8.52732 8.91226 9.20083 9.55923 9.78413 10.08023 10.31696 10.29322 9.78122 9.34651 8.96048 8.629 8.46641 8.30558 8.08198 7.87648 7.66495 7.59743 7.95332 8.27344 8.29145 8.1681 7.98535 7.63605 7.24028 6.8262 4.29969 4.19116 4.03773 3.67363 3.30784 2.56498 2.34495 1.56249 1.01126 0.35838 -0.13907 -0.56235 -1.00521 -1.09882 -1.15441 -1.09285 -0.93219 -0.36903 0.00235 0.3501 0.20284 0.21063 0.49408 0.15262 -0.34992 -0.55237 -1.06804 -1.18134 -1.27255 -0.99943 -0.58604 1.40271 2.30655 3.2296 3.34089 3.44791 3.44978 3.1692 2.41613 1.48464 0.69947 -1.76205 -3.38281 -4.37067 -5.02535 -5.63487 -6.12196 -6.27512 -6.82979 -6.87595 -7.2743 -7.41246 -7.6132 -7.92404 -8.03313 -8.07019 -8.13587 -7.98779 -7.00609 -5.40478 -4.83776 -4.37717 -3.75197 -3.36038 -3.40625 -3.13913 -2.72825 -2.50432 -2.32041 -2.00028 -1.8648 -1.88752 -2.14924 -2.29041 -2.80262 -3.56233 -3.85541 -6.13392 -6.54038 -6.70675 -6.97168 -7.05099 -7.0588 -7.00269 -6.95234 -6.76064 -6.69599 -6.58871 -6.5136 -6.53439 -6.43264 -6.43129 -6.55632 -6.48696 -7.96812 -8.26359 -8.36581 -8.66037 -8.73409 -8.90307 -9.18903 -9.1553 -9.13442 -9.06259 -9.10746 -8.99068 -8.62717 -8.5645 -8.33759 -8.06295 -7.8963 -7.72481 -7.34166 -7.09258 -6.8741 -6.67637 -6.53772 -6.48536 -6.38266 -6.33915 -6.37034 -6.3948 -6.3666 -6.29551 -6.1693 -6.16646 -6.0853 -6.04316 -6.00885 -5.97507 -5.95398 -5.94685)) (quote (-5.17855 -4.80259 -4.49103 -4.17404 -4.00208 -4.09442 -4.31787 -4.60042 -4.52851 -4.53363 -4.43511 -4.55183 -4.50668 -4.38607 -4.41144 -4.53124 -4.71978 -4.89346 -4.92064 -4.75391 -4.73547 -4.72592 -4.97492 -5.30551 -5.74051 -5.94847 -6.1694 -6.25633 -6.17175 -6.14314 -5.99869 -5.5511 -5.20496 -4.86977 -4.25413 -3.64487 -3.35045 -3.16196 -2.68777 -2.90064 -2.77889 -2.40287 -1.64638 -1.57073 -1.23155 -1.15767 -1.1005 -1.18532 -1.0733 -0.51126 -0.08051 0.59987 0.92402 1.32593 1.5106 1.47986 1.35142 1.21344 1.07555 0.88485 0.64697 0.48191 0.32176 0.41237 1.00087 2.25582 3.25406 4.39142 5.11039 7.44654 7.48845 7.55105 7.65705 7.73555 7.83574 7.92921 8.07731 8.23983 8.38919 8.53106 8.62947 8.74746 8.86672 8.97184 9.03418 8.89474 8.57219 8.39999 8.21234 8.25006 8.24466 8.08073 8.08286 8.10292 8.164 8.13989 8.05764 7.92568 7.68528 7.38502 7.12878 6.79767 6.50558 6.19556 5.9333 5.7385 5.60072 5.36231 5.1688 5.07024 5.14077 5.28001 5.32208 5.37433 5.438 5.40611 5.34789 5.24443 5.17787 5.05897 4.91337 4.80991 4.67827 4.57438 4.43967 4.37297 4.27242 4.01656 3.92454 3.9636 4.06472 4.18892 4.25457 4.24985 4.20909 4.28708 4.34771 4.39195 4.48524 4.62228 4.71941 4.73136 4.76316 4.61894 4.31254 4.23738 2.95409 2.74492 2.67031 2.55101 2.50798 2.41835 2.24983 2.11152 1.86882 1.76989 1.48679 1.29426 1.0317 0.96527 0.76077 0.45153 0.38627 -0.47636 -0.56272 -0.59676 -0.76451 -0.83712 -1.1087 -1.67041 -1.91744 -2.22464 -2.77358 -3.06774 -3.53568 -4.20269 -4.44 -4.95623 -5.39196 -5.71732 -5.92315 -6.61197 -6.82566 -7.0948 -7.55549 -7.89069 -7.97219 -8.30885 -8.50532 -9.10831 -9.5423 -9.94139 -10.12355 -10.43416 -10.96104 -11.59941 -11.67904 -11.77511 -11.87119 -11.92497 -11.98342)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (12.85354 12.82615 12.75878 12.63169 12.48456 11.78626 11.34071 10.80212 10.76963 10.71381 10.66277 10.61596 10.50548 10.36577 10.27007 9.95896 9.76941 9.52952 9.44746 9.41976 9.25009 9.12471 8.24469 7.59038 6.7823 6.1647 5.65832 5.07709 4.83054 4.72072 4.51957 4.24066 4.02127 3.91762 3.88298 4.02716 4.13107 4.26678 4.98486 5.07365 5.60689 6.32315 8.10998 8.46198 8.84179 9.10906 9.46145 9.72673 10.0646 10.34961 10.37044 9.92173 9.49297 9.1209 8.78539 8.58237 8.35156 8.03776 7.73788 7.42854 7.24309 7.45832 7.67299 7.65683 7.59364 7.50408 7.18145 6.84202 6.52447 4.44859 4.30065 4.11698 3.76102 3.4137 2.72402 2.45804 1.70462 1.13982 0.45996 -0.07218 -0.52879 -0.98187 -1.08544 -1.14091 -1.07844 -0.92095 -0.40972 -0.08106 0.19758 0.00508 -0.05763 0.14382 -0.24117 -0.76076 -0.87093 -1.38443 -1.53469 -1.65007 -1.39689 -0.9892 0.87087 1.72161 2.58277 2.71861 2.84124 2.85373 2.59808 1.91544 1.0539 0.29953 -1.93285 -3.45676 -4.40433 -5.0496 -5.66427 -6.13992 -6.29908 -6.79886 -6.85148 -7.2113 -7.34298 -7.52797 -7.8201 -7.93319 -7.97729 -8.05961 -7.95811 -7.09294 -5.68626 -5.2233 -4.84731 -4.31791 -3.98445 -4.04378 -3.81128 -3.45843 -3.27531 -3.12694 -2.86396 -2.78394 -2.84425 -3.12307 -3.29094 -3.79676 -4.52861 -4.8296 -6.88017 -7.23701 -7.39583 -7.64526 -7.72726 -7.73367 -7.67643 -7.62407 -7.42704 -7.35439 -7.22375 -7.1168 -7.0785 -6.93917 -6.86504 -6.872 -6.75147 -7.97856 -8.19961 -8.27049 -8.51836 -8.56436 -8.68267 -8.88722 -8.83677 -8.8021 -8.70492 -8.7442 -8.6221 -8.24898 -8.17626 -7.92511 -7.62487 -7.42663 -7.21712 -6.75469 -6.44498 -6.16531 -5.9153 -5.73678 -5.66043 -5.5276 -5.46133 -5.43407 -5.40723 -5.32514 -5.20993 -5.02751 -4.92931 -4.746 -4.68023 -4.62997 -4.58033 -4.55335 -4.54359)) (quote (-3.64164 -3.22337 -2.86622 -2.51777 -2.33743 -2.49469 -2.75785 -3.08798 -3.04212 -3.0771 -3.0197 -3.1754 -3.19438 -3.14854 -3.23557 -3.43275 -3.67829 -3.89876 -3.95692 -3.82092 -3.83306 -3.83213 -4.12284 -4.46126 -4.9207 -5.1666 -5.42831 -5.58421 -5.55884 -5.58002 -5.50028 -5.13354 -4.84646 -4.54295 -3.96103 -3.37077 -3.09652 -2.9347 -2.4982 -2.7727 -2.68973 -2.36468 -1.70659 -1.67204 -1.34823 -1.34754 -1.38562 -1.53383 -1.49557 -1.04386 -0.68036 -0.06774 0.21463 0.56225 0.69982 0.62126 0.4636 0.30538 0.13573 -0.08087 -0.361 -0.62748 -0.87187 -0.77964 -0.07277 1.37011 2.58204 3.81585 4.53193 6.70512 6.82956 6.9612 7.11128 7.22543 7.36313 7.48849 7.67589 7.88684 8.0817 8.26673 8.39478 8.54729 8.70125 8.83687 8.93364 8.83551 8.56614 8.42436 8.27612 8.32075 8.33822 8.2286 8.25662 8.27941 8.40844 8.37758 8.28155 8.10586 7.83917 7.49688 7.27634 6.92035 6.60757 6.226 5.90597 5.67276 5.50183 5.21532 4.96865 4.83094 4.7766 4.84622 4.87529 4.91242 4.94639 4.89176 4.81665 4.69278 4.60741 4.46206 4.27883 4.15036 3.98669 3.85449 3.71253 3.63924 3.56201 3.3944 3.42695 3.52155 3.66844 3.85335 3.96038 3.94588 3.92007 4.03995 4.13098 4.20343 4.36765 4.55901 4.69008 4.69908 4.74738 4.5582 4.16622 4.06343 2.5087 2.26154 2.16694 2.0176 1.95768 1.85409 1.68147 1.52927 1.29454 1.17778 0.87639 0.6643 0.37448 0.29847 0.10044 -0.19494 -0.23869 -1.12473 -1.193 -1.20962 -1.38016 -1.44939 -1.72131 -2.27929 -2.54559 -2.87526 -3.43465 -3.78508 -4.26414 -4.88433 -5.14296 -5.62644 -6.03783 -6.35293 -6.55974 -7.18158 -7.38913 -7.63411 -8.06742 -8.3914 -8.48928 -8.81958 -9.03653 -9.63849 -10.08878 -10.50933 -10.73371 -11.07145 -11.60708 -12.21631 -12.31229 -12.41614 -12.52005 -12.5716 -12.63118)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (13.0225 12.94238 12.83114 12.66395 12.49288 11.84004 11.43922 10.95913 10.91438 10.85275 10.78347 10.74623 10.63522 10.49347 10.40655 10.12593 9.95207 9.73302 9.64768 9.59836 9.42776 9.28261 8.46341 7.84999 7.10582 6.5275 6.06396 5.52451 5.2866 5.17859 4.97742 4.681 4.44503 4.31549 4.21896 4.29826 4.35793 4.46568 5.12224 5.23364 5.75431 6.43055 8.09008 8.41455 8.7905 9.04109 9.38639 9.67811 10.04256 10.35602 10.40407 9.99401 9.56444 9.19549 8.85042 8.61202 8.32671 7.94456 7.57164 7.18727 6.91118 7.01462 7.14466 7.105 7.10176 7.10398 6.82558 6.5379 6.28919 4.50936 4.34439 4.14733 3.80091 3.46899 2.81806 2.52418 1.79346 1.22273 0.52727 -0.02682 -0.50542 -0.96519 -1.07571 -1.13119 -1.06817 -0.91295 -0.43877 -0.14096 0.08718 -0.13827 -0.25296 -0.11387 -0.53267 -1.06541 -1.10972 -1.62098 -1.79858 -1.93041 -1.69118 -1.28546 0.48184 1.30065 2.12481 2.28492 2.42332 2.44599 2.20964 1.57813 0.76796 0.03807 -2.03406 -3.48853 -4.40877 -5.04731 -5.66415 -6.13077 -6.29286 -6.75361 -6.80909 -7.14034 -7.26413 -7.43609 -7.71268 -7.82593 -7.87415 -7.96765 -7.90066 -7.12266 -5.85979 -5.47419 -5.1615 -4.70485 -4.41644 -4.48458 -4.27766 -3.97027 -3.81994 -3.7007 -3.48894 -3.45807 -3.55221 -3.84487 -4.03599 -4.53194 -5.23274 -5.53647 -7.39446 -7.71303 -7.86497 -8.10117 -8.18365 -8.18758 -8.12873 -8.0731 -7.87203 -7.79128 -7.64107 -7.50853 -7.42481 -7.25681 -7.13179 -7.05739 -6.90269 -7.95351 -8.12444 -8.17493 -8.39021 -8.41698 -8.49964 -8.64728 -8.58321 -8.53669 -8.42018 -8.45025 -8.32263 -7.94565 -7.86329 -7.59713 -7.27988 -7.05941 -6.82194 -6.30808 -5.95483 -5.63329 -5.34804 -5.14169 -5.04631 -4.89212 -4.80705 -4.73829 -4.67307 -4.54979 -4.39743 -4.17046 -4.00295 -3.75005 -3.66486 -3.60184 -3.53947 -3.5084 -3.49653)) (quote (-2.5291 -2.08765 -1.70391 -1.33846 -1.15579 -1.35172 -1.63634 -1.9911 -1.96636 -2.02451 -2.0001 -2.18314 -2.24831 -2.25605 -2.38618 -2.63466 -2.91991 -3.17173 -3.25303 -3.14182 -3.1761 -3.18446 -3.49712 -3.83635 -4.3049 -4.57239 -4.85701 -5.05529 -5.07074 -5.12792 -5.0945 -4.78695 -4.5438 -4.26615 -3.71674 -3.14881 -2.89546 -2.75687 -2.35485 -2.67308 -2.62022 -2.33519 -1.74943 -1.74356 -1.43056 -1.48114 -1.58635 -1.78135 -1.79774 -1.42743 -1.11479 -0.55506 -0.30295 0.00526 0.11011 0.00202 -0.16817 -0.32904 -0.50744 -0.72699 -1.01699 -1.32848 -1.61109 -1.51073 -0.73817 0.80541 2.14077 3.42602 4.13577 6.18223 6.36448 6.54435 6.72448 6.86282 7.02511 7.1738 7.38807 7.63358 7.86124 8.07749 8.22699 8.40422 8.58301 8.74042 8.86178 8.79317 8.56169 8.44126 8.31996 8.36834 8.3997 8.32488 8.36887 8.3926 8.57543 8.53994 8.4321 8.2236 7.93646 7.56319 7.35739 6.97746 6.64226 6.21146 5.85143 5.59161 5.39906 5.08397 4.8048 4.64135 4.51457 4.53996 4.56149 4.58844 4.60168 4.53172 4.4448 4.30887 4.21055 4.04868 3.8405 3.69589 3.51149 3.36019 3.21307 3.13426 3.06992 2.95545 3.0593 3.18239 3.35198 3.56724 3.69478 3.67089 3.6485 3.78751 3.89248 3.9779 4.18135 4.40135 4.55027 4.55491 4.61067 4.39185 3.94578 3.82298 2.11645 1.84959 1.74153 1.57252 1.49954 1.38502 1.20842 1.0448 0.81493 0.68432 0.3701 0.14573 -0.15808 -0.2377 -0.42173 -0.6922 -0.71421 -1.59124 -1.6397 -1.64119 -1.81021 -1.87487 -2.14349 -2.69359 -2.9724 -3.31737 -3.88352 -4.27411 -4.76245 -5.35112 -5.6249 -6.08466 -6.47784 -6.78378 -6.98831 -7.55721 -7.75483 -7.97708 -8.38733 -8.70045 -8.80753 -9.13159 -9.36145 -9.95921 -10.41746 -10.84904 -11.09899 -11.45078 -11.98373 -12.56314 -12.66804 -12.7759 -12.8839 -12.93346 -12.99394)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (13.0892 12.9636 12.81327 12.6108 12.41926 11.80369 11.43884 11.00548 10.9537 10.89034 10.81065 10.78454 10.67851 10.54107 10.46593 10.21435 10.05679 9.85698 9.77117 9.70696 9.53728 9.37676 8.60545 8.02223 7.32651 6.77902 6.34985 5.84591 5.61888 5.51646 5.32 5.01522 4.76997 4.62196 4.47866 4.50794 4.53369 4.62065 5.22996 5.36134 5.87266 6.51708 8.07388 8.37591 8.74863 8.98491 9.32284 9.63436 10.0182 10.3508 10.41786 10.03472 9.60138 9.23075 8.87394 8.60342 8.27209 7.83344 7.39952 6.9531 6.60225 6.61189 6.67082 6.6135 6.6657 6.75237 6.52177 6.28166 6.08821 4.53123 4.35908 4.15607 3.81953 3.50131 2.88199 2.5686 1.85731 1.2841 0.57829 0.00822 -0.48698 -0.95176 -1.06778 -1.12332 -1.05992 -0.90653 -0.46215 -0.1894 -0.00258 -0.25494 -0.41242 -0.32574 -0.77334 -1.3172 -1.30869 -1.81773 -2.01787 -2.16241 -1.93416 -1.52872 0.16387 0.96095 1.76015 1.94378 2.09759 2.12996 1.90994 1.31982 0.55162 -0.15716 -2.10301 -3.50157 -4.40072 -5.03384 -5.65157 -6.11045 -6.27411 -6.70358 -6.76036 -7.06806 -7.18365 -7.34414 -7.60703 -7.71891 -7.76992 -7.87198 -7.83338 -7.12751 -5.98244 -5.66028 -5.39963 -5.00313 -4.75231 -4.82682 -4.64023 -4.37067 -4.24807 -4.15368 -3.98805 -4.00132 -4.12622 -4.4309 -4.64287 -5.12827 -5.79852 -6.10282 -7.7925 -8.07919 -8.22476 -8.44915 -8.53104 -8.53196 -8.47123 -8.41167 -8.20712 -8.11819 -7.95039 -7.79552 -7.67362 -7.48157 -7.31698 -7.18003 -6.99971 -7.91339 -8.04618 -8.08161 -8.27126 -8.28299 -8.33742 -8.44021 -8.36425 -8.30701 -8.17423 -8.19373 -8.06048 -7.68205 -7.59045 -7.31358 -6.98342 -6.74531 -6.48499 -5.93311 -5.54498 -5.19113 -4.87895 -4.65074 -4.53906 -4.36783 -4.26617 -4.16431 -4.06733 -3.9095 -3.72412 -3.45894 -3.23546 -2.92918 -2.82699 -2.75295 -2.67959 -2.64534 -2.63161)) (quote (-1.63064 -1.17525 -0.77431 -0.39901 -0.21696 -0.43945 -0.73729 -1.10639 -1.09975 -1.17727 -1.18097 -1.3852 -1.48706 -1.53724 -1.70088 -1.98771 -2.3039 -2.57946 -2.67975 -2.58996 -2.64207 -2.65977 -2.98559 -3.323 -3.79438 -4.07619 -4.37561 -4.60373 -4.65062 -4.73647 -4.73979 -4.48007 -4.27289 -4.01778 -3.49939 -2.9546 -2.72189 -2.60444 -2.23468 -2.58788 -2.5607 -2.31009 -1.78381 -1.80065 -1.49623 -1.58747 -1.74616 -1.97968 -2.04118 -1.7378 -1.46766 -0.95294 -0.72518 -0.44865 -0.36915 -0.49776 -0.67264 -0.82819 -1.00473 -1.21682 -1.50198 -1.83233 -2.13178 -2.02079 -1.20806 0.39446 1.80992 3.12546 3.82752 5.76702 5.99447 6.21212 6.41541 6.5724 6.75314 6.92076 7.15586 7.42907 7.68325 7.92487 8.09178 8.28897 8.48776 8.66272 8.80389 8.75906 8.55804 8.45457 8.3542 8.40488 8.44588 8.39652 8.45174 8.47557 8.70501 8.66594 8.54733 8.31145 8.00679 7.60803 7.40749 7.00495 6.64763 6.17864 5.78735 5.50668 5.29799 4.96335 4.66134 4.47866 4.30315 4.29618 4.31259 4.33173 4.32863 4.2469 4.15069 4.00654 3.89817 3.72445 3.4975 3.34104 3.14135 2.97548 2.82428 2.7406 2.68431 2.60653 2.75698 2.8961 3.07776 3.30933 3.44765 3.41476 3.39064 3.53813 3.64924 3.74034 3.96732 4.20315 4.36178 4.3614 4.42015 4.17966 3.69561 3.55682 1.75621 1.47816 1.35983 1.17619 1.09215 0.96834 0.78797 0.61438 0.38794 0.24567 -0.07851 -0.31152 -0.62306 -0.70349 -0.87067 -1.11225 -1.11305 -1.96772 -1.99624 -1.98405 -2.14978 -2.20948 -2.47334 -3.01399 -3.30204 -3.65879 -4.22987 -4.65251 -5.14903 -5.71363 -5.99939 -6.43996 -6.81804 -7.1155 -7.31632 -7.83977 -8.02603 -8.22677 -8.61643 -8.91912 -9.03197 -9.34999 -9.58903 -10.18132 -10.64363 -11.08132 -11.34866 -11.70818 -12.23348 -12.78367 -12.89387 -13.00393 -13.11417 -13.16188 -13.22313)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (13.09744 12.93132 12.74538 12.51106 12.30143 11.71778 11.38326 10.98908 10.93336 10.87063 10.78516 10.77086 10.67278 10.5431 10.48119 10.25728 10.11613 9.93432 9.84968 9.77461 9.60688 9.43377 8.70225 8.14274 7.48595 6.96401 6.56378 6.09111 5.87598 5.78117 5.59201 5.2841 5.03381 4.87186 4.69118 4.67974 4.67805 4.74864 5.31955 5.46917 5.97314 6.59079 8.05997 8.34268 8.71257 8.93608 9.26656 9.59388 9.99278 10.339 10.42013 10.05684 9.61808 9.24304 8.87346 8.57322 8.20154 7.71426 7.22755 6.72796 6.31337 6.24221 6.24001 6.1689 6.27161 6.43492 6.25183 6.05579 5.9092 4.53115 4.35736 4.1526 3.82596 3.52031 2.92816 2.60023 1.90628 1.33254 0.61949 0.03703 -0.47153 -0.94032 -1.06095 -1.11658 -1.0529 -0.90108 -0.48206 -0.23079 -0.07963 -0.35515 -0.5497 -0.50913 -0.98231 -1.53602 -1.48276 -1.98962 -2.20928 -2.36424 -2.14513 -1.73898 -0.10975 0.67181 1.45339 1.65976 1.82855 1.87021 1.6646 1.10972 0.37754 -0.31233 -2.15294 -3.50399 -4.38584 -5.01437 -5.63227 -6.08424 -6.2487 -6.65169 -6.70888 -6.99619 -7.10359 -7.25367 -7.50415 -7.61386 -7.66692 -7.77597 -7.76188 -7.11853 -6.07471 -5.807 -5.59102 -5.24626 -5.02789 -5.10719 -4.93729 -4.70013 -4.60153 -4.52878 -4.40501 -4.45832 -4.61143 -4.92691 -5.15789 -5.63285 -6.27397 -6.57772 -8.11755 -8.37674 -8.51632 -8.72992 -8.81058 -8.80817 -8.74534 -8.68145 -8.47371 -8.37657 -8.19246 -8.01739 -7.86202 -7.64891 -7.452 -7.2645 -7.06395 -7.8651 -7.96715 -7.99078 -8.15914 -8.15842 -8.18925 -8.25464 -8.16795 -8.10078 -7.95366 -7.96195 -7.82304 -7.44444 -7.34391 -7.05887 -6.71828 -6.4654 -6.18545 -5.60372 -5.18618 -4.80598 -4.47197 -4.2256 -4.09944 -3.91388 -3.79713 -3.66738 -3.54284 -3.35478 -3.13928 -2.84014 -2.56922 -2.21961 -2.10212 -2.01827 -1.93509 -1.89821 -1.88277)) (quote (-0.86714 -0.40345 0.00887 0.3896 0.56926 0.32731 0.02097 -0.35663 -0.36593 -0.46018 -0.48859 -0.71001 -0.84235 -0.92773 -1.11874 -1.43587 -1.77746 -2.07202 -2.18861 -2.11791 -2.18514 -2.21207 -2.54605 -2.88042 -3.35136 -3.64334 -3.95292 -4.20338 -4.27578 -4.38552 -4.41939 -4.20015 -4.02375 -3.78889 -3.30015 -2.77857 -2.56607 -2.46826 -2.12904 -2.51182 -2.50752 -2.28777 -1.81302 -1.84891 -1.55173 -1.67714 -1.88093 -2.14782 -2.24847 -2.00295 -1.76998 -1.2951 -1.08792 -0.83811 -0.77924 -0.92281 -1.09773 -1.24338 -1.41192 -1.61058 -1.8825 -2.2165 -2.52042 -2.39761 -1.56001 0.0765 1.54591 2.87913 3.57281 5.41851 5.68315 5.932 6.15422 6.32645 6.52195 6.70567 6.95793 7.25459 7.53139 7.79472 7.97656 8.19078 8.40662 8.59653 8.75457 8.72999 8.55488 8.46569 8.38261 8.43472 8.48283 8.45326 8.51683 8.54025 8.81176 8.76976 8.64108 8.38119 8.06086 7.64004 7.4393 7.01538 6.63668 6.13638 5.71923 5.42126 5.19974 4.85082 4.5317 4.33379 4.12321 4.09093 4.1036 4.11636 4.09962 4.00828 3.90435 3.75423 3.63762 3.45485 3.21294 3.04722 2.83553 2.65792 2.50331 2.41519 2.36411 2.31323 2.49574 2.64363 2.83117 3.07079 3.21416 3.17266 3.14391 3.29364 3.40626 3.49871 3.73956 3.98329 4.14655 4.14076 4.19972 3.94265 3.43076 3.2786 1.41871 1.13448 1.00785 0.81264 0.71888 0.58686 0.40293 0.22036 -0.00344 -0.15589 -0.48818 -0.72755 -1.04308 -1.12262 -1.27163 -1.48262 -1.46285 -2.28823 -2.29709 -2.27224 -2.43375 -2.48835 -2.7467 -3.27719 -3.57247 -3.93882 -4.51372 -4.96328 -5.46719 -6.01228 -6.30801 -6.73225 -7.09717 -7.38664 -7.58296 -8.06588 -8.24008 -8.42032 -8.7911 -9.08374 -9.2003 -9.51246 -9.75839 -10.34458 -10.80864 -11.24949 -11.52919 -11.8926 -12.4075 -12.9293 -13.04258 -13.15372 -13.26508 -13.31106 -13.37296)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (13.06803 12.86513 12.64628 12.38277 12.15688 11.60126 11.29303 10.93264 10.87505 10.81448 10.7263 10.7241 10.63576 10.51593 10.46799 10.27053 10.14567 9.98089 9.89846 9.81527 9.65012 9.4664 8.769 8.22877 7.60435 7.10424 6.72913 6.28455 6.0818 5.99583 5.81552 5.50785 5.2553 5.08249 4.87097 4.82532 4.80072 4.85803 5.39666 5.56328 6.06129 6.65565 8.04763 8.31321 8.68055 8.89236 9.21541 9.55582 9.96685 10.32298 10.41485 10.06662 9.62139 9.24022 8.85732 8.52926 8.12142 7.5913 7.05793 6.51187 6.04189 5.90004 5.84453 5.76249 5.91101 6.14363 6.00636 5.8514 5.74586 4.51711 4.34517 4.14133 3.82453 3.53058 2.96252 2.62336 1.94526 1.37228 0.65403 0.06159 -0.45814 -0.93026 -1.05488 -1.11063 -1.04673 -0.8963 -0.49958 -0.26732 -0.14788 -0.44397 -0.6716 -0.6727 -1.16916 -1.73179 -1.6394 -2.14413 -2.3812 -2.54499 -2.33375 -1.92624 -0.35237 0.41791 1.18688 1.41528 1.59863 1.64923 1.45664 0.93266 0.23229 -0.44029 -2.19024 -3.49959 -4.36673 -4.99124 -5.60886 -6.05454 -6.21932 -6.59912 -6.65619 -6.92533 -7.02466 -7.16514 -7.40417 -7.51126 -7.56588 -7.68084 -7.68851 -7.10087 -6.14653 -5.92682 -5.75016 -5.45094 -5.26118 -5.34413 -5.18815 -4.97919 -4.90167 -4.84797 -4.76239 -4.85228 -5.03144 -5.3568 -5.6053 -6.07026 -6.68391 -6.98645 -8.39134 -8.62628 -8.76022 -8.96382 -9.04281 -9.03683 -8.97178 -8.90325 -8.69252 -8.58714 -8.38764 -8.19391 -8.0085 -7.77646 -7.55244 -7.3229 -7.10591 -7.81182 -7.88829 -7.90234 -8.05241 -8.04106 -8.05149 -8.08467 -7.98809 -7.91161 -7.75149 -7.74828 -7.60369 -7.22568 -7.1165 -6.82498 -6.47564 -6.20997 -5.9127 -5.30666 -4.86357 -4.46119 -4.10887 -3.84693 -3.70763 -3.5096 -3.37889 -3.22488 -3.0758 -2.86059 -2.61721 -2.28724 -1.97495 -1.58902 -1.45755 -1.36475 -1.27263 -1.23351 -1.21646)) (quote (-0.19873 0.26943 0.6891 1.07223 1.2483 0.99157 0.67977 0.2974 0.27383 0.16483 0.11434 -0.1214 -0.27971 -0.39511 -0.60911 -0.95096 -1.31402 -1.62428 -1.75522 -1.70188 -1.78229 -1.8183 -2.15725 -2.48796 -2.95656 -3.25607 -3.57278 -3.84056 -3.93426 -4.06443 -4.12443 -3.94036 -3.791 -3.57465 -3.11434 -2.61577 -2.42299 -2.34366 -2.03361 -2.44222 -2.45881 -2.26741 -1.83866 -1.89111 -1.60022 -1.75535 -1.99848 -2.29516 -2.43079 -2.23677 -2.03717 -1.5984 -1.40908 -1.18244 -1.14086 -1.29552 -1.46741 -1.60022 -1.75674 -1.93818 -2.19153 -2.51933 -2.8197 -2.6845 -1.83221 -0.17829 1.32739 2.66985 3.35476 5.11631 5.41247 5.6879 5.92611 6.11124 6.31901 6.51682 6.78371 7.10085 7.39755 7.68008 7.87513 8.10435 8.33521 8.53827 8.71115 8.70441 8.55206 8.47531 8.40702 8.46 8.51349 8.49988 8.56983 8.59251 8.90286 8.85839 8.72012 8.4386 8.10389 7.66341 7.4589 7.01472 6.61549 6.08867 5.6494 5.33657 5.10446 4.74478 4.41236 4.20198 3.96521 3.91233 3.92215 3.92949 3.90099 3.80152 3.69095 3.53637 3.41275 3.22282 2.96857 2.79536 2.57394 2.38654 2.22901 2.13677 2.089 2.05847 2.2634 2.41527 2.60462 2.84689 2.99153 2.94174 2.90655 3.05443 3.16552 3.25644 3.50459 3.75077 3.91512 3.90367 3.9609 3.69083 3.15816 2.99449 1.0988 0.8117 0.67813 0.47346 0.37092 0.23151 0.04419 -0.14657 -0.36827 -0.52979 -0.86884 -1.11297 -1.42997 -1.5075 -1.63769 -1.81735 -1.77768 -2.56974 -2.55933 -2.52264 -2.67938 -2.72885 -2.98125 -3.50123 -3.80236 -4.1768 -4.75474 -5.22763 -5.73832 -6.26702 -6.57131 -6.98122 -7.33435 -7.6162 -7.80753 -8.2535 -8.41529 -8.57587 -8.92906 -9.21201 -9.33088 -9.63733 -9.88855 -10.46829 -10.93257 -11.37459 -11.66318 -12.02787 -12.53065 -13.02493 -13.13978 -13.25122 -13.36293 -13.40726 -13.46974)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (13.01257 12.77585 12.52634 12.23581 11.9951 11.46451 11.17951 10.84882 10.79082 10.73347 10.64476 10.65475 10.57729 10.46863 10.43507 10.26295 10.15418 10.00561 9.92612 9.83679 9.67465 9.48178 8.81426 8.29009 7.6932 7.21215 6.85923 6.44027 6.25009 6.17375 6.00328 5.69819 5.44533 5.26391 5.02643 4.95146 4.90734 4.95364 5.46457 5.64725 6.14031 6.71398 8.03647 8.28652 8.65151 8.85246 9.16815 9.51966 9.94069 10.30405 10.40423 10.06756 9.61517 9.22669 8.8302 8.47587 8.03517 7.46672 6.89157 6.30434 5.78565 5.58133 5.47895 5.38819 5.57819 5.87339 5.77973 5.66326 5.59447 4.49351 4.32578 4.12471 3.81761 3.5347 2.98842 2.64041 1.97702 1.40569 0.68373 0.08304 -0.44626 -0.92121 -1.04939 -1.10525 -1.04119 -0.89201 -0.51532 -0.30024 -0.20961 -0.52434 -0.78207 -0.82147 -1.33945 -1.9103 -1.78298 -2.28563 -2.53852 -2.70997 -2.50564 -2.0963 -0.57178 0.19032 0.95036 1.20013 1.39765 1.45688 1.27624 0.77991 0.10818 -0.54836 -2.21849 -3.49049 -4.34483 -4.96574 -5.58278 -6.02263 -6.18739 -6.54647 -6.60304 -6.85569 -6.9471 -7.07863 -7.30697 -7.41119 -7.46703 -7.58712 -7.61447 -7.07736 -6.20357 -6.0269 -5.88544 -5.62691 -5.46269 -5.54841 -5.40414 -5.21996 -5.16112 -5.12433 -5.07375 -5.19721 -5.40052 -5.73505 -5.99981 -6.45535 -7.04325 -7.34418 -8.62661 -8.83988 -8.96845 -9.1627 -9.23968 -9.22999 -9.16259 -9.0892 -8.87561 -8.76198 -8.54781 -8.33661 -8.12381 -7.87447 -7.6273 -7.36219 -7.13161 -7.75526 -7.80997 -7.8161 -7.95013 -7.92949 -7.92193 -7.92674 -7.82094 -7.73564 -7.56356 -7.54868 -7.3984 -7.02148 -6.90389 -6.60711 -6.25024 -5.97325 -5.6604 -5.03413 -4.56843 -4.14696 -3.77893 -3.50334 -3.35196 -3.14286 -2.99908 -2.82351 -2.65219 -2.41221 -2.14274 -1.78442 -1.43536 -1.01836 -0.87393 -0.77289 -0.67253 -0.63145 -0.61289)) (quote (0.39802 0.86786 1.29192 1.67519 1.84681 1.5786 1.26347 0.8789 0.84239 0.72021 0.64976 0.40191 0.22107 0.07965 -0.15402 -0.51641 -0.89798 -1.22152 -1.36529 -1.32794 -1.42006 -1.46498 -1.8067 -2.13345 -2.59852 -2.90374 -3.22548 -3.50697 -3.6188 -3.76672 -3.84947 -3.69651 -3.57131 -3.3721 -2.9391 -2.46322 -2.28966 -2.22788 -1.94585 -2.37751 -2.4135 -2.24852 -1.86167 -1.92882 -1.64356 -1.82513 -2.10332 -2.42711 -2.59458 -2.44729 -2.27821 -1.87264 -1.69913 -1.49295 -1.46609 -1.629 -1.79563 -1.91357 -2.05531 -2.21696 -2.44813 -2.76291 -3.05423 -2.90637 -2.0466 -0.38702 1.14215 2.48774 3.16367 4.84858 5.17197 5.4705 5.72252 5.91882 6.13705 6.34742 6.62708 6.96248 7.27705 7.5769 7.78387 8.02661 8.27098 8.48587 8.6721 8.68139 8.54949 8.48383 8.4285 8.48193 8.53957 8.53909 8.61398 8.63567 8.98244 8.93584 8.78837 8.48696 8.13885 7.6805 7.46976 7.00629 6.5874 6.03763 5.57902 5.25315 5.01207 4.64412 4.30116 4.08032 3.82358 3.75351 3.7611 3.76371 3.72483 3.61832 3.50194 3.34394 3.21425 3.01854 2.75387 2.57448 2.34498 2.14923 1.98916 1.89306 1.84725 1.83235 2.0528 2.20529 2.39357 2.63466 2.77791 2.72014 2.67731 2.82051 2.92793 3.01529 3.26594 3.5106 3.67343 3.65611 3.71022 3.42978 2.88157 2.70781 0.79321 0.50556 0.36605 0.15347 0.0429 -0.10328 -0.29381 -0.49214 -0.71209 -0.88179 -1.22656 -1.47424 -1.79091 -1.8656 -1.97669 -2.1248 -2.06585 -2.82213 -2.7929 -2.74503 -2.89665 -2.94099 -3.1872 -3.69647 -4.00247 -4.38386 -4.96426 -5.45777 -5.97474 -6.48937 -6.80114 -7.1982 -7.5406 -7.81514 -8.00114 -8.41293 -8.56214 -8.70379 -9.04041 -9.31396 -9.43415 -9.73504 -9.99036 -10.56344 -11.02684 -11.46859 -11.76352 -12.12757 -12.61709 -13.08468 -13.19999 -13.31118 -13.42267 -13.46543 -13.52841)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (12.93821 12.67011 12.39184 12.07611 11.8218 11.31384 11.04964 10.74538 10.68805 10.63471 10.54708 10.56923 10.5034 10.4068 10.3878 10.24003 10.14711 10.01403 9.938 9.84404 9.68522 9.48437 8.84342 8.33282 7.75971 7.29556 6.96254 6.56714 6.38958 6.32337 6.16342 5.86257 5.61086 5.42257 5.16293 5.06246 5.0015 5.03858 5.52536 5.72332 6.21223 6.76724 8.02622 8.262 8.62481 8.81554 9.12394 9.48505 9.91443 10.283 10.38965 10.06188 9.60183 9.2052 8.79497 8.41572 7.94483 7.34174 6.72882 6.10479 5.54291 5.28302 5.1392 5.0415 5.26906 5.62072 5.56824 5.488 5.45258 4.46304 4.30121 4.10422 3.80667 3.53425 3.00797 2.65289 2.00331 1.43427 0.7097 0.1021 -0.43554 -0.91295 -1.04433 -1.10033 -1.03613 -0.88809 -0.5297 -0.33037 -0.26627 -0.59813 -0.88362 -0.95866 -1.49677 -2.07529 -1.91631 -2.41692 -2.68438 -2.86259 -2.66441 -2.25289 -0.77298 -0.01668 0.73724 1.0078 1.21912 1.28672 1.11718 0.64591 3.2E-4 -0.64119 -2.23994 -3.47799 -4.32097 -4.93863 -5.55487 -5.98927 -6.15377 -6.49403 -6.54985 -6.78733 -6.871 -6.9941 -7.21239 -7.31358 -7.37039 -7.49502 -7.5404 -7.04972 -6.24938 -6.11179 -6.00222 -5.78043 -5.6392 -5.727 -5.5926 -5.43035 -5.38815 -5.36643 -5.348 -5.50239 -5.72819 -6.07128 -6.3512 -6.79795 -7.36179 -7.66087 -8.83155 -9.02527 -9.14872 -9.33416 -9.40889 -9.39535 -9.32552 -9.2471 -9.03074 -8.90885 -8.6806 -8.45289 -8.21484 -7.94952 -7.68234 -7.38679 -7.14485 -7.69648 -7.73241 -7.73189 -7.85163 -7.82274 -7.79906 -7.7785 -7.66404 -7.57031 -7.38708 -7.36049 -7.20452 -6.82901 -6.70322 -6.40209 -6.03865 -5.75149 -5.42443 -4.78108 -4.29507 -3.85693 -3.47521 -3.18748 -3.02489 -2.8058 -2.64969 -2.45468 -2.26294 -2.0001 -1.70606 -1.32139 -0.93924 -0.49525 -0.33873 -0.23003 -0.12199 -0.07918 -0.05916)) (quote (0.93827 1.40764 1.83379 2.21548 2.38201 2.10478 1.78784 1.40292 1.35461 1.22055 1.13187 0.87367 0.6731 0.50882 0.25813 -0.12156 -0.51929 -0.8542 -1.0096 -0.98709 -1.08977 -1.14343 -1.48632 -1.809 -2.26979 -2.57939 -2.90464 -3.19711 -3.32457 -3.48809 -3.59087 -3.46576 -3.36241 -3.1792 -2.77253 -2.31896 -2.16415 -2.11911 -1.86411 -2.31667 -2.37087 -2.23079 -1.88264 -1.96308 -1.6829 -1.88837 -2.19835 -2.54713 -2.74399 -2.63967 -2.49882 -2.12412 -1.96479 -1.77689 -1.76273 -1.93164 -2.09138 -2.19301 -2.31794 -2.45797 -2.66444 -2.9613 -3.23963 -3.07904 -2.21708 -0.56052 0.98244 2.32656 2.99337 4.60773 4.95496 5.27386 5.53799 5.74413 5.97143 6.19313 6.48412 6.83607 7.16692 7.48262 7.70052 7.95562 8.21233 8.43802 8.63643 8.66037 8.54712 8.49149 8.44772 8.50129 8.56213 8.57261 8.65134 8.67186 9.05312 9.00465 8.84829 8.52838 8.16764 7.69282 7.47402 6.99217 6.55444 5.98451 5.50872 5.17121 4.92241 4.54805 4.19661 3.96691 3.69477 3.61006 3.61588 3.61431 3.56613 3.45342 3.33185 3.17122 3.0362 2.83574 2.56215 2.37759 2.14127 1.93831 1.77597 1.67623 1.63138 1.62852 1.85934 2.00993 2.19504 2.43214 2.57202 2.50654 2.45526 2.5917 2.69388 2.77621 3.02573 3.26584 3.42514 3.40181 3.4517 3.16295 2.60322 2.42049 0.49968 0.21321 0.06854 -0.15077 -0.26876 -0.42118 -0.61477 -0.82014 -1.0386 -1.21577 -1.5654 -1.8157 -2.13065 -2.20188 -2.29378 -2.4104 -2.33277 -3.05173 -3.00414 -2.94562 -3.09191 -3.13116 -3.37101 -3.86952 -4.17959 -4.56706 -5.14949 -5.66147 -6.18431 -6.68664 -7.00502 -7.39043 -7.7229 -7.99039 -8.17084 -8.55069 -8.68723 -8.81061 -9.13151 -9.39594 -9.51666 -9.81212 -10.07063 -10.63693 -11.09862 -11.53903 -11.83829 -12.20024 -12.67573 -13.11741 -13.23234 -13.34284 -13.45367 -13.49491 -13.55835)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (12.84967 12.55226 12.24688 11.90753 11.64065 11.15333 10.90793 10.62744 10.57162 10.52286 10.43755 10.47177 10.41807 10.33414 10.32973 10.2054 10.12807 10.00987 9.9377 9.84028 9.685 9.47712 8.86004 8.36106 7.80875 7.35974 7.04474 6.67119 6.5062 6.45045 6.30146 6.00612 5.75665 5.56285 5.28412 5.16128 5.08564 5.11493 5.58043 5.79306 6.27845 6.81642 8.0167 8.23923 8.59999 8.78104 9.08224 9.45172 9.88819 10.26036 10.37201 10.05104 9.58297 9.17756 8.75355 8.35055 7.85174 7.21708 6.56977 5.91264 5.31226 5.00273 4.82212 4.71897 4.9805 5.38307 5.36929 5.32327 5.31851 4.42745 4.27277 4.08083 3.79268 3.5303 3.02255 2.66179 2.0253 1.45905 0.73273 0.11925 -0.42575 -0.90532 -1.03963 -1.09577 -1.03147 -0.88449 -0.54297 -0.35826 -0.31884 -0.66661 -0.97799 -1.08649 -1.64357 -2.22931 -2.04131 -2.53992 -2.82095 -3.00518 -2.81255 -2.39859 -0.95941 -0.20702 0.54303 0.83383 1.05862 1.13434 0.97519 0.52689 -0.09461 -0.72193 -2.2561 -3.46292 -4.29572 -4.9104 -5.52568 -5.95494 -6.11901 -6.44199 -6.49685 -6.72024 -6.79636 -6.91149 -7.12027 -7.21832 -7.27592 -7.40461 -7.46668 -7.01904 -6.28636 -6.18458 -6.10412 -5.91576 -5.79539 -5.88469 -5.7586 -5.61583 -5.58851 -5.58025 -5.59144 -5.77437 -6.02116 -6.37231 -6.66643 -7.10503 -7.64643 -7.94351 -9.01182 -9.18778 -9.30632 -9.48342 -9.55571 -9.53823 -9.4659 -9.38229 -9.16323 -9.03309 -8.79125 -8.54784 -8.28631 -8.0061 -7.7215 -7.39968 -7.14821 -7.63613 -7.65568 -7.64952 -7.75639 -7.72011 -7.68183 -7.63832 -7.51565 -7.41385 -7.22013 -7.18182 -7.02017 -6.6463 -6.5125 -6.20773 -5.83845 -5.54206 -5.20193 -4.54398 -4.03955 -3.58671 -3.19293 -2.89426 -2.72119 -2.49298 -2.32517 -2.11243 -1.90176 -1.61765 -1.30033 -0.89102 -0.47879 -0.01111 0.15674 0.27262 0.38785 0.43222 0.45366)) (quote (1.43245 1.89968 2.32608 2.70482 2.86577 2.58139 2.26382 1.8799 1.82077 1.67591 1.57052 1.30342 1.0854 0.90089 0.63534 0.24097 -0.17103 -0.51577 -0.6818 -0.67317 -0.78546 -0.84767 -1.19056 -1.50913 -1.96516 -2.27817 -2.60575 -2.90707 -3.04813 -3.22546 -3.34606 -3.24612 -3.1627 -2.99452 -2.61327 -2.1816 -2.0451 -2.01612 -1.78728 -2.25901 -2.33042 -2.21401 -1.90197 -1.99456 -1.71905 -1.94639 -2.28549 -2.65756 -2.88182 -2.81741 -2.70293 -2.35715 -2.21065 -2.03924 -2.03611 -2.20926 -2.36082 -2.44506 -2.55169 -2.6688 -2.84874 -3.12406 -3.38652 -3.21324 -2.35308 -0.70613 0.84304 2.18207 2.83969 4.38858 4.75688 5.09393 5.3688 5.5837 5.81897 6.051 6.35218 6.71926 7.06511 7.39548 7.62352 7.89003 8.15815 8.39382 8.60349 8.64096 8.54491 8.49848 8.46514 8.5186 8.5819 8.60162 8.68329 8.7025 9.11669 9.06656 8.90156 8.56427 8.19152 7.70138 7.47312 6.9737 6.51792 5.93009 5.43887 5.09085 4.83531 4.45598 4.09769 3.86037 3.57633 3.47901 3.48339 3.47806 3.42144 3.3032 3.17697 3.01432 2.87456 2.67016 2.38886 2.19991 1.9578 1.74853 1.58417 1.48096 1.43627 1.44265 1.67983 1.82661 2.00692 2.23788 2.3729 2.29997 2.23967 2.36782 2.46358 2.53975 2.78531 3.0185 3.17268 3.14321 3.18802 2.89259 2.32452 2.13374 0.21657 -0.0674 -0.2166 -0.44169 -0.56661 -0.72483 -0.92134 -1.13329 -1.35046 -1.53447 -1.88827 -2.1404 -2.45256 -2.51985 -2.59259 -2.67796 -2.58219 -3.26289 -3.19735 -3.12869 -3.26949 -3.30371 -3.53709 -4.02482 -4.33836 -4.7312 -5.31529 -5.844 -6.37236 -6.8638 -7.18811 -7.56282 -7.88604 -8.1467 -8.32142 -8.67119 -8.79505 -8.90073 -9.20664 -9.46219 -9.58285 -9.87299 -10.13395 -10.69339 -11.15274 -11.59095 -11.89296 -12.25166 -12.71256 -13.12907 -13.24293 -13.35241 -13.46223 -13.50201 -13.56586)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (12.75021 12.42531 12.09428 11.73268 11.45414 10.98578 10.75751 10.49855 10.4449 10.40115 10.31914 10.3653 10.32405 10.25317 10.26333 10.16161 10.09959 9.99573 9.9277 9.82779 9.67622 9.46209 8.86666 8.37771 7.84374 7.40842 7.10987 6.7567 6.60416 6.55909 6.42137 6.13249 5.88612 5.68793 5.39266 5.25003 5.16151 5.18421 5.63081 5.85757 6.33997 6.86224 8.00778 8.2179 8.57671 8.74855 9.04262 9.41951 9.862 10.23649 10.35196 10.03606 9.55971 9.14505 8.70729 8.28156 7.75677 7.09318 6.41439 5.72737 5.09255 4.73852 4.52521 4.41787 4.71012 5.15848 5.18099 5.16735 5.19101 4.38796 4.24135 4.05521 3.77632 3.52356 3.03315 2.66784 2.0438 1.48072 0.75336 0.13486 -0.41673 -0.89821 -1.03522 -1.09151 -1.02713 -0.88114 -0.55533 -0.38429 -0.36804 -0.73072 -1.06641 -1.20655 -1.78163 -2.3742 -2.15938 -2.65604 -2.94978 -3.13943 -2.95184 -2.53523 -1.13354 -0.38352 0.36448 0.67502 0.91297 0.99661 0.84725 0.42017 -0.17895 -0.79282 -2.26802 -3.44588 -4.26945 -4.88137 -5.49557 -5.91997 -6.08346 -6.39043 -6.44421 -6.65439 -6.72314 -6.83069 -7.03043 -7.1253 -7.18354 -7.31591 -7.39353 -6.9861 -6.31619 -6.24746 -6.19378 -6.03601 -5.93464 -6.02495 -5.90583 -5.7804 -5.7664 -5.77018 -5.80869 -6.01802 -6.28443 -6.6432 -6.95066 -7.38174 -7.90224 -8.19724 -9.17152 -9.33126 -9.44507 -9.61426 -9.68394 -9.66244 -9.58754 -9.49865 -9.27694 -9.13855 -8.88354 -8.62511 -8.34162 -8.04745 -7.7476 -7.40303 -7.14354 -7.57466 -7.57982 -7.56886 -7.66403 -7.62106 -7.56943 -7.50498 -7.3745 -7.26492 -7.06128 -7.01128 -6.84396 -6.47187 -6.33024 -6.0224 -5.6479 -5.34305 -4.99079 -4.32028 -3.79902 -3.33311 -2.92858 -2.62001 -2.43706 -2.20048 -2.0215 -1.79245 -1.56412 -1.26008 -0.92062 -0.48811 -0.04836 0.44029 0.61882 0.74146 0.86347 0.90923 0.93204)) (quote (1.88815 2.35187 2.77703 3.15171 3.30668 3.01665 2.69933 2.31746 2.24835 2.09365 1.97283 1.69805 1.46453 1.26199 0.9834 0.5765 0.15184 -0.20146 -0.37727 -0.38169 -0.5028 -0.5734 -0.91537 -1.22989 -1.68085 -1.9965 -2.32553 -2.63397 -2.78693 -2.97658 -3.11312 -3.03608 -2.97096 -2.81698 -2.46031 -2.05013 -1.93151 -1.91799 -1.71455 -2.20399 -2.29182 -2.19802 -1.91996 -2.02375 -1.75256 -2.0001 -2.36615 -2.7601 -3.01009 -2.98306 -2.89336 -2.57485 -2.44003 -2.28361 -2.29012 -2.46603 -2.60841 -2.67444 -2.76162 -2.85485 -3.00696 -3.25801 -3.50246 -3.3166 -2.4613 -0.82906 0.7202 2.05127 2.69965 4.18741 4.57444 4.92779 5.21228 5.43506 5.6774 5.91892 6.22933 6.6104 6.97018 7.31423 7.55174 7.82891 8.10766 8.35262 8.57278 8.62286 8.54283 8.50491 8.48108 8.53424 8.59938 8.62693 8.71082 8.72861 9.1744 9.1228 8.94938 8.59563 8.21141 7.70689 7.46809 6.95183 6.47874 5.87488 5.36967 5.01207 4.7506 4.36745 4.00361 3.75971 3.4665 3.35819 3.3614 3.35266 3.28832 3.16508 3.03461 2.87045 2.72642 2.51877 2.23074 2.03805 1.79097 1.57614 1.40994 1.30344 1.25827 1.27164 1.51198 1.65343 1.82769 2.05082 2.17981 2.09966 2.02995 2.14863 2.23708 2.30624 2.54559 2.76998 2.91775 2.88202 2.92106 2.62026 2.04644 1.84836 -0.05737 -0.3378 -0.49103 -0.72112 -0.85253 -1.01618 -1.21549 -1.43361 -1.64964 -1.83994 -2.1973 -2.45062 -2.75914 -2.82208 -2.87579 -2.93023 -2.81685 -3.45873 -3.37567 -3.29727 -3.4325 -3.46173 -3.68861 -4.16559 -4.48209 -4.87972 -5.46516 -6.00915 -6.5427 -7.02443 -7.35407 -7.71889 -8.03341 -8.28743 -8.45631 -8.7776 -8.8888 -8.97729 -9.26884 -9.51572 -9.63584 -9.92077 -10.18357 -10.73612 -11.19262 -11.62794 -11.9314 -12.28591 -12.73182 -13.12386 -13.2361 -13.34427 -13.45281 -13.49117 -13.55538)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (12.6422 12.29139 11.93602 11.55341 11.264 10.81316 10.60058 10.36125 10.31029 10.27191 10.19397 10.2519 10.22331 10.16575 10.19038 10.11051 10.06353 9.97349 9.90986 9.80823 9.66049 9.44078 8.86512 8.38488 7.8672 7.44436 7.16092 6.82684 6.68661 6.65235 6.52608 6.24441 6.00183 5.80018 5.49052 5.33029 5.23042 5.24753 5.67723 5.91766 6.39752 6.90523 7.99938 8.19778 8.55475 8.71775 9.00479 9.38826 9.83591 10.21165 10.32996 10.01771 9.53288 9.10861 8.65716 8.20963 7.66054 6.97032 6.26263 5.54851 4.88281 4.48884 4.24643 4.13599 4.45597 4.94546 5.00187 5.01898 5.06917 4.34544 4.20761 4.02784 3.75805 3.51459 3.04049 2.67155 2.05942 1.49984 0.77199 0.14916 -0.40835 -0.89154 -1.03107 -1.0875 -1.02306 -0.87799 -0.56693 -0.40877 -0.4144 -0.79114 -1.1498 -1.32003 -1.91227 -2.51134 -2.27157 -2.7663 -3.07203 -3.2666 -3.08362 -2.66418 -1.29724 -0.5483 0.19916 0.52899 0.77982 0.87117 0.73109 0.32374 -0.25447 -0.85551 -2.27647 -3.42728 -4.24242 -4.85176 -5.46481 -5.88457 -6.04738 -6.3394 -6.39199 -6.58975 -6.6513 -6.7516 -6.94272 -7.03438 -7.09316 -7.22888 -7.32109 -6.95144 -6.34012 -6.30207 -6.27313 -6.14349 -6.05948 -6.15038 -6.03705 -5.92706 -5.925 -5.93955 -6.00328 -6.23706 -6.52183 -6.88785 -7.20786 -7.63204 -8.13311 -8.42599 -9.31372 -9.45859 -9.56785 -9.72948 -9.79643 -9.77085 -9.69333 -9.59905 -9.37474 -9.22811 -8.96029 -8.68745 -8.38331 -8.07597 -7.76274 -7.39842 -7.1322 -7.5124 -7.50484 -7.48978 -7.57424 -7.52518 -7.46126 -7.37756 -7.23961 -7.12253 -6.90943 -6.84781 -6.67482 -6.30462 -6.15531 -5.84488 -5.46565 -5.15299 -4.78942 -4.10806 -3.57132 -3.09372 -2.67957 -2.36193 -2.16966 -1.92532 -1.73565 -1.4915 -1.24659 -0.92377 -0.56318 -0.10877 0.35636 0.86364 1.05228 1.18131 1.30974 1.35677 1.38091)) (quote (2.31107 2.77016 3.19283 3.56253 3.7112 3.41673 3.10036 2.72134 2.64299 2.47928 2.34418 2.06278 1.81541 1.59675 1.30665 0.88905 0.45308 0.09228 -0.09256 -0.1093 -0.23855 -0.31739 -0.65772 -0.96827 -1.41398 -1.73168 -2.06144 -2.37562 -2.53903 -2.73969 -2.89056 -2.83447 -2.78626 -2.64573 -2.31288 -1.92377 -1.82263 -1.82404 -1.64529 -2.15124 -2.25478 -2.18271 -1.93681 -2.05103 -1.78387 -2.05021 -2.44137 -2.856 -3.13031 -3.13847 -3.07222 -2.77955 -2.65544 -2.5127 -2.52764 -2.70507 -2.83747 -2.88467 -2.95152 -3.02017 -3.1435 -3.36822 -3.59306 -3.39477 -2.5467 -0.9332 0.61119 1.9319 2.57104 4.00141 4.40522 4.77328 5.06643 5.29635 5.54502 5.7953 6.11415 6.50822 6.88103 7.23795 7.48436 7.77153 8.06027 8.31396 8.54396 8.60587 8.54086 8.51087 8.49578 8.54848 8.61497 8.64916 8.73468 8.75093 9.22721 9.17429 8.99262 8.62321 8.22795 7.70986 7.45967 6.92725 6.43756 5.81925 5.30126 4.93486 4.66812 4.28209 3.91376 3.66416 3.36396 3.24601 3.24826 3.23639 3.16493 3.03716 2.90281 2.73752 2.58965 2.37928 2.08535 1.88947 1.63811 1.41835 1.25049 1.14082 1.09466 1.11316 1.35406 1.48897 1.65616 1.87012 1.99216 1.90501 1.82563 1.93395 2.01439 2.07588 2.3072 2.52125 2.66156 2.61949 2.65217 2.34707 1.76961 1.56487 -0.32312 -0.59919 -0.75601 -0.99045 -1.12799 -1.29673 -1.4987 -1.72265 -1.93765 -2.13377 -2.49417 -2.74811 -3.05228 -3.11055 -3.14541 -3.16932 -3.0388 -3.64159 -3.54141 -3.45364 -3.58325 -3.60755 -3.82789 -4.29419 -4.61321 -5.01513 -5.60169 -6.15972 -6.69819 -7.17118 -7.50565 -7.86124 -8.16754 -8.4151 -8.57804 -8.87222 -8.97081 -9.0426 -9.32034 -9.55877 -9.67793 -9.95775 -10.22188 -10.76753 -11.22076 -11.65263 -11.95644 -12.30599 -12.73663 -13.10484 -13.21502 -13.32165 -13.42866 -13.46565 -13.53018)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (12.52741 12.1521 11.77358 11.37107 11.0715 10.63692 10.4388 10.21745 10.1696 10.13684 10.0636 10.13313 10.11732 10.07323 10.1122 10.05346 10.02126 9.9446 9.88554 9.78286 9.63903 9.41434 8.85681 8.38418 7.88106 7.46964 7.20016 6.88404 6.75594 6.73256 6.61787 6.34398 6.10574 5.90141 5.5792 5.40327 5.29337 5.30575 5.72028 5.97398 6.45169 6.94579 7.99142 8.17871 8.53392 8.68841 8.9685 9.35787 9.80993 10.18604 10.30635 9.99655 9.50308 9.06894 8.60387 8.13538 7.5635 6.84867 6.11435 5.37562 4.6822 4.25237 3.98408 3.87149 4.21647 4.74277 4.83082 4.87716 4.95224 4.30052 4.17203 3.99909 3.73825 3.50377 3.04511 2.6733 2.07262 1.51678 0.78892 0.16236 -0.40051 -0.88524 -1.02712 -1.0837 -1.01922 -0.87503 -0.57788 -0.43191 -0.45832 -0.84838 -1.22888 -1.42784 -2.03652 -2.64179 -2.37867 -2.87152 -3.18862 -3.38767 -3.20893 -2.78652 -1.45193 -0.70298 0.04522 0.3939 0.65734 0.75623 0.62498 0.23607 -0.32249 -0.91126 -2.28203 -3.40745 -4.21482 -4.82176 -5.43359 -5.8489 -6.01096 -6.28894 -6.34025 -6.52625 -6.58078 -6.67414 -6.857 -6.94546 -7.00468 -7.14348 -7.24944 -6.91546 -6.3591 -6.34964 -6.34367 -6.23998 -6.17189 -6.26301 -6.15442 -6.05818 -6.06681 -6.09098 -6.17799 -6.43442 -6.73641 -7.10933 -7.44117 -7.85907 -8.34208 -8.63284 -9.44079 -9.572 -9.67687 -9.83127 -9.89537 -9.86566 -9.78547 -9.68572 -9.45885 -9.30399 -9.02371 -8.73697 -8.41335 -8.09354 -7.76854 -7.38705 -7.11521 -7.44956 -7.43073 -7.41216 -7.48676 -7.43213 -7.35684 -7.25533 -7.11022 -6.98587 -6.76373 -6.69056 -6.51192 -6.14367 -5.98685 -5.67419 -5.29069 -4.97077 -4.59659 -3.90583 -3.35477 -2.86667 -2.44385 -2.11788 -1.91677 -1.66521 -1.46527 -1.20705 -0.94649 -0.60593 -0.22512 0.25008 0.73867 1.26262 1.46086 1.59594 1.73044 1.77865 1.80408)) (quote (2.70562 3.15915 3.57828 3.94222 4.08435 3.78641 3.47155 3.09601 3.0091 2.8371 2.68875 2.40164 2.14188 1.90872 1.60848 1.18172 0.73562 0.36825 0.175 0.14659 0.00979 -0.07713 -0.41526 -0.72194 -1.16232 -1.4816 -1.81151 -2.13025 -2.30288 -2.51342 -2.67722 -2.64037 -2.60785 -2.4801 -2.17036 -1.80192 -1.71788 -1.73373 -1.57905 -2.10046 -2.2191 -2.16798 -1.9527 -2.07667 -1.81329 -2.09723 -2.51193 -2.9462 -3.24362 -3.28512 -3.24114 -2.97303 -2.85878 -2.72859 -2.75092 -2.92882 -3.05056 -3.07847 -3.1243 -3.16786 -3.26173 -3.45854 -3.66257 -3.45206 -2.61307 -1.02148 0.5139 1.82227 2.45216 3.82847 4.24732 4.62873 4.92973 5.16615 5.42053 5.67894 6.00554 6.41178 6.79684 7.1659 7.42074 7.71737 8.01553 8.27745 8.51675 8.58983 8.53899 8.51643 8.50942 8.56153 8.62893 8.66877 8.7554 8.77005 9.27583 9.22172 9.03198 8.64758 8.24167 7.71071 7.44842 6.90047 6.39483 5.76344 5.23372 4.85919 4.58773 4.19959 3.82768 3.57311 3.2677 3.14123 3.14268 3.12793 3.04987 2.91796 2.78003 2.61396 2.46258 2.24997 1.95086 1.75224 1.49718 1.27303 1.10365 0.99094 0.94336 0.96543 1.20473 1.33212 1.49141 1.69513 1.80947 1.71554 1.62631 1.72358 1.79547 1.84878 2.07058 2.27305 2.40502 2.35651 2.38235 2.07384 1.49452 1.28365 -0.58145 -0.8525 -1.01255 -1.2508 -1.39413 -1.56766 -1.7722 -2.00163 -2.21569 -2.41721 -2.78019 -3.03428 -3.33351 -3.38683 -3.40304 -3.39686 -3.24967 -3.81327 -3.69635 -3.59955 -3.7235 -3.74293 -3.95674 -4.41241 -4.73361 -5.13941 -5.72686 -6.29784 -6.84098 -7.30606 -7.64492 -7.99188 -8.29038 -8.53163 -8.68856 -8.95685 -9.04289 -9.09842 -9.36283 -9.593 -9.71088 -9.98568 -10.25069 -10.78946 -11.23907 -11.66702 -11.97026 -12.3142 -12.72936 -13.07436 -13.18208 -13.28698 -13.39227 -13.42793 -13.49275)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (12.40717 12.00864 11.60805 11.18665 10.87757 10.45814 10.27339 10.06857 10.02419 9.99725 9.92923 10.01017 10.00718 9.97666 10.02981 9.99155 9.97386 9.91016 9.85581 9.75264 9.6128 9.38362 8.84282 8.37685 7.88679 7.4859 7.22936 6.93019 6.81401 6.80155 6.69849 6.43286 6.1994 5.99307 5.6599 5.46992 5.35115 5.35954 5.7604 6.02702 6.5029 6.98426 7.98383 8.16054 8.51406 8.66035 8.93357 9.32823 9.78408 10.15979 10.2814 9.97302 9.4708 9.02656 8.548 8.05931 7.46599 6.72836 5.96944 5.20834 4.49003 4.02799 3.73673 3.62281 3.99028 4.54943 4.66691 4.74108 4.83966 4.2537 4.13498 3.96921 3.71718 3.49142 3.04742 2.6734 2.08377 1.53187 0.8044 0.17461 -0.39315 -0.87927 -1.02336 -1.0801 -1.01558 -0.87223 -0.58826 -0.45389 -0.50011 -0.90288 -1.3042 -1.53071 -2.15517 -2.7664 -2.48133 -2.97233 -3.30024 -3.5034 -3.32859 -2.90307 -1.59874 -0.84886 -0.09882 0.26832 0.54412 0.65039 0.52757 0.15596 -0.38406 -0.96105 -2.28515 -3.38661 -4.1868 -4.79148 -5.40202 -5.81308 -5.97431 -6.23906 -6.28903 -6.46384 -6.51152 -6.59822 -6.77316 -6.85842 -6.91801 -7.05966 -7.17863 -6.87845 -6.37386 -6.39115 -6.40658 -6.32688 -6.27341 -6.36444 -6.25965 -6.17562 -6.19383 -6.22656 -6.33508 -6.6125 -6.93064 -7.31013 -7.65315 -8.06534 -8.53162 -8.82027 -9.55464 -9.67325 -9.77387 -9.92135 -9.98251 -9.94862 -9.86572 -9.76045 -9.53103 -9.36796 -9.0755 -8.77536 -8.43327 -8.10162 -7.76627 -7.3699 -7.0934 -7.38633 -7.35747 -7.33591 -7.4014 -7.34162 -7.25576 -7.13772 -6.98572 -6.85432 -6.6235 -6.53887 -6.35459 -5.98833 -5.82412 -5.50958 -5.12216 -4.79548 -4.41131 -3.71239 -3.14805 -2.65047 -2.21981 -1.88616 -1.67664 -1.41831 -1.20849 -0.9371 -0.66173 -0.30434 0.09588 0.59085 1.10124 1.64012 1.84747 1.98833 2.12862 2.17789 2.20459)) (quote (3.07532 3.52249 3.93718 4.2947 4.43008 4.12949 3.81659 3.44503 3.35015 3.17054 3.00984 2.71782 2.44695 2.20076 1.89153 1.45698 1.00177 0.62861 0.42753 0.38804 0.24421 0.14936 -0.18613 -0.48907 -0.92407 -1.24456 -1.57415 -1.89648 -2.07724 -2.29664 -2.47215 -2.45304 -2.43511 -2.31956 -2.03225 -1.6841 -1.61679 -1.64663 -1.51544 -2.05141 -2.18461 -2.15377 -1.96774 -2.1009 -1.84107 -2.14158 -2.57847 -3.03148 -3.35093 -3.42412 -3.40138 -3.15672 -3.05157 -2.93293 -2.96173 -3.1392 -3.24973 -3.25797 -3.28226 -3.30036 -3.3643 -3.53202 -3.71435 -3.49182 -2.66337 -1.09621 0.42669 1.72104 2.34169 3.66687 4.09927 4.49284 4.80097 5.04336 5.30289 5.56888 5.90266 6.32031 6.71695 7.09754 7.36038 7.66599 7.97309 8.24283 8.49093 8.57462 8.5372 8.52165 8.52216 8.57356 8.64151 8.68614 8.77343 8.78641 9.32083 9.26564 9.06797 8.66918 8.25297 7.70973 7.43479 6.87187 6.35092 5.70764 5.16709 4.78501 4.50932 4.11971 3.74495 3.48607 3.17692 3.04288 3.04368 3.02626 2.94203 2.80632 2.66509 2.49851 2.34394 2.12948 1.82578 1.62484 1.36658 1.1385 0.96773 0.85207 0.80272 0.82705 1.06293 1.18198 1.33271 1.52531 1.63136 1.53084 1.43167 1.51734 1.58027 1.625 1.83605 2.0259 2.1488 2.09378 2.11238 1.8012 1.22147 1.00497 -0.83303 -1.09852 -1.26147 -1.50307 -1.65189 -1.82995 -2.03693 -2.27156 -2.48476 -2.69127 -3.05642 -3.31025 -3.60403 -3.65218 -3.64996 -3.61416 -3.45073 -3.97518 -3.84189 -3.73637 -3.85465 -3.86928 -4.07656 -4.52169 -4.84475 -5.25406 -5.84221 -6.42522 -6.97279 -7.43068 -7.77355 -8.11239 -8.40344 -8.63852 -8.7894 -9.03288 -9.10645 -9.14611 -9.39765 -9.61973 -9.73604 -10.0059 -10.27142 -10.80332 -11.24903 -11.67266 -11.97454 -12.31231 -12.71185 -13.03422 -13.13916 -13.24216 -13.34557 -13.37992 -13.445)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (12.28254 11.86195 11.44028 11.00092 10.68292 10.27764 10.1053 9.91573 9.8751 9.85415 9.79177 9.88393 9.89377 9.87684 9.94399 9.92558 9.92214 9.87102 9.8215 9.71833 9.58252 9.34931 8.82399 8.36387 7.88557 7.49441 7.24992 6.96678 6.86234 6.86078 6.76937 6.51236 6.28407 6.07631 5.73359 5.53101 5.40438 5.40945 5.79797 6.07719 6.55153 7.02089 7.97658 8.14317 8.49507 8.63342 8.89985 9.29928 9.75836 10.13303 10.25532 9.94747 9.43642 8.98192 8.48997 7.9818 7.36825 6.60944 5.82778 5.04632 4.30568 3.81476 3.50316 3.38865 3.77628 4.36458 4.50941 4.61012 4.73094 4.20536 4.09672 3.93843 3.69507 3.47777 3.04777 2.67208 2.09313 1.54534 0.81861 0.18603 -0.38619 -0.87358 -1.01976 -1.07666 -1.01212 -0.86956 -0.59815 -0.47485 -0.54005 -0.95495 -1.37622 -1.62921 -2.26889 -2.88584 -2.58007 -3.06924 -3.40749 -3.61442 -3.44324 -3.01453 -1.73859 -0.98697 -0.23415 0.15107 0.43901 0.5525 0.43775 0.08245 -0.44002 -1.00568 -2.28619 -3.36494 -4.15847 -4.76101 -5.37024 -5.77719 -5.93754 -6.18976 -6.23834 -6.40248 -6.44347 -6.52375 -6.69107 -6.77317 -6.83306 -6.97736 -7.10869 -6.84065 -6.38498 -6.42738 -6.46279 -6.40535 -6.36531 -6.45595 -6.35412 -6.28091 -6.30766 -6.34801 -6.47638 -6.77324 -7.10653 -7.49233 -7.84591 -8.25294 -8.70373 -8.9903 -9.65677 -9.76376 -9.86026 -10.00109 -10.05923 -10.02114 -9.9355 -9.82463 -9.5927 -9.42145 -9.11708 -8.80395 -8.44432 -8.10139 -7.75697 -7.34772 -7.06742 -7.32283 -7.28503 -7.26094 -7.31797 -7.25345 -7.15772 -7.02424 -6.86561 -6.72735 -6.48817 -6.39217 -6.20227 -5.83803 -5.66655 -5.35041 -4.95939 -4.62638 -4.23278 -3.52678 -2.95007 -2.44392 -2.00614 -1.66537 -1.44783 -1.18315 -0.96379 -0.68002 -0.3906 -0.01717 0.40169 0.91551 1.4462 1.99851 2.21455 2.3609 2.50672 2.55697 2.58492)) (quote (3.423 3.86314 4.27261 4.62315 4.7516 4.44906 4.13847 3.77128 3.66899 3.48235 3.31015 3.01393 2.73309 2.47515 2.15798 1.7168 1.2534 0.87516 0.66676 0.61671 0.46631 0.36367 0.03118 -0.26815 -0.69778 -1.01917 -1.34806 -1.67314 -1.86108 -2.08845 -2.27456 -2.27186 -2.26756 -2.16366 -1.89815 -1.56989 -1.51896 -1.5624 -1.45416 -2.0039 -2.15118 -2.14 -1.98205 -2.12388 -1.86742 -2.1836 -2.64148 -3.11242 -3.45297 -3.5564 -3.55398 -3.33176 -3.23504 -3.12705 -3.1615 -3.33774 -3.4366 -3.4249 -3.42723 -3.41963 -3.45333 -3.59106 -3.75104 -3.51674 -2.69994 -1.15923 0.34824 1.62714 2.23858 3.51527 3.95988 4.36456 4.6792 4.92707 5.1913 5.46436 5.8048 6.23323 6.64084 7.0324 7.30289 7.61705 7.93267 8.20985 8.46635 8.56013 8.53548 8.52657 8.53409 8.58469 8.65288 8.70154 8.78911 8.80036 9.36266 9.30649 9.10102 8.68836 8.26215 7.70718 7.4191 6.84178 6.3061 5.65196 5.10138 4.71226 4.43276 4.04224 3.66528 3.40263 3.09098 2.95018 2.95045 2.93053 2.84054 2.70131 2.55701 2.39017 2.23268 2.01671 1.70896 1.50602 1.24501 1.01341 0.84136 0.72287 0.67143 0.69687 0.92781 1.03783 1.17945 1.36022 1.45748 1.35056 1.24139 1.31507 1.36871 1.40455 1.60384 1.78024 1.89343 1.83184 1.84285 1.52962 0.95073 0.72898 -1.07839 -1.33786 -1.50345 -1.74799 -1.90203 -2.08437 -2.2937 -2.53325 -2.74564 -2.95681 -3.32375 -3.57693 -3.86486 -3.90762 -3.88724 -3.82228 -3.64302 -4.12849 -3.97917 -3.86521 -3.97781 -3.9877 -4.18848 -4.62316 -4.94781 -5.3603 -5.949 -6.5432 -7.09499 -7.54631 -7.89283 -8.22401 -8.50794 -8.73699 -8.88176 -9.10141 -9.1626 -9.18677 -9.42585 -9.64 -9.7545 -10.0195 -10.2852 -10.81026 -11.25181 -11.6708 -11.97061 -12.30173 -12.68557 -12.98585 -13.08774 -13.18869 -13.29006 -13.32315 -13.38845)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (12.15434 11.71276 11.27092 10.81446 10.48808 10.09607 9.93528 9.75982 9.72317 9.70834 9.65195 9.75513 9.77777 9.77441 9.85538 9.85623 9.8668 9.8279 9.7833 9.68053 9.5488 9.31196 8.80102 8.34603 7.87836 7.49623 7.263 6.99506 6.90214 6.91144 6.83168 6.58357 6.36075 6.15207 5.80104 5.58718 5.45359 5.45592 5.83326 6.1248 6.59787 7.05588 7.96962 8.12651 8.47683 8.60749 8.8672 9.27096 9.73279 10.10584 10.22828 9.92017 9.40023 8.93534 8.43014 7.90314 7.27046 6.49196 5.68924 4.88926 4.12862 3.61184 3.28229 3.16787 3.57352 4.18753 4.35769 4.48375 4.62571 4.15579 4.05749 3.9069 3.67208 3.46302 3.04642 2.66954 2.10094 1.55741 0.83171 0.19672 -0.37961 -0.86814 -1.01631 -1.07336 -1.00881 -0.86702 -0.60759 -0.49491 -0.57833 -1.00486 -1.44529 -1.72384 -2.3782 -3.00068 -2.67529 -3.16266 -3.51082 -3.72123 -3.55343 -3.12143 -1.87222 -1.11817 -0.36174 0.04122 0.34107 0.46164 0.35465 0.01477 -0.49104 -1.04578 -2.28544 -3.34261 -4.1299 -4.73043 -5.3383 -5.74131 -5.90073 -6.14103 -6.18819 -6.34213 -6.37657 -6.45066 -6.61064 -6.6896 -6.74975 -6.89653 -7.03963 -6.80224 -6.39294 -6.45897 -6.51308 -6.4763 -6.44863 -6.53863 -6.43898 -6.37532 -6.40967 -6.45674 -6.60342 -6.91829 -7.2658 -7.65763 -8.0212 -8.42362 -8.86009 -9.14463 -9.74846 -9.8447 -9.93722 -10.07165 -10.1267 -10.08437 -9.99596 -9.87945 -9.64503 -9.46561 -9.14959 -8.82386 -8.44753 -8.09383 -7.74146 -7.32113 -7.03778 -7.25917 -7.21341 -7.18716 -7.23632 -7.1674 -7.06243 -6.91451 -6.74947 -6.60453 -6.35729 -6.25 -6.0545 -5.69228 -5.51367 -5.19616 -4.80182 -4.46287 -4.06033 -3.3482 -2.75994 -2.24604 -1.80178 -1.45438 -1.22918 -0.95851 -0.72993 -0.43449 -0.13168 0.25705 0.69386 1.22567 1.77536 2.33974 2.56408 2.71568 2.86676 2.91793 2.94709)) (quote (3.75099 4.18352 4.58709 4.93018 5.05157 4.74763 4.43967 4.07716 3.96796 3.77483 3.59189 3.2921 3.00231 2.73378 2.4096 1.96284 1.49206 1.10935 0.89408 0.83396 0.67739 0.5671 0.23793 -0.05795 -0.48226 -0.80429 -1.13217 -1.45928 -1.65353 -1.88807 -2.08381 -2.0963 -2.10476 -2.01201 -1.76772 -1.45897 -1.4241 -1.48075 -1.39498 -1.95776 -2.11871 -2.12665 -1.99571 -2.14576 -1.89251 -2.22354 -2.70136 -3.18954 -3.55034 -3.68271 -3.69978 -3.49909 -3.4102 -3.31204 -3.35141 -3.52571 -3.61253 -3.58068 -3.56073 -3.52727 -3.53055 -3.63762 -3.77481 -3.52897 -2.72469 -1.21204 0.27749 1.5397 2.14196 3.37255 3.82818 4.24303 4.56363 4.81654 5.08506 5.36476 5.71139 6.15002 6.56807 6.97013 7.24793 7.57028 7.89405 8.17833 8.44284 8.54627 8.53383 8.53122 8.54533 8.59503 8.66319 8.71522 8.80273 8.81219 9.40169 9.34464 9.13149 8.70542 8.26947 7.70325 7.40165 6.81042 6.26059 5.59652 5.03661 4.6409 4.35795 3.96698 3.58839 3.32247 3.00933 2.8625 2.86233 2.84008 2.74467 2.60218 2.45503 2.28812 2.12796 1.91077 1.59945 1.39482 1.13144 0.89668 0.72344 0.60219 0.5484 0.57399 0.79866 0.89908 1.03113 1.19947 1.28754 1.17441 1.05524 1.11662 1.16072 1.18745 1.37414 1.53636 1.63933 1.5711 1.57421 1.25946 0.68246 0.45584 -1.31798 -1.57109 -1.73905 -1.98618 -2.1452 -2.3316 -2.54319 -2.7874 -2.99903 -3.21451 -3.58291 -3.83512 -4.11682 -4.15404 -4.11573 -4.02211 -3.8274 -4.27411 -4.1091 -3.98696 -4.0939 -4.09912 -4.29341 -4.71774 -5.04374 -5.45912 -6.04823 -6.65287 -7.20869 -7.65398 -8.00387 -8.32778 -8.60487 -8.828 -8.96666 -9.16335 -9.21225 -9.22128 -9.44827 -9.65465 -9.76713 -10.02735 -10.29292 -10.81117 -11.24837 -11.66241 -11.95955 -12.28361 -12.6517 -12.93041 -13.02899 -13.12779 -13.227 -13.25884 -13.32435)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (12.02324 11.56164 11.10051 10.62774 10.29347 9.91393 9.76392 9.60153 9.56907 9.56045 9.51035 9.62435 9.65972 9.66988 9.76448 9.78404 9.80837 9.78135 9.74175 9.63975 9.51211 9.272 8.77446 8.32398 7.86593 7.49221 7.26952 7.01603 6.93442 6.95452 6.88636 6.64739 6.43029 6.22114 5.86292 5.63893 5.49921 5.49931 5.86653 6.17012 6.64215 7.08941 7.96294 8.11049 8.45929 8.58246 8.83552 9.2432 9.70736 10.0783 10.20041 9.89137 9.36249 8.8871 8.36879 7.82357 7.17279 6.37593 5.5537 4.73688 3.95838 3.41852 3.0732 2.95947 3.38115 4.01768 4.21125 4.36152 4.52363 4.10522 4.01747 3.87476 3.64835 3.44733 3.04357 2.66593 2.10738 1.56824 0.84383 0.20676 -0.37334 -0.86293 -1.01298 -1.07019 -1.00565 -0.86458 -0.61664 -0.51416 -0.61513 -1.05286 -1.51174 -1.81497 -2.48356 -3.11137 -2.76736 -3.25297 -3.61064 -3.82427 -3.6596 -3.22424 -2.00026 -1.24315 -0.4824 -0.06203 0.24954 0.37706 0.27752 -0.04775 -0.53768 -1.08187 -2.28312 -3.31971 -4.10118 -4.69978 -5.30628 -5.70547 -5.86393 -6.09287 -6.13858 -6.28273 -6.31077 -6.3789 -6.53179 -6.60765 -6.66802 -6.8171 -6.97144 -6.76336 -6.39812 -6.48644 -6.55809 -6.54052 -6.52422 -6.61336 -6.51518 -6.45991 -6.50097 -6.55395 -6.71751 -7.04904 -7.40989 -7.80751 -8.18054 -8.57884 -9.00212 -9.28468 -9.83075 -9.91706 -10.00569 -10.13395 -10.18586 -10.13927 -10.04806 -9.92588 -9.68898 -9.50141 -9.17397 -8.83601 -8.44374 -8.07973 -7.72043 -7.29065 -7.00494 -7.19543 -7.14257 -7.11453 -7.15633 -7.08332 -6.96967 -6.8082 -6.63694 -6.4855 -6.23045 -6.11198 -5.91089 -5.55069 -5.36505 -5.04639 -4.64899 -4.30443 -3.89341 -3.17598 -2.57691 -2.05597 -1.60581 -1.25225 -1.0197 -0.74337 -0.50587 -0.1994 0.1162 0.51957 0.97369 1.52273 2.09018 2.66543 2.8977 3.05432 3.21045 3.26247 3.29282)) (quote (4.06126 4.48566 4.88275 5.21795 5.33217 5.02734 4.72224 4.36466 4.24901 4.04989 3.85691 3.55413 3.25631 2.97823 2.64788 2.19646 1.71903 1.3324 1.11069 1.04094 0.87858 0.76077 0.43514 0.14258 -0.27649 -0.59895 -0.92556 -1.25407 -1.45389 -1.69485 -1.89933 -1.92593 -1.94634 -1.86429 -1.64066 -1.35105 -1.33193 -1.40145 -1.33767 -1.91287 -2.08709 -2.11366 -2.00879 -2.16666 -1.91646 -2.26164 -2.75846 -3.26322 -3.64352 -3.80367 -3.83947 -3.65947 -3.57786 -3.48881 -3.53244 -3.70419 -3.77862 -3.72648 -3.68401 -3.62461 -3.59737 -3.67333 -3.78743 -3.53029 -2.7392 -1.25586 0.21356 1.45802 2.05112 3.23779 3.70336 4.12753 4.4536 4.71118 4.98362 5.26955 5.62198 6.07028 6.4983 6.91041 7.19524 7.52543 7.85701 8.14811 8.42031 8.53299 8.53224 8.53564 8.55593 8.60467 8.67255 8.72737 8.81452 8.82215 9.43823 9.38037 9.15964 8.7206 8.27515 7.69811 7.38265 6.778 6.21454 5.54139 4.97278 4.57088 4.2848 3.89378 3.51404 3.24531 2.93156 2.77932 2.77878 2.75433 2.65382 2.5083 2.35849 2.19169 2.02906 1.81092 1.49644 1.2904 1.02498 0.78738 0.61305 0.48914 0.43277 0.45764 0.6749 0.76524 0.88733 1.04274 1.12131 1.00213 0.873 0.92185 0.95623 0.97367 1.14706 1.29452 1.38681 1.31189 1.30686 0.99101 0.4168 0.18562 -1.5522 -1.79863 -1.96877 -2.21816 -2.38194 -2.57219 -2.78594 -3.03458 -3.24549 -3.46498 -3.83454 -4.08547 -4.36063 -4.39214 -4.33618 -4.21438 -4.00461 -4.41285 -4.23246 -4.10237 -4.20368 -4.20427 -4.39211 -4.80619 -5.13333 -5.55136 -6.14073 -6.75514 -7.31481 -7.75457 -8.10753 -8.42455 -8.69506 -8.91239 -9.0449 -9.21945 -9.25615 -9.25037 -9.46561 -9.66436 -9.77464 -10.03014 -10.29534 -10.80682 -11.23948 -11.64833 -11.94225 -12.2589 -12.6112 -12.86884 -12.96391 -13.06043 -13.15737 -13.18801 -13.25368)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (11.88978 11.40908 10.92944 10.44111 10.09941 9.73161 9.59167 9.44144 9.41333 9.41099 9.36743 9.49204 9.54006 9.56367 9.67169 9.70944 9.74729 9.73184 9.69729 9.59639 9.47286 9.22981 8.74477 8.29826 7.84893 7.48306 7.27026 7.03052 6.96002 6.99085 6.93423 6.70457 6.49342 6.28418 5.91977 5.6867 5.54158 5.53994 5.89799 6.21339 6.68459 7.12163 7.95649 8.09503 8.44236 8.55824 8.80473 9.21597 9.68208 10.05046 10.17183 9.86124 9.32339 8.83744 8.30615 7.74329 7.07533 6.26137 5.42105 4.58893 3.79452 3.23414 2.87508 2.76257 3.19844 3.85449 4.06964 4.24307 4.42442 4.05386 3.97679 3.84212 3.62399 3.43081 3.03943 2.66139 2.11261 1.57796 0.85506 0.21622 -0.36737 -0.85793 -1.00978 -1.06714 -1.0026 -0.86224 -0.62534 -0.53269 -0.6506 -1.09912 -1.57581 -1.90295 -2.58533 -3.21831 -2.85657 -3.34044 -3.70726 -3.92388 -3.76215 -3.32336 -2.12323 -1.36251 -0.59679 -0.15933 0.16375 0.2981 0.20575 -0.10563 -0.58041 -1.1144 -2.27944 -3.29635 -4.07234 -4.66912 -5.27422 -5.66971 -5.82719 -6.04527 -6.08951 -6.22425 -6.24604 -6.30838 -6.45442 -6.52722 -6.58777 -6.73903 -6.90412 -6.72412 -6.40084 -6.51022 -6.59835 -6.59866 -6.59282 -6.68088 -6.58354 -6.53556 -6.58255 -6.64068 -6.81975 -7.16669 -7.54005 -7.94323 -8.32521 -8.71989 -9.13103 -9.41167 -9.90452 -9.98164 -10.0665 -10.18882 -10.23752 -10.18665 -10.09263 -9.96474 -9.72538 -9.52969 -9.19104 -8.84118 -8.43368 -8.05978 -7.69448 -7.2567 -6.96924 -7.13165 -7.07248 -7.04296 -7.07788 -7.00107 -6.87924 -6.70501 -6.52773 -6.36994 -6.10732 -5.97777 -5.7711 -5.41291 -5.22036 -4.90073 -4.50048 -4.15063 -3.73154 -3.00957 -2.40036 -1.87303 -1.41748 -1.05815 -0.81856 -0.53686 -0.29071 0.02621 0.35405 0.77142 1.24226 1.80781 2.39193 2.97697 3.21684 3.37827 3.53924 3.59204 3.62358)) (quote (4.35544 4.77128 5.16136 5.48832 5.59527 5.28997 4.98793 4.63548 4.5138 4.30915 4.10677 3.80151 3.49651 3.20982 2.87405 2.41882 1.93539 1.54534 1.31757 1.2386 1.07078 0.94557 0.62369 0.3343 -0.0796 -0.40233 -0.72745 -1.05683 -1.26151 -1.50824 -1.72066 -1.76036 -1.79201 -1.72023 -1.51672 -1.24591 -1.24222 -1.32429 -1.28207 -1.86911 -2.05626 -2.101 -2.02134 -2.18669 -1.93941 -2.29809 -2.81306 -3.33383 -3.73294 -3.9198 -3.97366 -3.81358 -3.73874 -3.65813 -3.70542 -3.87405 -3.93583 -3.86328 -3.79811 -3.71274 -3.655 -3.69953 -3.79036 -3.52218 -2.74476 -1.29172 0.15573 1.38148 1.96546 3.11021 3.58476 4.01748 4.34856 4.61048 4.88651 5.1783 5.53617 5.99367 6.43122 6.853 7.14459 7.48233 7.82142 8.11907 8.39866 8.52023 8.5307 8.53984 8.56598 8.61369 8.68107 8.73815 8.82467 8.83043 9.47252 9.41393 9.18572 8.73408 8.27937 7.69189 7.3623 6.74468 6.16811 5.48661 4.90988 4.50215 4.21322 3.82252 3.44205 3.17089 2.85727 2.70018 2.69935 2.67283 2.5675 2.41915 2.26684 2.10031 1.93541 1.71656 1.3993 1.19207 0.92492 0.68477 0.50942 0.38291 0.32377 0.34716 0.55602 0.63587 0.74768 0.88977 0.95857 0.8335 0.69447 0.73063 0.75515 0.76319 0.92271 1.05491 1.13615 1.05448 1.04107 0.72451 0.15383 -0.08163 -1.78139 -2.0209 -2.19302 -2.44439 -2.61272 -2.80664 -3.02246 -3.27531 -3.48552 -3.70875 -4.07917 -4.32854 -4.5969 -4.62257 -4.54922 -4.39973 -4.17525 -4.54534 -4.34989 -4.21207 -4.30776 -4.3038 -4.48523 -4.88915 -5.21725 -5.63769 -6.22721 -6.85078 -7.41414 -7.8488 -8.20458 -8.51503 -8.7792 -8.99082 -9.11718 -9.27032 -9.29493 -9.27465 -9.47845 -9.66972 -9.77763 -10.02849 -10.29308 -10.79782 -11.2258 -11.62922 -11.91945 -12.22836 -12.56488 -12.80192 -12.8933 -12.98745 -13.08202 -13.11147 -13.1773)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (11.75442 11.25545 10.75806 10.25487 9.90617 9.54944 9.41894 9.28002 9.2564 9.26039 9.22356 9.3586 9.41916 9.45612 9.57735 9.63281 9.68394 9.67977 9.65031 9.55078 9.43137 9.18569 8.71235 8.26931 7.82791 7.46938 7.26589 7.03926 6.97964 7.02112 6.97597 6.75576 6.55073 6.34176 5.97207 5.73088 5.58102 5.57805 5.92779 6.25479 6.72536 7.15266 7.95025 8.0801 8.42599 8.53476 8.77475 9.18922 9.65694 10.02238 10.14262 9.82994 9.2831 8.78654 8.24242 7.66245 6.97818 6.14826 5.29117 4.44519 3.63669 3.05814 2.68719 2.57641 3.02474 3.69752 3.93247 4.12806 4.32786 4.00185 3.93559 3.80906 3.5991 3.41358 3.03412 2.65601 2.11677 1.58669 0.86551 0.22516 -0.36166 -0.8531 -1.00667 -1.0642 -0.99968 -0.85999 -0.63372 -0.55056 -0.68486 -1.1438 -1.63773 -1.98805 -2.68383 -3.32182 -2.94318 -3.42532 -3.80098 -4.02037 -3.86138 -3.4191 -2.24158 -1.47676 -0.70551 -0.25125 0.08317 0.22422 0.13883 -0.15934 -0.61963 -1.14374 -2.27454 -3.27261 -4.04344 -4.63847 -5.24217 -5.63407 -5.79055 -5.99821 -6.04097 -6.16664 -6.18231 -6.23906 -6.37847 -6.44826 -6.50896 -6.66227 -6.83767 -6.68462 -6.40138 -6.53069 -6.63432 -6.65128 -6.65506 -6.74185 -6.64474 -6.60306 -6.65521 -6.71779 -6.9111 -7.27226 -7.65736 -8.06588 -8.45634 -8.84785 -9.24788 -9.52665 -9.97053 -10.03915 -10.12035 -10.23692 -10.28238 -10.22721 -10.13035 -9.99672 -9.75491 -9.55113 -9.20147 -8.84002 -8.41794 -8.03456 -7.6641 -7.21966 -6.931 -7.06791 -7.00313 -6.97241 -7.00088 -6.92052 -6.79097 -6.6047 -6.42159 -6.25758 -5.98762 -5.84707 -5.63486 -5.27865 -5.07929 -4.75886 -4.35597 -4.0011 -3.5743 -2.84848 -2.22973 -1.69662 -1.23613 -0.87141 -0.62506 -0.33826 -0.08371 0.24315 0.58271 1.01355 1.50051 2.08192 2.68169 3.27555 3.52269 3.68875 3.85434 3.90788 3.94058)) (quote (4.63496 5.04184 5.42445 5.74285 5.84246 5.53704 5.23823 4.89106 4.76376 4.55399 4.34281 4.03556 3.72413 3.4297 3.0892 2.63089 2.14207 1.74905 1.51557 1.42776 1.25479 1.12231 0.80433 0.51796 0.10912 -0.21374 -0.53717 -0.86693 -1.07587 -1.32775 -1.54736 -1.59927 -1.64149 -1.57958 -1.39569 -1.14333 -1.15479 -1.2491 -1.22802 -1.82639 -2.02613 -2.08865 -2.03342 -2.20591 -1.96143 -2.33304 -2.86539 -3.40164 -3.81893 -4.03154 -4.10283 -3.96196 -3.89344 -3.82065 -3.87104 -4.03606 -4.08495 -3.99192 -3.90393 -3.79261 -3.70444 -3.71735 -3.78486 -3.50589 -2.74248 -1.32048 0.10336 1.30958 1.88449 2.98915 3.47178 3.91235 4.24805 4.51399 4.79334 5.09065 5.45362 5.9199 6.36659 6.79767 7.09578 7.4408 7.78712 8.09108 8.37779 8.50793 8.52921 8.54386 8.57552 8.62214 8.68883 8.7477 8.83335 8.8372 9.50479 9.44553 9.20994 8.74604 8.28226 7.68471 7.34076 6.7106 6.12139 5.43224 4.84789 4.43467 4.14314 3.75305 3.37224 3.09901 2.78617 2.62471 2.62364 2.59517 2.48526 2.33428 2.17962 2.0135 1.8465 1.62714 1.30744 1.09925 0.83064 0.5882 0.41191 0.28287 0.22077 0.24201 0.44161 0.51061 0.61187 0.7403 0.79912 0.66832 0.51947 0.54285 0.55742 0.55597 0.70114 0.81769 0.88754 0.79907 0.77711 0.46012 -0.10636 -0.34585 -2.00586 -2.23824 -2.41215 -2.66526 -2.83795 -3.03535 -3.25317 -3.51002 -3.71956 -3.94625 -4.31727 -4.56484 -4.82614 -4.84586 -4.75539 -4.57869 -4.33984 -4.67215 -4.46193 -4.31659 -4.4067 -4.39824 -4.5733 -4.96716 -5.29604 -5.71868 -6.30825 -6.94043 -7.50731 -7.93727 -8.29564 -8.59982 -8.85786 -9.06387 -9.18409 -9.3165 -9.32911 -9.29463 -9.4873 -9.67121 -9.77661 -10.02288 -10.28664 -10.7847 -11.20785 -11.60567 -11.89177 -12.19268 -12.51343 -12.73032 -12.81783 -12.90953 -13.00165 -13.02994 -13.09589)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (11.61752 11.10108 10.58665 10.06923 9.71394 9.36767 9.24603 9.11765 9.09863 9.10899 9.07906 9.22433 9.29732 9.34752 9.48176 9.55443 9.61863 9.62545 9.60113 9.50322 9.38794 9.13989 8.67751 8.23752 7.80332 7.45167 7.25696 7.04284 6.99389 7.04593 7.01216 6.80151 6.60274 6.39436 6.0202 5.77176 5.61779 5.61388 5.9561 6.29449 6.76459 7.1826 7.94422 8.06563 8.41013 8.51196 8.74551 9.16293 9.63194 9.99408 10.11286 9.7976 9.24177 8.73456 8.17775 7.58118 6.88142 6.0366 5.16397 4.30545 3.48453 2.89002 2.5089 2.40029 2.85949 3.54634 3.79943 4.01623 4.23373 3.94933 3.89395 3.77565 3.57375 3.39573 3.02779 2.64989 2.11995 1.59452 0.87524 0.23363 -0.35619 -0.84845 -1.00367 -1.06135 -0.99685 -0.85782 -0.6418 -0.56784 -0.71802 -1.18705 -1.69767 -2.07053 -2.77933 -3.42219 -3.02739 -3.50784 -3.89204 -4.114 -3.95758 -3.51175 -2.3557 -1.58633 -0.80904 -0.33827 0.00731 0.15496 0.07629 -0.20926 -0.65567 -1.1702 -2.26858 -3.24854 -4.01451 -4.60787 -5.21015 -5.59857 -5.75402 -5.95169 -5.99295 -6.10988 -6.11957 -6.17088 -6.30387 -6.37069 -6.43152 -6.58677 -6.77208 -6.64493 -6.39997 -6.54817 -6.66639 -6.69885 -6.71147 -6.79682 -6.69939 -6.66308 -6.71969 -6.78606 -6.99242 -7.36667 -7.76276 -8.17642 -8.57491 -8.96371 -9.35358 -9.63054 -10.02944 -10.09019 -10.16783 -10.27884 -10.32101 -10.26153 -10.16182 -10.02242 -9.77819 -9.56634 -9.20586 -8.83312 -8.39705 -8.00455 -7.62971 -7.17982 -6.89048 -7.00423 -6.93449 -6.90283 -6.92523 -6.84155 -6.70471 -6.50706 -6.31827 -6.14819 -5.87109 -5.71965 -5.50191 -5.14766 -4.94159 -4.62049 -4.21513 -3.85551 -3.42137 -2.69228 -2.06457 -1.52621 -1.06122 -0.69144 -0.43858 -0.14693 0.11579 0.4521 0.80292 1.24669 1.74927 2.34591 2.96041 3.56219 3.8163 3.98679 4.15684 4.21107 4.24491)) (quote (4.90102 5.29861 5.67334 5.98289 6.0751 5.76989 5.47444 5.13266 5.00011 4.78562 4.56619 4.25737 3.94023 3.63884 3.29424 2.83354 2.33988 1.94429 1.70543 1.60913 1.43129 1.29166 0.97771 0.69422 0.29032 -0.03255 -0.35414 -0.68387 -0.89648 -1.15296 -1.37909 -1.44236 -1.49454 -1.44213 -1.27737 -1.04313 -1.06946 -1.17572 -1.17541 -1.78462 -1.99667 -2.07657 -2.04507 -2.22441 -1.98262 -2.36662 -2.91566 -3.46691 -3.90181 -4.13928 -4.22742 -4.10511 -4.04247 -3.97693 -4.02993 -4.19088 -4.22669 -4.11314 -4.00224 -3.86503 -3.74655 -3.72777 -3.77196 -3.48245 -2.73328 -1.34289 0.05595 1.24189 1.80776 2.87404 3.36395 3.81173 4.15167 4.42136 4.70375 5.00627 5.37405 5.84872 6.30418 6.74425 7.04866 7.4007 7.75401 8.06407 8.35764 8.49605 8.52776 8.5477 8.5846 8.63008 8.6959 8.75614 8.84069 8.84261 9.53522 9.47535 9.23245 8.75662 8.28396 7.67666 7.31815 6.67585 6.07448 5.37829 4.78681 4.36838 4.07449 3.68529 3.30446 3.02949 2.71798 2.55259 2.55134 2.52101 2.40676 2.2533 2.09645 1.93085 1.76191 1.54223 1.2204 1.01144 0.74161 0.49712 0.31994 0.18844 0.12323 0.14173 0.3313 0.38915 0.47964 0.59413 0.6428 0.50642 0.34785 0.35838 0.36296 0.35197 0.48239 0.58297 0.64115 0.54584 0.51515 0.198 -0.36374 -0.60703 -2.22586 -2.45093 -2.62649 -2.88111 -3.05798 -3.2587 -3.47843 -3.73909 -3.94797 -4.17787 -4.54925 -4.79479 -5.04883 -5.06249 -4.95517 -4.75175 -4.49885 -4.79377 -4.56905 -4.4164 -4.50095 -4.48804 -4.65678 -5.04068 -5.37019 -5.79485 -6.38437 -7.02465 -7.5949 -8.0205 -8.38125 -8.67944 -8.93154 -9.13205 -9.2461 -9.35842 -9.35913 -9.31074 -9.49254 -9.66922 -9.77199 -10.01373 -10.27649 -10.76791 -11.18611 -11.57814 -11.85974 -12.15238 -12.45741 -12.65458 -12.73809 -12.82726 -12.91685 -12.944 -13.01005)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (11.4794 10.94622 10.41542 9.8844 9.52289 9.18652 9.0732 8.95465 8.94032 8.95708 8.9342 9.08949 9.17478 9.2381 9.38513 9.47458 9.55163 9.56918 9.55001 9.45395 9.34279 9.09263 8.64053 8.20319 7.77555 7.43038 7.24394 7.04178 7.0033 7.06579 7.0433 6.84229 6.64991 6.44239 6.06453 5.80964 5.65211 5.64762 5.98303 6.33263 6.80243 7.21155 7.93837 8.05161 8.39474 8.48978 8.71695 9.13705 9.60709 9.96562 10.08263 9.76435 9.19952 8.68164 8.11228 7.4996 6.78509 5.92637 5.03934 4.16952 3.33775 2.72931 2.33961 2.23359 2.70217 3.40062 3.67021 3.90734 4.14186 3.89641 3.85195 3.74196 3.548 3.37733 3.02054 2.64311 2.12226 1.60155 0.88432 0.24167 -0.35094 -0.84394 -1.00075 -1.0586 -0.99412 -0.85572 -0.64963 -0.58456 -0.75016 -1.22897 -1.7558 -2.15059 -2.87208 -3.51968 -3.1094 -3.58818 -3.98064 -4.20499 -4.05098 -3.60157 -2.46592 -1.69161 -0.90781 -0.4208 -0.06423 0.08992 0.01776 -0.25574 -0.68883 -1.19405 -2.26166 -3.22421 -3.98557 -4.57733 -5.1782 -5.56323 -5.71764 -5.90569 -5.94545 -6.05392 -6.05775 -6.1038 -6.23055 -6.29446 -6.3554 -6.51248 -6.70731 -6.60513 -6.39679 -6.56292 -6.6949 -6.74179 -6.76252 -6.84627 -6.748 -6.7162 -6.77662 -6.84615 -7.06443 -7.45071 -7.8571 -8.2757 -8.68179 -9.06829 -9.44892 -9.72415 -10.08181 -10.1353 -10.20945 -10.31509 -10.35394 -10.29014 -10.18755 -10.04237 -9.79573 -9.57585 -9.20473 -8.82096 -8.37147 -7.97018 -7.59167 -7.13747 -6.84791 -6.94066 -6.86654 -6.83417 -6.85086 -6.76408 -6.62033 -6.41191 -6.2176 -6.04157 -5.75751 -5.59529 -5.37202 -5.01972 -4.80702 -4.48539 -4.07773 -3.71359 -3.27241 -2.54062 -1.90447 -1.36136 -0.89223 -0.5177 -0.25858 0.03769 0.30835 0.65369 1.01532 1.47152 1.98924 2.60052 3.22889 3.83778 4.09858 4.27333 4.44767 4.50253 4.53749)) (quote (5.15468 5.54268 5.90917 6.20962 6.29439 5.98966 5.69767 5.36138 5.22391 5.00506 4.77792 4.46793 4.14571 3.83809 3.48997 3.0275 2.52951 2.13172 1.88777 1.78332 1.60088 1.4542 1.14439 0.86363 0.46457 0.14178 -0.17785 -0.50716 -0.72294 -0.9835 -1.21553 -1.28939 -1.35095 -1.3077 -1.16161 -0.94516 -0.98609 -1.10403 -1.12411 -1.74374 -1.96781 -2.06476 -2.05632 -2.24225 -2.00304 -2.39896 -2.96404 -3.52985 -3.98183 -4.24333 -4.34779 -4.24342 -4.18629 -4.12747 -4.18259 -4.33907 -4.36162 -4.22754 -4.09369 -3.9307 -3.78207 -3.73161 -3.75258 -3.45279 -2.71796 -1.35958 0.01302 1.17804 1.73492 2.7644 3.26083 3.71523 4.05908 4.33225 4.61746 4.9249 5.29721 5.7799 6.24381 6.69256 7.00308 7.36192 7.72199 8.03793 8.33816 8.48456 8.52635 8.55138 8.59327 8.63756 8.70235 8.76356 8.84682 8.84677 9.56397 9.50355 9.25342 8.76594 8.28457 7.66783 7.2946 6.64055 6.02746 5.32481 4.72661 4.30325 4.0072 3.61913 3.23859 2.96216 2.65246 2.48354 2.48215 2.45006 2.33167 2.17589 2.01696 1.85201 1.68128 1.46145 1.13775 0.92819 0.65737 0.41104 0.23305 0.09914 0.03069 0.0459 0.22477 0.27122 0.35075 0.45107 0.48945 0.34765 0.17946 0.17713 0.17169 0.15116 0.26651 0.35085 0.39713 0.29493 0.25536 -0.06173 -0.61827 -0.86515 -2.44163 -2.65926 -2.83631 -3.09224 -3.27312 -3.47701 -3.69857 -3.96284 -4.17109 -4.40397 -4.77548 -5.01877 -5.26537 -5.27287 -5.14897 -4.9193 -4.65266 -4.9106 -4.67165 -4.51187 -4.59091 -4.57361 -4.73606 -5.11011 -5.44012 -5.86662 -6.45599 -7.1039 -7.67739 -8.09895 -8.46189 -8.75434 -9.00069 -9.19576 -9.30367 -9.39649 -9.3854 -9.32336 -9.49456 -9.66412 -9.76414 -10.00142 -10.26299 -10.74781 -11.16097 -11.54707 -11.82381 -12.10797 -12.39731 -12.57518 -12.65455 -12.74113 -12.82813 -12.85416 -12.9203)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (11.34031 10.79111 10.24456 9.70052 9.33315 9.00616 8.90065 8.79129 8.78173 8.80489 8.78917 8.95431 9.05175 9.12805 9.28768 9.39347 9.48315 9.51119 9.49719 9.40317 9.29613 9.04409 8.60166 8.16663 7.74495 7.40586 7.22726 7.03654 7.00831 7.08115 7.06983 6.87851 6.69263 6.48623 6.10534 5.84475 5.68418 5.67944 6.00871 6.36934 6.83898 7.23959 7.93268 8.03798 8.37978 8.46817 8.68903 9.11157 9.58237 9.937 10.05197 9.73028 9.15645 8.62789 8.04613 7.4178 6.68924 5.81754 4.91719 4.03723 3.19606 2.57559 2.17881 2.07575 2.55231 3.26003 3.54457 3.80117 4.05209 3.84317 3.80967 3.70804 3.52191 3.35845 3.01246 2.63574 2.12377 1.60784 0.89282 0.24931 -0.34589 -0.83958 -0.99791 -1.05592 -0.99147 -0.85369 -0.6572 -0.60078 -0.78138 -1.26968 -1.81226 -2.22842 -2.96228 -3.61449 -3.18938 -3.66651 -4.06698 -4.29355 -4.1418 -3.68875 -2.57252 -1.79292 -1.00221 -0.49921 -0.13181 0.02874 -0.0371 -0.29907 -0.71935 -1.21554 -2.25388 -3.19966 -3.95665 -4.54688 -5.14632 -5.52805 -5.68142 -5.86019 -5.89845 -5.99874 -5.99684 -6.03776 -6.15846 -6.21951 -6.28054 -6.43936 -6.64337 -6.56525 -6.39202 -6.57519 -6.72013 -6.78048 -6.80863 -6.89062 -6.79104 -6.76293 -6.82654 -6.89866 -7.12779 -7.5251 -7.94111 -8.36447 -8.77776 -9.16237 -9.53462 -9.80819 -10.12814 -10.17492 -10.24568 -10.34611 -10.38161 -10.31349 -10.20801 -10.05703 -9.80798 -9.5801 -9.1985 -8.80397 -8.34159 -7.93184 -7.55032 -7.09283 -6.80347 -6.8772 -6.79926 -6.76639 -6.7777 -6.68802 -6.53772 -6.31908 -6.11939 -5.93753 -5.64669 -5.47377 -5.24501 -4.89461 -4.67538 -4.35334 -3.94352 -3.57508 -3.12717 -2.39318 -1.74907 -1.20166 -0.72876 -0.34976 -0.0846 0.21609 0.49447 0.84843 1.22047 1.68866 2.22102 2.84641 3.48786 4.10312 4.37034 4.54919 4.72765 4.78311 4.81916)) (quote (5.39687 5.77501 6.13294 6.42408 6.50137 6.19735 5.90892 5.57818 5.43612 5.21325 4.97887 4.66808 4.34139 4.02821 3.6771 3.21341 2.71156 2.31191 2.06317 1.95086 1.76406 1.61046 1.30486 1.0267 0.63233 0.30971 -0.00785 -0.33642 -0.55488 -0.81903 -1.05638 -1.14012 -1.21053 -1.17611 -1.04826 -0.84928 -0.90455 -1.0339 -1.07404 -1.70368 -1.93951 -2.05318 -2.06721 -2.25948 -2.02277 -2.43015 -3.01069 -3.59064 -4.05922 -4.344 -4.46427 -4.37727 -4.32527 -4.27269 -4.32951 -4.48114 -4.49029 -4.33568 -4.17887 -3.99021 -3.81165 -3.7296 -3.72749 -3.41766 -2.69723 -1.37109 -0.02581 1.11771 1.66563 2.65979 3.16204 3.62253 3.96998 4.2464 4.5342 4.84629 5.22288 5.71327 6.18532 6.64247 6.95891 7.32434 7.69097 8.01261 8.31928 8.47343 8.52498 8.55491 8.60154 8.6446 8.70823 8.77006 8.85184 8.8498 9.59117 9.53025 9.27297 8.77411 8.2842 7.65829 7.27019 6.60476 5.98038 5.27179 4.66728 4.23924 3.94122 3.55448 3.1745 2.8969 2.58941 2.41731 2.41582 2.38205 2.25972 2.10176 1.94088 1.77666 1.60427 1.38444 1.05915 0.84915 0.57754 0.32957 0.15081 0.01455 -0.05727 -0.04582 0.12174 0.15657 0.22498 0.31096 0.33895 0.19186 0.01418 -9.9E-4 -0.01645 -0.04653 0.05352 0.12139 0.15558 0.04645 -0.00212 -0.31898 -0.86993 -1.12024 -2.65337 -2.86345 -3.04187 -3.29892 -3.48366 -3.69056 -3.91389 -4.1816 -4.38921 -4.62485 -4.99628 -5.23712 -5.47611 -5.47737 -5.33715 -5.08171 -4.80164 -5.02302 -4.77011 -4.60336 -4.67692 -4.65529 -4.8115 -5.17579 -5.50617 -5.93435 -6.5235 -7.1786 -7.7552 -8.17302 -8.53795 -8.82489 -9.06566 -9.25539 -9.35715 -9.43102 -9.40824 -9.3328 -9.49365 -9.65621 -9.75339 -9.98625 -10.24647 -10.72475 -11.13277 -11.5128 -11.78436 -12.05985 -12.33356 -12.49252 -12.56765 -12.65157 -12.73592 -12.76084 -12.82705)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (11.20049 10.63591 10.07422 9.51772 9.14483 8.82671 8.72858 8.6278 8.62307 8.65263 8.64417 8.81896 8.92842 9.01756 9.18958 9.31129 9.4134 9.45167 9.44286 9.35107 9.24814 8.99443 8.5611 8.12805 7.7118 7.37846 7.20727 7.02751 7.00933 7.0924 7.09214 6.91055 6.73124 6.5262 6.14292 5.8773 5.71417 5.70947 6.03322 6.40472 6.87434 7.26678 7.92715 8.02472 8.36523 8.4471 8.6617 9.08646 9.5578 9.90827 10.02094 9.69546 9.11266 8.57342 7.9794 7.33584 6.59392 5.71011 4.79743 3.90843 3.05922 2.42849 2.026 1.92627 2.40949 3.12428 3.42228 3.69754 3.96428 3.7897 3.76717 3.67393 3.49553 3.33913 3.00363 2.62783 2.12456 1.61345 0.90076 0.25659 -0.34102 -0.83535 -0.99515 -1.05332 -0.98891 -0.85173 -0.66455 -0.61653 -0.81173 -1.30927 -1.86718 -2.30418 -3.05012 -3.70681 -3.26746 -3.74296 -4.15121 -4.37985 -4.23022 -3.7735 -2.67578 -1.89054 -1.09255 -0.57381 -0.19573 -0.02887 -0.08858 -0.3395 -0.74746 -1.23485 -2.24533 -3.17492 -3.92777 -4.51652 -5.11454 -5.49306 -5.64538 -5.8152 -5.85195 -5.94431 -5.93679 -5.97274 -6.08756 -6.14578 -6.20689 -6.36737 -6.58024 -6.52534 -6.38581 -6.58517 -6.74235 -6.81521 -6.85015 -6.93025 -6.82891 -6.80372 -6.86996 -6.94412 -7.18308 -7.59047 -8.01547 -8.4434 -8.86351 -9.2466 -9.61133 -9.88329 -10.16887 -10.20946 -10.27692 -10.3723 -10.40442 -10.33196 -10.22359 -10.0668 -9.81535 -9.57949 -9.18759 -8.78253 -8.30776 -7.88985 -7.50593 -7.04611 -6.75735 -6.8139 -6.73262 -6.69946 -6.70569 -6.61328 -6.45677 -6.22842 -6.02349 -5.83591 -5.53845 -5.35494 -5.1207 -4.77218 -4.54651 -4.22414 -3.81231 -3.43976 -2.9854 -2.24967 -1.59805 -1.04676 -0.57041 -0.18722 0.08377 0.38868 0.67459 1.03679 1.41888 1.89864 2.44519 3.08416 3.73794 4.35887 4.63228 4.81506 4.9975 5.05351 5.09066)) (quote (5.62842 5.99647 6.34554 6.62717 6.69695 6.39386 6.10905 5.7839 5.63756 5.41099 5.16983 4.85858 4.52796 4.20985 3.85624 3.39186 2.88658 2.48539 2.2321 2.11224 1.92131 1.76087 1.45956 1.18385 0.79406 0.47167 0.15627 -0.17126 -0.39197 -0.65927 -0.9014 -0.99434 -1.07312 -1.04722 -0.93717 -0.75536 -0.82472 -0.96525 -1.0251 -1.66437 -1.91174 -2.04182 -2.07777 -2.27615 -2.04184 -2.46029 -3.05574 -3.64946 -4.13417 -4.44153 -4.57715 -4.50698 -4.45977 -4.41296 -4.47108 -4.61752 -4.61315 -4.43804 -4.25828 -4.0441 -3.83584 -3.72235 -3.69736 -3.37774 -2.67167 -1.37791 -0.06088 1.06061 1.59962 2.55983 3.06728 3.53334 3.8841 4.16355 4.45374 4.77025 5.15088 5.64866 6.12857 6.59386 6.91605 7.28788 7.66086 7.98805 8.30096 8.46263 8.52364 8.55831 8.60947 8.65126 8.71359 8.7757 8.85584 8.85179 9.61695 9.55558 9.29121 8.78123 8.28292 7.64811 7.24502 6.56857 5.93329 5.21925 4.60879 4.1763 3.87649 3.49128 3.11209 2.83356 2.52865 2.3537 2.35213 2.31676 2.19068 2.03067 1.86794 1.70454 1.53061 1.31092 0.98427 0.77398 0.50176 0.25233 0.07285 -0.0657 -0.141 -0.13376 0.02197 0.04499 0.10214 0.17364 0.19116 0.03891 -0.1481 -0.17608 -0.20153 -0.24111 -0.15659 -0.10533 -0.0834 -0.19951 -0.25719 -0.57369 -1.11872 -1.37227 -2.86129 -3.06372 -3.24338 -3.50139 -3.68984 -3.89961 -4.12464 -4.39562 -4.6026 -4.84079 -5.21193 -5.45015 -5.68138 -5.67633 -5.52006 -5.2393 -4.94608 -5.13133 -4.86471 -4.69117 -4.7593 -4.73338 -4.8834 -5.23802 -5.56865 -5.99837 -6.58723 -7.24912 -7.8287 -8.24304 -8.6098 -8.89145 -9.1268 -9.31125 -9.40688 -9.46232 -9.42794 -9.33935 -9.49008 -9.64575 -9.73999 -9.96849 -10.22722 -10.699 -11.1018 -11.47564 -11.74174 -12.00838 -12.26653 -12.40696 -12.47774 -12.55896 -12.6406 -12.66445 -12.7307)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (11.06012 10.48079 9.90454 9.33609 8.95799 8.64831 8.55713 8.46437 8.46452 8.50048 8.49935 8.6836 8.80493 8.90676 9.09096 9.2282 9.34254 9.39082 9.3872 9.2978 9.19897 8.94379 8.51903 8.08768 7.67636 7.34845 7.18429 7.01502 7.0067 7.09988 7.11056 6.93871 6.76605 6.56257 6.17749 5.90748 5.74224 5.73786 6.05666 6.43887 6.9086 7.29319 7.92176 8.0118 8.35104 8.42652 8.63493 9.06169 9.53336 9.87943 9.98958 9.65998 9.06822 8.5183 7.91217 7.25381 6.49914 5.60404 4.67999 3.78295 2.92697 2.28766 1.88075 1.78466 2.27333 2.99311 3.30313 3.59629 3.8783 3.73605 3.72448 3.63967 3.4689 3.31944 2.99413 2.61943 2.1247 1.61845 0.90821 0.26354 -0.33632 -0.83123 -0.99245 -1.05079 -0.98642 -0.84982 -0.67169 -0.63185 -0.84128 -1.34782 -1.92067 -2.37802 -3.13575 -3.79683 -3.34378 -3.81768 -4.23347 -4.46404 -4.3164 -3.85598 -2.77591 -1.98475 -1.17914 -0.6449 -0.25628 -0.0832 -0.13694 -0.37726 -0.77335 -1.25218 -2.23609 -3.15004 -3.89894 -4.48627 -5.08287 -5.45826 -5.60951 -5.77068 -5.80593 -5.8906 -5.87758 -5.90868 -6.01778 -6.07324 -6.13442 -6.29647 -6.51789 -6.48544 -6.37829 -6.59306 -6.76178 -6.84629 -6.8874 -6.96549 -6.86197 -6.839 -6.9073 -6.983 -7.23083 -7.6474 -8.08077 -8.51311 -8.93967 -9.32161 -9.67959 -9.95002 -10.20439 -10.23929 -10.30351 -10.394 -10.42272 -10.34592 -10.23465 -10.07203 -9.8182 -9.5744 -9.17235 -8.75699 -8.27028 -7.8445 -7.45875 -6.99748 -6.70968 -6.75076 -6.66661 -6.63333 -6.63477 -6.53981 -6.37738 -6.13981 -5.92976 -5.73658 -5.43264 -5.23864 -4.99894 -4.65225 -4.42022 -4.09762 -3.68392 -3.30745 -2.8469 -2.10985 -1.45113 -0.89637 -0.41685 -0.02971 0.24691 0.55586 0.84912 1.21921 1.61098 2.10189 2.66222 3.31429 3.97971 4.60567 4.88501 5.0716 5.25786 5.31439 5.35263)) (quote (5.85004 6.20779 6.54774 6.81969 6.88196 6.57996 6.29883 5.9793 5.82897 5.599 5.35149 5.04008 4.70607 4.3836 4.02795 3.56335 3.05504 2.65259 2.39501 2.26787 2.07301 1.90585 1.60887 1.33549 0.95014 0.62802 0.31487 -0.01136 -0.23391 -0.50394 -0.75036 -0.85189 -0.93856 -0.92089 -0.82824 -0.66329 -0.7465 -0.89797 -0.97722 -1.62579 -1.88446 -2.03067 -2.08802 -2.29229 -2.06032 -2.48945 -3.09932 -3.70644 -4.20687 -4.53614 -4.68668 -4.63284 -4.59008 -4.54863 -4.60766 -4.74859 -4.7306 -4.53504 -4.33237 -4.09284 -3.85514 -3.71041 -3.66277 -3.33362 -2.64181 -1.38045 -0.09251 1.0065 1.53664 2.4642 2.97624 3.4474 3.80121 4.08349 4.3759 4.69657 5.08104 5.58592 6.07342 6.54662 6.8744 7.25245 7.63161 7.96418 8.28316 8.45214 8.52234 8.56159 8.61706 8.65755 8.71846 8.78056 8.8589 8.85282 9.64141 9.57963 9.30825 8.78737 8.2808 7.63732 7.21916 6.53201 5.88624 5.16721 4.55114 4.11441 3.81297 3.42944 3.05127 2.77204 2.47002 2.29252 2.2909 2.254 2.12432 1.96237 1.7979 1.6354 1.46006 1.24063 0.91283 0.70239 0.42973 0.179 -0.00114 -0.14194 -0.22082 -0.21817 -0.07476 -0.06371 -0.01792 0.03898 0.04597 -0.11129 -0.30751 -0.34822 -0.38362 -0.43266 -0.3638 -0.32929 -0.31976 -0.44287 -0.50976 -0.82578 -1.36461 -1.62128 -3.06554 -3.26026 -3.44106 -3.69987 -3.89188 -4.1044 -4.33105 -4.60514 -4.81151 -5.05204 -5.4227 -5.65812 -5.88146 -5.87003 -5.69797 -5.39235 -5.08628 -5.23584 -4.95574 -4.77557 -4.8383 -4.80815 -4.95203 -5.29708 -5.62786 -6.05897 -6.64746 -7.31577 -7.89821 -8.30932 -8.67775 -8.95431 -9.18438 -9.36363 -9.45314 -9.49064 -9.44477 -9.34326 -9.48408 -9.63297 -9.72419 -9.94838 -10.20548 -10.67081 -11.06833 -11.43588 -11.69624 -11.95388 -12.19654 -12.31882 -12.38515 -12.46362 -12.5425 -12.56529 -12.63158)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (10.91937 10.32588 9.73561 9.15572 8.77271 8.47105 8.38641 8.30116 8.30623 8.34857 8.35483 8.54836 8.68141 8.79577 8.99195 9.14434 9.27072 9.32879 9.33036 9.24349 9.14874 8.89228 8.4756 8.0457 7.63887 7.31608 7.15858 6.9994 7.00072 7.10389 7.1254 6.96328 6.79733 6.59561 6.20926 5.93546 5.76851 5.76472 6.0791 6.47187 6.94183 7.31887 7.9165 7.99921 8.3372 8.40641 8.60867 9.03725 9.50905 9.85052 9.95793 9.62391 9.0232 8.46262 7.84453 7.17176 6.40494 5.49931 4.56479 3.66067 2.79913 2.15279 1.74266 1.65052 2.14349 2.86628 3.18695 3.49726 3.79405 3.6823 3.68167 3.60529 3.44206 3.29941 2.98401 2.61058 2.12422 1.62288 0.9152 0.27017 -0.33178 -0.82723 -0.98983 -1.04832 -0.984 -0.84796 -0.67863 -0.64676 -0.87009 -1.3854 -1.97281 -2.45005 -3.21931 -3.88468 -3.41845 -3.89076 -4.31389 -4.54627 -4.40049 -3.93634 -2.87312 -2.07576 -1.26222 -0.71271 -0.31369 -0.13448 -0.18242 -0.41255 -0.7972 -1.26768 -2.22621 -3.12504 -3.87018 -4.45614 -5.05132 -5.42365 -5.57384 -5.72664 -5.76039 -5.83759 -5.81917 -5.84555 -5.9491 -6.00184 -6.06307 -6.22663 -6.45631 -6.44559 -6.36956 -6.599 -6.77863 -6.87397 -6.92067 -6.99663 -6.89055 -6.86912 -6.93898 -7.01572 -7.27151 -7.69638 -8.13756 -8.57414 -9.00679 -9.38793 -9.73993 -10.0089 -10.23504 -10.26472 -10.32578 -10.41152 -10.43681 -10.35568 -10.24149 -10.07303 -9.81684 -9.56513 -9.15307 -8.72764 -8.22944 -7.79605 -7.409 -6.94711 -6.66061 -6.6878 -6.60121 -6.56798 -6.56488 -6.46754 -6.29947 -6.05313 -5.83808 -5.6394 -5.32914 -5.12473 -4.87958 -4.53469 -4.29638 -3.97365 -3.55817 -3.17797 -2.71147 -1.97348 -1.30807 -0.75018 -0.26779 0.12309 0.40513 0.71796 1.01837 1.39603 1.79716 2.29885 2.87255 3.53728 4.21367 4.84406 5.12912 5.31938 5.50931 5.56634 5.60564)) (quote (6.06238 6.40966 6.74024 7.00238 7.05711 6.75638 6.47897 6.16507 6.01101 5.77792 5.52447 5.2132 4.87626 4.54997 4.19271 3.72833 3.21736 2.81392 2.55228 2.41813 2.21953 2.04574 1.75315 1.48195 1.1009 0.77911 0.46826 0.14357 -0.08045 -0.35282 -0.60306 -0.71259 -0.80672 -0.797 -0.72136 -0.57298 -0.66981 -0.83199 -0.93033 -1.58787 -1.85764 -2.01971 -2.09797 -2.30796 -2.07824 -2.5177 -3.14152 -3.76172 -4.27746 -4.62803 -4.79308 -4.75508 -4.71649 -4.67999 -4.73958 -4.87472 -4.84302 -4.62706 -4.40153 -4.13683 -3.86999 -3.69427 -3.62426 -3.28581 -2.60811 -1.37908 -0.12094 0.95515 1.47646 2.3726 2.88867 3.3645 3.7211 4.00603 4.30048 4.62511 5.01321 5.52493 6.01977 6.50066 6.83388 7.21798 7.60316 7.94096 8.26584 8.44193 8.52106 8.56475 8.62436 8.66351 8.72288 8.7847 8.86109 8.85296 9.66466 9.60251 9.32416 8.79262 8.27792 7.626 7.19267 6.49516 5.83927 5.11566 4.49429 4.05354 3.75059 3.36891 2.99195 2.71223 2.41338 2.23359 2.23195 2.19358 2.06046 1.89669 1.73057 1.56904 1.39238 1.17334 0.8446 0.63412 0.36118 0.10931 -0.07146 -0.21446 -0.29701 -0.29932 -0.16864 -0.1697 -0.13535 -0.09315 -0.09671 -0.25886 -0.46414 -0.51749 -0.56277 -0.62121 -0.56812 -0.55044 -0.55343 -0.68359 -0.75975 -1.07521 -1.60764 -1.86727 -3.2663 -3.45325 -3.63507 -3.89455 -4.08999 -4.30512 -4.53334 -4.81038 -5.01613 -5.25881 -5.62882 -5.86128 -6.07662 -6.05875 -5.87116 -5.54113 -5.22246 -5.33677 -5.04345 -4.85679 -4.91416 -4.87983 -5.01761 -5.3532 -5.68402 -6.1164 -6.70446 -7.37884 -7.96402 -8.37213 -8.74208 -9.01374 -9.23866 -9.41279 -9.49618 -9.51622 -9.45894 -9.34474 -9.47586 -9.61807 -9.7062 -9.92612 -10.18148 -10.64041 -11.03257 -11.39373 -11.64812 -11.89662 -12.12387 -12.22835 -12.29016 -12.36584 -12.44191 -12.46366 -12.52996)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (10.77839 10.1713 9.56753 8.97667 8.58904 8.295 8.21654 8.13831 8.14833 8.19703 8.21073 8.41337 8.55798 8.68471 8.89267 9.05985 9.19806 9.26572 9.27246 9.18827 9.09759 8.84003 8.43097 8.00226 7.59951 7.28158 7.13041 6.98089 6.99167 7.10471 7.13691 6.98453 6.82532 6.62553 6.23842 5.96137 5.79312 5.79015 6.1006 6.50381 6.9741 7.34387 7.91137 7.98691 8.32369 8.38673 8.5829 9.01313 9.48487 9.82153 9.92601 9.58728 8.97766 8.40644 7.77653 7.08973 6.31131 5.3959 4.45175 3.54146 2.67548 2.02358 1.61137 1.52345 2.01965 2.74359 3.07357 3.40034 3.71143 3.62847 3.63876 3.57082 3.41502 3.27908 2.97334 2.60134 2.12319 1.62678 0.92176 0.27652 -0.32739 -0.82334 -0.98726 -1.04592 -0.98164 -0.84616 -0.68539 -0.6613 -0.8982 -1.42206 -2.02371 -2.5204 -3.30095 -3.9705 -3.49157 -3.96231 -4.39259 -4.62665 -4.48262 -4.01471 -2.96758 -2.16378 -1.34204 -0.77747 -0.36819 -0.18293 -0.22521 -0.44554 -0.81914 -1.28149 -2.21577 -3.09994 -3.8415 -4.42614 -5.0199 -5.38925 -5.53837 -5.68305 -5.71531 -5.78525 -5.76155 -5.78333 -5.88146 -5.93153 -5.99282 -6.15782 -6.39549 -6.40579 -6.35974 -6.60315 -6.79307 -6.89846 -6.95023 -7.02394 -6.91493 -6.8944 -6.96534 -7.04267 -7.30554 -7.73791 -8.18633 -8.62699 -9.06539 -9.44607 -9.79282 -10.06038 -10.26115 -10.28603 -10.34402 -10.42513 -10.44698 -10.36151 -10.2444 -10.07011 -9.81155 -9.55197 -9.13005 -8.69475 -8.18547 -7.74473 -7.35687 -6.89514 -6.61026 -6.62504 -6.5364 -6.50337 -6.49599 -6.3964 -6.22297 -5.96826 -5.74834 -5.54425 -5.22779 -5.01308 -4.76251 -4.41938 -4.17487 -3.85206 -3.43492 -3.05115 -2.57893 -1.84038 -1.16863 -0.60797 -0.12295 0.27144 0.55873 0.87529 1.18269 1.56762 1.97777 2.4899 3.07658 3.7535 4.44026 5.07456 5.36511 5.55889 5.75237 5.80986 5.85021)) (quote (6.26603 6.60267 6.92368 7.17586 7.22307 6.92373 6.65007 6.3418 6.18427 5.94832 5.68932 5.37846 5.03904 4.70944 4.35095 3.88721 3.37393 2.96975 2.70427 2.56335 2.3612 2.18088 1.89269 1.62355 1.24668 0.92524 0.61674 0.2938 0.06867 -0.20568 -0.45931 -0.57629 -0.67747 -0.67544 -0.61642 -0.48434 -0.59455 -0.76723 -0.88437 -1.55058 -1.83124 -2.00894 -2.10766 -2.32317 -2.09564 -2.5451 -3.18244 -3.8154 -4.34609 -4.71738 -4.89656 -4.87394 -4.83924 -4.80729 -4.86712 -4.9962 -4.95073 -4.71444 -4.46612 -4.17645 -3.88077 -3.67435 -3.58226 -3.23476 -2.57097 -1.37414 -0.14643 0.90637 1.4189 2.28477 2.80434 3.28442 3.64359 3.93099 4.22734 4.55571 4.94726 5.46556 5.96752 6.45589 6.79441 7.18441 7.57544 7.91834 8.24897 8.43198 8.51981 8.5678 8.63137 8.66916 8.72689 8.78816 8.86248 8.85228 9.68676 9.62429 9.33904 8.79702 8.27432 7.61417 7.16561 6.45804 5.79241 5.06461 4.43824 3.99364 3.68933 3.30962 2.93406 2.65404 2.3586 2.17678 2.17513 2.13535 1.99893 1.83343 1.66576 1.50526 1.32739 1.10884 0.77934 0.56894 0.29586 0.043 -0.13836 -0.28352 -0.36981 -0.37741 -0.25985 -0.27314 -0.2503 -0.22285 -0.23698 -0.4039 -0.61807 -0.68396 -0.73905 -0.8068 -0.76957 -0.76877 -0.78436 -0.92159 -1.00711 -1.32195 -1.84778 -2.11027 -3.46369 -3.64283 -3.82559 -4.0856 -4.28436 -4.50198 -4.7317 -5.01154 -5.21667 -5.46132 -5.8305 -6.05986 -6.2671 -6.24273 -6.03986 -5.68586 -5.35486 -5.43437 -5.12804 -4.93504 -4.9871 -4.94864 -5.08037 -5.40658 -5.73735 -6.17089 -6.75846 -7.43857 -8.02639 -8.43171 -8.80304 -9.06997 -9.28988 -9.45895 -9.53625 -9.53924 -9.47067 -9.34398 -9.46561 -9.60122 -9.68621 -9.90191 -10.1554 -10.60798 -10.99474 -11.34942 -11.59762 -11.83685 -12.04878 -12.1358 -12.19301 -12.26586 -12.3391 -12.35982 -12.42612)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (10.63729 10.01714 9.40036 8.79899 8.40701 8.12022 8.0476 7.97594 7.99094 8.04597 8.06713 8.2787 8.43471 8.57366 8.7932 8.97481 9.12467 9.20172 9.21364 9.13224 9.04561 8.7871 8.38524 7.95752 7.55846 7.24513 7.09998 6.95975 6.9798 7.10258 7.14535 7.00267 6.85024 6.65254 6.26515 5.98536 5.81616 5.81424 6.12124 6.53474 7.00548 7.36824 7.90636 7.97489 8.31048 8.36746 8.55758 8.9893 9.46082 9.79249 9.89386 9.55017 8.93165 8.34983 7.70823 7.00776 6.2183 5.29378 4.3408 3.4252 2.55584 1.89976 1.48654 1.4031 1.90151 2.62484 2.96285 3.30538 3.63034 3.57462 3.59578 3.53628 3.38783 3.25847 2.96214 2.59172 2.12164 1.63019 0.92792 0.28261 -0.32314 -0.81954 -0.98475 -1.04357 -0.97935 -0.8444 -0.69198 -0.67549 -0.92566 -1.45788 -2.07343 -2.58917 -3.38077 -4.05442 -3.56324 -4.03243 -4.46968 -4.70529 -4.56291 -4.09121 -3.05947 -2.249 -1.41879 -0.83938 -0.41996 -0.22873 -0.2655 -0.47641 -0.83933 -1.29374 -2.20481 -3.07477 -3.8129 -4.39627 -4.98862 -5.35505 -5.50311 -5.63991 -5.67069 -5.73355 -5.70468 -5.72197 -5.81482 -5.86228 -5.92362 -6.08999 -6.3354 -6.36609 -6.3489 -6.60564 -6.80528 -6.91997 -6.9763 -7.04767 -6.93538 -6.91515 -6.98671 -7.0642 -7.33333 -7.77239 -8.22752 -8.67212 -9.11594 -9.49647 -9.83866 -10.10488 -10.28299 -10.30349 -10.35846 -10.43509 -10.45349 -10.36368 -10.24364 -10.0635 -9.80259 -9.53517 -9.10353 -8.65857 -8.1386 -7.69075 -7.30255 -6.84169 -6.55872 -6.56247 -6.47216 -6.43948 -6.42805 -6.32635 -6.14781 -5.88513 -5.66044 -5.45102 -5.1285 -4.90357 -4.6476 -4.3062 -4.05555 -3.73275 -3.31405 -2.92685 -2.44913 -1.71034 -1.03262 -0.46949 0.01791 0.41562 0.70799 1.02813 1.34234 1.73426 2.15315 2.67537 3.27466 3.96336 4.65992 5.29758 5.59343 5.79062 5.98753 6.04545 6.08683)) (quote (6.46152 6.78737 7.09862 7.34073 7.38041 7.08259 6.8127 6.51004 6.34929 6.11073 5.84654 5.53634 5.19487 4.86242 4.50309 4.04035 3.52509 3.1204 2.85128 2.70383 2.4983 2.31155 2.02777 1.76057 1.38773 1.06668 0.76057 0.43958 0.21365 -0.06233 -0.31893 -0.44285 -0.5507 -0.55611 -0.51335 -0.39728 -0.52065 -0.70363 -0.83929 -1.51388 -1.80526 -1.99833 -2.1171 -2.33796 -2.11256 -2.57172 -3.22216 -3.8676 -4.41289 -4.80435 -4.99728 -4.98963 -4.95853 -4.9308 -4.99054 -5.11332 -5.05402 -4.79747 -4.52646 -4.21203 -3.88783 -3.65102 -3.53719 -3.18087 -2.53077 -1.36592 -0.16918 0.85999 1.36378 2.20046 2.72305 3.207 3.56851 3.85822 4.15632 4.48824 4.88307 5.40772 5.91658 6.41222 6.75592 7.15168 7.54842 7.89629 8.23252 8.42229 8.51859 8.57075 8.63812 8.67451 8.73052 8.791 8.86311 8.85083 9.7078 9.64504 9.35293 8.80065 8.27005 7.60188 7.13803 6.42071 5.74568 5.01406 4.38297 3.93469 3.62914 3.25153 2.87753 2.5974 2.30556 2.12193 2.1203 2.07916 1.93959 1.77246 1.60331 1.44391 1.26491 1.04695 0.71686 0.50665 0.23357 -0.02016 -0.20207 -0.34935 -0.43946 -0.45264 -0.34854 -0.37415 -0.36288 -0.35022 -0.37494 -0.5465 -0.76941 -0.84771 -0.91252 -0.98949 -0.96814 -0.98425 -1.01252 -1.15686 -1.25179 -1.56597 -2.08507 -2.35031 -3.65784 -3.82916 -4.01277 -4.27319 -4.47513 -4.69513 -4.92629 -5.20879 -5.41331 -5.65975 -6.02794 -6.25406 -6.4531 -6.42218 -6.20429 -5.82675 -5.48367 -5.52884 -5.20972 -5.01051 -5.05731 -5.01476 -5.14049 -5.45741 -5.78806 -6.22264 -6.80966 -7.49519 -8.08555 -8.48827 -8.86084 -9.12322 -9.33824 -9.50231 -9.57353 -9.5599 -9.48012 -9.34117 -9.45349 -9.5826 -9.66438 -9.87591 -10.12743 -10.5737 -10.95501 -11.30314 -11.54494 -11.77479 -11.97148 -12.04138 -12.09393 -12.16391 -12.23427 -12.25399 -12.32027)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (10.49618 9.86348 9.23418 8.62273 8.22666 7.94677 7.87966 7.81416 7.83414 7.89547 7.92413 8.14445 8.31171 8.4627 8.69363 8.88933 9.05067 9.1369 9.15399 9.07548 8.99288 8.73359 8.33852 7.91159 7.51587 7.20692 7.06749 6.93619 6.96531 7.09771 7.15092 7.01792 6.87229 6.67683 6.28958 6.00754 5.83773 5.83708 6.14105 6.56474 7.03601 7.39201 7.90146 7.96314 8.29755 8.34857 8.5327 8.96575 9.43689 9.7634 9.86149 9.51261 8.88523 8.29283 7.63968 6.9259 6.12589 5.19292 4.23188 3.31178 2.44004 1.78109 1.36784 1.28912 1.78881 2.50984 2.85464 3.2123 3.55071 3.52079 3.55276 3.5017 3.3605 3.23763 2.95048 2.58176 2.11962 1.63316 0.93371 0.28844 -0.31901 -0.81583 -0.9823 -1.04128 -0.97711 -0.84269 -0.69841 -0.68935 -0.95251 -1.4929 -2.12205 -2.65644 -3.45888 -4.13653 -3.63354 -4.10119 -4.54523 -4.78229 -4.64145 -4.16595 -3.14893 -2.33157 -1.49267 -0.89862 -0.46919 -0.27206 -0.30345 -0.50529 -0.85788 -1.30455 -2.19337 -3.04954 -3.7844 -4.36654 -4.95749 -5.32105 -5.46805 -5.59721 -5.62651 -5.68249 -5.64853 -5.66145 -5.74917 -5.79406 -5.85543 -6.02313 -6.27604 -6.3265 -6.33714 -6.60658 -6.81538 -6.93869 -6.99909 -7.06802 -6.95213 -6.93163 -7.00339 -7.08062 -7.35521 -7.80023 -8.26156 -8.70994 -9.15888 -9.53956 -9.87785 -10.1428 -10.30081 -10.31734 -10.36936 -10.44162 -10.45655 -10.3624 -10.23942 -10.05345 -9.7902 -9.51497 -9.07373 -8.6193 -8.08903 -7.6343 -7.24619 -6.78688 -6.50609 -6.50012 -6.40848 -6.37628 -6.36102 -6.25733 -6.07392 -5.80363 -5.57427 -5.35963 -5.03117 -4.79611 -4.53475 -4.19503 -3.93833 -3.6156 -3.19542 -2.80495 -2.32193 -1.58322 -0.89984 -0.33454 0.15502 0.55585 0.85314 1.17671 1.4976 1.89622 2.32358 2.85555 3.46711 4.16719 4.873 5.51356 5.8145 6.01498 6.21519 6.27351 6.31593)) (quote (6.64931 6.96425 7.26557 7.49751 7.52967 7.23347 6.96737 6.6703 6.50655 6.26563 5.99659 5.68729 5.34416 5.00931 4.64947 4.18808 3.67115 3.26617 2.9936 2.83984 2.63111 2.43801 2.15866 1.89327 1.52434 1.20368 0.9 0.58112 0.35471 0.07742 -0.18178 -0.31215 -0.42631 -0.43891 -0.41205 -0.31172 -0.44804 -0.64113 -0.79503 -1.47775 -1.77966 -1.98789 -2.1263 -2.35236 -2.12902 -2.5976 -3.26075 -3.9184 -4.47795 -4.88908 -5.09542 -5.10232 -5.07458 -5.05071 -5.11009 -5.22632 -5.15315 -4.87644 -4.58283 -4.24386 -3.89148 -3.62463 -3.48941 -3.1245 -2.48781 -1.35468 -0.18938 0.81584 1.31093 2.11946 2.64461 3.13207 3.49573 3.78759 4.0873 4.42259 4.82053 5.35131 5.86686 6.36961 6.71836 7.11973 7.52205 7.87476 8.21647 8.41282 8.51739 8.57361 8.64462 8.6796 8.73379 8.79325 8.86305 8.84867 9.72785 9.66483 9.36593 8.80355 8.26517 7.58916 7.10998 6.3832 5.69911 4.96402 4.32846 3.87666 3.56999 3.19458 2.82228 2.54221 2.25417 2.06894 2.06733 2.0249 1.88229 1.71361 1.54307 1.38481 1.20479 0.9875 0.65699 0.44706 0.1741 -0.08037 -0.26279 -0.41215 -0.50614 -0.52518 -0.43486 -0.47287 -0.47321 -0.47537 -0.51065 -0.68674 -0.91821 -1.0088 -1.08324 -1.16933 -1.16386 -1.19688 -1.23787 -1.38936 -1.49375 -1.80724 -2.31952 -2.58739 -3.84889 -4.01236 -4.19674 -4.45746 -4.66248 -4.88475 -5.11728 -5.40231 -5.60621 -5.85427 -6.22132 -6.44406 -6.63482 -6.59731 -6.36465 -5.96399 -5.60909 -5.62035 -5.28866 -5.08337 -5.12494 -5.07837 -5.19814 -5.50586 -5.83631 -6.27183 -6.85825 -7.54891 -8.14171 -8.54201 -8.91571 -9.17368 -9.38392 -9.54306 -9.60821 -9.57836 -9.48746 -9.33644 -9.43964 -9.56235 -9.64086 -9.84826 -10.09771 -10.53772 -10.91353 -11.25505 -11.49027 -11.71063 -11.89218 -11.94527 -11.9931 -12.06018 -12.12764 -12.14637 -12.21261)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (10.35515 9.71039 9.06903 8.44792 8.04801 7.77469 7.7128 7.65305 7.67802 7.74562 7.78178 8.01069 8.18902 8.35191 8.59402 8.80349 8.97612 9.07135 9.0936 9.0181 8.9395 8.67957 8.29092 7.8646 7.4719 7.1671 7.03312 6.9104 6.94841 7.0903 7.15382 7.03046 6.89164 6.69855 6.31187 6.02803 5.85794 5.85874 6.1601 6.59385 7.06574 7.41522 7.89665 7.95163 8.28489 8.33004 8.50823 8.94247 9.41309 9.73429 9.82894 9.47463 8.83843 8.23548 7.57093 6.84418 6.03411 5.09331 4.12493 3.20109 2.32793 1.66734 1.25499 1.18122 1.68129 2.39842 2.74883 3.12098 3.47245 3.46699 3.50973 3.46708 3.33305 3.21657 2.93839 2.57149 2.11715 1.63569 0.93915 0.29404 -0.31501 -0.81221 -0.97989 -1.03903 -0.97492 -0.84101 -0.70469 -0.7029 -0.97878 -1.52716 -2.16963 -2.72231 -3.53537 -4.21695 -3.70254 -4.16868 -4.61935 -4.85775 -4.71836 -4.23903 -3.2361 -2.41166 -1.56385 -0.95536 -0.51604 -0.31308 -0.33922 -0.5323 -0.8749 -1.31401 -2.1815 -3.02427 -3.756 -4.33695 -4.9265 -5.28727 -5.4332 -5.55493 -5.58276 -5.63204 -5.5931 -5.60175 -5.68445 -5.72682 -5.78823 -5.9572 -6.21738 -6.28703 -6.32451 -6.60606 -6.82352 -6.95479 -7.01879 -7.0852 -6.96539 -6.9441 -7.01563 -7.09222 -7.37152 -7.82178 -8.28882 -8.74084 -9.19458 -9.57571 -9.91074 -10.17448 -10.31485 -10.32777 -10.3769 -10.44493 -10.45637 -10.35789 -10.23197 -10.04015 -9.77457 -9.49157 -9.04088 -8.57716 -8.03693 -7.57554 -7.18793 -6.7308 -6.45245 -6.43799 -6.34535 -6.31375 -6.29486 -6.18931 -6.00125 -5.72369 -5.48977 -5.26999 -4.93569 -4.69059 -4.42387 -4.0858 -3.82311 -3.5005 -3.07894 -2.68533 -2.1972 -1.45886 -0.77013 -0.20294 0.28857 0.69235 0.9944 1.32127 1.64868 2.05377 2.48932 3.03075 3.65423 4.36531 5.07985 5.72287 6.0287 6.23235 6.43576 6.49445 6.53788)) (quote (6.82984 7.13376 7.42499 7.64667 7.67132 7.37683 7.11453 6.82302 6.6565 6.41343 6.13987 5.83169 5.48727 5.15043 4.79042 4.33071 3.8124 3.40732 3.1315 2.97164 2.75985 2.5605 2.28557 2.02187 1.65671 1.33647 1.03524 0.71864 0.49202 0.21372 -0.04771 -0.18408 -0.30419 -0.32376 -0.31246 -0.22762 -0.37667 -0.57967 -0.75156 -1.44214 -1.75442 -1.9776 -2.13528 -2.36639 -2.14506 -2.62278 -3.2983 -3.96789 -4.54139 -4.97169 -5.19113 -5.21218 -5.18755 -5.16723 -5.22596 -5.33545 -5.24837 -4.95158 -4.63549 -4.2722 -3.89199 -3.59547 -3.43922 -3.06596 -2.44239 -1.34065 -0.20721 0.77379 1.26023 2.04159 2.56885 3.05947 3.42509 3.71897 4.02017 4.35864 4.75955 5.29625 5.8183 6.32797 6.68166 7.08852 7.49629 7.85374 8.20079 8.40358 8.51622 8.57638 8.65089 8.68443 8.73672 8.79496 8.86234 8.84584 9.74696 9.68371 9.37806 8.80576 8.25971 7.57604 7.0815 6.34552 5.6527 4.91447 4.27468 3.81952 3.51183 3.13872 2.76827 2.48842 2.20433 2.0177 2.01613 1.97244 1.82691 1.65678 1.4849 1.32784 1.14687 0.93035 0.59956 0.39001 0.11728 -0.13782 -0.32072 -0.47212 -0.57006 -0.59521 -0.51894 -0.56942 -0.58139 -0.59837 -0.6442 -0.8247 -1.06457 -1.16728 -1.25124 -1.34634 -1.35675 -1.40666 -1.46042 -1.61907 -1.73296 -2.04577 -2.55113 -2.82156 -4.03694 -4.19256 -4.37763 -4.63856 -4.84654 -5.07097 -5.30483 -5.59225 -5.79552 -6.04504 -6.4108 -6.63003 -6.81245 -6.76831 -6.52112 -6.09776 -5.73127 -5.70908 -5.36502 -5.15379 -5.19018 -5.13961 -5.25347 -5.55209 -5.88225 -6.31862 -6.90439 -7.59991 -8.19504 -8.5931 -8.9678 -9.22151 -9.42708 -9.58135 -9.64046 -9.59475 -9.49284 -9.32994 -9.42419 -9.54058 -9.61578 -9.8191 -10.06638 -10.50018 -10.87046 -11.2053 -11.43376 -11.64455 -11.81105 -11.84765 -11.8907 -11.95487 -12.01939 -12.03714 -12.10334)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (10.21429 9.55794 8.90495 8.27458 7.87107 7.60402 7.54705 7.49269 7.52265 7.59648 7.64015 7.87748 8.06673 8.24134 8.49446 8.71737 8.90112 9.00517 9.03255 8.96014 8.88554 8.62511 8.24252 7.81664 7.42666 7.12581 6.99702 6.88255 6.92927 7.08053 7.15422 7.04045 6.90846 6.71787 6.33213 6.04692 5.87684 5.87929 6.17842 6.62212 7.09473 7.4379 7.89195 7.94036 8.27249 8.31185 8.48414 8.91944 9.38941 9.70514 9.79623 9.43629 8.79129 8.17784 7.50202 6.76262 5.94295 4.99491 4.01988 3.09304 2.21935 1.55828 1.14772 1.0791 1.57872 2.29045 2.64531 3.03135 3.39551 3.41326 3.46671 3.43245 3.30551 3.19531 2.9259 2.56093 2.11427 1.63784 0.94427 0.29941 -0.31111 -0.80867 -0.97753 -1.03684 -0.97279 -0.83938 -0.71083 -0.71615 -1.00451 -1.56072 -2.21623 -2.78686 -3.61033 -4.29575 -3.77031 -4.23495 -4.69209 -4.93175 -4.79372 -4.31053 -3.32109 -2.48939 -1.63248 -1.00974 -0.56064 -0.35192 -0.37294 -0.55758 -0.89049 -1.32221 -2.16924 -2.99898 -3.72771 -4.3075 -4.89566 -5.2537 -5.39857 -5.51306 -5.53944 -5.58218 -5.53834 -5.54283 -5.62063 -5.66055 -5.72199 -5.89217 -6.15941 -6.2477 -6.31109 -6.6042 -6.82982 -6.96841 -7.03558 -7.09938 -6.97538 -6.95277 -7.02369 -7.09927 -7.38255 -7.83737 -8.30965 -8.76516 -9.22343 -9.60528 -9.93765 -10.20024 -10.32531 -10.33499 -10.3813 -10.44519 -10.45314 -10.35033 -10.22147 -10.02381 -9.75591 -9.46517 -9.00514 -8.53231 -7.98248 -7.51463 -7.12791 -6.67356 -6.3979 -6.37608 -6.28275 -6.25187 -6.22954 -6.12225 -5.92974 -5.64524 -5.40684 -5.18201 -4.84198 -4.58694 -4.31487 -3.9784 -3.7098 -3.38737 -2.96449 -2.56787 -2.07483 -1.33712 -0.64333 -0.07453 0.41874 0.8253 1.13197 1.46202 1.79581 2.20712 2.6506 3.20121 3.83627 4.55799 5.28078 5.92582 6.23637 6.44308 6.64957 6.70861 6.75305)) (quote (7.00351 7.2963 7.57731 7.78865 7.80581 7.51312 7.2546 6.96862 6.79953 6.55454 6.27677 5.96992 5.62456 5.28612 4.92623 4.46851 3.94908 3.54411 3.2652 3.09945 2.88475 2.67923 2.40872 2.1466 1.78508 1.46526 1.16651 0.85231 0.62575 0.34674 0.08341 -0.05852 -0.18427 -0.21058 -0.21451 -0.14488 -0.30648 -0.5192 -0.70883 -1.40705 -1.72953 -1.96746 -2.14405 -2.38007 -2.16069 -2.6473 -3.33485 -4.01613 -4.6033 -5.05231 -5.28452 -5.31937 -5.29762 -5.28054 -5.33836 -5.4409 -5.33989 -5.02314 -4.68468 -4.29731 -3.88962 -3.56383 -3.38692 -3.00554 -2.39477 -1.32405 -0.22281 0.73371 1.21153 1.96665 2.49562 2.98909 3.35648 3.65224 3.95481 4.29631 4.70004 5.24246 5.77082 6.28726 6.64578 7.05801 7.4711 7.83318 8.18546 8.39454 8.51507 8.57907 8.65694 8.68902 8.73934 8.79615 8.86101 8.84239 9.76519 9.70175 9.3894 8.80734 8.25371 7.56254 7.05262 6.30772 5.60649 4.86542 4.22164 3.76325 3.45464 3.08392 2.71544 2.43596 2.15595 1.9681 1.96658 1.92168 1.77334 1.60183 1.4287 1.27288 1.09103 0.87535 0.54443 0.33534 0.06295 -0.19267 -0.37602 -0.52942 -0.63136 -0.66286 -0.60088 -0.66389 -0.68752 -0.7193 -0.77564 -0.96044 -1.20855 -1.32324 -1.41659 -1.52059 -1.54683 -1.61357 -1.68012 -1.84597 -1.9694 -2.28152 -2.77994 -3.05284 -4.22209 -4.36987 -4.55556 -4.8166 -5.02743 -5.25392 -5.48905 -5.77874 -5.98138 -6.23221 -6.59654 -6.81215 -6.98615 -6.93534 -6.67386 -6.22822 -5.85036 -5.79518 -5.43895 -5.22189 -5.25314 -5.19862 -5.30663 -5.59622 -5.92604 -6.36317 -6.94824 -7.64835 -8.24573 -8.6417 -9.01729 -9.26688 -9.46788 -9.61733 -9.67042 -9.60922 -9.49639 -9.3218 -9.40727 -9.51742 -9.58927 -9.78853 -10.03357 -10.4612 -10.82592 -11.15402 -11.37556 -11.5767 -11.72825 -11.74866 -11.78689 -11.84811 -11.90967 -11.92646 -11.9926)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (10.07367 9.40617 8.74199 8.10274 7.69585 7.43478 7.38247 7.33315 7.36809 7.4481 7.49928 7.74487 7.94488 8.13104 8.39497 8.63102 8.82573 8.93843 8.97093 8.90169 8.83105 8.57025 8.1934 7.76781 7.38027 7.08318 6.95933 6.85281 6.90806 7.06856 7.15229 7.04806 6.92289 6.73492 6.35048 6.0643 5.89452 5.89879 6.19607 6.64961 7.12302 7.46008 7.88734 7.9293 8.26032 8.29399 8.46043 8.89666 9.36584 9.67599 9.76336 9.39761 8.74384 8.11994 7.43298 6.68124 5.85241 4.89771 3.91669 2.98754 2.11417 1.45371 1.04577 0.9825 1.48088 2.18577 2.54396 2.94331 3.31982 3.35962 3.42371 3.39781 3.27789 3.17389 2.91305 2.55011 2.11101 1.63962 0.94909 0.30459 -0.30733 -0.80521 -0.97522 -1.03469 -0.9707 -0.83778 -0.71683 -0.72913 -1.02973 -1.5936 -2.26191 -2.85013 -3.68383 -4.37304 -3.83692 -4.30007 -4.76354 -5.00435 -4.86759 -4.38054 -3.40402 -2.56489 -1.69871 -1.06189 -0.60313 -0.38872 -0.40473 -0.58122 -0.90474 -1.32925 -2.15661 -2.97367 -3.69952 -4.2782 -4.86498 -5.22034 -5.36415 -5.47161 -5.49654 -5.53289 -5.48426 -5.48467 -5.5577 -5.5952 -5.65667 -5.82802 -6.10212 -6.20851 -6.29693 -6.60106 -6.83438 -6.9797 -7.04962 -7.11072 -6.98226 -6.95786 -7.0278 -7.10201 -7.38859 -7.84731 -8.32438 -8.78325 -9.24576 -9.62859 -9.95888 -10.22038 -10.3324 -10.33917 -10.38271 -10.44259 -10.44703 -10.3399 -10.2081 -10.0046 -9.73438 -9.43594 -8.96669 -8.48493 -7.92581 -7.45172 -7.06625 -6.61524 -6.34248 -6.31439 -6.22066 -6.19061 -6.16502 -6.0561 -5.85934 -5.56821 -5.32543 -5.09562 -4.74997 -4.48506 -4.20767 -3.87276 -3.5983 -3.2761 -2.852 -2.45248 -1.95471 -1.21788 -0.51931 0.05087 0.5457 0.9549 1.26603 1.59914 1.93917 2.35648 2.80766 3.36715 4.0135 4.7455 5.47606 6.12274 6.43784 6.64751 6.85697 6.91634 6.96177)) (quote (7.17067 7.45225 7.72291 7.92385 7.93355 7.64271 7.38798 7.10748 6.93602 6.6893 6.40763 6.1023 5.75633 5.41666 5.05718 4.60173 4.08145 3.67675 3.39492 3.22348 3.006 2.79439 2.52831 2.26764 1.90964 1.59023 1.29397 0.98231 0.75606 0.4766 0.2117 0.06462 -0.06645 -0.09929 -0.11814 -0.06347 -0.23741 -0.45968 -0.66681 -1.37243 -1.70497 -1.95745 -2.15263 -2.39342 -2.17595 -2.67121 -3.37046 -4.06321 -4.66375 -5.13105 -5.37574 -5.42401 -5.40493 -5.39079 -5.44746 -5.54288 -5.42792 -5.0913 -4.73061 -4.3194 -3.8846 -3.52993 -3.33277 -2.94348 -2.34518 -1.30508 -0.23633 0.69548 1.16473 1.8945 2.42479 2.92079 3.28979 3.5873 3.89113 4.2355 4.64191 5.18987 5.72438 6.24743 6.61067 7.02816 7.44646 7.81307 8.17046 8.38569 8.51393 8.58168 8.66279 8.69339 8.74166 8.79687 8.85911 8.83835 9.7826 9.71899 9.39998 8.80832 8.24721 7.5487 7.02338 6.26982 5.56048 4.81686 4.1693 3.70783 3.39839 3.03013 2.66374 2.38477 2.10897 1.92006 1.91859 1.87253 1.72149 1.54866 1.37434 1.2198 1.03715 0.82239 0.49147 0.28292 0.01097 -0.24506 -0.42884 -0.58422 -0.6902 -0.72826 -0.6808 -0.75638 -0.79167 -0.83825 -0.90506 -1.09405 -1.35021 -1.47671 -1.57934 -1.6921 -1.73412 -1.81764 -1.89699 -2.07005 -2.20305 -2.51451 -3.00596 -3.28126 -4.40445 -4.54439 -4.73063 -4.99169 -5.20529 -5.43374 -5.67008 -5.96191 -6.16391 -6.41589 -6.77867 -6.99054 -7.15607 -7.09856 -6.82303 -6.35551 -5.96652 -5.87877 -5.51058 -5.2878 -5.31396 -5.25554 -5.35773 -5.63839 -5.96781 -6.4056 -6.98993 -7.69439 -8.29392 -8.68795 -9.06432 -9.30993 -9.50646 -9.65115 -9.69823 -9.62188 -9.49822 -9.31212 -9.38897 -9.49297 -9.56142 -9.75668 -9.99938 -10.4209 -10.78002 -11.10134 -11.31582 -11.50722 -11.64394 -11.64845 -11.68181 -11.74006 -11.79864 -11.81448 -11.88054)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (9.93335 9.25513 8.58017 7.93241 7.52237 7.26699 7.21908 7.17447 7.21439 7.30055 7.35922 7.6129 7.82352 8.02106 8.29562 8.54451 8.75001 8.87119 8.90879 8.8428 8.77611 8.51505 8.14363 7.71818 7.33283 7.03931 6.92019 6.82131 6.88492 7.05453 7.14818 7.05342 6.93508 6.74982 6.36702 6.08025 5.91104 5.9173 6.21306 6.67634 7.15063 7.48179 7.88282 7.91846 8.24838 8.27643 8.43706 8.87412 9.34239 9.64682 9.73036 9.35861 8.69612 8.0618 7.36384 6.60007 5.76251 4.80167 3.81529 2.8845 2.01226 1.35345 0.94891 0.89117 1.38757 2.08425 2.4447 2.8568 3.24532 3.3061 3.38076 3.3632 3.25019 3.1523 2.89985 2.53904 2.10739 1.64104 0.95362 0.30956 -0.30364 -0.80182 -0.97295 -1.03258 -0.96865 -0.83622 -0.72271 -0.74185 -1.05446 -1.62585 -2.3067 -2.91222 -3.75596 -4.44886 -3.90243 -4.36411 -4.83376 -5.07564 -4.94007 -4.44914 -3.48499 -2.63828 -1.76265 -1.11195 -0.64363 -0.42358 -0.4347 -0.60331 -0.91774 -1.33519 -2.14364 -2.94837 -3.67145 -4.24905 -4.83446 -5.18718 -5.32994 -5.43054 -5.45404 -5.48415 -5.43082 -5.42725 -5.49562 -5.53075 -5.59225 -5.76473 -6.04549 -6.16949 -6.28209 -6.59674 -6.8373 -6.98878 -7.06105 -7.11939 -6.9862 -6.95955 -7.02815 -7.10067 -7.38989 -7.85188 -8.3333 -8.7954 -9.26188 -9.64593 -9.97472 -10.23518 -10.33629 -10.34047 -10.3813 -10.43727 -10.4382 -10.32675 -10.192 -9.98267 -9.71014 -9.40405 -8.9257 -8.43516 -7.86707 -7.38693 -7.00305 -6.55591 -6.28628 -6.25294 -6.15908 -6.12996 -6.10128 -5.99083 -5.79001 -5.49253 -5.24546 -5.01074 -4.65958 -4.38489 -4.10219 -3.76881 -3.48856 -3.16663 -2.74136 -2.33907 -1.83672 -1.10102 -0.39795 0.17338 0.6696 1.08128 1.39675 1.73282 2.07895 2.50204 2.96069 3.5288 4.18612 4.92807 5.66597 6.31391 6.63338 6.84592 7.05824 7.11793 7.16434)) (quote (7.33165 7.60195 7.86215 8.05264 8.05488 7.76597 7.51501 7.23995 7.06631 6.81806 6.53275 6.22914 5.88286 5.54232 5.18352 4.7306 4.20971 3.80545 3.52085 3.34391 3.12379 2.90618 2.64449 2.38518 2.03056 1.71158 1.41781 1.10879 0.88308 0.60344 0.33728 0.18543 0.04934 0.01016 -0.02327 0.01667 -0.16941 -0.40106 -0.62545 -1.33827 -1.68072 -1.94757 -2.16102 -2.40646 -2.19085 -2.69454 -3.40519 -4.10918 -4.72284 -5.208 -5.46488 -5.52624 -5.50962 -5.49815 -5.55342 -5.64154 -5.51263 -5.15626 -4.77347 -4.33867 -3.87712 -3.49401 -3.277 -2.88002 -2.29382 -1.28389 -0.2479 0.659 1.11971 1.82499 2.35623 2.85447 3.22491 3.52405 3.82905 4.17614 4.5851 5.13842 5.67891 6.20842 6.5763 6.99893 7.42233 7.79338 8.15577 8.37703 8.51282 8.58422 8.66845 8.69754 8.7437 8.79713 8.85667 8.83376 9.79922 9.73548 9.40985 8.80873 8.24023 7.53454 6.9938 6.23184 5.51469 4.76878 4.11765 3.65322 3.34304 2.97733 2.61313 2.3348 2.0633 1.87349 1.87209 1.8249 1.67125 1.49718 1.32173 1.16851 0.98512 0.77135 0.44056 0.23262 -0.03879 -0.29516 -0.47932 -0.63665 -0.74672 -0.79153 -0.7588 -0.84698 -0.89394 -0.95527 -1.0325 -1.22557 -1.48962 -1.62775 -1.73954 -1.86093 -1.91864 -2.01886 -2.11101 -2.29132 -2.43389 -2.74472 -3.22921 -3.50684 -4.58409 -4.71623 -4.90295 -5.16396 -5.38021 -5.61052 -5.84803 -6.14189 -6.34325 -6.59623 -6.95732 -7.16535 -7.32236 -7.25812 -6.96878 -6.47977 -6.07986 -5.96 -5.58002 -5.35165 -5.37276 -5.31048 -5.4069 -5.67871 -6.00766 -6.44604 -7.02958 -7.73816 -8.33976 -8.73199 -9.10904 -9.35079 -9.54294 -9.68292 -9.72401 -9.63285 -9.49845 -9.30102 -9.3694 -9.46732 -9.53234 -9.72363 -9.96393 -10.37938 -10.73288 -11.04737 -11.25464 -11.43626 -11.55822 -11.54712 -11.57558 -11.63084 -11.68642 -11.70133 -11.76731)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (9.79339 9.10487 8.41951 7.7636 7.35061 7.10067 7.05692 7.01671 7.0616 7.15385 7.22001 7.48163 7.70268 7.91144 8.19646 8.4579 8.67402 8.80351 8.8462 8.78352 8.72075 8.45956 8.09327 7.66784 7.28443 6.99433 6.8797 6.78819 6.85999 7.03858 7.142 7.05666 6.94513 6.76269 6.38184 6.09485 5.92647 5.93487 6.22945 6.70237 7.17761 7.50305 7.87837 7.90781 8.23666 8.25917 8.41403 8.8518 9.31905 9.61765 9.69724 9.31933 8.64816 8.00347 7.29463 6.51913 5.67325 4.70679 3.71565 2.78383 1.91349 1.25733 0.85692 0.80488 1.29861 1.98577 2.34744 2.77173 3.17196 3.25271 3.33786 3.3286 3.22244 3.13058 2.88634 2.52775 2.10344 1.64215 0.95788 0.31436 -0.30006 -0.7985 -0.97072 -1.03051 -0.96665 -0.83469 -0.72847 -0.75432 -1.07873 -1.65749 -2.35065 -2.97316 -3.82677 -4.52331 -3.96687 -4.4271 -4.90281 -5.14568 -5.01121 -4.51638 -3.56409 -2.70966 -1.82444 -1.16002 -0.68224 -0.45663 -0.46295 -0.62396 -0.92956 -1.3401 -2.13037 -2.92307 -3.6435 -4.22005 -4.8041 -5.15424 -5.29596 -5.38986 -5.41194 -5.43596 -5.37801 -5.37054 -5.43437 -5.46717 -5.52871 -5.70227 -5.9895 -6.13064 -6.26661 -6.59129 -6.83868 -6.99577 -7.07001 -7.12552 -6.98735 -6.95802 -7.02496 -7.09546 -7.38669 -7.85135 -8.33669 -8.80188 -9.27208 -9.6576 -9.98541 -10.2449 -10.33715 -10.33904 -10.37722 -10.42938 -10.42679 -10.31104 -10.17334 -9.95817 -9.68335 -9.36963 -8.88229 -8.38314 -7.80638 -7.32038 -6.93842 -6.49564 -6.22933 -6.19172 -6.09799 -6.0699 -6.03829 -5.92641 -5.72171 -5.41816 -5.16688 -4.92733 -4.57073 -4.28635 -3.99836 -3.66647 -3.38049 -3.05887 -2.63251 -2.22756 -1.72079 -0.98643 -0.2791 0.29314 0.7906 1.20462 1.52429 1.86321 2.21531 2.64399 3.10989 3.68636 4.35436 5.10594 5.85075 6.4996 6.82328 7.03858 7.25368 7.31365 7.36102)) (quote (7.48676 7.74571 7.99535 8.17534 8.17016 7.88323 7.63602 7.36635 7.1907 6.94111 6.65245 6.35071 6.00442 5.66333 5.30547 4.85533 4.33406 3.93039 3.6432 3.46093 3.23828 3.01475 2.75744 2.49938 2.14801 1.82945 1.53818 1.23192 1.00697 0.72738 0.46024 0.304 0.16317 0.11785 0.07013 0.09559 -0.10245 -0.34331 -0.58473 -1.30454 -1.65677 -1.93782 -2.16923 -2.4192 -2.20541 -2.71731 -3.43908 -4.1541 -4.78062 -5.28324 -5.55205 -5.62618 -5.61181 -5.60275 -5.6564 -5.73707 -5.59419 -5.21819 -4.81345 -4.3553 -3.86738 -3.45627 -3.2198 -2.81536 -2.24089 -1.26067 -0.25762 0.62417 1.07639 1.75797 2.28981 2.79003 3.16176 3.46242 3.76848 4.11814 4.52954 5.08805 5.63436 6.17019 6.54261 6.97029 7.39869 7.77409 8.14138 8.36855 8.51173 8.58669 8.67392 8.7015 8.74548 8.79696 8.85371 8.82865 9.8151 9.75124 9.41905 8.8086 8.23279 7.52008 6.96392 6.19378 5.46912 4.7212 4.06668 3.59942 3.28857 2.92546 2.56355 2.28599 2.01888 1.82831 1.82698 1.77871 1.62255 1.4473 1.27078 1.11891 0.93486 0.72213 0.39158 0.18433 -0.08647 -0.34306 -0.5276 -0.68683 -0.80104 -0.85279 -0.83497 -0.93578 -0.99438 -1.07043 -1.15802 -1.35508 -1.62683 -1.77642 -1.89722 -2.02711 -2.10041 -2.21724 -2.32218 -2.50975 -2.66192 -2.97217 -3.44972 -3.72962 -4.7611 -4.88546 -5.07261 -5.33348 -5.5523 -5.7844 -6.02301 -6.31878 -6.51949 -6.77334 -7.13261 -7.33671 -7.48516 -7.41415 -7.11122 -6.60112 -6.19052 -6.03897 -5.6474 -5.41354 -5.42964 -5.36354 -5.45424 -5.71728 -6.0457 -6.4846 -7.06732 -7.77978 -8.38338 -8.77393 -9.15157 -9.38957 -9.57743 -9.71275 -9.74789 -9.64222 -9.49716 -9.28857 -9.34863 -9.44056 -9.50211 -9.68947 -9.9273 -10.33672 -10.68458 -10.9922 -11.19215 -11.36391 -11.47123 -11.44479 -11.46832 -11.52058 -11.57314 -11.58712 -11.65301)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (9.65383 8.95541 8.26003 7.59632 7.18058 6.93583 6.89602 6.85992 6.90976 7.00805 7.08167 7.35107 7.5824 7.80221 8.0975 8.37121 8.59781 8.73546 8.7832 8.72391 8.66503 8.40382 8.04237 7.61684 7.23516 6.94831 6.83798 6.75357 6.83338 7.02082 7.1339 7.0579 6.95317 6.77364 6.39505 6.10816 5.94086 5.95154 6.24526 6.72773 7.20399 7.52388 7.87401 7.89736 8.22514 8.24218 8.39133 8.82969 9.29582 9.58849 9.66402 9.27979 8.59997 7.94496 7.22539 6.43842 5.58461 4.61303 3.6177 2.68547 1.81775 1.16517 0.76958 0.72341 1.21381 1.89021 2.25209 2.68806 3.09969 3.19946 3.29502 3.29403 3.19465 3.10873 2.87254 2.51624 2.09917 1.64295 0.96188 0.31898 -0.29656 -0.79524 -0.96852 -1.02848 -0.96468 -0.83319 -0.73412 -0.76655 -1.10256 -1.68856 -2.39381 -3.03302 -3.89633 -4.59644 -4.03032 -4.48911 -4.97073 -5.21451 -5.08108 -4.58234 -3.6414 -2.77912 -1.88417 -1.2062 -0.71908 -0.48796 -0.48958 -0.64323 -0.94026 -1.34405 -2.11682 -2.89779 -3.61567 -4.1912 -4.7739 -5.12151 -5.26218 -5.34956 -5.37023 -5.3883 -5.32581 -5.31454 -5.37391 -5.40444 -5.46601 -5.64062 -5.93415 -6.09196 -6.25054 -6.58479 -6.83859 -7.00078 -7.07663 -7.12924 -6.98587 -6.95344 -7.01838 -7.08658 -7.3792 -7.84596 -8.33483 -8.80298 -9.27663 -9.66385 -9.99119 -10.24976 -10.33511 -10.33502 -10.37061 -10.41905 -10.41294 -10.29288 -10.15223 -9.93125 -9.65414 -9.33283 -8.83662 -8.32901 -7.74387 -7.25217 -6.87244 -6.4345 -6.17171 -6.13074 -6.03738 -6.01041 -5.97603 -5.8628 -5.65439 -5.34503 -5.08962 -4.84531 -4.48338 -4.18939 -3.89612 -3.56567 -3.27404 -2.95276 -2.52537 -2.11786 -1.60683 -0.87402 -0.16267 0.41028 0.90882 1.32504 1.64879 1.99045 2.34841 2.78248 3.25541 3.84 4.5184 5.27929 6.03061 6.68004 7.00778 7.22574 7.44353 7.50376 7.5521)) (quote (7.63628 7.88383 8.12282 8.29226 8.2797 7.99478 7.75131 7.48697 7.3095 7.05873 6.76697 6.46728 6.12126 5.77993 5.42324 4.97612 4.45469 4.05177 3.7621 3.57468 3.34964 3.12027 2.86731 2.61039 2.26215 1.94401 1.65523 1.35182 1.12784 0.84853 0.58069 0.4204 0.2751 0.22383 0.16212 0.17333 -0.03648 -0.28639 -0.54463 -1.27124 -1.6331 -1.92819 -2.17727 -2.43167 -2.21964 -2.73955 -3.47218 -4.19803 -4.83716 -5.35688 -5.63735 -5.72392 -5.71162 -5.70471 -5.75653 -5.82959 -5.67276 -5.27725 -4.85071 -4.36947 -3.85555 -3.41688 -3.16139 -2.74968 -2.18657 -1.23554 -0.26562 0.5909 1.03466 1.69333 2.22544 2.72736 3.10024 3.40232 3.70935 4.06145 4.47516 5.03871 5.59069 6.13271 6.50959 6.94221 7.37552 7.75517 8.12727 8.36023 8.51065 8.58909 8.67922 8.70527 8.74701 8.79639 8.85028 8.82305 9.83028 9.76634 9.4276 8.80797 8.22494 7.50532 6.93376 6.15569 5.42379 4.67409 4.01638 3.54639 3.23496 2.87451 2.51498 2.2383 1.97565 1.78446 1.78321 1.73388 1.5753 1.39893 1.22139 1.07092 0.88625 0.67463 0.34443 0.13793 -0.13216 -0.3889 -0.57379 -0.7349 -0.85328 -0.91214 -0.9094 -1.02285 -1.09308 -1.18379 -1.28168 -1.48262 -1.76191 -1.92276 -2.05244 -2.19069 -2.27947 -2.41281 -2.5305 -2.72537 -2.88714 -3.19686 -3.66751 -3.94963 -4.93556 -5.05217 -5.2397 -5.50037 -5.72167 -5.95545 -6.19512 -6.49269 -6.69274 -6.94732 -7.30467 -7.50472 -7.64457 -7.56678 -7.2505 -6.71968 -6.29858 -6.1158 -5.71281 -5.47356 -5.4847 -5.41482 -5.49985 -5.7542 -6.08205 -6.52138 -7.10324 -7.81938 -8.42489 -8.81388 -9.19202 -9.42639 -9.61004 -9.74075 -9.76995 -9.65008 -9.49446 -9.27487 -9.32676 -9.41276 -9.47082 -9.65429 -9.88957 -10.29302 -10.63521 -10.93594 -11.12844 -11.2903 -11.38308 -11.34157 -11.36014 -11.40937 -11.4589 -11.47197 -11.53775)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (9.51473 8.80678 8.10176 7.43058 7.01228 6.77248 6.73639 6.70412 6.75889 6.86318 6.94424 7.22127 7.46271 7.69342 7.9988 8.28451 8.52142 8.66707 8.71985 8.664 8.60899 8.34786 7.991 7.56526 7.18509 6.90135 6.79512 6.71755 6.80521 7.00138 7.12397 7.05725 6.95931 6.78276 6.40671 6.12026 5.95426 5.96737 6.26051 6.75245 7.22979 7.54431 7.86972 7.88708 8.21381 8.22546 8.36892 8.80779 9.27269 9.55933 9.6307 9.24001 8.55158 7.8863 7.15612 6.35797 5.49661 4.52037 3.52141 2.58934 1.72494 1.07682 0.68671 0.64655 1.13301 1.79747 2.15858 2.60572 3.02846 3.14638 3.25227 3.25951 3.16683 3.08677 2.85847 2.50453 2.0946 1.64346 0.96564 0.32343 -0.29314 -0.79205 -0.96637 -1.02648 -0.96276 -0.83173 -0.73965 -0.77856 -1.12597 -1.71908 -2.43621 -3.09185 -3.9647 -4.66831 -4.0928 -4.55017 -5.03759 -5.2822 -5.14974 -4.64707 -3.71702 -2.84677 -1.94195 -1.2506 -0.75422 -0.51765 -0.51468 -0.66122 -0.94992 -1.34709 -2.103 -2.87254 -3.58796 -4.1625 -4.74385 -5.08898 -5.22862 -5.30963 -5.3289 -5.34114 -5.2742 -5.25921 -5.31424 -5.34254 -5.40415 -5.57977 -5.87942 -6.05346 -6.23391 -6.5773 -6.83713 -7.0039 -7.08101 -7.13067 -6.98187 -6.94594 -7.0086 -7.07419 -7.36764 -7.83593 -8.32794 -8.79893 -9.2758 -9.66492 -9.99229 -10.24999 -10.33033 -10.32854 -10.36157 -10.4064 -10.39676 -10.27241 -10.12881 -9.90202 -9.62263 -9.29377 -8.78879 -8.27288 -7.67962 -7.18241 -6.8052 -6.37255 -6.11345 -6.06999 -5.97723 -5.95147 -5.91447 -5.79999 -5.58802 -5.2731 -5.01364 -4.76464 -4.39745 -4.09393 -3.79542 -3.46637 -3.16913 -2.84823 -2.41988 -2.0099 -1.49477 -0.7637 -0.04855 0.5249 1.02438 1.44267 1.77038 2.11469 2.47838 2.91766 3.39742 3.98989 4.67842 5.44832 6.20577 6.85547 7.18712 7.40765 7.62802 7.6885 7.7378)) (quote (7.78048 8.01657 8.24483 8.4037 8.38378 8.10091 7.86115 7.60209 7.42296 7.17119 6.87658 6.57909 6.2336 5.89232 5.53704 5.09315 4.57176 4.16972 3.87774 3.68533 3.458 3.22286 2.97423 2.71835 2.37311 2.05538 1.7691 1.46862 1.2458 0.967 0.69871 0.53471 0.3852 0.32816 0.25274 0.24995 0.02854 -0.23027 -0.5051 -1.23833 -1.60971 -1.91866 -2.18515 -2.44386 -2.23357 -2.7613 -3.50451 -4.24101 -4.89253 -5.42896 -5.72086 -5.81958 -5.80916 -5.80415 -5.85394 -5.91926 -5.74849 -5.33358 -4.88539 -4.38132 -3.84178 -3.37601 -3.10192 -2.68316 -2.131 -1.20865 -0.27198 0.55911 0.99446 1.63095 2.16301 2.66639 3.04028 3.34367 3.65159 4.00599 4.42192 4.99034 5.54786 6.09594 6.47718 6.91466 7.35278 7.73662 8.11342 8.35207 8.50959 8.59143 8.68436 8.70886 8.7483 8.79544 8.84639 8.81698 9.84479 9.78078 9.43556 8.80686 8.21669 7.49031 6.90333 6.11756 5.3787 4.62746 3.96672 3.49413 3.18217 2.82443 2.46737 2.19168 1.93356 1.74188 1.74071 1.69036 1.52944 1.35201 1.1735 1.02445 0.83923 0.62878 0.29903 0.09334 -0.17597 -0.43278 -0.61799 -0.78096 -0.90354 -0.96967 -0.98215 -1.10825 -1.1901 -1.29541 -1.40353 -1.60825 -1.89489 -2.06683 -2.20524 -2.35169 -2.45583 -2.60556 -2.73598 -2.93816 -3.10953 -3.41879 -3.88261 -4.16689 -5.10755 -5.21645 -5.4043 -5.6647 -5.88838 -6.12377 -6.36446 -6.66372 -6.86309 -7.11828 -7.47358 -7.66951 -7.80072 -7.71612 -7.38671 -6.83556 -6.40417 -6.19057 -5.77634 -5.53181 -5.53803 -5.46441 -5.54381 -5.78956 -6.11678 -6.55648 -7.13745 -7.85706 -8.4644 -8.85196 -9.2305 -9.46134 -9.64087 -9.76702 -9.7903 -9.65652 -9.49043 -9.26 -9.30385 -9.384 -9.43855 -9.61815 -9.85083 -10.24834 -10.58486 -10.87865 -11.0636 -11.21551 -11.29385 -11.23755 -11.25112 -11.29732 -11.3438 -11.35598 -11.42163)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (9.37611 8.65901 7.9447 7.26636 6.8457 6.61062 6.57806 6.54935 6.60903 6.71926 6.80772 7.09224 7.34364 7.58507 7.90038 8.19782 8.44489 8.5984 8.65619 8.60383 8.55267 8.29172 7.93919 7.51315 7.13429 6.85353 6.75122 6.68023 6.77558 6.98035 7.11233 7.05481 6.96363 6.79015 6.41691 6.1312 5.96671 5.98239 6.27524 6.77655 7.25504 7.56435 7.86551 7.87698 8.20268 8.20899 8.34681 8.7861 9.24968 9.53018 9.59729 9.20001 8.50301 7.82752 7.08685 6.27779 5.40924 4.4288 3.42673 2.49536 1.63495 0.99213 0.60812 0.57411 1.05605 1.70744 2.06684 2.52465 2.95824 3.09346 3.2096 3.22503 3.13898 3.06471 2.84415 2.49265 2.08976 1.64369 0.96918 0.32773 -0.28981 -0.78891 -0.96425 -1.02452 -0.96087 -0.83028 -0.74509 -0.79035 -1.14898 -1.74908 -2.47789 -3.14968 -4.03192 -4.73897 -4.15437 -4.61032 -5.10343 -5.3488 -5.21723 -4.71063 -3.79102 -2.91267 -1.99788 -1.2933 -0.78777 -0.5458 -0.53833 -0.67797 -0.95858 -1.34929 -2.08895 -2.84731 -3.56038 -4.13395 -4.71397 -5.05667 -5.19527 -5.27006 -5.28794 -5.29449 -5.22318 -5.20454 -5.25532 -5.28144 -5.34308 -5.51968 -5.82529 -6.01515 -6.21677 -6.56886 -6.83434 -7.00523 -7.08327 -7.12991 -6.97549 -6.93569 -6.99576 -7.05849 -7.3522 -7.8215 -8.31625 -8.78997 -9.2698 -9.66105 -9.98892 -10.2458 -10.32294 -10.31972 -10.35025 -10.39155 -10.37838 -10.24974 -10.1032 -9.8706 -9.58894 -9.25256 -8.73892 -8.21485 -7.61375 -7.11119 -6.73678 -6.30984 -6.05461 -6.00949 -5.91755 -5.89307 -5.85359 -5.73794 -5.52257 -5.20232 -4.93889 -4.68525 -4.3129 -3.99993 -3.69619 -3.36851 -3.06572 -2.74523 -2.31597 -1.90362 -1.38451 -0.65537 0.06334 0.63712 1.13738 1.55764 1.88918 2.23605 2.60535 3.04967 3.53607 4.1362 4.83459 5.61322 6.37643 7.02609 7.3615 7.58451 7.80739 7.86811 7.91834)) (quote (7.91958 8.14418 8.36165 8.50991 8.48267 8.20189 7.96582 7.71196 7.53133 7.27872 6.9815 6.68635 6.34164 6.00069 5.64703 5.20659 4.68544 4.28442 3.99024 3.793 3.56349 3.32266 3.07833 2.82339 2.48104 2.16371 1.87991 1.58244 1.36096 1.08288 0.8144 0.64701 0.49352 0.4309 0.34205 0.32547 0.09264 -0.17491 -0.46614 -1.20581 -1.58657 -1.90925 -2.19289 -2.45581 -2.24721 -2.78258 -3.53613 -4.28308 -4.94677 -5.49959 -5.80266 -5.91323 -5.90453 -5.90119 -5.94875 -6.0062 -5.82149 -5.38732 -4.91765 -4.391 -3.82623 -3.33382 -3.04155 -2.61595 -2.07433 -1.18012 -0.2768 0.52872 0.95569 1.57072 2.10244 2.60704 2.98181 3.28641 3.59514 3.95172 4.36975 4.9429 5.50582 6.05985 6.44538 6.88762 7.33047 7.7184 8.09983 8.34405 8.50855 8.59371 8.68934 8.71227 8.74937 8.79413 8.84206 8.81047 9.85866 9.79462 9.44293 8.8053 8.20806 7.47504 6.87266 6.07941 5.33385 4.58129 3.9177 3.4426 3.13019 2.77521 2.42069 2.1461 1.89255 1.7005 1.69941 1.64807 1.4849 1.30646 1.12704 0.97942 0.79371 0.58447 0.25528 0.05046 -0.21799 -0.4748 -0.66031 -0.82512 -0.95192 -1.02548 -1.0533 -1.19205 -1.28549 -1.40533 -1.52361 -1.73201 -2.02584 -2.20865 -2.35565 -2.51017 -2.62953 -2.79552 -2.93864 -3.14813 -3.32912 -3.63798 -4.09503 -4.38144 -5.27713 -5.37836 -5.56649 -5.82655 -6.05254 -6.28945 -6.5311 -6.83195 -7.03065 -7.28631 -7.63946 -7.83117 -7.95371 -7.8623 -7.51998 -6.94885 -6.50737 -6.26339 -5.8381 -5.58837 -5.58972 -5.5124 -5.58621 -5.82343 -6.14998 -6.58998 -7.17003 -7.89292 -8.50202 -8.88824 -9.26711 -9.49452 -9.67 -9.79164 -9.80902 -9.66161 -9.48513 -9.24403 -9.27997 -9.35434 -9.40535 -9.58113 -9.81114 -10.20276 -10.53359 -10.82043 -10.99771 -11.13963 -11.20365 -11.1328 -11.14136 -11.18452 -11.22793 -11.23922 -11.30474)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (9.23801 8.51212 7.78886 7.10368 6.68083 6.45026 6.42102 6.39563 6.4602 6.57632 6.67216 6.964 7.22522 7.4772 7.80226 8.11118 8.36827 8.52949 8.59227 8.54344 8.49611 8.23544 7.887 7.46055 7.08284 6.80491 6.70634 6.64171 6.74459 6.95784 7.09906 7.05067 6.96623 6.79589 6.42571 6.14103 5.97828 5.99665 6.28947 6.80008 7.27978 7.58403 7.86136 7.86704 8.19172 8.19276 8.32498 8.76459 9.22677 9.50105 9.56381 9.15981 8.45428 7.76863 7.0176 6.19789 5.32249 4.33829 3.33362 2.40349 1.54768 0.91097 0.53364 0.5059 0.9828 1.62004 1.9768 2.44481 2.88899 3.04073 3.16703 3.19061 3.11111 3.04255 2.8296 2.48059 2.08466 1.64367 0.9725 0.33188 -0.28656 -0.78583 -0.96216 -1.02259 -0.95902 -0.82887 -0.75042 -0.80195 -1.17161 -1.77858 -2.51887 -3.20657 -4.09804 -4.80848 -4.21505 -4.66961 -5.16828 -5.41435 -5.28361 -4.77306 -3.86345 -2.9769 -2.05203 -1.33439 -0.81979 -0.57248 -0.56059 -0.69356 -0.96631 -1.35068 -2.07467 -2.82213 -3.53292 -4.10556 -4.68426 -5.02456 -5.16214 -5.23084 -5.24735 -5.24832 -5.17272 -5.15051 -5.19714 -5.22112 -5.2828 -5.46034 -5.77176 -5.97703 -6.19915 -6.55954 -6.83031 -7.00486 -7.0835 -7.12708 -6.96682 -6.9228 -6.98002 -7.03961 -7.33305 -7.80284 -8.29999 -8.77631 -9.25888 -9.65244 -9.98126 -10.23738 -10.31304 -10.30866 -10.33674 -10.3746 -10.35789 -10.22498 -10.07549 -9.83709 -9.55318 -9.20933 -8.68712 -8.15503 -7.54635 -7.0386 -6.66725 -6.24643 -5.99521 -5.94922 -5.85831 -5.83519 -5.79336 -5.67662 -5.458 -5.13265 -4.86531 -4.60712 -4.22967 -3.90733 -3.59838 -3.27202 -2.96374 -2.6437 -2.21357 -1.79895 -1.27601 -0.54897 0.1731 0.74702 1.24794 1.67004 2.00531 2.35466 2.72946 3.17864 3.6715 4.27907 4.98705 5.77413 6.54276 7.1921 7.53112 7.75654 7.98183 8.04276 8.09393)) (quote (8.05382 8.2669 8.4735 8.61115 8.57662 8.29795 8.06554 7.81683 7.63485 7.38155 7.08194 6.78927 6.44558 6.10523 5.7534 5.31659 4.79586 4.39598 4.09974 3.89783 3.66625 3.41979 3.17974 2.92564 2.58606 2.26911 1.98779 1.69339 1.47344 1.19627 0.92782 0.75735 0.60013 0.53208 0.43008 0.39994 0.15586 -0.12029 -0.42771 -1.17366 -1.56369 -1.89995 -2.20048 -2.46752 -2.26058 -2.8034 -3.56706 -4.3243 -4.99994 -5.5688 -5.88283 -6.00497 -5.99781 -5.99592 -6.04107 -6.09052 -5.89191 -5.4386 -4.9476 -4.39864 -3.80902 -3.29044 -2.98042 -2.54818 -2.01669 -1.15005 -0.28015 0.49967 0.9183 1.51255 2.04363 2.54922 2.92475 3.23047 3.53993 3.89857 4.31861 4.89636 5.46454 6.0244 6.41414 6.86107 7.30855 7.70052 8.08649 8.33619 8.50752 8.59594 8.69417 8.71553 8.75023 8.79248 8.83732 8.80355 9.87194 9.80787 9.44976 8.80331 8.19907 7.45953 6.84178 6.04125 5.28925 4.53559 3.86931 3.39179 3.079 2.72682 2.3749 2.10151 1.85258 1.66027 1.65926 1.60696 1.4416 1.26221 1.08192 0.93578 0.74962 0.54166 0.21311 0.00921 -0.25832 -0.51506 -0.70085 -0.86745 -0.99852 -1.07962 -1.12293 -1.27432 -1.37932 -1.51362 -1.64198 -1.85396 -2.1548 -2.34829 -2.50373 -2.66616 -2.80059 -2.9827 -3.13846 -3.3553 -3.54589 -3.85442 -4.30481 -4.5933 -5.44437 -5.53798 -5.72634 -5.98601 -6.21423 -6.45258 -6.69515 -6.99748 -7.19549 -7.4515 -7.80239 -7.9898 -8.10366 -8.0054 -7.65038 -7.05966 -6.60828 -6.33434 -5.89814 -5.64333 -5.63983 -5.55886 -5.62712 -5.85589 -6.18172 -6.62197 -7.20105 -7.92704 -8.53783 -8.92282 -9.30193 -9.52602 -9.69752 -9.81469 -9.8262 -9.66543 -9.47865 -9.22702 -9.25519 -9.32385 -9.37129 -9.54328 -9.77057 -10.15634 -10.48147 -10.76133 -10.93087 -11.06276 -11.11255 -11.0274 -11.03093 -11.07103 -11.11138 -11.12179 -11.18718)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (9.10046 8.36612 7.63425 6.94252 6.51766 6.2914 6.2653 6.243 6.31242 6.43437 6.53755 6.83659 7.10745 7.36983 7.70447 8.02463 8.29158 8.46038 8.52811 8.48287 8.43933 8.17903 7.83446 7.40752 7.03077 6.75557 6.66058 6.60206 6.71232 6.93392 7.08427 7.04492 6.96719 6.80006 6.43318 6.14981 5.98898 6.01016 6.30322 6.82304 7.30401 7.60335 7.85727 7.85725 8.18093 8.17677 8.30342 8.74328 9.20395 9.47194 9.53027 9.11943 8.40541 7.70965 6.94839 6.11828 5.23636 4.24882 3.24204 2.31364 1.46304 0.8332 0.4631 0.44177 0.9131 1.53516 1.8884 2.36614 2.82066 2.9882 3.12457 3.15624 3.08324 3.02032 2.81483 2.46837 2.07931 1.64341 0.97561 0.33589 -0.28338 -0.78281 -0.96011 -1.0207 -0.9572 -0.82749 -0.75566 -0.81334 -1.19388 -1.80761 -2.5592 -3.26256 -4.16312 -4.87689 -4.27489 -4.72806 -5.2322 -5.4789 -5.34892 -4.83442 -3.93439 -3.03955 -2.10449 -1.37393 -0.85036 -0.59776 -0.58154 -0.70805 -0.97315 -1.35131 -2.06019 -2.79699 -3.50559 -4.07732 -4.6547 -4.99265 -5.12921 -5.19196 -5.20712 -5.20262 -5.12281 -5.09711 -5.13967 -5.16156 -5.22328 -5.40174 -5.71881 -5.93911 -6.18107 -6.54937 -6.8251 -7.00286 -7.0818 -7.12226 -6.95599 -6.9074 -6.9615 -7.01771 -7.31037 -7.78017 -8.27935 -8.75815 -9.24325 -9.63929 -9.96951 -10.22491 -10.30077 -10.29546 -10.32113 -10.35564 -10.3354 -10.19822 -10.04579 -9.80161 -9.51544 -9.16415 -8.63349 -8.09351 -7.47749 -6.96472 -6.59668 -6.18235 -5.93531 -5.8892 -5.79951 -5.77782 -5.73377 -5.61602 -5.39429 -5.06405 -4.79288 -4.53018 -4.14772 -3.81609 -3.50195 -3.17687 -2.86316 -2.54358 -2.11265 -1.69583 -1.16919 -0.44441 0.28082 0.85471 1.35616 1.77999 2.11888 2.47062 2.85081 3.3047 3.80383 4.41863 5.13597 5.93123 6.70492 7.35367 7.69618 7.92392 8.15154 8.21268 8.26476)) (quote (8.1834 8.38494 8.58062 8.70765 8.66587 8.38931 8.16053 7.91691 7.73373 7.47988 7.17811 6.88805 6.5456 6.2061 5.85629 5.4233 4.90318 4.50456 4.20637 3.99993 3.76638 3.51438 3.27855 3.02521 2.68828 2.37171 2.09285 1.80159 1.58331 1.30724 1.03907 0.8658 0.70507 0.63176 0.51688 0.47338 0.21822 -0.06638 -0.38979 -1.14186 -1.54105 -1.89074 -2.20793 -2.47899 -2.27367 -2.82379 -3.59734 -4.36469 -5.05208 -5.63667 -5.96143 -6.09488 -6.08909 -6.08844 -6.131 -6.17234 -5.95984 -5.48753 -4.97537 -4.40436 -3.79028 -3.246 -2.91866 -2.47998 -1.9582 -1.11856 -0.28213 0.47189 0.88222 1.45635 1.98652 2.49288 2.86905 3.1758 3.48592 3.8465 4.26845 4.85066 5.42399 5.98956 6.38344 6.83497 7.28702 7.68294 8.07338 8.32845 8.50651 8.59811 8.69886 8.71863 8.75089 8.7905 8.8322 8.79623 9.88463 9.82057 9.45607 8.80091 8.18974 7.4438 6.81068 6.0031 5.24491 4.49035 3.82152 3.34169 3.02856 2.67923 2.32999 2.05788 1.81361 1.62113 1.62021 1.56698 1.39951 1.21921 1.03811 0.89345 0.70691 0.50025 0.17244 -0.03048 -0.29703 -0.55362 -0.73968 -0.90806 -1.04342 -1.1322 -1.19108 -1.35511 -1.47163 -1.62031 -1.75866 -1.97414 -2.2818 -2.48578 -2.64951 -2.81969 -2.96904 -3.16712 -3.33547 -3.55968 -3.75985 -4.06815 -4.51197 -4.80251 -5.60933 -5.69536 -5.88391 -6.14314 -6.3735 -6.61322 -6.85666 -7.16038 -7.35769 -7.61393 -7.96246 -8.1455 -8.25064 -8.14552 -7.77803 -7.16806 -6.70697 -6.40349 -5.95655 -5.69674 -5.68845 -5.60385 -5.66662 -5.88701 -6.21209 -6.65252 -7.23061 -7.95952 -8.57192 -8.95578 -9.33506 -9.55591 -9.72351 -9.83625 -9.84191 -9.66805 -9.47104 -9.20903 -9.22956 -9.29257 -9.33643 -9.50466 -9.72918 -10.10915 -10.42857 -10.70142 -10.86312 -10.98495 -11.02063 -10.92143 -10.91991 -10.95695 -10.99421 -11.00377 -11.069)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (8.96349 8.22103 7.48087 6.78289 6.35618 6.13404 6.1109 6.09146 6.16571 6.29344 6.40391 6.71 6.99035 7.26298 7.60704 7.93817 8.21485 8.39109 8.46376 8.42214 8.38237 8.12252 7.78161 7.3541 6.97816 6.70556 6.61399 6.56138 6.67885 6.90868 7.06803 7.03764 6.9666 6.80273 6.43938 6.15759 5.99887 6.02298 6.31652 6.84547 7.32777 7.62234 7.85325 7.84762 8.1703 8.161 8.28212 8.72214 9.18124 9.44285 9.49667 9.07887 8.35642 7.6506 6.87922 6.03896 5.15086 4.16038 3.15195 2.22577 1.38096 0.7587 0.39635 0.38153 0.84682 1.45274 1.80158 2.2886 2.75323 2.93586 3.08222 3.12195 3.05536 2.99802 2.79985 2.456 2.07372 1.64291 0.97853 0.33976 -0.28027 -0.77984 -0.95808 -1.01883 -0.95541 -0.82612 -0.76082 -0.82455 -1.2158 -1.83618 -2.59889 -3.31767 -4.22718 -4.94423 -4.33392 -4.78572 -5.29521 -5.54248 -5.4132 -4.89474 -4.00389 -3.10067 -2.15533 -1.412 -0.87954 -0.62171 -0.60125 -0.72149 -0.97915 -1.35122 -2.04551 -2.77189 -3.47838 -4.04923 -4.62531 -4.96094 -5.0965 -5.15343 -5.16724 -5.15739 -5.07343 -5.04432 -5.08291 -5.10274 -5.16451 -5.34385 -5.66643 -5.90139 -6.16257 -6.5384 -6.81875 -6.99931 -7.07826 -7.11555 -6.94309 -6.8896 -6.94033 -6.99293 -7.28432 -7.75364 -8.25452 -8.73568 -9.22309 -9.62181 -9.95383 -10.20855 -10.28622 -10.28023 -10.30354 -10.33477 -10.311 -10.16956 -10.01418 -9.76423 -9.47582 -9.11714 -8.57811 -8.03039 -7.40727 -6.88961 -6.52513 -6.11765 -5.87493 -5.82941 -5.74114 -5.72095 -5.6748 -5.55611 -5.3314 -4.99648 -4.72154 -4.4544 -4.06701 -3.72615 -3.40684 -3.08301 -2.76392 -2.44484 -2.01314 -1.59421 -1.06399 -0.34164 0.38657 0.96025 1.46212 1.88758 2.22998 2.58403 2.96952 3.42795 3.93318 4.55501 5.28146 6.08463 6.86308 7.51099 7.85685 8.08683 8.31671 8.37802 8.43102)) (quote (8.30853 8.49849 8.68322 8.7996 8.75061 8.47621 8.25102 8.01241 7.82816 7.57392 7.27019 6.98287 6.64187 6.30346 5.95586 5.52685 5.00751 4.61026 4.31024 4.09942 3.86399 3.60651 3.37489 3.1222 2.78781 2.4716 2.19519 1.90712 1.69068 1.41589 1.14819 0.97241 0.80838 0.72997 0.60247 0.54584 0.27976 -0.01316 -0.35237 -1.1104 -1.51864 -1.88163 -2.21524 -2.49025 -2.28652 -2.84377 -3.627 -4.4043 -5.10325 -5.70326 -6.03853 -6.18302 -6.17845 -6.17884 -6.21863 -6.25175 -6.0254 -5.53422 -5.00107 -4.40827 -3.77012 -3.20062 -2.85639 -2.41147 -1.89897 -1.08574 -0.28279 0.44531 0.84739 1.40202 1.93102 2.43795 2.81465 3.12234 3.43305 3.79546 4.21924 4.80577 5.38413 5.95531 6.35327 6.80932 7.26585 7.66566 8.06049 8.32085 8.50551 8.60023 8.70341 8.72159 8.75136 8.7882 8.8267 8.78853 9.89678 9.83274 9.46188 8.79812 8.18008 7.42786 6.7794 5.96497 5.20083 4.44557 3.77433 3.29227 2.97887 2.63241 2.28591 2.01518 1.77558 1.58305 1.58221 1.52807 1.35857 1.17741 0.99552 0.85239 0.66549 0.4602 0.13321 -0.0687 -0.33419 -0.59059 -0.77689 -0.94702 -1.08669 -1.18326 -1.25782 -1.43448 -1.56247 -1.72544 -1.8737 -2.09258 -2.4069 -2.62116 -2.79302 -2.97081 -3.13489 -3.3488 -3.52969 -3.76127 -3.97102 -4.27917 -4.71653 -5.00909 -5.77206 -5.85058 -6.03927 -6.29801 -6.53044 -6.77144 -7.01572 -7.32073 -7.51733 -7.77369 -8.11976 -8.29834 -8.39476 -8.28277 -7.90301 -7.27415 -6.80353 -6.47092 -6.0134 -5.74868 -5.73564 -5.64746 -5.70477 -5.91686 -6.24114 -6.6817 -7.25877 -7.99043 -8.60437 -8.9872 -9.36656 -9.58427 -9.74803 -9.85639 -9.85623 -9.66951 -9.46238 -9.19013 -9.20313 -9.26056 -9.30083 -9.46532 -9.68703 -10.06123 -10.37493 -10.64077 -10.79455 -10.90629 -10.92797 -10.81494 -10.80836 -10.84232 -10.8765 -10.88521 -10.95027)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (8.82712 8.07687 7.32874 6.62477 6.19637 5.97816 5.95783 5.94103 6.02008 6.15354 6.27126 6.58426 6.87396 7.15666 7.50997 7.85186 8.13812 8.32166 8.39923 8.36127 8.32525 8.06594 7.72847 7.30032 6.92505 6.65494 6.56664 6.51972 6.64426 6.88221 7.05041 7.02891 6.96452 6.80397 6.44436 6.1644 6.00798 6.03512 6.32938 6.86739 7.35107 7.64101 7.84929 7.83813 8.15983 8.14544 8.26107 8.70117 9.15863 9.41379 9.46301 9.03816 8.3073 7.5915 6.81013 5.95994 5.06597 4.07294 3.06332 2.13982 1.30133 0.68735 0.33325 0.32504 0.78385 1.37267 1.71629 2.21215 2.68666 2.88374 3.03998 3.08772 3.02749 2.97566 2.78469 2.4435 2.06792 1.6422 0.98126 0.34351 -0.27724 -0.77691 -0.95608 -1.017 -0.95365 -0.82478 -0.76588 -0.83559 -1.23739 -1.86432 -2.63797 -3.37195 -4.29028 -5.01055 -4.39217 -4.84261 -5.35736 -5.60514 -5.47651 -4.95407 -4.07202 -3.16032 -2.20463 -1.44867 -0.90741 -0.64439 -0.61976 -0.73393 -0.98435 -1.35046 -2.03066 -2.74685 -3.4513 -4.02129 -4.59608 -4.92944 -5.064 -5.11522 -5.12771 -5.11261 -5.02458 -4.99212 -5.02682 -5.04465 -5.10646 -5.28666 -5.61461 -5.86386 -6.14367 -6.52668 -6.81133 -6.99428 -7.07295 -7.10703 -6.92821 -6.86952 -6.91664 -6.96539 -7.25504 -7.72343 -8.22569 -8.7091 -9.19859 -9.60016 -9.93438 -10.18848 -10.26948 -10.26304 -10.28404 -10.31208 -10.28477 -10.13908 -9.98077 -9.72506 -9.43442 -9.06837 -8.52108 -7.96574 -7.33575 -6.81336 -6.45265 -6.05238 -5.81411 -5.76987 -5.68319 -5.66457 -5.61643 -5.49687 -5.26931 -4.92991 -4.65127 -4.37974 -3.98748 -3.63749 -3.31301 -2.9904 -2.66598 -2.34741 -1.91499 -1.49404 -0.96036 -0.24057 0.49042 1.06374 1.56592 1.99289 2.3387 2.69499 3.08567 3.54852 4.05967 4.68834 5.42367 6.2345 7.01737 7.66421 8.0133 8.24544 8.47749 8.53897 8.59288)) (quote (8.42938 8.60776 8.78149 8.88723 8.83107 8.55881 8.33719 8.10353 7.91836 7.66385 7.35837 7.07389 6.73455 6.39746 6.05223 5.62738 5.10897 4.71319 4.41147 4.1964 3.95918 3.69629 3.46884 3.21673 2.88475 2.56888 2.29491 2.01007 1.79562 1.52229 1.25527 1.07723 0.91013 0.82677 0.68689 0.61734 0.34051 0.0394 -0.31542 -1.07926 -1.49645 -1.87261 -2.22243 -2.50129 -2.29912 -2.86336 -3.65605 -4.44315 -5.15347 -5.76861 -6.1142 -6.26947 -6.26598 -6.26719 -6.30406 -6.32887 -6.08868 -5.57877 -5.0248 -4.41048 -3.74863 -3.1544 -2.79372 -2.34275 -1.83911 -1.05167 -0.2822 0.4199 0.81374 1.3495 1.87707 2.38438 2.76148 3.07005 3.38128 3.74541 4.17092 4.76167 5.34494 5.92162 6.32359 6.7841 7.24503 7.64867 8.04781 8.31338 8.50452 8.6023 8.70784 8.72441 8.75165 8.78562 8.82086 8.78048 9.9084 9.8444 9.46722 8.79495 8.17012 7.41172 6.74795 5.92686 5.15702 4.40123 3.72772 3.24353 2.92991 2.58635 2.24264 1.97338 1.73847 1.54597 1.54522 1.4902 1.31873 1.13675 0.95412 0.81252 0.62533 0.42143 0.09534 -0.10549 -0.36988 -0.62601 -0.81255 -0.98442 -1.12841 -1.23288 -1.3232 -1.51246 -1.65189 -1.82907 -1.98714 -2.20934 -2.53014 -2.75447 -2.93431 -3.11954 -3.29819 -3.52776 -3.72111 -3.96009 -4.1794 -4.48749 -4.91852 -5.21307 -5.93263 -6.00368 -6.19248 -6.45068 -6.68511 -6.92733 -7.17239 -7.47859 -7.67448 -7.93084 -8.27437 -8.44842 -8.53609 -8.41721 -8.0254 -7.37799 -6.89803 -6.5367 -6.06876 -5.79921 -5.78146 -5.68973 -5.74162 -5.94549 -6.26895 -6.70957 -7.2856 -8.01983 -8.63527 -9.01713 -9.39652 -9.61116 -9.77115 -9.87517 -9.86921 -9.66989 -9.4527 -9.17036 -9.17594 -9.22787 -9.26452 -9.42532 -9.64415 -10.01263 -10.32062 -10.57942 -10.7252 -10.82684 -10.83461 -10.70801 -10.69634 -10.72723 -10.75832 -10.76618 -10.83107)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (8.69137 7.93364 7.17783 6.46817 6.03824 5.82378 5.80609 5.79173 5.87554 6.01467 6.1396 6.45938 6.75826 7.05088 7.41329 7.76569 8.06141 8.25213 8.33457 8.3003 8.268 8.00931 7.67509 7.24623 6.87148 6.60377 6.51859 6.47717 6.60863 6.85455 7.0315 7.01879 6.96102 6.80385 6.44818 6.17029 6.01634 6.04662 6.34182 6.88882 7.37393 7.65936 7.84539 7.82877 8.14951 8.13009 8.24026 8.68038 9.13611 9.38475 9.42932 8.99731 8.25809 7.53235 6.7411 5.88124 4.98169 3.98648 2.97611 2.05573 1.22409 0.61904 0.27364 0.27216 0.72406 1.29491 1.63248 2.13675 2.62091 2.83182 2.99787 3.05357 2.99963 2.95324 2.76935 2.43087 2.06191 1.64127 0.98382 0.34713 -0.27426 -0.77404 -0.95411 -1.01519 -0.95192 -0.82347 -0.77086 -0.84645 -1.25865 -1.89203 -2.67647 -3.42542 -4.35244 -5.07589 -4.44967 -4.89877 -5.41868 -5.6669 -5.53886 -5.01244 -4.13882 -3.21857 -2.25245 -1.484 -0.93403 -0.66586 -0.63714 -0.74542 -0.98879 -1.34906 -2.01565 -2.72186 -3.42435 -3.9935 -4.56701 -4.89813 -5.0317 -5.07734 -5.08852 -5.06827 -4.97625 -4.94051 -4.9714 -4.98726 -5.04912 -5.23015 -5.56334 -5.82654 -6.12441 -6.51424 -6.80289 -6.98783 -7.06595 -7.09678 -6.91144 -6.84725 -6.89053 -6.93523 -7.22268 -7.6897 -8.19301 -8.67856 -9.16994 -9.57451 -9.91132 -10.16483 -10.25065 -10.24399 -10.26271 -10.28764 -10.2568 -10.10688 -9.94562 -9.68416 -9.3913 -9.01793 -8.46247 -7.89964 -7.263 -6.73602 -6.37931 -5.98657 -5.75289 -5.71056 -5.62565 -5.60865 -5.55865 -5.43828 -5.208 -4.8643 -4.58202 -4.30616 -3.9091 -3.55004 -3.22044 -2.89899 -2.56929 -2.25126 -1.81818 -1.39527 -0.85824 -0.14116 0.59243 1.16524 1.66762 2.09602 2.44516 2.8036 3.19936 3.66648 4.18341 4.81872 5.56269 6.38093 7.16795 7.81348 8.16566 8.39989 8.63405 8.69568 8.75048)) (quote (8.54613 8.71291 8.8756 8.97071 8.90741 8.63732 8.41923 8.19045 8.00447 7.74983 7.44279 7.16127 6.82378 6.48822 6.14554 5.72499 5.20767 4.81348 4.51015 4.29097 4.05205 3.78382 3.56049 3.30886 2.97921 2.66366 2.39211 2.11055 1.89821 1.62651 1.36036 1.18033 1.01034 0.92218 0.77018 0.68791 0.40048 0.09132 -0.27892 -1.04845 -1.47448 -1.86368 -2.2295 -2.51214 -2.31149 -2.88257 -3.68453 -4.48128 -5.20279 -5.83277 -6.18848 -6.35429 -6.35173 -6.35358 -6.38737 -6.40377 -6.14979 -5.62127 -5.04666 -4.41108 -3.72593 -3.10744 -2.73075 -2.27391 -1.7787 -1.01645 -0.28042 0.39559 0.78124 1.29871 1.82461 2.33209 2.70951 3.01886 3.33056 3.6963 4.12348 4.71831 5.30638 5.88848 6.29438 6.75927 7.22455 7.63195 8.03534 8.30602 8.50355 8.60432 8.71214 8.72709 8.75176 8.78275 8.81467 8.77208 9.91952 9.85558 9.4721 8.79143 8.15987 7.39539 6.71633 5.88878 5.11346 4.35733 3.68169 3.19544 2.88165 2.54102 2.20015 1.93244 1.70224 1.50986 1.50919 1.45331 1.27993 1.09718 0.91386 0.77381 0.58636 0.3839 0.05878 -0.14094 -0.40417 -0.65998 -0.84673 -1.0203 -1.16865 -1.28113 -1.38728 -1.58912 -1.73994 -1.93122 -2.09902 -2.32445 -2.65155 -2.88575 -3.0734 -3.26591 -3.45896 -3.70402 -3.90977 -4.15615 -4.38501 -4.69314 -5.11797 -5.41447 -6.09109 -6.15473 -6.34359 -6.60121 -6.83757 -7.08093 -7.32675 -7.63405 -7.82921 -8.08546 -8.42634 -8.5958 -8.67472 -8.54894 -8.14528 -7.47966 -6.99053 -6.60089 -6.12268 -5.8484 -5.82597 -5.73072 -5.77725 -5.97296 -6.29555 -6.7362 -7.31115 -8.04782 -8.66466 -9.04565 -9.42499 -9.63666 -9.79294 -9.89266 -9.88091 -9.66923 -9.44206 -9.14977 -9.14806 -9.19453 -9.22756 -9.38469 -9.60061 -9.96342 -10.26567 -10.51743 -10.65514 -10.74666 -10.74064 -10.60067 -10.58391 -10.61172 -10.63971 -10.64675 -10.71146)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (8.55626 7.79135 7.02817 6.31306 5.88175 5.67088 5.65567 5.64357 5.73211 5.87685 6.00894 6.33536 6.64328 6.94566 7.31702 7.6797 7.98473 8.1825 8.2698 8.23925 8.21064 7.95265 7.62149 7.19186 6.8175 6.55209 6.4699 6.43377 6.57201 6.8258 7.01135 7.00736 6.95616 6.80242 6.45088 6.17529 6.02399 6.0575 6.35386 6.90978 7.39637 7.67742 7.84154 7.81955 8.13933 8.11493 8.21968 8.65974 9.11369 9.35575 9.39559 8.95633 8.2088 7.47318 6.67217 5.80284 4.89803 3.90099 2.89029 1.97345 1.14916 0.55366 0.21741 0.22274 0.66735 1.21936 1.5501 2.06237 2.55598 2.78013 2.95589 3.01949 2.97178 2.93078 2.75384 2.41811 2.0557 1.64015 0.9862 0.35064 -0.27135 -0.77121 -0.95217 -1.01341 -0.95022 -0.82217 -0.77577 -0.85714 -1.27961 -1.91934 -2.7144 -3.47813 -4.41371 -5.14028 -4.50645 -4.95422 -5.47919 -5.72781 -5.6003 -5.06989 -4.20434 -3.27546 -2.29884 -1.51805 -0.95943 -0.68617 -0.65343 -0.75601 -0.99251 -1.34705 -2.00049 -2.69694 -3.39752 -3.96586 -4.5381 -4.86702 -4.9996 -5.03978 -5.04965 -5.02436 -4.92841 -4.88946 -4.91662 -4.93056 -4.99248 -5.17431 -5.51261 -5.78943 -6.10479 -6.50111 -6.79346 -6.98002 -7.05734 -7.08487 -6.89286 -6.82288 -6.86211 -6.90254 -7.18736 -7.6526 -8.15665 -8.64423 -9.1373 -9.54502 -9.88479 -10.13776 -10.22983 -10.22315 -10.23964 -10.26152 -10.22715 -10.07301 -9.90882 -9.64163 -9.34654 -8.96589 -8.40236 -7.83216 -7.18909 -6.65766 -6.30515 -5.92025 -5.69128 -5.6515 -5.56851 -5.5532 -5.50144 -5.38032 -5.14744 -4.79962 -4.51376 -4.23364 -3.83184 -3.46379 -3.12906 -2.80875 -2.47383 -2.15635 -1.72263 -1.29785 -0.75759 -0.04335 0.69267 1.26484 1.76731 2.19705 2.5494 2.90993 3.31069 3.78193 4.30448 4.94626 5.69865 6.52407 7.31494 7.95894 8.3141 8.55034 8.78653 8.84831 8.904)) (quote (8.65892 8.81411 8.96574 9.05021 8.97984 8.71191 8.49731 8.27333 8.08668 7.83203 7.52361 7.24515 6.9097 6.57589 6.23591 5.81981 5.30373 4.91121 4.60638 4.38322 4.14269 3.86918 3.64993 3.39871 3.07125 2.75602 2.48686 2.20862 1.99854 1.72861 1.46353 1.28175 1.10907 1.01624 0.85237 0.75757 0.45971 0.14262 -0.24287 -1.01794 -1.45271 -1.85484 -2.23646 -2.52279 -2.32364 -2.90142 -3.71246 -4.51872 -5.25124 -5.8958 -6.26143 -6.43755 -6.43577 -6.43807 -6.46864 -6.47654 -6.2088 -5.66182 -5.06674 -4.41017 -3.7021 -3.05983 -2.66756 -2.20505 -1.71782 -0.98014 -0.27752 0.37233 0.74983 1.24957 1.77358 2.28105 2.65868 2.96875 3.28085 3.64811 4.07686 4.67567 5.26844 5.85585 6.26564 6.73484 7.20438 7.61549 8.02306 8.29878 8.50259 8.60629 8.71633 8.72965 8.75171 8.77961 8.80816 8.76335 9.93016 9.86629 9.47655 8.78758 8.14934 7.37889 6.68457 5.85075 5.07018 4.31386 3.63623 3.14799 2.83408 2.4964 2.15843 1.89233 1.66685 1.47467 1.47409 1.41737 1.24214 1.05866 0.87467 0.7362 0.54854 0.34755 0.02348 -0.17509 -0.43711 -0.69255 -0.87949 -1.05476 -1.20747 -1.32804 -1.4501 -1.66449 -1.82665 -2.03194 -2.20937 -2.43793 -2.77117 -3.01502 -3.21034 -3.40997 -3.61722 -3.8776 -4.09567 -4.34947 -4.58785 -4.89613 -5.31489 -5.61334 -6.24748 -6.30378 -6.49267 -6.74967 -6.98788 -7.23232 -7.47883 -7.78715 -7.98157 -8.23761 -8.57577 -8.74056 -8.81071 -8.67804 -8.26272 -7.57923 -7.08111 -6.66355 -6.17523 -5.89629 -5.86923 -5.7705 -5.8117 -5.99933 -6.32101 -6.76164 -7.33549 -8.07443 -8.69263 -9.07282 -9.45204 -9.66081 -9.81345 -9.90891 -9.89141 -9.66759 -9.43052 -9.12841 -9.11951 -9.1606 -9.18998 -9.34347 -9.55645 -9.91361 -10.21014 -10.45484 -10.58442 -10.66579 -10.64609 -10.49298 -10.47113 -10.49586 -10.52074 -10.52695 -10.59147)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (8.42181 7.65001 6.87974 6.15945 5.7269 5.51945 5.50659 5.49656 5.58979 5.74008 5.87929 6.21222 6.52902 6.84101 7.22115 7.59391 7.90812 8.11282 8.20493 8.17813 8.15319 7.89597 7.56769 7.13724 6.76315 6.49994 6.42061 6.38959 6.53446 6.79599 6.99003 6.99466 6.95001 6.79973 6.45252 6.17946 6.03095 6.06779 6.36552 6.93029 7.41841 7.6952 7.83774 7.81046 8.12929 8.09996 8.19932 8.63927 9.09136 9.32677 9.36182 8.91523 8.15943 7.41398 6.60334 5.72477 4.81496 3.81646 2.80582 1.89294 1.07647 0.49111 0.16442 0.17665 0.6136 1.14597 1.4691 1.98896 2.49182 2.72867 2.91403 2.98549 2.94395 2.90827 2.73819 2.40524 2.0493 1.63883 0.98843 0.35403 -0.26849 -0.76842 -0.95026 -1.01165 -0.94855 -0.8209 -0.7806 -0.86768 -1.30027 -1.94626 -2.7518 -3.53008 -4.47411 -5.20376 -4.56253 -5.00898 -5.53893 -5.78789 -5.66086 -5.12646 -4.26863 -3.33106 -2.34387 -1.55086 -0.98369 -0.70538 -0.66869 -0.76572 -0.99554 -1.34447 -1.98519 -2.67208 -3.37083 -3.93836 -4.50935 -4.83611 -4.96771 -5.00252 -5.01112 -4.98087 -4.88106 -4.83896 -4.86248 -4.87454 -4.93651 -5.11912 -5.46241 -5.75252 -6.08484 -6.48734 -6.7831 -6.97092 -7.04717 -7.07137 -6.87255 -6.79652 -6.83149 -6.86746 -7.14923 -7.61227 -8.11677 -8.60626 -9.10083 -9.51184 -9.85492 -10.10739 -10.20709 -10.20059 -10.21489 -10.23381 -10.19591 -10.03755 -9.87043 -9.59752 -9.30023 -8.91233 -8.34082 -7.76337 -7.11407 -6.57833 -6.23021 -5.85346 -5.62931 -5.59267 -5.51176 -5.4982 -5.44477 -5.32298 -5.0876 -4.73585 -4.44646 -4.16212 -3.75566 -3.37868 -3.03885 -2.71965 -2.37955 -2.06264 -1.62833 -1.20174 -0.65836 0.05292 0.79121 1.3626 1.86505 2.29605 2.65152 3.01407 3.41973 3.89497 4.42299 5.07104 5.83166 6.66401 7.45846 8.10073 8.45874 8.69694 8.93507 8.99698 9.05355)) (quote (8.76793 8.91152 9.05206 9.12591 9.04849 8.78273 8.57158 8.35235 8.16514 7.9106 7.60098 7.32569 6.99245 6.66057 6.32345 5.91194 5.39723 5.00648 4.70025 4.47324 4.23116 3.95245 3.73725 3.48634 3.16098 2.84604 2.57926 2.30438 2.09667 1.82867 1.56483 1.38153 1.20634 1.109 0.93348 0.82637 0.51821 0.19333 -0.20725 -0.98772 -1.43115 -1.84607 -2.2433 -2.53325 -2.33557 -2.91992 -3.73986 -4.55549 -5.29886 -5.95773 -6.3331 -6.51929 -6.51817 -6.52074 -6.54794 -6.54725 -6.2658 -5.7005 -5.08513 -4.40783 -3.67722 -3.01167 -2.60424 -2.13623 -1.65657 -0.94282 -0.27355 0.35009 0.71946 1.20202 1.72392 2.2312 2.60895 2.91967 3.23211 3.60079 4.03105 4.63371 5.23108 5.82372 6.23733 6.71078 7.18453 7.59929 8.01097 8.29165 8.50164 8.60823 8.7204 8.73208 8.7515 8.77621 8.80135 8.75432 9.94033 9.87656 9.48058 8.78339 8.13854 7.36221 6.65267 5.81276 5.02716 4.27083 3.59131 3.10118 2.78718 2.45248 2.11744 1.85304 1.63227 1.44037 1.43987 1.38234 1.20533 1.02115 0.83654 0.69965 0.51181 0.31233 -0.01062 -0.208 -0.46876 -0.72377 -0.9109 -1.08783 -1.24493 -1.37369 -1.51171 -1.73862 -1.91206 -2.13126 -2.31822 -2.54984 -2.88904 -3.14234 -3.34515 -3.55175 -3.773 -4.04852 -4.27883 -4.54006 -4.78794 -5.09647 -5.50932 -5.80969 -6.40184 -6.45087 -6.63977 -6.8961 -7.1361 -7.38155 -7.62873 -7.93798 -8.13164 -8.38736 -8.7227 -8.88277 -8.94415 -8.80456 -8.3778 -7.67676 -7.16981 -6.72474 -6.22644 -5.94292 -5.91128 -5.8091 -5.84501 -6.02463 -6.34538 -6.78593 -7.35866 -8.09973 -8.71923 -9.0987 -9.47774 -9.68369 -9.83273 -9.92397 -9.90073 -9.665 -9.41812 -9.10632 -9.09035 -9.1261 -9.15183 -9.30172 -9.51169 -9.86326 -10.15407 -10.3917 -10.51309 -10.58431 -10.55102 -10.38499 -10.35804 -10.37968 -10.40145 -10.40686 -10.47118)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (8.28803 7.50963 6.73254 6.00732 5.57367 5.36949 5.35884 5.3507 5.44859 5.60437 5.75064 6.08995 6.4155 6.73694 7.12571 7.50832 7.83159 8.0431 8.14 8.11697 8.09567 7.83929 7.51373 7.08239 6.70847 6.44737 6.37077 6.34468 6.49604 6.7652 6.9676 6.98077 6.94262 6.79585 6.45314 6.1828 6.03724 6.07751 6.37681 6.95036 7.44005 7.7127 7.834 7.80149 8.11939 8.08518 8.17918 8.61895 9.06912 9.29783 9.32803 8.87402 8.10999 7.35479 6.53462 5.64702 4.7325 3.73286 2.72267 1.81414 1.00595 0.4313 0.11456 0.13377 0.56272 1.07466 1.38944 1.9165 2.42841 2.67743 2.87231 2.95158 2.91615 2.88573 2.72238 2.39226 2.04273 1.63734 0.9905 0.35732 -0.2657 -0.76567 -0.94837 -1.00992 -0.9469 -0.81964 -0.78535 -0.87807 -1.32065 -1.97281 -2.78868 -3.58132 -4.53367 -5.26635 -4.61794 -5.06308 -5.59792 -5.84717 -5.72057 -5.18217 -4.33173 -3.3854 -2.38759 -1.58249 -1.00685 -0.72352 -0.68296 -0.77462 -0.99792 -1.34134 -1.96976 -2.64728 -3.34426 -3.91102 -4.48076 -4.80539 -4.93602 -4.96558 -4.9729 -4.93779 -4.8342 -4.789 -4.80895 -4.81917 -4.88121 -5.06458 -5.41272 -5.71582 -6.06458 -6.47294 -6.77184 -6.96057 -7.03552 -7.05635 -6.85058 -6.76824 -6.79874 -6.83007 -7.10839 -7.56885 -8.0735 -8.5648 -9.06067 -9.47512 -9.82185 -10.07386 -10.18249 -10.17639 -10.18853 -10.20455 -10.16313 -10.00056 -9.83052 -9.55191 -9.25242 -8.85732 -8.2779 -7.69333 -7.03801 -6.49808 -6.15455 -5.78622 -5.56702 -5.53408 -5.4554 -5.44364 -5.38865 -5.26624 -5.02847 -4.67295 -4.3801 -4.09159 -3.68052 -3.29469 -2.94979 -2.63164 -2.28642 -1.9701 -1.53524 -1.1069 -0.56049 0.14769 0.88809 1.45857 1.96092 2.39307 2.75158 3.11609 3.52655 4.00568 4.53902 5.19319 5.9618 6.80088 7.59863 8.23896 8.59972 8.83979 9.07982 9.14184 9.19929)) (quote (8.87328 9.00527 9.13472 9.19795 9.11354 8.84994 8.64221 8.42764 8.23999 7.98568 7.67504 7.403 7.07214 6.74239 6.40827 6.00147 5.48827 5.09937 4.79184 4.5611 4.31757 4.0337 3.8225 3.57184 3.24848 2.9338 2.66938 2.39788 2.19267 1.92674 1.66431 1.47972 1.3022 1.20047 1.01354 0.89431 0.576 0.24345 -0.17203 -0.95779 -1.40977 -1.83739 -2.25003 -2.54354 -2.34731 -2.93809 -3.76676 -4.59163 -5.34568 -6.0186 -6.40354 -6.59958 -6.59897 -6.60166 -6.62534 -6.61599 -6.32087 -5.73738 -5.1019 -4.40413 -3.65137 -2.96301 -2.54086 -2.06754 -1.59501 -0.90456 -0.26854 0.32881 0.6901 1.15601 1.67558 2.18251 2.56028 2.87157 3.18431 3.55432 3.986 4.59243 5.19429 5.79207 6.20944 6.68708 7.16497 7.58333 7.99906 8.28463 8.5007 8.61012 8.72436 8.7344 8.75113 8.77257 8.79425 8.74498 9.95006 9.8864 9.48421 8.7789 8.12749 7.34537 6.62064 5.77482 4.98441 4.22822 3.54694 3.05497 2.74094 2.40923 2.07718 1.81453 1.59847 1.40693 1.40651 1.34819 1.16944 0.9846 0.7994 0.66412 0.47614 0.2782 -0.04357 -0.23972 -0.49917 -0.75371 -0.94101 -1.11959 -1.28108 -1.41811 -1.57214 -1.81154 -1.99622 -2.22922 -2.4256 -2.6602 -3.00519 -3.26772 -3.47787 -3.69127 -3.92633 -4.2168 -4.45928 -4.72795 -4.98529 -5.29418 -5.70128 -6.00355 -6.55424 -6.59605 -6.78492 -7.04055 -7.28227 -7.52867 -7.77648 -8.08657 -8.27947 -8.53476 -8.86721 -9.02249 -9.0751 -8.92859 -8.49058 -7.77232 -7.25671 -6.78451 -6.27639 -5.98837 -5.95217 -5.84658 -5.87724 -6.04892 -6.36871 -6.80914 -7.38072 -8.12379 -8.74452 -9.12333 -9.50213 -9.70533 -9.85084 -9.9379 -9.90895 -9.66151 -9.40489 -9.08353 -9.06059 -9.09107 -9.11314 -9.25945 -9.4664 -9.81241 -10.09748 -10.32804 -10.44119 -10.50224 -10.45548 -10.27674 -10.24469 -10.26323 -10.28189 -10.2865 -10.35061)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (8.15493 7.3702 6.58658 5.85666 5.42205 5.22099 5.21241 5.206 5.30851 5.46972 5.62301 5.96857 6.30271 6.63345 7.03071 7.42296 7.75516 7.97336 8.07502 8.05579 8.0381 7.78263 7.45961 7.02735 6.65348 6.39441 6.32043 6.29909 6.4568 6.73348 6.94411 6.96572 6.93404 6.79083 6.45278 6.18537 6.04291 6.08668 6.38774 6.97002 7.46132 7.72994 7.8303 7.79263 8.10961 8.07058 8.15925 8.59877 9.04697 9.26893 9.29422 8.83272 8.0605 7.29559 6.46601 5.5696 4.65063 3.65017 2.64082 1.73701 0.93754 0.37413 0.06771 0.09397 0.51461 1.00539 1.31108 1.84496 2.36573 2.62643 2.83073 2.91776 2.88837 2.86316 2.70644 2.37919 2.03598 1.63567 0.99242 0.3605 -0.26295 -0.76297 -0.9465 -1.00821 -0.94528 -0.81841 -0.79004 -0.88831 -1.34076 -1.99901 -2.82505 -3.63187 -4.59243 -5.3281 -4.67271 -5.11654 -5.65618 -5.90567 -5.77946 -5.23705 -4.39368 -3.43854 -2.43004 -1.613 -1.02894 -0.74066 -0.69629 -0.78272 -0.99967 -1.33769 -1.95422 -2.62255 -3.31781 -3.88382 -4.45233 -4.77486 -4.90453 -4.92893 -4.93499 -4.89511 -4.7878 -4.73958 -4.75602 -4.76444 -4.82655 -5.01066 -5.36355 -5.67933 -6.04404 -6.45794 -6.75973 -6.94903 -7.02244 -7.03988 -6.82702 -6.73812 -6.76397 -6.79047 -7.06495 -7.52245 -8.02698 -8.51999 -9.01698 -9.43499 -9.78569 -10.03728 -10.15613 -10.1506 -10.16064 -10.17383 -10.12888 -9.96212 -9.78916 -9.50486 -9.20318 -8.80091 -8.21369 -7.6221 -6.96096 -6.41697 -6.07821 -5.71857 -5.50441 -5.47573 -5.39943 -5.38951 -5.33305 -5.21008 -4.97003 -4.61089 -4.31464 -4.02201 -3.6064 -3.21179 -2.86182 -2.5447 -2.1944 -1.87869 -1.44331 -1.01329 -0.46397 0.24102 0.98338 1.55281 2.05498 2.4882 2.84967 3.21607 3.63125 4.11413 4.65266 5.31276 6.08917 6.93475 7.73557 8.37376 8.73716 8.97904 9.22088 9.28301 9.34132)) (quote (8.97512 9.09553 9.21385 9.26649 9.17513 8.91369 8.70933 8.49936 8.31138 8.0574 7.74591 7.47721 7.14889 6.82145 6.49046 6.08849 5.57695 5.18998 4.88124 4.64688 4.40197 4.11302 3.90578 3.65528 3.33381 3.01938 2.7573 2.4892 2.2866 2.02288 1.76202 1.57635 1.39668 1.2907 1.09259 0.96142 0.63312 0.29301 -0.13722 -0.92813 -1.38859 -1.82879 -2.25667 -2.55366 -2.35884 -2.95593 -3.79317 -4.62714 -5.39172 -6.07845 -6.47279 -6.67846 -6.67824 -6.68087 -6.70091 -6.68283 -6.37407 -5.77254 -5.11712 -4.39915 -3.62462 -2.91394 -2.4775 -1.99905 -1.5332 -0.86541 -0.26256 0.30846 0.6617 1.11147 1.62851 2.13492 2.51262 2.82443 3.13741 3.50866 3.94169 4.55178 5.15804 5.76088 6.18196 6.66373 7.1457 7.5676 7.98732 8.27771 8.49978 8.61198 8.72822 8.7366 8.75062 8.76869 8.78686 8.73537 9.95936 9.89582 9.48746 8.77411 8.1162 7.32838 6.58849 5.73694 4.94192 4.18604 3.5031 3.00937 2.69534 2.36664 2.0376 1.77679 1.56543 1.37431 1.37397 1.31487 1.13444 0.94899 0.76323 0.62956 0.44149 0.24512 -0.07541 -0.27029 -0.5284 -0.78241 -0.96988 -1.15009 -1.31598 -1.46136 -1.63144 -1.88329 -2.07914 -2.32584 -2.53156 -2.76904 -3.11965 -3.3912 -3.60853 -3.82857 -4.07723 -4.38247 -4.63702 -4.91314 -5.17992 -5.48929 -5.89079 -6.19496 -6.70471 -6.73938 -6.92818 -7.18307 -7.42646 -7.67374 -7.92213 -8.23298 -8.42511 -8.67989 -9.00936 -9.15979 -9.20362 -9.0502 -8.60112 -7.86596 -7.34185 -6.84292 -6.3251 -6.03266 -5.99195 -5.88299 -5.90844 -6.07223 -6.39104 -6.83131 -7.40172 -8.14664 -8.76855 -9.14677 -9.52527 -9.72579 -9.86782 -9.95073 -9.9161 -9.65717 -9.39088 -9.06009 -9.03028 -9.05554 -9.07395 -9.21671 -9.42059 -9.76108 -10.04043 -10.26392 -10.36876 -10.41964 -10.35951 -10.16827 -10.13111 -10.14656 -10.16211 -10.16593 -10.22982)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (8.02252 7.23173 6.44183 5.70746 5.27202 5.07393 5.0673 5.06247 5.16955 5.33614 5.49638 5.84807 6.19067 6.53056 6.93615 7.33784 7.67884 7.90362 8.01001 7.99459 7.98049 7.726 7.40537 6.97214 6.59821 6.3411 6.26963 6.25287 6.4168 6.70087 6.91962 6.94959 6.92433 6.7847 6.45147 6.18719 6.04796 6.09532 6.39833 6.98927 7.48223 7.74693 7.82665 7.78389 8.09996 8.05614 8.13952 8.57874 9.0249 9.24006 9.2604 8.79132 8.01096 7.23641 6.39753 5.49251 4.56934 3.56839 2.56023 1.66151 0.87117 0.31952 0.02376 0.05715 0.46917 0.93808 1.23398 1.7743 2.30375 2.57566 2.7893 2.88402 2.86063 2.84056 2.69038 2.36602 2.02908 1.63384 0.99419 0.36358 -0.26026 -0.7603 -0.94466 -1.00653 -0.94368 -0.81719 -0.79466 -0.89841 -1.3606 -2.02485 -2.86095 -3.68175 -4.6504 -5.38902 -4.72684 -5.16938 -5.71376 -5.96344 -5.83755 -5.29114 -4.45453 -3.4905 -2.47129 -1.64241 -1.05003 -0.75682 -0.7087 -0.79006 -1.00083 -1.33355 -1.93856 -2.59789 -3.2915 -3.85677 -4.42406 -4.74452 -4.87324 -4.89258 -4.8974 -4.85283 -4.74186 -4.69067 -4.70369 -4.71035 -4.77252 -4.95735 -5.31487 -5.64305 -6.02322 -6.44239 -6.7468 -6.93634 -7.00799 -7.02199 -6.80193 -6.70624 -6.72725 -6.74876 -7.01904 -7.47321 -7.97734 -8.47195 -8.96989 -9.39158 -9.74656 -9.99777 -10.12807 -10.1233 -10.13126 -10.14168 -10.09321 -9.92228 -9.7464 -9.45643 -9.15257 -8.74317 -8.14823 -7.54974 -6.88297 -6.33505 -6.00121 -5.65053 -5.44153 -5.41762 -5.34382 -5.3358 -5.27796 -5.15449 -4.91226 -4.54966 -4.25005 -3.95336 -3.53326 -3.12994 -2.77492 -2.4588 -2.10347 -1.78838 -1.3525 -0.92088 -0.36873 0.33296 1.07712 1.64538 2.14728 2.5815 2.94583 3.31407 3.73388 4.22039 4.76397 5.42986 6.21388 7.06574 7.86935 8.50525 8.87117 9.11479 9.35839 9.42062 9.47978)) (quote (9.07357 9.18239 9.2896 9.33166 9.23339 8.97411 8.77309 8.56764 8.37944 8.1259 7.81371 7.54844 7.22281 6.89785 6.57012 6.17311 5.66333 5.27838 4.96852 4.73066 4.48444 4.19046 3.98715 3.73673 3.41705 3.10285 2.84308 2.57841 2.37852 2.11715 1.85802 1.67148 1.48982 1.37971 1.17064 1.02772 0.68957 0.34203 -0.10278 -0.89874 -1.36759 -1.82026 -2.2632 -2.56361 -2.37018 -2.97347 -3.81911 -4.66207 -5.43702 -6.13733 -6.54088 -6.75597 -6.75603 -6.75843 -6.7747 -6.74782 -6.42548 -5.80604 -5.13088 -4.39297 -3.59704 -2.86453 -2.41422 -1.93081 -1.47122 -0.82543 -0.25565 0.289 0.63423 1.06835 1.58266 2.08839 2.46595 2.77821 3.09138 3.46377 3.8981 4.51175 5.12232 5.73014 6.15487 6.64071 7.12671 7.55209 7.97575 8.27089 8.49886 8.61379 8.73198 8.7387 8.74997 8.76459 8.7792 8.72547 9.96825 9.90485 9.49034 8.76903 8.10467 7.31124 6.55624 5.69913 4.89971 4.14426 3.45978 2.96436 2.65037 2.3247 1.99871 1.73979 1.53312 1.34248 1.34221 1.28237 1.10031 0.91426 0.72798 0.59595 0.4078 0.21304 -0.10619 -0.29977 -0.55649 -0.80994 -0.99755 -1.17936 -1.34969 -1.50348 -1.68965 -1.95391 -2.16087 -2.42116 -2.6361 -2.8764 -3.23245 -3.51282 -3.73716 -3.96368 -4.22573 -4.54555 -4.81208 -5.09566 -5.37185 -5.6818 -6.07788 -6.38393 -6.85328 -6.88088 -7.06958 -7.32372 -7.5687 -7.8168 -8.06574 -8.37727 -8.56862 -8.82278 -9.1492 -9.29473 -9.32978 -9.16943 -8.70948 -7.95773 -7.42529 -6.9 -6.37263 -6.07584 -6.03066 -5.91835 -5.93863 -6.09462 -6.4124 -6.85247 -7.42169 -8.16834 -8.79137 -9.16907 -9.54721 -9.74512 -9.88372 -9.96252 -9.92223 -9.652 -9.37613 -9.03603 -8.99945 -9.01955 -9.03429 -9.17352 -9.3743 -9.70932 -9.98294 -10.19935 -10.29585 -10.33655 -10.26316 -10.05961 -10.01735 -10.0297 -10.04214 -10.04518 -10.10885)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (7.89082 7.09423 6.29831 5.5597 5.12357 4.92832 4.92351 4.9201 5.03172 5.20363 5.37077 5.72847 6.07938 6.42826 6.84204 7.25298 7.60266 7.8339 7.94499 7.9334 7.92287 7.66941 7.35102 6.91678 6.54271 6.28747 6.2184 6.20606 6.37608 6.66742 6.89416 6.9324 6.91353 6.77751 6.44925 6.18828 6.05242 6.10346 6.40859 7.00813 7.50279 7.76367 7.82305 7.77527 8.09042 8.04187 8.11998 8.55886 9.00293 9.21124 9.22656 8.74984 7.96138 7.17726 6.32918 5.41575 4.48864 3.4875 2.48088 1.5876 0.80679 0.26737 -0.01739 0.02319 0.42632 0.87269 1.15811 1.7045 2.24246 2.52513 2.748 2.85038 2.83291 2.81794 2.67419 2.35276 2.02202 1.63185 0.99584 0.36657 -0.25762 -0.75767 -0.94284 -1.00486 -0.9421 -0.81599 -0.79921 -0.90838 -1.38018 -2.05036 -2.89637 -3.73098 -4.70762 -5.44915 -4.78037 -5.22164 -5.77065 -6.02048 -5.89488 -5.34445 -4.5143 -3.54135 -2.51137 -1.67078 -1.07014 -0.77205 -0.72024 -0.79669 -1.00141 -1.32893 -1.9228 -2.57331 -3.26531 -3.82986 -4.39594 -4.71436 -4.84214 -4.85651 -4.86011 -4.81094 -4.69637 -4.64227 -4.65193 -4.65687 -4.71912 -4.90464 -5.26669 -5.60697 -6.00214 -6.42629 -6.73307 -6.92256 -6.99222 -7.00276 -6.77538 -6.67267 -6.68867 -6.70503 -6.97074 -7.42124 -7.92471 -8.42082 -8.91952 -9.34501 -9.70458 -9.95544 -10.09836 -10.09453 -10.10045 -10.10817 -10.05619 -9.8811 -9.70231 -9.40667 -9.10064 -8.68416 -8.08158 -7.47631 -6.80409 -6.25234 -5.92362 -5.58214 -5.37837 -5.35974 -5.28858 -5.28251 -5.22337 -5.09945 -4.85514 -4.48923 -4.18632 -3.88561 -3.46107 -3.04911 -2.68907 -2.3739 -2.01359 -1.69913 -1.2628 -0.82962 -0.27475 0.42353 1.16935 1.73634 2.23787 2.67303 3.04014 3.41015 3.8345 4.32455 4.87305 5.54457 6.33598 7.19392 8.00009 8.63351 9.00185 9.24716 9.49245 9.55477 9.61477)) (quote (9.16874 9.26601 9.36208 9.39358 9.28847 9.03132 8.8336 8.6326 8.44428 8.19128 7.87855 7.6168 7.294 6.97168 6.64734 6.25539 5.7475 5.36464 5.05375 4.8125 4.56504 4.2661 4.06666 3.81626 3.49827 3.18428 2.92679 2.66558 2.4685 2.2096 1.95234 1.76514 1.58164 1.46753 1.24772 1.09324 0.74538 0.39051 -0.06872 -0.86961 -1.34676 -1.8118 -2.26964 -2.5734 -2.38134 -2.99071 -3.84459 -4.69642 -5.48161 -6.19525 -6.60787 -6.83218 -6.83239 -6.83441 -6.84679 -6.81104 -6.47516 -5.83796 -5.14322 -4.38564 -3.56869 -2.81483 -2.35108 -1.86288 -1.40911 -0.78469 -0.24784 0.27041 0.60764 1.0266 1.53799 2.04289 2.42022 2.73287 3.04618 3.41965 3.8552 4.47231 5.08711 5.69982 6.12816 6.61801 7.10798 7.5368 7.96435 8.26416 8.49795 8.61557 8.73564 8.74069 8.74919 8.76026 8.77128 8.71532 9.97675 9.9135 9.49286 8.76368 8.09292 7.29397 6.52389 5.66138 4.85776 4.10289 3.41697 2.91992 2.60601 2.28337 1.96047 1.7035 1.50151 1.31142 1.31123 1.25064 1.06701 0.88041 0.69363 0.56324 0.37506 0.18193 -0.13594 -0.32819 -0.58348 -0.83632 -1.02407 -1.20748 -1.38223 -1.54451 -1.7468 -2.02344 -2.24145 -2.5152 -2.73927 -2.9823 -3.34363 -3.6326 -3.86379 -4.09662 -4.37185 -4.70606 -4.98448 -5.27552 -5.56109 -5.87174 -6.26258 -6.57049 -7.00001 -7.0206 -7.20919 -7.46253 -7.70905 -7.9579 -8.20736 -8.51949 -8.71004 -8.96349 -9.28678 -9.42735 -9.45364 -9.28635 -8.81572 -8.0477 -7.50707 -6.95581 -6.41902 -6.11796 -6.06834 -5.95271 -5.96786 -6.1161 -6.43285 -6.87267 -7.44069 -8.18894 -8.81303 -9.19026 -9.56799 -9.76335 -9.89858 -9.9733 -9.92738 -9.64606 -9.36067 -9.01137 -8.96813 -8.98313 -8.99418 -9.12991 -9.32757 -9.65714 -9.92505 -10.13437 -10.22248 -10.25301 -10.16646 -9.95082 -9.90344 -9.9127 -9.92203 -9.92429 -9.98773)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (7.75983 6.95769 6.156 5.41338 4.97668 4.78413 4.78104 4.7789 4.89502 5.07219 5.24617 5.60975 5.96883 6.32657 6.74839 7.16838 7.52661 7.76421 7.87997 7.87223 7.86524 7.61287 7.29658 6.86129 6.48699 6.23356 6.16678 6.1587 6.33468 6.63319 6.8678 6.91421 6.90168 6.7693 6.44617 6.18868 6.05632 6.11111 6.41853 7.02661 7.52302 7.78017 7.81949 7.76674 8.08101 8.02776 8.10064 8.5391 8.98103 9.18245 9.19271 8.70829 7.91177 7.11813 6.26097 5.33933 4.40852 3.40748 2.40274 1.51524 0.74433 0.21762 -0.05584 -0.008 0.38598 0.80917 1.08342 1.63553 2.18184 2.47484 2.70685 2.81682 2.80524 2.79531 2.6579 2.33942 2.01482 1.62971 0.99735 0.36947 -0.25503 -0.75508 -0.94104 -1.00322 -0.94055 -0.81481 -0.8037 -0.91821 -1.39952 -2.07555 -2.93135 -3.77959 -4.76411 -5.5085 -4.83331 -5.27331 -5.82689 -6.07682 -5.95146 -5.39701 -4.57303 -3.5911 -2.55032 -1.69814 -1.08931 -0.78638 -0.73095 -0.80261 -1.00146 -1.32387 -1.90695 -2.5488 -3.23925 -3.8031 -4.36797 -4.68439 -4.81123 -4.82073 -4.82311 -4.76943 -4.65132 -4.59436 -4.60074 -4.60399 -4.66632 -4.85252 -5.21899 -5.57111 -5.98082 -6.40968 -6.7186 -6.90771 -6.97519 -6.98224 -6.74742 -6.63749 -6.64831 -6.65936 -6.92015 -7.36664 -7.8692 -8.36671 -8.86601 -9.2954 -9.65984 -9.91038 -10.06708 -10.06436 -10.06827 -10.07336 -10.01787 -9.83863 -9.65692 -9.35565 -9.04745 -8.62393 -8.01379 -7.40183 -6.72435 -6.16891 -5.84544 -5.5134 -5.31497 -5.30209 -5.2337 -5.22961 -5.16928 -5.04494 -4.79865 -4.42957 -4.12342 -3.81873 -3.38982 -2.96928 -2.60424 -2.28999 -1.92473 -1.61092 -1.17417 -0.73949 -0.18199 0.51278 1.26013 1.82573 2.32683 2.76284 3.13265 3.50438 3.9332 4.42667 4.97995 5.65695 6.45557 7.3194 8.1279 8.75866 9.12932 9.37625 9.62318 9.68556 9.7464)) (quote (9.26076 9.34648 9.43142 9.4524 9.34047 9.08546 8.89099 8.69437 8.50603 8.25368 7.94055 7.68239 7.36256 7.04304 6.72221 6.33542 5.82953 5.44883 5.137 4.89247 4.64383 4.33999 4.14438 3.89392 3.57753 3.26373 3.0085 2.75075 2.55658 2.30027 2.04504 1.85736 1.67218 1.5542 1.32385 1.15799 0.80055 0.43847 -0.03502 -0.84074 -1.3261 -1.80341 -2.27598 -2.58304 -2.39233 -3.00767 -3.86964 -4.73022 -5.5255 -6.25226 -6.67378 -6.90711 -6.90736 -6.90885 -6.91721 -6.87254 -6.52318 -5.86835 -5.15422 -4.37722 -3.53964 -2.7649 -2.28813 -1.79531 -1.34693 -0.74322 -0.23918 0.25263 0.58192 0.98617 1.49446 1.99839 2.37541 2.68839 3.0018 3.37625 3.81297 4.43345 5.05238 5.66991 6.10181 6.59562 7.08951 7.52172 7.95309 8.25752 8.49706 8.61731 8.73921 8.74258 8.74828 8.75574 8.76312 8.70491 9.98486 9.92179 9.49505 8.75806 8.08096 7.27656 6.49145 5.62371 4.81609 4.06193 3.37467 2.87605 2.56225 2.24266 1.92287 1.66791 1.47057 1.2811 1.28097 1.21967 1.0345 0.84738 0.66013 0.5314 0.34322 0.15175 -0.16471 -0.3556 -0.60943 -0.86162 -1.04949 -1.23447 -1.41366 -1.58449 -1.80293 -2.09189 -2.32089 -2.608 -2.84108 -3.08677 -3.45322 -3.75056 -3.98845 -4.22743 -4.51563 -4.86403 -5.15423 -5.45275 -5.74766 -6.05913 -6.4449 -6.75467 -7.14493 -7.15858 -7.34703 -7.59954 -7.84754 -8.09709 -8.34703 -8.65968 -8.84942 -9.10207 -9.42216 -9.55773 -9.57524 -9.40102 -8.9199 -8.1359 -7.58725 -7.01039 -6.46431 -6.15904 -6.10502 -5.98611 -5.99617 -6.13674 -6.45241 -6.89196 -7.45874 -8.20847 -8.83357 -9.2104 -9.58766 -9.78054 -9.91244 -9.98312 -9.93158 -9.63936 -9.34453 -8.98616 -8.93634 -8.94629 -8.95366 -9.08592 -9.28041 -9.60459 -9.86678 -10.06902 -10.14869 -10.16904 -10.06944 -9.8419 -9.78941 -9.79559 -9.8018 -9.8033 -9.8665)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (7.62955 6.82211 6.0149 5.26849 4.83133 4.64137 4.63987 4.63887 4.75945 4.94181 5.12258 5.49193 5.85904 6.22548 6.65521 7.08405 7.45072 7.69458 7.81497 7.8111 7.80761 7.5564 7.24207 6.80569 6.43108 6.1794 6.1148 6.11084 6.29264 6.5982 6.84056 6.89507 6.88882 6.76012 6.44224 6.18842 6.05967 6.11828 6.42816 7.04473 7.54291 7.79644 7.81597 7.75832 8.0717 8.01381 8.08148 8.51949 8.95922 9.1537 9.15885 8.66667 7.86214 7.05904 6.19291 5.26325 4.32898 3.32831 2.32579 1.44438 0.68376 0.17019 -0.09168 -0.03654 0.34806 0.74745 1.0099 1.56737 2.12185 2.4248 2.66585 2.78336 2.7776 2.77266 2.6415 2.326 2.00748 1.62743 0.99874 0.37228 -0.25249 -0.75252 -0.93926 -1.0016 -0.93901 -0.81365 -0.80813 -0.92791 -1.41863 -2.10042 -2.96588 -3.82759 -4.8199 -5.56711 -4.88568 -5.32442 -5.8825 -6.13249 -6.00733 -5.44886 -4.63075 -3.63981 -2.58818 -1.72454 -1.10759 -0.79985 -0.74086 -0.80788 -1.00098 -1.31839 -1.89102 -2.52436 -3.21331 -3.77648 -4.34016 -4.65461 -4.78052 -4.78523 -4.78641 -4.72828 -4.6067 -4.54694 -4.5501 -4.55171 -4.61412 -4.80098 -5.17176 -5.53545 -5.95927 -6.39258 -6.7034 -6.89184 -6.95693 -6.96047 -6.71811 -6.60074 -6.60623 -6.61182 -6.86738 -7.30953 -7.81093 -8.30973 -8.80946 -9.24286 -9.61245 -9.8627 -10.03427 -10.03283 -10.03477 -10.03729 -9.97829 -9.79491 -9.61031 -9.30341 -8.99306 -8.56253 -7.94492 -7.32639 -6.64381 -6.08478 -5.76673 -5.44435 -5.25134 -5.24468 -5.17918 -5.17711 -5.11566 -4.99097 -4.74277 -4.37067 -4.06132 -3.7527 -3.31947 -2.89042 -2.52038 -2.20703 -1.83688 -1.52372 -1.08658 -0.65046 -0.09042 0.60076 1.3495 1.9136 2.41419 2.85097 3.22342 3.59681 4.03001 4.5268 5.08475 5.76706 6.57272 7.44223 8.25284 8.8808 9.25367 9.50217 9.75066 9.81311 9.87478)) (quote (9.34972 9.42392 9.49773 9.50821 9.38952 9.13663 8.94538 8.75306 8.5648 8.31319 7.99981 7.7453 7.42859 7.11202 6.79481 6.41328 5.90949 5.53102 5.21833 4.97062 4.72088 4.41219 4.22036 3.96977 3.65489 3.34126 3.08826 2.83399 2.64282 2.38922 2.13614 1.94817 1.76147 1.63972 1.39905 1.22199 0.85512 0.48594 -0.00167 -0.8121 -1.3056 -1.79509 -2.28223 -2.59253 -2.40314 -3.02434 -3.89427 -4.76349 -5.56872 -6.30838 -6.73865 -6.9808 -6.98098 -6.9818 -6.98603 -6.93237 -6.56958 -5.89726 -5.16393 -4.36778 -3.50993 -2.7148 -2.22543 -1.72815 -1.28474 -0.70108 -0.2297 0.23565 0.55702 0.94701 1.45202 1.95484 2.33148 2.64474 2.9582 3.33355 3.77138 4.39514 5.01812 5.64041 6.07581 6.57353 7.07128 7.50685 7.94199 8.25098 8.49617 8.61902 8.74269 8.74438 8.74724 8.751 8.75472 8.69427 9.99261 9.92972 9.4969 8.7522 8.06879 7.25903 6.45893 5.58611 4.77468 4.02137 3.33286 2.83274 2.51908 2.20254 1.8859 1.633 1.4403 1.25149 1.25143 1.18942 1.00277 0.81515 0.62747 0.5004 0.31226 0.12246 -0.19253 -0.38203 -0.63435 -0.88586 -1.07384 -1.26039 -1.44402 -1.62346 -1.85806 -2.1593 -2.39923 -2.69958 -2.94157 -3.18984 -3.56124 -3.86675 -4.11117 -4.35613 -4.65708 -5.01947 -5.32136 -5.62736 -5.93157 -6.24399 -6.62487 -6.93649 -7.28807 -7.29486 -7.48314 -7.7348 -7.98421 -8.23441 -8.48479 -8.79789 -8.98681 -9.23857 -9.55539 -9.6859 -9.69465 -9.5135 -9.02206 -8.22239 -7.66586 -7.06377 -6.50853 -6.19912 -6.14075 -6.01858 -6.02359 -6.15654 -6.47113 -6.91035 -7.47589 -8.22699 -8.85304 -9.22951 -9.60626 -9.79671 -9.92534 -9.99201 -9.93488 -9.63194 -9.32775 -8.96042 -8.90411 -8.90906 -8.91275 -9.04156 -9.23287 -9.55167 -9.80816 -10.00333 -10.07453 -10.0847 -9.97215 -9.73289 -9.6753 -9.67838 -9.68149 -9.68224 -9.74519)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) (let ((newobj (when (find-class (quote bpc) nil) (let ((newbpf (simple-bpf-from-list (quote (7.5 6.6875 5.875 5.125 4.6875 4.5 4.5 4.5 4.625 4.8125 5.0 5.375 5.75 6.125 6.5625 7.0 7.375 7.625 7.75 7.75 7.75 7.5 7.1875 6.75 6.375 6.125 6.0625 6.0625 6.25 6.5625 6.8125 6.875 6.875 6.75 6.4375 6.1875 6.0625 6.125 6.4375 7.0625 7.5625 7.8125 7.8125 7.75 8.0625 8.0 8.0625 8.5 8.9375 9.125 9.125 8.62499 7.81249 6.99999 6.125 5.18749 4.24999 3.25 2.25 1.375 0.625 0.125 -0.125 -0.0625 0.3125 0.6875 0.9375 1.5 2.0625 2.375 2.625 2.75 2.75 2.75 2.625 2.3125 2.0 1.625 1.0 0.375 -0.25 -0.75 -0.9375 -1.0 -0.9375 -0.8125 -0.8125 -0.9375 -1.4375 -2.125 -3.0 -3.875 -4.875 -5.625 -4.9375 -5.375 -5.9375 -6.1875 -6.0625 -5.5 -4.6875 -3.6875 -2.625 -1.75 -1.125 -0.8125 -0.75 -0.8125 -1.0 -1.3125 -1.875 -2.5 -3.1875 -3.75 -4.3125 -4.625 -4.75 -4.75 -4.75 -4.6875 -4.5625 -4.5 -4.5 -4.5 -4.5625 -4.75 -5.125 -5.5 -5.9375 -6.375 -6.6875 -6.875 -6.9375 -6.9375 -6.6875 -6.5625 -6.5625 -6.5625 -6.8125 -7.25 -7.75 -8.25 -8.75 -9.1875 -9.5625 -9.8125 -10.0 -10.0 -10.0 -10.0 -9.9375 -9.75 -9.5625 -9.25 -8.9375 -8.5 -7.875 -7.25 -6.5625 -6.0 -5.6875 -5.375 -5.1875 -5.1875 -5.125 -5.125 -5.0625 -4.9375 -4.6875 -4.3125 -4.0 -3.6875 -3.25 -2.8125 -2.4375 -2.125 -1.75 -1.4375 -1.0 -0.5625 0.0 0.6875 1.4375 2.0 2.5 2.9375 3.3125 3.6875 4.125 4.625 5.1875 5.875 6.6875 7.5625 8.375 9.0 9.375 9.625 9.875 9.9375 10.0)) (quote (9.43574 9.49843 9.56113 9.56113 9.43574 9.18495 8.99687 8.80878 8.62069 8.36991 8.05643 7.80564 7.49216 7.17868 6.8652 6.48903 5.98746 5.61128 5.2978 5.04702 4.79623 4.48276 4.29467 4.04388 3.73041 3.41693 3.16614 2.91536 2.72727 2.47649 2.2257 2.03762 1.84953 1.72414 1.47335 1.28527 0.90909 0.53291 0.03134 -0.7837 -1.28527 -1.78684 -2.2884 -2.60188 -2.41379 -3.04076 -3.9185 -4.79624 -5.61129 -6.36364 -6.80251 -7.0533 -7.0533 -7.0533 -7.0533 -6.9906 -6.61442 -5.92477 -5.17242 -4.35737 -3.47962 -2.66458 -2.16301 -1.66144 -1.22257 -0.65831 -0.21944 0.21943 0.53291 0.90909 1.41066 1.91222 2.2884 2.60188 2.91536 3.29153 3.73041 4.35737 4.98433 5.61129 6.05016 6.55172 7.05329 7.49216 7.93103 8.24451 8.4953 8.62069 8.74608 8.74608 8.74608 8.74608 8.74608 8.68339 10.0 9.93731 9.49844 8.74609 8.05643 7.24138 6.42633 5.54859 4.73354 3.98119 3.29154 2.78997 2.47649 2.16301 1.84953 1.59875 1.41066 1.22257 1.22257 1.15988 0.97179 0.7837 0.59561 0.47022 0.28213 0.09404 -0.21944 -0.40752 -0.65831 -0.90909 -1.09718 -1.28527 -1.47335 -1.66144 -1.91223 -2.2257 -2.47649 -2.78997 -3.04075 -3.29154 -3.66771 -3.98119 -4.23198 -4.48276 -4.79624 -5.17241 -5.48589 -5.79937 -6.11285 -6.42633 -6.80251 -7.11599 -7.42947 -7.42947 -7.61755 -7.86834 -8.11912 -8.3699 -8.62069 -8.93417 -9.12226 -9.37304 -9.68652 -9.81191 -9.81192 -9.62382 -9.12226 -8.30721 -7.74295 -7.11599 -6.55172 -6.23824 -6.17555 -6.05016 -6.05016 -6.17555 -6.48903 -6.9279 -7.49216 -8.24451 -8.87147 -9.24765 -9.62383 -9.81191 -9.9373 -10.0 -9.9373 -9.62383 -9.31035 -8.93417 -8.87147 -8.87147 -8.87147 -8.99687 -9.18495 -9.49843 -9.74922 -9.93731 -10.0 -10.0 -9.87461 -9.62383 -9.56113 -9.56113 -9.56113 -9.56113 -9.62382)) (quote bpc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj)) :from-file t)) nil nil (pairlis (quote (winpos winsize picture)) (list (om-make-point 32 0) (om-make-point 832 780) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "TRAJ-INTERPOL" (quote traj-interpol) (quote ((om-load-inputfun (quote input-funbox) "a bpf or bpc" "FIRSTB" nil) (om-load-inputfun (quote input-funbox) "a bpf or bpc" "SECONDB" nil) (om-load-inputfun (quote input-funbox) "a bpf or bpc" "STEPS" nil) (om-load-inputfunmenu1 (quote input-funmenu) "a bpf or bpc" "MODE" (quote polar) (list (list "cartesian" (quote (quote cartesian))) (list "polar" (quote (quote polar))))) (om-load-inputfun (quote input-funbox) "curve" "CURVE" 1))) (om-make-point 176 271) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((21 0 4 0 nil 0) (6 0 5 1 nil 0) (42 0 6 0 nil 0) (41 0 6 1 nil 0) (13 1 7 0 nil 0) (11 1 7 1 nil 0) (8 1 7 2 nil 0) (5 1 7 3 nil 0) (23 0 8 1 nil 0) (24 0 11 1 nil 0) (14 0 12 0 nil 0) (22 0 12 1 nil 0) (12 0 13 1 nil 0) (17 0 16 1 nil 0) (33 0 17 0 nil 0) (34 0 17 1 nil 0) (45 0 21 0 nil 0) (14 0 22 0 nil 0) (19 0 22 1 nil 0) (43 0 23 0 nil 0) (42 0 23 1 nil 0) (22 0 24 0 nil 0) (43 0 24 1 nil 0) (27 0 25 1 nil 0) (2 0 27 0 nil 0) (1 0 27 1 nil 0) (28 0 27 2 nil 0) (26 0 27 4 nil 0) (7 0 31 1 nil 0) (33 0 34 0 nil 0) (15 0 34 1 nil 0) (42 0 41 0 nil 0) (43 0 42 0 nil 0) (9 0 42 1 nil 0) (22 0 43 0 nil 0) (18 0 43 1 nil 0) (10 0 43 2 nil 0) (18 0 43 3 nil 0) (10 0 43 4 nil 0) (48 1 45 0 nil 0) (49 0 48 0 nil 0) (47 0 48 1 nil 0) (46 0 48 2 nil 0) (54 0 53 0 nil 0) (50 0 54 0 nil 0) (51 0 54 1 nil 0) (52 0 54 2 nil 0) (29 0 54 4 nil 0))) nil 6.19))
