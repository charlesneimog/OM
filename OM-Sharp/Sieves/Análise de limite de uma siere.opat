
(:patch
 (:name "Análise de limite de uma siere")
 (:doc "")
 (:info
  (:created "2020/09/01 17:51:14")
  (:modified "2020/10/01 20:03:21")
  (:by "om-sharp")
  (:version 1.0))
 (:window (:size (1366 725)) (:position (-8 -8)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "sieve")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1106 605)) (:position (134 65)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 61)
       (:y 579)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 6")
       (:x 57)
       (:y 39)
       (:w 46)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1200)
       (:id 1))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 5")
       (:x 23)
       (:y 39)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 27)
       (:id 2))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 72)
       (:y 521)
       (:w 56)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 4")
       (:x 546)
       (:y 30)
       (:w 39)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 100)
       (:id 4))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "Xenakis")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 140)
           (:y 391)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 23)
           (:y 37)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:library "Mathtools")
           (:type :function)
           (:reference revel-crible)
           (:group-id nil)
           (:name "REVEL-CRIBLE")
           (:x 203)
           (:y 297)
           (:w 118)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "list")
           (:x 105)
           (:y 44)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 180)
           (:id 3))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 214)
           (:y 107)
           (:w 90)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value 24)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value 23)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 147)
           (:y 107)
           (:w 90)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value 30)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value 3)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 54)
           (:y 108)
           (:w 90)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value 73)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value 70)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :value)
           (:reference cons)
           (:group-id nil)
           (:name "aux")
           (:x 189)
           (:y 20)
           (:w 61)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value (:list 2 0 18))
           (:id 7))
          (:box
           (:library "Mathtools")
           (:type :object)
           (:reference crible)
           (:group-id nil)
           (:name "CRIBLE 3")
           (:x 194)
           (:y 196)
           (:w 89)
           (:h 50)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :text)
           (:showname nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CR-EXP")
             (:value (:list 2 0 18))
             (:reactive nil)))
           (:outputs
            (:output (:name "SELF") (:reactive nil))
            (:output (:name "CR-EXP") (:reactive nil)))
           (:window (:size nil) (:position nil))
           (:edition-params)
           (:value
            (:object
             (:class crible)
             (:slots ((:cr-exp (:list 2 0 18))))))
           (:id 8))
          (:box
           (:library "Mathtools")
           (:type :object)
           (:reference crible)
           (:group-id nil)
           (:name "CRIBLE 2")
           (:x 116)
           (:y 198)
           (:w 89)
           (:h 50)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :text)
           (:showname nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CR-EXP")
             (:value (:list 2 0 18))
             (:reactive nil)))
           (:outputs
            (:output (:name "SELF") (:reactive nil))
            (:output (:name "CR-EXP") (:reactive nil)))
           (:window (:size nil) (:position nil))
           (:edition-params)
           (:value
            (:object
             (:class crible)
             (:slots ((:cr-exp (:list 2 0 18))))))
           (:id 9))
          (:box
           (:library "Mathtools")
           (:type :function)
           (:reference c-union)
           (:group-id nil)
           (:name "C-UNION")
           (:x 84)
           (:y 259)
           (:w 89)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CRIBLE")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "rest")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:library "Mathtools")
           (:type :object)
           (:reference crible)
           (:group-id nil)
           (:name "CRIBLE")
           (:x 36)
           (:y 197)
           (:w 79)
           (:h 50)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :text)
           (:showname nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CR-EXP")
             (:value (:list 2 0 18))
             (:reactive nil)))
           (:outputs
            (:output (:name "SELF") (:reactive nil))
            (:output (:name "CR-EXP") (:reactive nil)))
           (:window (:size nil) (:position nil))
           (:edition-params)
           (:value
            (:object
             (:class crible)
             (:slots ((:cr-exp (:list 2 0 18))))))
           (:id 11)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 4 :in 2)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 5 :in 2)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 6 :in 2)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 8 :in 1)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 9 :in 1)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 11 :in 1)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 10 :in 2)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 1)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 2 :in 0)))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 10 :in 0))))))
       (:group-id nil)
       (:name "Xenakis 2")
       (:x 527)
       (:y 41)
       (:w 91)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference omif)
       (:group-id nil)
       (:name "omif")
       (:x 398)
       (:y 234)
       (:w 62)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TEST")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ACTION")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "Identites")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (1084 644)) (:position (26 22)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 195)
           (:y 495)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 23)
           (:y 37)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 4")
           (:x 183)
           (:y 56)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 16)
           (:id 2))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 3")
           (:x 149)
           (:y 57)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 19)
           (:id 3))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 2")
           (:x 94)
           (:y 57)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 16)
           (:id 4))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux")
           (:x 59)
           (:y 58)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 11)
           (:id 5))
          (:box
           (:library "Mathtools")
           (:type :object)
           (:reference crible)
           (:group-id nil)
           (:name "CRIBLE")
           (:x 31)
           (:y 187)
           (:w 79)
           (:h 50)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :text)
           (:showname nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CR-EXP")
             (:value (:list 2 0 18))
             (:reactive nil)))
           (:outputs
            (:output (:name "SELF") (:reactive nil))
            (:output (:name "CR-EXP") (:reactive nil)))
           (:window (:size nil) (:position nil))
           (:edition-params)
           (:value
            (:object
             (:class crible)
             (:slots ((:cr-exp (:list 2 0 18))))))
           (:id 6))
          (:box
           (:library "Mathtools")
           (:type :function)
           (:reference c-union)
           (:group-id nil)
           (:name "C-UNION")
           (:x 197)
           (:y 341)
           (:w 89)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CRIBLE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:library "Mathtools")
           (:type :function)
           (:reference revel-crible)
           (:group-id nil)
           (:name "REVEL-CRIBLE")
           (:x 185)
           (:y 411)
           (:w 118)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 147)
           (:y 107)
           (:w 90)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value 24)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value 23)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 54)
           (:y 108)
           (:w 90)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value 30)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value 3)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:library "Mathtools")
           (:type :object)
           (:reference crible)
           (:group-id nil)
           (:name "CRIBLE")
           (:x 148)
           (:y 185)
           (:w 79)
           (:h 50)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :text)
           (:showname nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CR-EXP")
             (:value (:list 2 0 18))
             (:reactive nil)))
           (:outputs
            (:output (:name "SELF") (:reactive nil))
            (:output (:name "CR-EXP") (:reactive nil)))
           (:window (:size nil) (:position nil))
           (:edition-params)
           (:value
            (:object
             (:class crible)
             (:slots ((:cr-exp (:list 2 0 18))))))
           (:id 11)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 9 :in 2)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 10 :in 2)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 9 :in 1)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 10 :in 1)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 11 :in 1)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 6 :in 1)))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 7 :in 1))))))
       (:group-id nil)
       (:name "Identites")
       (:x 281)
       (:y 146)
       (:w 87)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 7))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 3")
       (:x 6557/10)
       (:y 30)
       (:w 39)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 377)
       (:id 8))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "Sieve que será avaliada")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 277)
           (:y 495)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 92)
           (:y 1)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :function)
           (:reference om*)
           (:group-id nil)
           (:name "om*")
           (:x 503)
           (:y 379)
           (:w 63)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 13)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 15)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :function)
           (:reference om+)
           (:group-id nil)
           (:name "om+")
           (:x 472)
           (:y 490)
           (:w 65)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 13)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 15)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "list")
           (:x 395)
           (:y 376)
           (:w 38)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 13)
           (:id 4))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 5")
           (:x 357)
           (:y 48)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 15)
           (:id 5))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 3")
           (:x 129)
           (:y 110)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 13)
           (:id 6))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 347)
           (:y 300)
           (:w 90)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :function)
           (:reference print)
           (:group-id nil)
           (:name "print")
           (:x 257)
           (:y 345)
           (:w 64)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOMETHING")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "stream")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :function)
           (:reference print)
           (:group-id nil)
           (:name "print")
           (:x 414)
           (:y 201)
           (:w 64)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOMETHING")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 8")
           (:x 246)
           (:y 10)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 30)
           (:id 10))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 7")
           (:x 195)
           (:y 6)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 10)
           (:id 11))
          (:box
           (:type :function)
           (:reference om-random)
           (:group-id nil)
           (:name "om-random")
           (:x 207)
           (:y 40)
           (:w 103)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LOW")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "HIGH")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 12))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 2")
           (:x 527)
           (:y 50)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 30)
           (:id 13))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux")
           (:x 476)
           (:y 30)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 10)
           (:id 14))
          (:box
           (:type :function)
           (:reference om-random)
           (:group-id nil)
           (:name "om-random")
           (:x 487)
           (:y 80)
           (:w 103)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LOW")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "HIGH")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:library "Mathtools")
           (:type :function)
           (:reference c-union)
           (:group-id nil)
           (:name "C-UNION")
           (:x 191)
           (:y 264)
           (:w 89)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CRIBLE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 16))
          (:box
           (:library "Mathtools")
           (:type :function)
           (:reference revel-crible)
           (:group-id nil)
           (:name "REVEL-CRIBLE")
           (:x 166)
           (:y 380)
           (:w 118)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 17))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 4")
           (:x 330)
           (:y 22)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 15)
           (:id 18))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 313)
           (:y 78)
           (:w 97)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 19))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 6")
           (:x 92)
           (:y 105)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 13)
           (:id 20))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 85)
           (:y 140)
           (:w 97)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 21))
          (:box
           (:library "Mathtools")
           (:type :object)
           (:reference crible)
           (:group-id nil)
           (:name "CRIBLE")
           (:x 87)
           (:y 213)
           (:w 79)
           (:h 50)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :text)
           (:showname nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CR-EXP")
             (:value (:list 2 0 18))
             (:reactive nil)))
           (:outputs
            (:output (:name "SELF") (:reactive nil))
            (:output (:name "CR-EXP") (:reactive nil)))
           (:window (:size nil) (:position nil))
           (:edition-params)
           (:value
            (:object
             (:class crible)
             (:slots ((:cr-exp (:list 2 0 18))))))
           (:id 22))
          (:box
           (:library "Mathtools")
           (:type :object)
           (:reference crible)
           (:group-id nil)
           (:name "CRIBLE 2")
           (:x 281)
           (:y 193)
           (:w 89)
           (:h 50)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :text)
           (:showname nil)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CR-EXP")
             (:value (:list 2 0 18))
             (:reactive nil)))
           (:outputs
            (:output (:name "SELF") (:reactive nil))
            (:output (:name "CR-EXP") (:reactive nil)))
           (:window (:size nil) (:position nil))
           (:edition-params)
           (:value
            (:object
             (:class crible)
             (:slots ((:cr-exp (:list 2 0 18))))))
           (:id 23)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 19 :in 2)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 21 :in 2)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 19 :in 1)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 21 :in 1)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 1)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 12 :in 1)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 0)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 15 :in 1)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 15 :in 0)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 17 :in 0)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 19 :in 0)))
          (:connection (:from (:box 19 :out 0)) (:to (:box 7 :in 1)))
          (:connection (:from (:box 19 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 19 :out 0)) (:to (:box 23 :in 1)))
          (:connection (:from (:box 20 :out 0)) (:to (:box 21 :in 0)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 22 :in 1)))
          (:connection (:from (:box 22 :out 0)) (:to (:box 16 :in 0)))
          (:connection
           (:from (:box 23 :out 0))
           (:to (:box 16 :in 1))))))
       (:group-id nil)
       (:name "Sieve que será avaliada")
       (:x 5957/10)
       (:y 263/5)
       (:w 169)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 9))
      (:comment
       (:x 138)
       (:y 57)
       (:w 235)
       (:h 82)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text
        "Testa todos os números máximos de uma sieve. Neste caso todos os números de 27 até 100.")
       (:id 10))
      (:box
       (:type :function)
       (:reference arithm-ser)
       (:group-id nil)
       (:name "arithm-ser")
       (:x 33)
       (:y 75)
       (:w 96)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "BEGIN")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "END")
         (:value 10)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "STEP")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 36)
       (:y 400)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 12))
      (:box
       (:type :function)
       (:reference omif)
       (:group-id nil)
       (:name "omif")
       (:x 44)
       (:y 322)
       (:w 62)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TEST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ACTION")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:type :function)
       (:reference x->dx)
       (:group-id nil)
       (:name "x->dx")
       (:x 488)
       (:y 502)
       (:w 72)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value (:list 0 1))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:type :function)
       (:reference remove)
       (:group-id nil)
       (:name "remove")
       (:x 61)
       (:y 473)
       (:w 80)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ITEM")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 417)
       (:y 398)
       (:w 73)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :function)
       (:reference om<)
       (:group-id nil)
       (:name "om<")
       (:x 411)
       (:y 463)
       (:w 64)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NUM1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NUM2")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 379)
       (:y 407)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 3)
       (:id 18))
      (:box
       (:type :function)
       (:reference omif)
       (:group-id nil)
       (:name "omif")
       (:x 534)
       (:y 408)
       (:w 62)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TEST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ACTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "else")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux")
       (:x 570)
       (:y 367)
       (:w 57)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 1 2 4))
       (:id 20))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "validar")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 5)
           (:y 5)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
           (:group-id nil)
           (:name "input 2")
           (:x 82)
           (:y -8)
           (:w 59)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 133)
           (:y 385)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 2))
          (:box
           (:type :function)
           (:reference remove)
           (:group-id nil)
           (:name "remove")
           (:x 106)
           (:y 329)
           (:w 80)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ITEM")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 42)
           (:y 294)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 4))
          (:box
           (:type :function)
           (:reference omif)
           (:group-id nil)
           (:name "omif")
           (:x 49)
           (:y 225)
           (:w 62)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "TEST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ACTION")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :function)
           (:reference om=)
           (:group-id nil)
           (:name "om=")
           (:x 12)
           (:y 157)
           (:w 64)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NUM1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "NUM2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 26)
           (:y 375)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 7))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 80)
           (:y 73)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 8)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 4 :out 1)) (:to (:box 3 :in 1)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 5 :in 1)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 6 :in 1))))))
       (:group-id nil)
       (:name "validar")
       (:x 42)
       (:y 215)
       (:w 75)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 2")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 21))
      (:box
       (:type :function)
       (:reference equal)
       (:group-id nil)
       (:name "equal")
       (:x 152)
       (:y 341)
       (:w 68)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 22))
      (:box
       (:type :function)
       (:reference reverse)
       (:group-id nil)
       (:name "reverse")
       (:x 133)
       (:y 269)
       (:w 79)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 23))
      (:comment
       (:x 628)
       (:y 372)
       (:w 246)
       (:h 47)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "qualquer lista que não é palindroma")
       (:id 24))
      (:comment
       (:x 241)
       (:y 403)
       (:w 139)
       (:h 55)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font (:font (:face "Verdana") (:size 12) (:style :bold)))
       (:align nil)
       (:text "Somente avaliar sieves com mais de 3 pontos")
       (:id 25))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 2)
       (:y 539)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 26))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 9)
       (:y 145)
       (:w 64)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 27)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 11 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 0)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 16 :in 0))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 19 :in 1))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 21 :in 1))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 6 :in 1))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 27 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 26 :in 0)))
      (:connection (:from (:box 12 :out 1)) (:to (:box 15 :in 1)))
      (:connection
       (:from (:box 13 :out 0))
       (:to (:box 12 :in 0))
       (:attributes
        (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 14 :out 0))
       (:to (:box 22 :in 0))
       (:attributes
        (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 14 :out 0))
       (:to (:box 23 :in 0))
       (:attributes
        (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 3 :in 0)))
      (:connection
       (:from (:box 16 :out 0))
       (:to (:box 17 :in 1))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 17 :out 0))
       (:to (:box 19 :in 0))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 18 :out 0))
       (:to (:box 17 :in 0))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 19 :out 0))
       (:to (:box 14 :in 0))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 19 :in 2)))
      (:connection (:from (:box 21 :out 0)) (:to (:box 13 :in 1)))
      (:connection
       (:from (:box 22 :out 0))
       (:to (:box 13 :in 0))
       (:attributes
        (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 23 :out 0))
       (:to (:box 22 :in 1))
       (:attributes
        (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 7 :in 0)))
      (:connection
       (:from (:box 27 :out 0))
       (:to (:box 21 :in 0))
       (:attributes
        (:color
         (:color 0.0S0 0.0S0 1.0S0 1.0)
         :style
         nil
         :modif
         nil))))))
   (:group-id nil)
   (:name "sieve")
   (:x 112)
   (:y 21)
   (:w 145)
   (:h 58)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 0))
  (:comment
   (:x 338)
   (:y 86)
   (:w 78)
   (:h 23)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "U = Union")
   (:id 1))
  (:comment
   (:x 428)
   (:y 86)
   (:w 107)
   (:h 21)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "I = Intersection")
   (:id 2))
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name nil)
   (:x 114)
   (:y 141)
   (:w 184)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class textbuffer)
     (:slots ((:contents (:list "3 16 124 u 4 16 64 "))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 3))
  (:box
   (:type :function)
   (:reference length)
   (:group-id nil)
   (:name "length")
   (:x 346)
   (:y 276)
   (:w 73)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference choose)
   (:group-id nil)
   (:name "choose")
   (:x 290)
   (:y 237)
   (:w 76)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list 1 2 3 4 5 6 7 8 9 10))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHORD-N")
     (:value (:list 1 7 9))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 316)
   (:y 202)
   (:w 57)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 6))
  (:box
   (:type :function)
   (:reference arithm-ser)
   (:group-id nil)
   (:name "arithm-ser")
   (:x 569)
   (:y 220)
   (:w 96)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "BEGIN")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "END")
     (:value 10)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "STEP")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 621)
   (:y 185)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 8))
  (:box
   (:type :function)
   (:reference remove)
   (:group-id nil)
   (:name "remove")
   (:x 562)
   (:y 277)
   (:w 80)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ITEM")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 566)
   (:y 247)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 10))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference choose)
   (:group-id nil)
   (:name "choose")
   (:x 619)
   (:y 454)
   (:w 76)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list 1 2 3 4 5 6 7 8 9 10))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHORD-N")
     (:value (:list 1 7 9))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:box
   (:type :function)
   (:reference arithm-ser)
   (:group-id nil)
   (:name "arithm-ser")
   (:x 82)
   (:y 314)
   (:w 96)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "BEGIN")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "END")
     (:value 10)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "STEP")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 84)
   (:y 279)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 13))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "retirar-números-da-sieve")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (955 716)) (:position (130 0)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "remove")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :function)
           (:reference remove)
           (:group-id nil)
           (:name "remove")
           (:x 179)
           (:y 140)
           (:w 80)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ITEM")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 101)
           (:y 238)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 238)
           (:y 78)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
           (:group-id nil)
           (:name "input 2")
           (:x 55)
           (:y 45)
           (:w 59)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 1)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 0 :in 0))))))
       (:group-id nil)
       (:name "remove")
       (:x 130)
       (:y 132)
       (:w 80)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda :lambda)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 2")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 0))
      (:box
       (:type :special)
       (:reference accum)
       (:group-id nil)
       (:name "accum")
       (:x 0)
       (:y 191)
       (:w 339)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "accum-function")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 1))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 32)
       (:y 273)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 28)
       (:y 138)
       (:w 64)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 35)
       (:y 81)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 308)
       (:y 332)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 249)
       (:y 99)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 1)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 1 :out 1)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 1 :in 2))))))
   (:group-id nil)
   (:name "retirar-números-da-sieve")
   (:x 57)
   (:y 382)
   (:w 177)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 14))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "my-function")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (907 480)) (:position (78 78)))
     (:text
      (:list
       "(lambda (X Y)"
       ""
       ""
       "(defun group<n (l n)"
       "    (if l (group<n-sub (cons nil l) n n)))"
       ""
       "(defun group<n-sub (l m n)"
       "    (if (and (cdr l) (< 0 n))"
       "        (group<n-sub (cons (cons (cadr l) (car l)) (cddr l)) m (1- n))"
       "        (cons (reverse (car l)) (group<n (cdr l) m))"
       "    )"
       ")"
       ""
       ""
       "(group<n X Y))"))))
   (:group-id nil)
   (:name "my-function")
   (:x 94)
   (:y 453)
   (:w 104)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input (:type :standard) (:name "X") (:value nil) (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 186)
   (:y 425)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 16))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "new-patch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (500 500)) (:position (130 126)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 205)
       (:y 248)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 0))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 220)
       (:y 385)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference choose)
       (:group-id nil)
       (:name "choose")
       (:x 226)
       (:y 176)
       (:w 76)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 1 2 3 4 5 6 7 8 9 10))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CHORD-N")
         (:value (:list 1 7 9))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 67)
       (:y 162)
       (:w 64)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 95)
       (:y 27)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 270)
       (:y 309)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 273)
       (:y 114)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 0 :out 1)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 2 :in 0))))))
   (:group-id nil)
   (:name "new-patch")
   (:x 323)
   (:y 375)
   (:w 96)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :function)
   (:reference length)
   (:group-id nil)
   (:name "length")
   (:x 621)
   (:y 487)
   (:w 73)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 18))
  (:box
   (:type :special)
   (:reference repeat-n)
   (:group-id nil)
   (:name "repeat-n")
   (:x 588)
   (:y 550)
   (:w 89)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "self")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "num")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "collected results") (:reactive nil)))
   (:id 19))
  (:box
   (:type :value)
   (:reference symbol)
   (:group-id nil)
   (:name "value box")
   (:x 594)
   (:y 515)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value u)
   (:id 20))
  (:box
   (:library "OM-Symmetry")
   (:type :function)
   (:reference crible-list)
   (:group-id nil)
   (:name "crible-list")
   (:x 272)
   (:y 455)
   (:w 89)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "CRIBLE")
     (:value (:list (:list 19 16 64) (:list 11 16 64)))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 21))
  (:box
   (:library "Mathtools")
   (:type :function)
   (:reference revel-crible)
   (:group-id nil)
   (:name "revel-crible")
   (:x 99)
   (:y 648)
   (:w 100)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "my-function")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1206 572)) (:position (21 62)))
     (:text
      (:list
       ""
       "(lambda"
       " (in1_input in2_input_2)"
       " (let*"
       "  ((mem-660-local in2_input_2))"
       "  (loop for it-661 in in1_input"
       "   do (let*"
       "       ()"
       "       (let"
       "        ((accum-val it-661)"
       "         (accum-fun"
       "          #'(lambda"
       "             (in2_input_2 it-661)"
       "             (remove"
       "                            it-661 in2_input_2))))"
       "        (setf"
       "         mem-660-local"
       "         (funcall"
       "          accum-fun"
       "          mem-660-local"
       "          accum-val))"
       "        mem-660-local)))"
       "  mem-660-local))"))))
   (:group-id nil)
   (:name "my-function")
   (:x 480)
   (:y 384)
   (:w 104)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "IN1_INPUT")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "IN2_INPUT_2")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 23))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "new-patch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1067 500)) (:position (78 74)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :special)
       (:reference accum)
       (:group-id nil)
       (:name "accum")
       (:x 144)
       (:y 258)
       (:w 229)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "accum-function")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 0))
      (:box
       (:type :function)
       (:reference first)
       (:group-id nil)
       (:name "first")
       (:x 302)
       (:y 152)
       (:w 60)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 158)
       (:y 325)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:library "Mathtools")
       (:type :function)
       (:reference c-intersection)
       (:group-id nil)
       (:name "c-intersection")
       (:x 209)
       (:y 205)
       (:w 113)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda :lambda)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CRIBLE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 156)
       (:y 160)
       (:w 64)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 214)
       (:y 83)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 239)
       (:y 330)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 6)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 0 :out 1)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 0 :in 2)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 0 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0))))))
   (:group-id nil)
   (:name "new-patch")
   (:x 57)
   (:y 552)
   (:w 96)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 24))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "c-union")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1135 577)) (:position (52 52)))
     (:text
      (:list
       "(lambda"
       " (in1_in)"
       ""
       "(let* ((cknnumber (first in1_in)))"
       " (let*"
       "  ((mem-728-local cknnumber))"
       "  (loop for it-729 in in1_in"
       "   do (let*"
       "       ()"
       "       (let"
       "        ((accum-val it-729)"
       "         (accum-fun"
       "          #'(lambda"
       "             (in1_in cknnumber)"
       "             (c-union it-729 cknnumber))))"
       "        (setf"
       "         mem-728-local"
       "         (funcall accum-fun mem-728-local accum-val))"
       "        mem-728-local)))"
       "  mem-728-local)))"))))
   (:group-id nil)
   (:name "c-union")
   (:x 230)
   (:y 518)
   (:w 104)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "IN1_IN")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 25))
  (:box
   (:library "Mathtools")
   (:type :function)
   (:reference revel-crible)
   (:group-id nil)
   (:name "revel-crible")
   (:x 372)
   (:y 553)
   (:w 100)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 26))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "my-function")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:text
      (:list
       "(lambda (in1_in)"
       "(mapcar"
       " (lambda (x) (c-union (first in1_in) x)) in1_in))"
       ""
       ""
       "(accum-val "))))
   (:group-id nil)
   (:name "my-function")
   (:x 386)
   (:y 7)
   (:w 132)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "IN1_IN")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 27))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "c-nitersection")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (857 534)) (:position (130 130)))
     (:text
      (:list
       "(lambda"
       " (in1_in)"
       ""
       "(let* ((cknnumber (first in1_in)))"
       " (let*"
       "  ((mem-729-local cknnumber))"
       "  (loop for it-730 in in1_in"
       "   do (let*"
       "       ()"
       "       (let"
       "        ((accum-val it-730)"
       "         (accum-fun"
       "          #'(lambda"
       "             (in1_in cknnumber)"
       "             (c-intersection it-730 cknnumber))))"
       "        (setf"
       "         mem-729-local"
       "         (funcall accum-fun mem-729-local accum-val))"
       "        mem-729-local)))"
       "  mem-729-local)))"
       ""
       ""
       "(c-intersection "))))
   (:group-id nil)
   (:name "c-nitersection")
   (:x 366)
   (:y 489)
   (:w 113)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "IN1_IN")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 28))
  (:box
   (:library "Mathtools")
   (:type :function)
   (:reference revel-crible)
   (:group-id nil)
   (:name "revel-crible")
   (:x 232)
   (:y 586)
   (:w 100)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 29))
  (:box
   (:library "Mathtools")
   (:type :function)
   (:reference revel-crible)
   (:group-id nil)
   (:name "revel-crible")
   (:x 472)
   (:y 655)
   (:w 100)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 30))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "C-UNION")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1366 725)) (:position (-8 -8)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 229)
       (:y 16)
       (:w 330)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value
        (:list
         (:list 11 1 23 u 11 3 26 u 13 4 26)
         u
         (:list 14 3 128 i 14 3 940)))
       (:id 0))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "Linguagem para  Sieves")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (1366 725)) (:position (-8 -8)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 108)
           (:y 213)
           (:w 73)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :function)
           (:reference arithm-ser)
           (:group-id nil)
           (:name "arithm-ser")
           (:x 620)
           (:y 191)
           (:w 96)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "BEGIN")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "END")
             (:value 10)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "STEP")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "value box")
           (:x 672)
           (:y 156)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 4)
           (:id 2))
          (:box
           (:type :function)
           (:reference remove)
           (:group-id nil)
           (:name "remove")
           (:x 613)
           (:y 282)
           (:w 80)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ITEM")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "value box")
           (:x 617)
           (:y 238)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 0)
           (:id 4))
          (:box
           (:type :function)
           (:reference arithm-ser)
           (:group-id nil)
           (:name "arithm-ser")
           (:x 89)
           (:y 282)
           (:w 96)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "BEGIN")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "END")
             (:value 10)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "STEP")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "value box")
           (:x 91)
           (:y 247)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 6))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "retirar-números-da-sieve")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :abstraction)
               (:reference
                (:patch
                 (:name "remove")
                 (:doc "")
                 (:info
                  (:created nil)
                  (:modified nil)
                  (:by *app-name*)
                  (:version 0))
                 (:window (:size nil) (:position nil))
                 (:grid nil)
                 (:lock nil)
                 (:boxes
                  (:box
                   (:type :function)
                   (:reference remove)
                   (:group-id nil)
                   (:name "remove")
                   (:x 179)
                   (:y 140)
                   (:w 80)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "ITEM")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "SEQUENCE")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 0))
                  (:box
                   (:type :io)
                   (:reference
                    (:out
                     (:type omout)
                     (:name "output")
                     (:index 1)
                     (:doc nil)))
                   (:group-id nil)
                   (:name "output")
                   (:x 101)
                   (:y 238)
                   (:w 58)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "out-value")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 1))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 1)
                     (:name "input")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input")
                   (:x 238)
                   (:y 78)
                   (:w 50)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 2))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 2)
                     (:name "input 2")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input 2")
                   (:x 55)
                   (:y 45)
                   (:w 59)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 3)))
                 (:connections
                  (:connection
                   (:from (:box 0 :out 0))
                   (:to (:box 1 :in 0)))
                  (:connection
                   (:from (:box 2 :out 0))
                   (:to (:box 0 :in 1)))
                  (:connection
                   (:from (:box 3 :out 0))
                   (:to (:box 0 :in 0))))))
               (:group-id nil)
               (:name "remove")
               (:x 130)
               (:y 132)
               (:w 80)
               (:h 48)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:lock nil)
               (:lambda :lambda)
               (:pre-delay 0)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "input")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "input 2")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "output") (:reactive nil)))
               (:id 0))
              (:box
               (:type :special)
               (:reference accum)
               (:group-id nil)
               (:name "accum")
               (:x 0)
               (:y 191)
               (:w 339)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "accum-function")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 1))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 32)
               (:y 273)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 2))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 28)
               (:y 138)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input")
                 (:doc "")))
               (:group-id nil)
               (:name "input")
               (:x 35)
               (:y 81)
               (:w 50)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 308)
               (:y 332)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 5))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "input 2")
                 (:doc "")))
               (:group-id nil)
               (:name "input 2")
               (:x 249)
               (:y 99)
               (:w 59)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 1 :in 1)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 2 :in 0)))
              (:connection
               (:from (:box 1 :out 1))
               (:to (:box 5 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 3 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 1 :in 2))))))
           (:group-id nil)
           (:name "retirar-números-da-sieve")
           (:x 64)
           (:y 350)
           (:w 177)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 2")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 7))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "my-function")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               "(lambda (X)"
               ""
               ""
               "(defun group<n (l n)"
               "    (if l (group<n-sub (cons nil l) n n)))"
               ""
               "(defun group<n-sub (l m n)"
               "    (if (and (cdr l) (< 0 n))"
               "        (group<n-sub (cons (cons (cadr l) (car l)) (cddr l)) m (1- n))"
               "        (cons (reverse (car l)) (group<n (cdr l) m))"
               "    )"
               ")"
               ""
               ""
               "(group<n X 3))"))))
           (:group-id nil)
           (:name "my-function")
           (:x 100)
           (:y 409)
           (:w 104)
           (:h 60)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "X")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "new-patch")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size (500 500)) (:position (156 152)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 205)
               (:y 248)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 0))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 220)
               (:y 385)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:library "OM-JI")
               (:type :function)
               (:reference choose)
               (:group-id nil)
               (:name "choose")
               (:x 226)
               (:y 176)
               (:w 76)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NOTELIST")
                 (:value (:list 1 2 3 4 5 6 7 8 9 10))
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "CHORD-N")
                 (:value (:list 1 7 9))
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 161)
               (:y 86)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:in (:type omin) (:index 1) (:name "in") (:doc "")))
               (:group-id nil)
               (:name "in")
               (:x 95)
               (:y 27)
               (:w 40)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "out")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "out")
               (:x 270)
               (:y 309)
               (:w 40)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 5))
              (:box
               (:type :io)
               (:reference
                (:in (:type omin) (:index 2) (:name "in") (:doc "")))
               (:group-id nil)
               (:name "in")
               (:x 284)
               (:y 89)
               (:w 40)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 0 :out 1))
               (:to (:box 5 :in 0)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 0 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 2 :in 1)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 3 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 2 :in 0))))))
           (:group-id nil)
           (:name "new-patch")
           (:x 326)
           (:y 340)
           (:w 96)
           (:h 60)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "in")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:library "OM-Symmetry")
           (:type :function)
           (:reference crible-list)
           (:group-id nil)
           (:name "crible-list")
           (:x 388)
           (:y 409)
           (:w 89)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "CRIBLE")
             (:value (:list (:list 19 16 64) (:list 11 16 64)))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "C-union")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :special)
               (:reference accum)
               (:group-id nil)
               (:name "accum")
               (:x 103)
               (:y 196)
               (:w 242)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "accum-function")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 0))
              (:box
               (:type :function)
               (:reference first)
               (:group-id nil)
               (:name "first")
               (:x 271)
               (:y 146)
               (:w 60)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:library "Mathtools")
               (:type :function)
               (:reference c-union)
               (:group-id nil)
               (:name "c-union")
               (:x 189)
               (:y 146)
               (:w 80)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda :lambda)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "CRIBLE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 119)
               (:y 239)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 3))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 115)
               (:y 141)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in (:type omin) (:index 1) (:name "in") (:doc "")))
               (:group-id nil)
               (:name "in")
               (:x 170)
               (:y 70)
               (:w 40)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "out")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "out")
               (:x 204)
               (:y 241)
               (:w 40)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 6)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 3 :in 0)))
              (:connection
               (:from (:box 0 :out 1))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 0 :in 2)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 0 :in 1)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 0 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 4 :in 0))))))
           (:group-id nil)
           (:name "C-union")
           (:x 438)
           (:y 497)
           (:w 81)
           (:h 28)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "in")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 11))
          (:box
           (:library "OM-JI")
           (:type :function)
           (:reference choose)
           (:group-id nil)
           (:name "choose")
           (:x 480)
           (:y 333)
           (:w 76)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NOTELIST")
             (:value (:list 1 2 3 4 5 6 7 8 9 10))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CHORD-N")
             (:value (:list 1 7 9))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 12))
          (:box
           (:type :function)
           (:reference equal)
           (:group-id nil)
           (:name "equal")
           (:x 498)
           (:y 416)
           (:w 68)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "X")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "Y")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:type :function)
           (:reference omif)
           (:group-id nil)
           (:name "omif")
           (:x 474)
           (:y 560)
           (:w 134)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "TEST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ACTION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "else")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 14))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "C-intersction")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :special)
               (:reference accum)
               (:group-id nil)
               (:name "accum")
               (:x 103)
               (:y 196)
               (:w 338)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "accum-function")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 0))
              (:box
               (:type :function)
               (:reference first)
               (:group-id nil)
               (:name "first")
               (:x 349)
               (:y 150)
               (:w 60)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 119)
               (:y 239)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 2))
              (:box
               (:library "Mathtools")
               (:type :function)
               (:reference c-intersection)
               (:group-id nil)
               (:name "c-intersection")
               (:x 220)
               (:y 146)
               (:w 113)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda :lambda)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "CRIBLE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 115)
               (:y 141)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in (:type omin) (:index 1) (:name "in") (:doc "")))
               (:group-id nil)
               (:name "in")
               (:x 170)
               (:y 70)
               (:w 40)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "out")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "out")
               (:x 204)
               (:y 241)
               (:w 40)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 6)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 2 :in 0)))
              (:connection
               (:from (:box 0 :out 1))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 0 :in 2)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 0 :in 1)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 0 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 4 :in 0))))))
           (:group-id nil)
           (:name "C-intersction")
           (:x 558)
           (:y 510)
           (:w 108)
           (:h 28)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "in")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 816)
           (:y 388)
           (:w 73)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 16))
          (:box
           (:type :special)
           (:reference repeat-n)
           (:group-id nil)
           (:name "repeat-n")
           (:x 760)
           (:y 424)
           (:w 136)
           (:h 28)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :left)
           (:lock nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "self")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "num")
             (:value 0)
             (:reactive nil)))
           (:outputs
            (:output (:name "collected results") (:reactive nil)))
           (:id 17))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "value box")
           (:x 778)
           (:y 389)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value u)
           (:id 18))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 187)
           (:y 77)
           (:w 54)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 19))
          (:box
           (:type :function)
           (:reference flat)
           (:group-id nil)
           (:name "flat")
           (:x 186)
           (:y 107)
           (:w 56)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 20))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 178)
           (:y 135)
           (:w 73)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 21))
          (:box
           (:type :function)
           (:reference om=)
           (:group-id nil)
           (:name "om=")
           (:x 239)
           (:y 216)
           (:w 64)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NUM1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "NUM2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 22))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "value box")
           (:x 269)
           (:y 190)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 23))
          (:box
           (:type :function)
           (:reference omif)
           (:group-id nil)
           (:name "omif")
           (:x 296)
           (:y 502)
           (:w 62)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "TEST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ACTION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "else")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 24))
          (:comment
           (:x 502)
           (:y 42)
           (:w 146)
           (:h 23)
           (:fgcolor nil)
           (:bgcolor nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:text "<= Será um OM-LOOP")
           (:id 25))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 627)
           (:y 127)
           (:w 73)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 26))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "value box")
           (:x 597)
           (:y 156)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 0)
           (:id 27))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 293)
           (:y 595)
           (:w 153)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 28))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 294)
           (:y 648)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 29))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 349)
           (:y 647)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 30))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
           (:group-id nil)
           (:name "input 1")
           (:x 424)
           (:y 34)
           (:w 59)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 31))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 422)
           (:y 86)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 32))
          (:box
           (:type :function)
           (:reference print)
           (:group-id nil)
           (:name "print")
           (:x 239)
           (:y 264)
           (:w 64)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOMETHING")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 33))
          (:box
           (:type :function)
           (:reference print)
           (:group-id nil)
           (:name "print")
           (:x 290)
           (:y 541)
           (:w 64)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOMETHING")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 34))
          (:box
           (:type :function)
           (:reference omif)
           (:group-id nil)
           (:name "omif")
           (:x 523)
           (:y 243)
           (:w 62)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "TEST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ACTION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "else")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 35))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "value box")
           (:x 456)
           (:y 138)
           (:w 143)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 36))
          (:box
           (:type :function)
           (:reference print)
           (:group-id nil)
           (:name "print")
           (:x 538)
           (:y 276)
           (:w 64)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOMETHING")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 37))
          (:box
           (:type :function)
           (:reference omif)
           (:group-id nil)
           (:name "omif")
           (:x 742)
           (:y 328)
           (:w 62)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "TEST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ACTION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "else")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 38))
          (:box
           (:type :function)
           (:reference om=)
           (:group-id nil)
           (:name "om=")
           (:x 598)
           (:y 336)
           (:w 64)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NUM1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "NUM2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 39))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "value box")
           (:x 628)
           (:y 301)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 40))
          (:box
           (:type :value)
           (:reference cons)
           (:group-id nil)
           (:name "value box")
           (:x 748)
           (:y 269)
           (:w 46)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value (:list u u))
           (:id 41))
          (:box
           (:type :function)
           (:reference omif)
           (:group-id nil)
           (:name "omif")
           (:x 490)
           (:y 379)
           (:w 62)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "TEST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ACTION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "else")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 42)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 5 :in 1)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 35 :in 2)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 1 :in 2)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 12 :in 1)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 1)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 0)))
          (:connection
           (:from (:box 8 :out 0))
           (:to (:box 9 :in 0))
           (:attributes
            (:color nil :style nil :modif (662887/2020570 0))))
          (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 11 :in 0)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 15 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 14 :in 1)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 39 :in 0)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 38 :in 2)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 42 :in 2)))
          (:connection
           (:from (:box 13 :out 0))
           (:to (:box 14 :in 0))
           (:attributes (:color nil :style nil :modif (0 -31/88))))
          (:connection (:from (:box 14 :out 0)) (:to (:box 24 :in 2)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 2)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 17 :in 1)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 13 :in 1)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 17 :in 0)))
          (:connection (:from (:box 19 :out 0)) (:to (:box 20 :in 0)))
          (:connection (:from (:box 20 :out 0)) (:to (:box 21 :in 0)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 22 :in 0)))
          (:connection (:from (:box 22 :out 0)) (:to (:box 33 :in 0)))
          (:connection (:from (:box 22 :out 0)) (:to (:box 35 :in 0)))
          (:connection (:from (:box 23 :out 0)) (:to (:box 22 :in 1)))
          (:connection (:from (:box 24 :out 0)) (:to (:box 34 :in 0)))
          (:connection (:from (:box 26 :out 0)) (:to (:box 1 :in 1)))
          (:connection (:from (:box 27 :out 0)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 28 :out 0)) (:to (:box 29 :in 0)))
          (:connection (:from (:box 28 :out 1)) (:to (:box 30 :in 0)))
          (:connection (:from (:box 31 :out 0)) (:to (:box 32 :in 0)))
          (:connection (:from (:box 32 :out 0)) (:to (:box 19 :in 0)))
          (:connection (:from (:box 32 :out 0)) (:to (:box 12 :in 0)))
          (:connection (:from (:box 32 :out 0)) (:to (:box 9 :in 1)))
          (:connection (:from (:box 32 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 32 :out 0)) (:to (:box 26 :in 0)))
          (:connection
           (:from (:box 32 :out 0))
           (:to (:box 24 :in 1))
           (:attributes (:color nil :style nil :modif (0 -41/192))))
          (:connection (:from (:box 33 :out 0)) (:to (:box 24 :in 0)))
          (:connection (:from (:box 34 :out 0)) (:to (:box 28 :in 0)))
          (:connection (:from (:box 35 :out 0)) (:to (:box 37 :in 0)))
          (:connection (:from (:box 36 :out 0)) (:to (:box 35 :in 1)))
          (:connection (:from (:box 37 :out 0)) (:to (:box 3 :in 1)))
          (:connection (:from (:box 38 :out 0)) (:to (:box 16 :in 0)))
          (:connection (:from (:box 39 :out 0)) (:to (:box 38 :in 0)))
          (:connection (:from (:box 39 :out 0)) (:to (:box 42 :in 0)))
          (:connection (:from (:box 40 :out 0)) (:to (:box 39 :in 1)))
          (:connection (:from (:box 41 :out 0)) (:to (:box 38 :in 1)))
          (:connection
           (:from (:box 42 :out 0))
           (:to (:box 13 :in 0))))))
       (:group-id nil)
       (:name "Linguagem para  Sieves")
       (:x 308)
       (:y 58)
       (:w 171)
       (:h 200)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input 1")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "new-patch")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:library "OM-Symmetry")
           (:type :function)
           (:reference crible-union-list)
           (:group-id nil)
           (:name "crible-union-list")
           (:x 21)
           (:y 37)
           (:w 125)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "CRIBLE")
             (:value (:list (:list 19 16 64) (:list 11 16 64)))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:library "OM-Symmetry")
           (:type :function)
           (:reference crible-list)
           (:group-id nil)
           (:name "crible-list")
           (:x 340)
           (:y 153)
           (:w 89)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "CRIBLE")
             (:value (:list (:list 19 16 64) (:list 11 16 64)))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:library "Mathtools")
           (:type :function)
           (:reference revel-crible)
           (:group-id nil)
           (:name "revel-crible")
           (:x 33)
           (:y 66)
           (:w 100)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :function)
           (:reference x->dx)
           (:group-id nil)
           (:name "x->dx")
           (:x 47)
           (:y 95)
           (:w 72)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :value)
           (:reference cons)
           (:group-id nil)
           (:name "value box")
           (:x 308)
           (:y 118)
           (:w 152)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value (:list (:list 19 16 64) (:list 13 16 64)))
           (:id 4))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "c-union")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               "(lambda"
               " (in1_in)"
               ""
               "(let* ((cknnumber (first in1_in)))"
               " (let*"
               "  ((mem-728-local cknnumber))"
               "  (loop for it-729 in in1_in"
               "   do (let*"
               "       ()"
               "       (let"
               "        ((accum-val it-729)"
               "         (accum-fun"
               "          #'(lambda"
               "             (in1_in cknnumber)"
               "             (c-union it-729 cknnumber))))"
               "        (setf"
               "         mem-728-local"
               "         (funcall accum-fun mem-728-local accum-val))"
               "        mem-728-local)))"
               "  mem-728-local)))"))))
           (:group-id nil)
           (:name "c-union")
           (:x 113)
           (:y 272)
           (:w 104)
           (:h 60)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "IN1_IN")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:library "Mathtools")
           (:type :function)
           (:reference revel-crible)
           (:group-id nil)
           (:name "revel-crible")
           (:x 275)
           (:y 419)
           (:w 100)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "C-union")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :special)
               (:reference accum)
               (:group-id nil)
               (:name "accum")
               (:x 103)
               (:y 196)
               (:w 242)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "accum-function")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 0))
              (:box
               (:type :function)
               (:reference first)
               (:group-id nil)
               (:name "first")
               (:x 271)
               (:y 146)
               (:w 60)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:library "Mathtools")
               (:type :function)
               (:reference c-union)
               (:group-id nil)
               (:name "c-union")
               (:x 189)
               (:y 146)
               (:w 80)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda :lambda)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "CRIBLE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 119)
               (:y 239)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 3))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 115)
               (:y 141)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in (:type omin) (:index 1) (:name "in") (:doc "")))
               (:group-id nil)
               (:name "in")
               (:x 170)
               (:y 70)
               (:w 40)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "out")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "out")
               (:x 204)
               (:y 241)
               (:w 40)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 6)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 3 :in 0)))
              (:connection
               (:from (:box 0 :out 1))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 0 :in 2)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 0 :in 1)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 0 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 4 :in 0))))))
           (:group-id nil)
           (:name "C-union")
           (:x 398)
           (:y 230)
           (:w 81)
           (:h 28)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "in")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:library "Mathtools")
           (:type :function)
           (:reference revel-crible)
           (:group-id nil)
           (:name "revel-crible")
           (:x 388)
           (:y 261)
           (:w 100)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "my-function")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               "(lambda (sieves) "
               "      (mapcar (lambda (x) (loop :for new-val :in sieves :collect (c-union (first sieves) new-val)))) sieves)"
               ""
               ""
               ""))))
           (:group-id nil)
           (:name "my-function")
           (:x 231)
           (:y 271)
           (:w 104)
           (:h 60)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIEVES")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 6 :in 0))))))
       (:group-id nil)
       (:name "new-patch")
       (:x 29)
       (:y 109)
       (:w 96)
       (:h 60)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs)
       (:outputs)
       (:id 2))
      (:box
       (:type :function)
       (:reference arithm-ser)
       (:group-id nil)
       (:name "arithm-ser")
       (:x 125)
       (:y 416)
       (:w 96)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "BEGIN")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "END")
         (:value 10)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "STEP")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :value)
       (:reference null)
       (:group-id nil)
       (:name "value box")
       (:x 152)
       (:y 362)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value nil)
       (:id 4))
      (:box
       (:type :value)
       (:reference null)
       (:group-id nil)
       (:name "value box")
       (:x 138)
       (:y 326)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value nil)
       (:id 5)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 1 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 1))))))
   (:group-id nil)
   (:name "C-UNION")
   (:x 587)
   (:y 27)
   (:w 96)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs)
   (:id 31)))
 (:connections
  (:connection (:from (:box 3 :out 1)) (:to (:box 5 :in 0)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 7 :in 1)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 12 :in 1)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 11 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 17 :in 1)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 1)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 9 :in 1)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 7 :in 2)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 11 :in 1)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 14 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 23 :in 0)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 0)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 18 :in 0)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 14 :in 1)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 23 :in 1)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 12 :in 0)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 15 :in 0)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 17 :in 0)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 1)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 21 :in 0)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 19 :in 1)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 19 :in 0)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 25 :in 0)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 28 :in 0)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 24 :in 0)))
  (:connection (:from (:box 24 :out 0)) (:to (:box 30 :in 0)))
  (:connection (:from (:box 25 :out 0)) (:to (:box 29 :in 0)))
  (:connection (:from (:box 28 :out 0)) (:to (:box 26 :in 0)))))