
(:patch
 (:name "A transição de Afinação a partir de perfis melódicos")
 (:doc "")
 (:info
  (:created "2020/08/28 16:50:23")
  (:modified "2020/12/19 14:22:18")
  (:by "om-sharp")
  (:version 1.0101))
 (:window (:size (1938 1098)) (:position (-9 -9)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 604)
   (:y 282)
   (:w 116)
   (:h 28)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 14) (:style :bold)))
   (:align nil)
   (:text "Contorno B")
   (:id 0))
  (:comment
   (:x 313)
   (:y 282)
   (:w 116)
   (:h 48)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 14) (:style :bold)))
   (:align nil)
   (:text
    "Contorno A
")
   (:id 1))
  (:comment
   (:x 1482)
   (:y 825)
   (:w 302)
   (:h 48)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Georgia") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "As alturas estão filtradas para quartos de tom.")
   (:id 2))
  (:comment
   (:x 673)
   (:y 714)
   (:w 188)
   (:h 28)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Verdana") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "Ritmos arbitrários.")
   (:id 3))
  (:comment
   (:x 747)
   (:y 62)
   (:w 202)
   (:h 28)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Georgia") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "Perfil inverso do crivo")
   (:id 4))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 2")
   (:x 914)
   (:y 745)
   (:w 51)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 55)
   (:id 5))
  (:comment
   (:x 977)
   (:y 305)
   (:w 187)
   (:h 68)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Georgia") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "Contrução do contorno melódico
")
   (:id 6))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "Contorno PARTCH")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (500 500)) (:position (256 256)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 177)
       (:y 205)
       (:w 88)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 50)
       (:y 50)
       (:w 73)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 13")
       (:x 140)
       (:y 75)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 2))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 3")
       (:x 176)
       (:y 97)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 5)
       (:id 3))
      (:box
       (:type :function)
       (:reference om-round)
       (:group-id nil)
       (:name "om-round")
       (:x 240)
       (:y 123)
       (:w 136)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :function)
       (:reference om-scale)
       (:group-id nil)
       (:name "om-scale")
       (:x 141)
       (:y 127)
       (:w 127)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 5 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 5 :in 2)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0))))))
   (:group-id nil)
   (:name "Contorno PARTCH")
   (:x 1557/4)
   (:y 225/2)
   (:w 217)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 7))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "contorno WILSON")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 84)
       (:y 336)
       (:w 88)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 50)
       (:y 50)
       (:w 73)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 326)
       (:y 132)
       (:w 93)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference om-round)
       (:group-id nil)
       (:name "om-round")
       (:x 68)
       (:y 249)
       (:w 136)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 91)
       (:y 85)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 3)
       (:id 4))
      (:box
       (:type :function)
       (:reference om-scale)
       (:group-id nil)
       (:name "om-scale")
       (:x 68)
       (:y 132)
       (:w 127)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 171)
       (:y 68)
       (:w 100)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 2))))))
   (:group-id nil)
   (:name "contorno WILSON")
   (:x 3157/4)
   (:y 445/4)
   (:w 217)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 8))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "Ritmo")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1319 500)) (:position (52 172)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 145)
       (:y 405)
       (:w 88)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 535)
       (:y 197)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 11")
       (:x 336)
       (:y 339)
       (:w 45)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 2 4))
       (:id 2))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 8")
       (:x 432)
       (:y 169)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 3)
       (:id 3))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 105)
       (:y 192)
       (:w 130)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 4))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 10")
       (:x 39)
       (:y 61)
       (:w 397)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 1/20 1/20 1/20 1/20 1/20 1/4))
       (:id 5))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 224)
       (:y 315)
       (:w 70)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference mktree)
       (:group-id nil)
       (:name "mktree")
       (:x 261)
       (:y 384)
       (:w 110)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RHYTHM")
         (:value (:list 1/4 1/4 1/4 1/4))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TIMESIGNS")
         (:value (:list 3 4))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 324)
       (:y 254)
       (:w 132)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 383)
       (:y 219)
       (:w 38)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 9)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 4 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 7 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 1))))))
   (:group-id nil)
   (:name "Ritmo")
   (:x 578)
   (:y 4223/6)
   (:w 96)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 9))
  (:box
   (:type :function)
   (:reference reverse)
   (:group-id nil)
   (:name "reverse")
   (:x 636)
   (:y 60)
   (:w 113)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :object)
   (:reference voice)
   (:group-id nil)
   (:name "VOICE")
   (:x 430)
   (:y 799)
   (:w 1029)
   (:h 108)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TREE")
     (:value (:list ? (:list (:list (:list 4 4) (:list 1 1 1 1)))))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value
      (:list
       (:object
        (:class chord)
        (:slots
         ((:symbolic-date nil)
          (:symbolic-dur nil)
          (:symbolic-dur-extent 0)
          (:extras nil)
          (:onset 0)
          (:item-time nil)
          (:item-internal-time nil)
          (:item-type nil)
          (:attributes nil)
          (:lmidic (:list 6000))
          (:lvel (:list 100))
          (:loffset (:list 0))
          (:ldur (:list 1000))
          (:lchan (:list 1))
          (:lport (:list nil)))))))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 100)
     (:reactive nil))
    (:input (:type :key) (:name "lvel") (:value 100) (:reactive nil))
    (:input (:type :key) (:name "loffset") (:value 0) (:reactive nil))
    (:input (:type :key) (:name "lchan") (:value 1) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "TREE") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "TEMPO") (:reactive nil))
    (:output (:name "lvel") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil)))
   (:window (:size (1920 1026)) (:position (-9 -9)))
   (:edition-params
    (:duration-display nil)
    (:offsets :hidden)
    (:port-display nil)
    (:channel-display :hidden)
    (:velocity-display :symbol)
    (:font-size 12)
    (:scale :scale-1/8)
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 8.3)
      (:list 218 11.8)
      (:list 436 15.3)
      (:list 655 19.599999)
      (:list 873 23.099999)
      (:list 1091 27.399998)
      (:list 2182 38.899998)
      (:list 2400 42.399998)
      (:list 2618 45.899998)
      (:list 2836 49.399998)
      (:list 3055 53.699997)
      (:list 3273 57.199997)
      (:list 4364 69.5)
      (:list 4582 73.0)
      (:list 4800 76.5)
      (:list 5018 80.0)
      (:list 5236 83.5)
      (:list 5455 87.8)
      (:list 6545 99.3)
      (:list 6764 102.8)
      (:list 6982 106.3)
      (:list 7200 110.600006)
      (:list 7418 114.90001)
      (:list 7636 118.40001)
      (:list 8727 130.70001)
      (:list 8945 134.20001)
      (:list 9164 137.70001)
      (:list 9382 141.20001)
      (:list 9600 144.70001)
      (:list 9818 149.00002)
      (:list 10909 161.30002)
      (:list 11127 164.80002)
      (:list 11345 168.30002)
      (:list 11564 171.80002)
      (:list 11782 176.10002)
      (:list 12000 180.40003)
      (:list 13091 191.90003)
      (:list 13309 196.20003)
      (:list 13527 199.70003)
      (:list 13745 203.20003)
      (:list 13964 206.70003)
      (:list 14182 211.00003)
      (:list 15273 223.30004)
      (:list 15491 226.80004)
      (:list 15709 230.30004)
      (:list 15927 233.80004)
      (:list 16145 237.30004)
      (:list 16364 241.60004)
      (:list 17455 253.10004)
      (:list 17673 256.60004)
      (:list 17891 260.90002)
      (:list 18109 264.40002)
      (:list 18327 267.90002)
      (:list 18545 271.40002)))
    (:staff :g))
   (:value
    (:object
     (:class voice)
     (:slots
      ((:onset 0)
       (:duration 19635)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "VOICE")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:tree
        (:list
         9
         (:list
          (:list (:list 2 4) (:list (:list 1 (:list 1 1 1 1 1)) 1))
          (:list (:list 2 4) (:list (:list 1 (:list 1 1 1 1 1)) 1))
          (:list (:list 2 4) (:list (:list 1 (:list 1 1 1 1 1)) 1))
          (:list (:list 2 4) (:list (:list 1 (:list 1 1 1 1 1)) 1))
          (:list (:list 2 4) (:list (:list 1 (:list 1 1 1 1 1)) 1))
          (:list (:list 2 4) (:list (:list 1 (:list 1 1 1 1 1)) 1))
          (:list (:list 2 4) (:list (:list 1 (:list 1 1 1 1 1)) 1))
          (:list (:list 2 4) (:list (:list 1 (:list 1 1 1 1 1)) 1))
          (:list (:list 2 4) (:list (:list 1 (:list 1 1 1 1 1)) 1)))))
       (:lmidic
        (:list
         (:list 7461)
         (:list 6852)
         (:list 7183)
         (:list 7293)
         (:list 6852)
         (:list 7461)
         (:list 6500)
         (:list 7181)
         (:list 7181)
         (:list 6852)
         (:list 7293)
         (:list 6852)
         (:list 7293)
         (:list 6852)
         (:list 6852)
         (:list 7183)
         (:list 6852)
         (:list 7293)
         (:list 6852)
         (:list 7181)
         (:list 6852)
         (:list 6584)
         (:list 7303)
         (:list 6852)
         (:list 7293)
         (:list 6852)
         (:list 6852)
         (:list 7181)
         (:list 6462)
         (:list 7461)
         (:list 6584)
         (:list 7183)
         (:list 7181)
         (:list 6852)
         (:list 7303)
         (:list 6341)
         (:list 7643)
         (:list 6584)
         (:list 7183)
         (:list 7181)
         (:list 6852)
         (:list 7461)
         (:list 6341)
         (:list 7643)
         (:list 6500)
         (:list 7183)
         (:list 7181)
         (:list 6584)
         (:list 7643)
         (:list 5743)
         (:list 7755)
         (:list 6462)
         (:list 7183)
         (:list 7181)))
       (:lonset
        (:list
         0
         218
         436
         655
         873
         1091
         2182
         2400
         2618
         2836
         3055
         3273
         4364
         4582
         4800
         5018
         5236
         5455
         6545
         6764
         6982
         7200
         7418
         7636
         8727
         8945
         9164
         9382
         9600
         9818
         10909
         11127
         11345
         11564
         11782
         12000
         13091
         13309
         13527
         13745
         13964
         14182
         15273
         15491
         15709
         15927
         16145
         16364
         17455
         17673
         17891
         18109
         18327
         18545
         19636))
       (:ldur
        (:list
         (:list 217)
         (:list 217)
         (:list 218)
         (:list 217)
         (:list 217)
         (:list 1090)
         (:list 217)
         (:list 217)
         (:list 217)
         (:list 218)
         (:list 217)
         (:list 1090)
         (:list 217)
         (:list 217)
         (:list 217)
         (:list 217)
         (:list 218)
         (:list 1089)
         (:list 218)
         (:list 217)
         (:list 217)
         (:list 217)
         (:list 217)
         (:list 1090)
         (:list 217)
         (:list 218)
         (:list 217)
         (:list 217)
         (:list 217)
         (:list 1090)
         (:list 217)
         (:list 217)
         (:list 218)
         (:list 217)
         (:list 217)
         (:list 1090)
         (:list 217)
         (:list 217)
         (:list 217)
         (:list 218)
         (:list 217)
         (:list 1090)
         (:list 217)
         (:list 217)
         (:list 217)
         (:list 217)
         (:list 218)
         (:list 1090)
         (:list 217)
         (:list 217)
         (:list 217)
         (:list 217)
         (:list 217)
         (:list 1090)))
       (:lvel
        (:list
         (:list 30)
         (:list 40)
         (:list 50)
         (:list 60)
         (:list 70)
         (:list 80)
         (:list 90)
         (:list 100)
         (:list 46)
         (:list 51)
         (:list 57)
         (:list 62)
         (:list 68)
         (:list 73)
         (:list 79)
         (:list 84)
         (:list 56)
         (:list 58)
         (:list 61)
         (:list 64)
         (:list 66)
         (:list 69)
         (:list 72)
         (:list 74)
         (:list 65)
         (:list 65)
         (:list 65)
         (:list 65)
         (:list 65)
         (:list 65)
         (:list 65)
         (:list 65)
         (:list 73)
         (:list 70)
         (:list 68)
         (:list 66)
         (:list 64)
         (:list 62)
         (:list 60)
         (:list 57)
         (:list 80)
         (:list 76)
         (:list 71)
         (:list 67)
         (:list 63)
         (:list 59)
         (:list 54)
         (:list 50)
         (:list 87)
         (:list 81)
         (:list 74)
         (:list 68)
         (:list 62)
         (:list 56)))
       (:loffset (:list 0))
       (:lchan (:list 9))
       (:lport (:list nil))
       (:llegato nil)
       (:tempo 55)))))
   (:id 11))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "MOS")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1403 620)) (:position (32 32)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 990)
       (:y 478)
       (:w 88)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 741)
       (:y 59)
       (:w 73)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 865)
       (:y 35)
       (:w 93)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 3) (:name "input 3") (:doc "")))
       (:group-id nil)
       (:name "input 3")
       (:x 931)
       (:y 45)
       (:w 93)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 4) (:name "input 4") (:doc "")))
       (:group-id nil)
       (:name "input 4")
       (:x 1050)
       (:y 95)
       (:w 93)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 1220)
       (:y 327)
       (:w 55)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 5))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 1156)
       (:y 392)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 10)
       (:id 6))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux")
       (:x 1036)
       (:y 386)
       (:w 40)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 4)
       (:id 7))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference filter-ac-inst)
       (:group-id nil)
       (:name "filter-ac-inst")
       (:x 956)
       (:y 432)
       (:w 160)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 6000 6530 7203 5049))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "APPROX")
         (:value 10)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEMPERAMENT")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference mos)
       (:group-id nil)
       (:name "mos")
       (:x 886)
       (:y 139)
       (:w 100)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value 4/3)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SOBREPOSITION")
         (:value 11)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "RANGE")
         (:value 7200)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference sort-list)
       (:group-id nil)
       (:name "sort-list")
       (:x 956)
       (:y 320)
       (:w 114)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference rt->mc)
       (:group-id nil)
       (:name "rt->mc")
       (:x 1009)
       (:y 237)
       (:w 109)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value 11/8)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FUNDAMENTAL")
         (:value 6000)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 9 :in 2)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 11 :in 1)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 8 :in 2)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 10 :in 0))))))
   (:group-id nil)
   (:name "MOS")
   (:x 1213)
   (:y 160)
   (:w 152)
   (:h 57)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 3")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 4")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "output") (:reactive nil))
    (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "diamante")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (500 705)) (:position (256 256)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 2") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output 2")
       (:x 176)
       (:y 636)
       (:w 107)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 99)
       (:y 50)
       (:w 73)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 140)
       (:y 250)
       (:w 93)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 3) (:name "input 3") (:doc "")))
       (:group-id nil)
       (:name "input 3")
       (:x 132)
       (:y 382)
       (:w 93)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 4) (:name "input 4") (:doc "")))
       (:group-id nil)
       (:name "input 4")
       (:x 240)
       (:y 179)
       (:w 93)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 42)
       (:y 426)
       (:w 70)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference range-reduce)
       (:group-id nil)
       (:name "range-reduce")
       (:x 46)
       (:y 491)
       (:w 172)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 4800 7200 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GRAVE")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "AGUDA")
         (:value 7902)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference filter-ac-inst)
       (:group-id nil)
       (:name "filter-ac-inst")
       (:x 149)
       (:y 588)
       (:w 160)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 6000 6530 7203 5049))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "APPROX")
         (:value 10)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEMPERAMENT")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 193)
       (:y 541)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 8)
       (:id 8))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux")
       (:x 246)
       (:y 541)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 10)
       (:id 9))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference choose)
       (:group-id nil)
       (:name "choose")
       (:x 29)
       (:y 179)
       (:w 107)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list (:list 6000 6530) (:list 7203 5049)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CHORD-N")
         (:value (:list 2 3 2))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 236)
       (:y 307)
       (:w 70)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :function)
       (:reference sort-list)
       (:group-id nil)
       (:name "sort-list")
       (:x 281)
       (:y 368)
       (:w 114)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference rt->mc)
       (:group-id nil)
       (:name "rt->mc")
       (:x 39)
       (:y 300)
       (:w 109)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value (:list 1 11/8 7/4))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FUNDAMENTAL")
         (:value 6000)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 6 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 13 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 6 :in 2)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 10 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 7 :in 1)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 7 :in 2)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 5 :in 0))))))
   (:group-id nil)
   (:name "diamante")
   (:x 43/5)
   (:y 1142/5)
   (:w 200)
   (:h 66)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 3")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 4")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 2") (:reactive nil)))
   (:id 13))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 12")
   (:x 1291)
   (:y 102)
   (:w 62)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 14))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "troca por notas das areas de afinação")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (851 724)) (:position (104 155)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 5)
       (:y 5)
       (:w 73)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 253)
       (:y 8)
       (:w 93)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 192)
       (:y 594)
       (:w 107)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 412)
       (:y 589)
       (:w 55)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 7")
       (:x 457)
       (:y 116)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 8)
       (:id 4))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 6")
       (:x 415)
       (:y 106)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 100)
       (:id 5))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 5")
       (:x 376)
       (:y 113)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 30)
       (:id 6))
      (:box
       (:type :function)
       (:reference interpolation)
       (:group-id nil)
       (:name "interpolation")
       (:x 374)
       (:y 171)
       (:w 163)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "BEGIN")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "END")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SAMPLES")
         (:value 5)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CURVE")
         (:value 0.0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference last)
       (:group-id nil)
       (:name "last")
       (:x 223)
       (:y 166)
       (:w 73)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :value)
       (:reference single-float)
       (:group-id nil)
       (:name "aux 4")
       (:x 683)
       (:y 233)
       (:w 56)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 0.33)
       (:id 9))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 634)
       (:y 231)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 9)
       (:id 10))
      (:box
       (:type :function)
       (:reference reverse)
       (:group-id nil)
       (:name "reverse")
       (:x 583)
       (:y 167)
       (:w 113)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :function)
       (:reference interpolation)
       (:group-id nil)
       (:name "interpolation")
       (:x 556)
       (:y 281)
       (:w 163)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "BEGIN")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "END")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SAMPLES")
         (:value 5)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CURVE")
         (:value 0.0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 400)
       (:y 390)
       (:w 70)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 3")
       (:x 527)
       (:y 378)
       (:w 35)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 9))
       (:id 14))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "interpolation")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (1072 631)) (:position (64 211)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 235)
           (:y 543)
           (:w 88)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 1)
             (:name "conjunto de notas")
             (:doc "")))
           (:group-id nil)
           (:name "conjunto de notas")
           (:x 303)
           (:y 152)
           (:w 203)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "perfil") (:doc "")))
           (:group-id nil)
           (:name "perfil")
           (:x 38)
           (:y 147)
           (:w 72)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "nota-mais-próxima")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size (500 500)) (:position (256 256)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input")
                 (:doc "")))
               (:group-id nil)
               (:name "input")
               (:x 77)
               (:y 45)
               (:w 73)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "input 2")
                 (:doc "")))
               (:group-id nil)
               (:name "input 2")
               (:x 299)
               (:y 41)
               (:w 93)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 310)
               (:y 409)
               (:w 107)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 2))
              (:box
               (:type :abstraction)
               (:reference
                (:textfun
                 (:name "lispfunction 2")
                 (:doc "")
                 (:info
                  (:created nil)
                  (:modified nil)
                  (:by *app-name*)
                  (:version 0))
                 (:window (:size nil) (:position nil))
                 (:text
                  (:list
                   "(lambda (lista-n)"
                   ""
                   "(loop for x in lista-n collect (loop for y in x collect (abs y))))"))))
               (:group-id nil)
               (:name "lispfunction")
               (:x 268)
               (:y 319)
               (:w 172)
               (:h 48)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:lock nil)
               (:lambda nil)
               (:pre-delay 0)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LISTA-N")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 189)
               (:y 252)
               (:w 84)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 4))
              (:box
               (:type :abstraction)
               (:reference
                (:patch
                 (:name "OMLOOP")
                 (:doc "")
                 (:info
                  (:created nil)
                  (:modified nil)
                  (:by *app-name*)
                  (:version 0))
                 (:window (:size (500 500)) (:position (32 32)))
                 (:grid nil)
                 (:lock nil)
                 (:boxes
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 1)
                     (:name "input")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input")
                   (:x 29)
                   (:y 19)
                   (:w 73)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 0))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 2)
                     (:name "input 2")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input 2")
                   (:x 281)
                   (:y 18)
                   (:w 93)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 1))
                  (:box
                   (:type :io)
                   (:reference
                    (:out
                     (:type omout)
                     (:name "output 1")
                     (:index 1)
                     (:doc "")))
                   (:group-id nil)
                   (:name "output 1")
                   (:x 256)
                   (:y 424)
                   (:w 107)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "out-value")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 2))
                  (:box
                   (:type :special)
                   (:reference collect)
                   (:group-id nil)
                   (:name "collect")
                   (:x 194)
                   (:y 269)
                   (:w 84)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.7 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "data-in")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "push")
                     (:value t)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "init")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs
                    (:output (:name "collect") (:reactive nil))
                    (:output (:name "data-out") (:reactive nil))
                    (:output (:name "init") (:reactive nil)))
                   (:id 3))
                  (:box
                   (:type :function)
                   (:reference om-)
                   (:group-id nil)
                   (:name "om-")
                   (:x 142)
                   (:y 195)
                   (:w 78)
                   (:h 41)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "ARG1")
                     (:value 0)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "ARG2")
                     (:value 0)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 4))
                  (:box
                   (:type :special)
                   (:reference iterate)
                   (:group-id nil)
                   (:name "iterate")
                   (:x 128)
                   (:y 420)
                   (:w 88)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.85 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "action")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 5))
                  (:box
                   (:type :special)
                   (:reference loop-list)
                   (:group-id nil)
                   (:name "list-loop")
                   (:x 32)
                   (:y 107)
                   (:w 101)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.85 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "list")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "i") (:reactive nil)))
                   (:id 6)))
                 (:connections
                  (:connection
                   (:from (:box 0 :out 0))
                   (:to (:box 6 :in 0)))
                  (:connection
                   (:from (:box 1 :out 0))
                   (:to (:box 4 :in 1)))
                  (:connection
                   (:from (:box 3 :out 0))
                   (:to (:box 5 :in 0)))
                  (:connection
                   (:from (:box 3 :out 1))
                   (:to (:box 2 :in 0)))
                  (:connection
                   (:from (:box 4 :out 0))
                   (:to (:box 3 :in 0)))
                  (:connection
                   (:from (:box 6 :out 0))
                   (:to (:box 4 :in 0))))))
               (:group-id nil)
               (:name "OMLOOP")
               (:x 109)
               (:y 156)
               (:w 125)
               (:h 58)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:lock nil)
               (:lambda nil)
               (:pre-delay 0)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "input")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "input 2")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "output 1") (:reactive nil)))
               (:id 5))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 173)
               (:y 402)
               (:w 88)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 6))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 297)
               (:y 122)
               (:w 101)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 7)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 5 :in 0)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 2 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 4 :out 1))
               (:to (:box 3 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 5 :in 1))))))
           (:group-id nil)
           (:name "nota-mais-próxima")
           (:x 239)
           (:y 260)
           (:w 229)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 2")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 3))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "subtituicao")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size (706 789)) (:position (64 64)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input")
                 (:doc "")))
               (:group-id nil)
               (:name "input")
               (:x 38)
               (:y 31)
               (:w 73)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "input 2")
                 (:doc "")))
               (:group-id nil)
               (:name "input 2")
               (:x 292)
               (:y 19)
               (:w 93)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 345)
               (:y 630)
               (:w 107)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 2))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "aux 2")
               (:x 137)
               (:y 316)
               (:w 32)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 3))
              (:box
               (:type :function)
               (:reference om/=)
               (:group-id nil)
               (:name "om/=")
               (:x 73)
               (:y 375)
               (:w 94)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NUM1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "NUM2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :function)
               (:reference flat)
               (:group-id nil)
               (:name "flat")
               (:x 135)
               (:y 205)
               (:w 70)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :function)
               (:reference length)
               (:group-id nil)
               (:name "length")
               (:x 20)
               (:y 299)
               (:w 100)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SEQUENCE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :special)
               (:reference if)
               (:group-id nil)
               (:name "IF")
               (:x 301)
               (:y 389)
               (:w 62)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "TEST")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "THEN")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "else")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 7))
              (:box
               (:type :function)
               (:reference nth-random)
               (:group-id nil)
               (:name "nth-random")
               (:x 201)
               (:y 301)
               (:w 157)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 8))
              (:box
               (:type :function)
               (:reference list)
               (:group-id nil)
               (:name "list")
               (:x 44)
               (:y 188)
               (:w 66)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 9))
              (:box
               (:type :function)
               (:reference flat)
               (:group-id nil)
               (:name "flat")
               (:x 435)
               (:y 534)
               (:w 70)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 10))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 279)
               (:y 460)
               (:w 84)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 11))
              (:box
               (:type :abstraction)
               (:reference
                (:patch
                 (:name "OMLOOP")
                 (:doc "")
                 (:info
                  (:created nil)
                  (:modified nil)
                  (:by *app-name*)
                  (:version 0))
                 (:window (:size (882 627)) (:position (96 96)))
                 (:grid nil)
                 (:lock nil)
                 (:boxes
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 1)
                     (:name "input")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input")
                   (:x 26)
                   (:y 8)
                   (:w 73)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 0))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 2)
                     (:name "input 2")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input 2")
                   (:x 182)
                   (:y 4)
                   (:w 93)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 1))
                  (:box
                   (:type :io)
                   (:reference
                    (:out
                     (:type omout)
                     (:name "output 1")
                     (:index 1)
                     (:doc "")))
                   (:group-id nil)
                   (:name "output 1")
                   (:x 505)
                   (:y 537)
                   (:w 107)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "out-value")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 2))
                  (:box
                   (:type :function)
                   (:reference remove)
                   (:group-id nil)
                   (:name "remove")
                   (:x 519)
                   (:y 473)
                   (:w 114)
                   (:h 41)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "ITEM")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "SEQUENCE")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 3))
                  (:box
                   (:type :special)
                   (:reference collect)
                   (:group-id nil)
                   (:name "collect")
                   (:x 433)
                   (:y 419)
                   (:w 84)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.7 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "data-in")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "push")
                     (:value t)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "init")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs
                    (:output (:name "collect") (:reactive nil))
                    (:output (:name "data-out") (:reactive nil))
                    (:output (:name "init") (:reactive nil)))
                   (:id 4))
                  (:box
                   (:type :special)
                   (:reference if)
                   (:group-id nil)
                   (:name "IF")
                   (:x 176)
                   (:y 310)
                   (:w 89)
                   (:h 41)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "TEST")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "THEN")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 5))
                  (:box
                   (:type :function)
                   (:reference om=)
                   (:group-id nil)
                   (:name "om=")
                   (:x 233)
                   (:y 245)
                   (:w 85)
                   (:h 41)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "NUM1")
                     (:value 0)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "NUM2")
                     (:value 0)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 6))
                  (:box
                   (:library "OM-JI")
                   (:type :function)
                   (:reference choose)
                   (:group-id nil)
                   (:name "choose")
                   (:x 305)
                   (:y 145)
                   (:w 107)
                   (:h 41)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "NOTELIST")
                     (:value
                      (:list (:list 6000 6530) (:list 7203 5049)))
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "CHORD-N")
                     (:value (:list 2))
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 7))
                  (:box
                   (:type :abstraction)
                   (:reference
                    (:textfun
                     (:name "lispfunction")
                     (:doc "")
                     (:info
                      (:created nil)
                      (:modified nil)
                      (:by *app-name*)
                      (:version 0))
                     (:window (:size nil) (:position nil))
                     (:text
                      (:list
                       "(lambda (lista)"
                       "  (apply 'min lista))"))))
                   (:group-id nil)
                   (:name "lispfunction")
                   (:x 140)
                   (:y 117)
                   (:w 152)
                   (:h 48)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:display :mini-view)
                   (:lock nil)
                   (:lambda nil)
                   (:pre-delay 0)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "LISTA")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 8))
                  (:box
                   (:type :function)
                   (:reference arithm-ser)
                   (:group-id nil)
                   (:name "arithm-ser")
                   (:x 489)
                   (:y 195)
                   (:w 144)
                   (:h 41)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "BEGIN")
                     (:value 1)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "END")
                     (:value t)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "STEP")
                     (:value 1)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 9))
                  (:box
                   (:type :function)
                   (:reference length)
                   (:group-id nil)
                   (:name "length")
                   (:x 465)
                   (:y 97)
                   (:w 100)
                   (:h 41)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "SEQUENCE")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 10))
                  (:box
                   (:library "OM-JI")
                   (:type :function)
                   (:reference choose)
                   (:group-id nil)
                   (:name "choose")
                   (:x 42)
                   (:y 209)
                   (:w 124)
                   (:h 41)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "NOTELIST")
                     (:value
                      (:list (:list 6000 6530) (:list 7203 5049)))
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "CHORD-N")
                     (:value (:list 2))
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 11))
                  (:box
                   (:type :special)
                   (:reference iterate)
                   (:group-id nil)
                   (:name "iterate")
                   (:x 400)
                   (:y 536)
                   (:w 88)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.85 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "action")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 12))
                  (:box
                   (:type :special)
                   (:reference loop-list)
                   (:group-id nil)
                   (:name "list-loop")
                   (:x 442)
                   (:y 264)
                   (:w 101)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.85 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "list")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "i") (:reactive nil)))
                   (:id 13)))
                 (:connections
                  (:connection
                   (:from (:box 0 :out 0))
                   (:to (:box 11 :in 0)))
                  (:connection
                   (:from (:box 1 :out 0))
                   (:to (:box 7 :in 0)))
                  (:connection
                   (:from (:box 1 :out 0))
                   (:to (:box 8 :in 0)))
                  (:connection
                   (:from (:box 1 :out 0))
                   (:to (:box 10 :in 0)))
                  (:connection
                   (:from (:box 3 :out 0))
                   (:to (:box 2 :in 0)))
                  (:connection
                   (:from (:box 4 :out 0))
                   (:to (:box 12 :in 0)))
                  (:connection
                   (:from (:box 4 :out 1))
                   (:to (:box 3 :in 1)))
                  (:connection
                   (:from (:box 5 :out 0))
                   (:to (:box 4 :in 0)))
                  (:connection
                   (:from (:box 6 :out 0))
                   (:to (:box 5 :in 0)))
                  (:connection
                   (:from (:box 7 :out 0))
                   (:to (:box 6 :in 1)))
                  (:connection
                   (:from (:box 8 :out 0))
                   (:to (:box 6 :in 0)))
                  (:connection
                   (:from (:box 9 :out 0))
                   (:to (:box 13 :in 0)))
                  (:connection
                   (:from (:box 10 :out 0))
                   (:to (:box 9 :in 1)))
                  (:connection
                   (:from (:box 11 :out 0))
                   (:to (:box 5 :in 1)))
                  (:connection
                   (:from (:box 13 :out 0))
                   (:to (:box 7 :in 1)))
                  (:connection
                   (:from (:box 13 :out 0))
                   (:to (:box 11 :in 1))))))
               (:group-id nil)
               (:name "OMLOOP")
               (:x 150)
               (:y 119)
               (:w 125)
               (:h 48)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:lock nil)
               (:lambda nil)
               (:pre-delay 0)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "input")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "input 2")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "output 1") (:reactive nil)))
               (:id 12))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 193)
               (:y 591)
               (:w 88)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 13))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 290)
               (:y 105)
               (:w 101)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 14)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 12 :in 0)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 4 :in 1)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 11 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 7 :in 1)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 5 :in 0)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 13 :in 0)))
              (:connection
               (:from (:box 11 :out 1))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 11 :out 1))
               (:to (:box 2 :in 0)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 7 :in 2)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 9 :in 0)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 12 :in 1))))))
           (:group-id nil)
           (:name "subtituicao")
           (:x 191)
           (:y 385)
           (:w 147)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 2")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 4)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 1)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 1)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 0 :in 0))))))
       (:group-id nil)
       (:name "interpolation")
       (:x 57)
       (:y 556/3)
       (:w 163)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "conjunto de notas")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "perfil")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 15))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 62)
       (:y 259)
       (:w 84)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 16))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 38)
       (:y 508)
       (:w 88)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 17))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 136)
       (:y 70)
       (:w 101)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 18))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 241)
       (:y 372)
       (:w 70)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "level")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 15 :in 1)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 7 :in 2)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 1)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 12 :in 3)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 12 :in 2)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 16 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 16 :out 1)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 2 :in 0))))))
   (:group-id nil)
   (:name "troca por notas das areas de afinação")
   (:x 57)
   (:y 688)
   (:w 418)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "output 1") (:reactive nil))
    (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:type :function)
   (:reference flat)
   (:group-id nil)
   (:name "flat")
   (:x 247)
   (:y 533)
   (:w 70)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:type :function)
   (:reference x-append)
   (:group-id nil)
   (:name "x-append")
   (:x 30)
   (:y 495)
   (:w 132)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "L1?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "L2?")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "aux 9")
   (:x 442)
   (:y 570)
   (:w 50)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0.3)
   (:id 18))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 8")
   (:x 384)
   (:y 570)
   (:w 32)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 9)
   (:id 19))
  (:box
   (:type :function)
   (:reference flat)
   (:group-id nil)
   (:name "flat")
   (:x 921)
   (:y 509)
   (:w 70)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 20))
  (:box
   (:type :function)
   (:reference interpolation)
   (:group-id nil)
   (:name "interpolation")
   (:x 247)
   (:y 612)
   (:w 245)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "BEGIN")
     (:value 0)
     (:reactive nil))
    (:input (:type :standard) (:name "END") (:value 1) (:reactive nil))
    (:input
     (:type :standard)
     (:name "SAMPLES")
     (:value 5)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CURVE")
     (:value 0.0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 21))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference choose)
   (:group-id nil)
   (:name "choose")
   (:x 873)
   (:y 301)
   (:w 107)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list (:list 6000 6530) (:list 7203 5049)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHORD-N")
     (:value (:list 2 3 2))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ 2")
   (:x 685)
   (:y 413)
   (:w 377)
   (:h 90)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 9))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size (650 300)) (:position (160 160)))
   (:edition-params (:scale :scale-1/8) (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 7000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "CHORD-SEQ 2")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:lmidic
        (:list
         (:list 5743)
         (:list 7900)
         (:list 6341)
         (:list 7181)
         (:list 7181)
         (:list 6462)
         (:list 7900)))
       (:lonset (:list 0 1000 2000 3000 4000 5000 6000 7000))
       (:ldur (:list 1000))
       (:lvel (:list 100))
       (:loffset (:list 0))
       (:lchan (:list 9))
       (:lport (:list nil))
       (:llegato nil)))))
   (:id 23))
  (:box
   (:type :object)
   (:reference bpf)
   (:group-id nil)
   (:name "BPF 2")
   (:x 603)
   (:y 181)
   (:w 294)
   (:h 102)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "decimals")
     (:value 0)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil))
    (:output (:name "decimals") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 600)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.0S0 0.0S0 0.0S0 1.0))
       (:decimals 0)
       (:x-points (:list 0 100 200 300 400 500 600))
       (:y-points (:list 3 9 4 7 7 5 9))))
     (:add-slots ((:name "BPF 2")))))
   (:id 24))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 7")
   (:x 116)
   (:y 184)
   (:w 62)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 8000)
   (:id 25))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 4")
   (:x 54)
   (:y 185)
   (:w 62)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6500)
   (:id 26))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 6")
   (:x 1244)
   (:y 75)
   (:w 40)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 16)
   (:id 27))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "aux 5")
   (:x 1154)
   (:y 57)
   (:w 70)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 13/8)
   (:id 28))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 376)
   (:y 414)
   (:w 302)
   (:h 88)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 9))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size (650 300)) (:position (128 128)))
   (:edition-params (:scale :scale-1/8) (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 7000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "CHORD-SEQ")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:lmidic
        (:list
         (:list 7461)
         (:list 6852)
         (:list 7183)
         (:list 7293)
         (:list 6852)
         (:list 7461)
         (:list 6500)))
       (:lonset (:list 0 1000 2000 3000 4000 5000 6000 7000))
       (:ldur (:list 1000))
       (:lvel (:list 100))
       (:loffset (:list 0))
       (:lchan (:list 9))
       (:lport (:list nil))
       (:llegato nil)))))
   (:id 29))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference choose)
   (:group-id nil)
   (:name "choose")
   (:x 199)
   (:y 361)
   (:w 107)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list (:list 6000 6530) (:list 7203 5049)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHORD-N")
     (:value (:list 2 3 2))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 30))
  (:box
   (:type :object)
   (:reference bpf)
   (:group-id nil)
   (:name "BPF")
   (:x 308)
   (:y 182)
   (:w 290)
   (:h 102)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "decimals")
     (:value 0)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil))
    (:output (:name "decimals") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 600)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.0S0 0.0S0 0.0S0 1.0))
       (:decimals 0)
       (:x-points (:list 0 100 200 300 400 500 600))
       (:y-points (:list 5 2 3 4 2 5 1))))
     (:add-slots ((:name "BPF")))))
   (:id 31))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux")
   (:x 179)
   (:y 185)
   (:w 32)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 32))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference diamond-identity)
   (:group-id nil)
   (:name "diamond-identity")
   (:x 18)
   (:y 116)
   (:w 209)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "IDENTITY")
     (:value (:list 11 19 97))
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 33))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "crivo")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1366 725)) (:position (-8 0)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 2") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output 2")
       (:x 189)
       (:y 338)
       (:w 107)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 424)
       (:y 329)
       (:w 55)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 203)
       (:y 95)
       (:w 322)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list (:list 11 16 64) (:list 15 16 64)))
       (:id 2))
      (:box
       (:library "OM-Sieves")
       (:type :function)
       (:reference s-union-l)
       (:group-id nil)
       (:name "s-union-l")
       (:x 250)
       (:y 207)
       (:w 127)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SIEVE")
         (:value (:list (:list 19 16 64) (:list 11 16 64)))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:library "OM-Sieves")
       (:type :function)
       (:reference revel-sieve)
       (:group-id nil)
       (:name "revel-sieve")
       (:x 171)
       (:y 296)
       (:w 148)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:library "OM-Sieves")
       (:type :function)
       (:reference s-perfil)
       (:group-id nil)
       (:name "s-perfil")
       (:x 401)
       (:y 291)
       (:w 108)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SIEVE")
         (:value (:list 23 33 47 63 70))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5)))
     (:connections
      (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 1 :in 0))))))
   (:group-id nil)
   (:name "crivo")
   (:x 62)
   (:y 8)
   (:w 200)
   (:h 66)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs
    (:output (:name "output 2") (:reactive nil))
    (:output (:name "out") (:reactive nil)))
   (:id 34))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 1374)
   (:y 776)
   (:w 32)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 9)
   (:id 35))
  (:comment
   (:x 516)
   (:y 569)
   (:w 336)
   (:h 88)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Georgia") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "9 contornos melódicos. 

O primeiro é o de Partch e o último o de Wilson.")
   (:id 36))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference play-om\#)
   (:group-id nil)
   (:name "play-om#")
   (:x 399)
   (:y 918)
   (:w 216)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICE")
     (:value (:list nil))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 37))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference voice->text)
   (:group-id nil)
   (:name "voice->text")
   (:x 32)
   (:y 808)
   (:w 154)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICE")
     (:value (:list nil))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 38))
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name nil)
   (:x 29)
   (:y 859)
   (:w 301)
   (:h 121)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil)))
   (:window (:size (500 897)) (:position (96 96)))
   (:edition-params)
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         "0 , 7855 30 9 149 ;"
         "149 , 7406 40 9 149 ;"
         "298 , 6500 50 9 149 ;"
         "447 , 7855 60 9 149 ;"
         "596 , 7238 70 9 149 ;"
         "745 , 7406 80 9 749 ;"
         "1494 , 7323 90 9 149 ;"
         "1643 , 7116 100 9 149 ;"
         "1792 , 7116 46 9 149 ;"
         "1941 , 7116 51 9 149 ;"
         "2090 , 7238 57 9 149 ;"
         "2239 , 7624 62 9 749 ;"
         "2988 , 7238 68 9 149 ;"
         "3137 , 6678 73 9 149 ;"
         "3286 , 7238 79 9 149 ;"
         "3435 , 6678 84 9 149 ;"
         "3584 , 7323 56 9 149 ;"
         "3733 , 7624 58 9 749 ;"
         "4482 , 7116 61 9 149 ;"
         "4631 , 6678 64 9 149 ;"
         "4780 , 7406 66 9 149 ;"
         "4929 , 6678 69 9 149 ;"
         "5078 , 7323 72 9 149 ;"
         "5227 , 7762 74 9 749 ;"
         "5976 , 7116 65 9 149 ;"
         "6125 , 6678 65 9 149 ;"
         "6274 , 7406 65 9 149 ;"
         "6423 , 6500 65 9 149 ;"
         "6572 , 7323 65 9 149 ;"
         "6721 , 7762 65 9 749 ;"
         "7470 , 7116 65 9 149 ;"
         "7619 , 6678 65 9 149 ;"
         "7768 , 7624 73 9 149 ;"
         "7917 , 6377 70 9 149 ;"
         "8066 , 7323 68 9 149 ;"
         "8215 , 7762 66 9 749 ;"
         "8964 , 6678 64 9 149 ;"
         "9113 , 6500 62 9 149 ;"
         "9262 , 7624 60 9 149 ;"
         "9411 , 6239 57 9 149 ;"
         "9560 , 7323 80 9 149 ;"
         "9709 , 7855 76 9 749 ;"
         "10458 , 6678 71 9 149 ;"
         "10607 , 6500 67 9 149 ;"
         "10756 , 7762 63 9 149 ;"
         "10905 , 6239 59 9 149 ;"
         "11054 , 7323 54 9 149 ;"
         "11203 , 7855 50 9 749 ;"
         "11952 , 6678 87 9 149 ;"
         "12101 , 6500 81 9 149 ;"
         "12250 , 7762 74 9 149 ;"
         "12399 , 6239 68 9 149 ;"
         "12548 , 7323 62 9 149 ;"
         "12697 , 7855 56 9 749 ;"
         "13446 , 6678 49 9 149 ;"
         "13595 , 6377 43 9 149 ;"
         "13744 , 7855 94 9 149 ;"
         "13893 , 5939 85 9 149 ;"
         "14042 , 7323 77 9 149 ;"
         "14191 , 7900 69 9 749 ;"
         "14940 , 6678 61 9 149 ;"
         "15089 , 6377 53 9 149 ;"
         "15238 , 7900 45 9 149 ;"
         "15387 , 5939 36 9 149 ;"
         "15536 , 7323 100 9 149 ;"
         "15685 , 7900 90 9 749 ;"
         "16434 , 6678 80 9 2999 ;"))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 39))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 604)
   (:y 3917/6)
   (:w 39)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 9)
   (:id 40))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 1365)
   (:y 106)
   (:w 61)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 5500)
   (:id 41))
  (:box
   (:type :function)
   (:reference om-round)
   (:group-id nil)
   (:name "om-round")
   (:x 74)
   (:y 590)
   (:w 136)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 1) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 42))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference mos-verify)
   (:group-id nil)
   (:name "mos-verify")
   (:x 1409)
   (:y 300)
   (:w 145)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MOS")
     (:value
      (:list
       1
       4/3
       16/9
       32/27
       128/81
       256/243
       1024/729
       4096/2187
       8192/6561
       32768/19683
       65536/59049
       262144/177147
       2))
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 43))
  (:comment
   (:x 265)
   (:y 13)
   (:w 202)
   (:h 28)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Georgia") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text "Construção do crivo")
   (:id 44))
  (:comment
   (:x 685)
   (:y 513)
   (:w 116)
   (:h 28)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 14) (:style :bold)))
   (:align nil)
   (:text "Contorno B")
   (:id 45))
  (:comment
   (:x 440)
   (:y 512)
   (:w 116)
   (:h 48)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 14) (:style :bold)))
   (:align nil)
   (:text
    "Contorno A
")
   (:id 46))
  (:comment
   (:x 640)
   (:y 918)
   (:w 734)
   (:h 32)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "1. Abra o patch YO.OMMicro - MICROTONALPLAYER.maxpat ")
   (:id 47))
  (:comment
   (:x 640)
   (:y 949)
   (:w 734)
   (:h 32)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "2. Clique no objeto play-om# e em sequencia em na letra \"v\" de seu teclado. ")
   (:id 48))
  (:comment
   (:x 642)
   (:y 982)
   (:w 840)
   (:h 32)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "3. Se não funcionar verifique se o Caps Lock (letra maiuscula) de seu computador está ativado.")
   (:id 49)))
 (:connections
  (:connection (:from (:box 5 :out 0)) (:to (:box 11 :in 3)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 31 :in 2)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 24 :in 2)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 11 :in 1)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 37 :in 0)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 38 :in 0))
   (:attributes (:color nil :style nil :modif (-79/421 0))))
  (:connection (:from (:box 12 :out 0)) (:to (:box 8 :in 1)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 22 :in 0))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 0.0 0.5019608 0.0 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 17 :in 1))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 0.0 0.5019608 0.0 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection (:from (:box 12 :out 1)) (:to (:box 43 :in 0)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 30 :in 0))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 1.0 0.0 0.5019608 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 17 :in 0))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 1.0 0.0 0.5019608 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 12 :in 2)))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 11 :in 2))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 1.0 0.0 0.0 1.0)) (:t-or-nil t))
     :style
     nil
     :modif
     (0 12/115))))
  (:connection
   (:from (:box 15 :out 1))
   (:to (:box 11 :in 4))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 0.0 0.0 0.5019608 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     (0 -0.45))))
  (:connection
   (:from (:box 16 :out 0))
   (:to (:box 21 :in 0))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 1.0 0.0 0.5019608 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 42 :in 0)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 21 :in 3)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 21 :in 2)))
  (:connection
   (:from (:box 20 :out 0))
   (:to (:box 21 :in 1))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 0.0 0.5019608 0.0 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     (0 -3/8))))
  (:connection (:from (:box 21 :out 0)) (:to (:box 15 :in 1)))
  (:connection
   (:from (:box 22 :out 0))
   (:to (:box 23 :in 1))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 0.0 0.5019608 0.0 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 23 :out 1))
   (:to (:box 20 :in 0))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 0.0 0.5019608 0.0 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection (:from (:box 24 :out 2)) (:to (:box 22 :in 1)))
  (:connection (:from (:box 25 :out 0)) (:to (:box 13 :in 2)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 13 :in 1)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 12 :in 1)))
  (:connection (:from (:box 28 :out 0)) (:to (:box 12 :in 0)))
  (:connection
   (:from (:box 29 :out 1))
   (:to (:box 16 :in 0))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 1.0 0.0 0.5019608 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 30 :out 0))
   (:to (:box 29 :in 1))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 1.0 0.0 0.5019608 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 31 :out 2))
   (:to (:box 30 :in 1))
   (:attributes (:color nil :style nil :modif (0 7/19))))
  (:connection (:from (:box 32 :out 0)) (:to (:box 13 :in 3)))
  (:connection
   (:from (:box 33 :out 1))
   (:to (:box 13 :in 0))
   (:attributes (:color nil :style nil :modif (0 -65/432))))
  (:connection (:from (:box 34 :out 0)) (:to (:box 33 :in 0)))
  (:connection (:from (:box 34 :out 1)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 34 :out 1)) (:to (:box 10 :in 0)))
  (:connection (:from (:box 35 :out 0)) (:to (:box 11 :in 6)))
  (:connection (:from (:box 38 :out 0)) (:to (:box 39 :in 0)))
  (:connection (:from (:box 40 :out 0)) (:to (:box 9 :in 0)))
  (:connection (:from (:box 41 :out 0)) (:to (:box 12 :in 3)))
  (:connection (:from (:box 42 :out 0)) (:to (:box 15 :in 0)))))