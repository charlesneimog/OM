
(:patch
 (:name "Trabalho de Composicao Algoritmica")
 (:doc "")
 (:info
  (:created "2020/09/21 13:25:14")
  (:modified "2020/12/07 12:40:51")
  (:by "om-sharp")
  (:version 1.01))
 (:window (:size (1942 1102)) (:position (-9 -9)))
 (:grid nil)
 (:lock t)
 (:boxes
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name "TEXTFILE")
   (:x 1412)
   (:y 45)
   (:w 377)
   (:h 122)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive t))
    (:input
     (:type :key)
     (:name "output-mode")
     (:value :list)
     (:reactive t)))
   (:outputs
    (:output (:name "SELF") (:reactive t))
    (:output (:name "CONTENTS") (:reactive t))
    (:output (:name "output-mode") (:reactive t)))
   (:window (:size (1920 448)) (:position (0 0)))
   (:edition-params (:output-mode :list))
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         "(1) (1 1) (3 1) (1 2 1) (1 -2 1) (1 1 1) (-1 1 -1) (1 (1 (1 1 1))) (1 (1 (1 -1 1))) (2 (3 (-1 1 2))) (2 (4 (-1 1 1 2))) "
         ""))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 0))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "Perfil")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1920 1026)) (:position (-9 -9)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 399)
       (:y 816)
       (:w 88)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 700)
       (:y 35)
       (:w 73)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 188)
       (:y 36)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:comment
       (:x 588)
       (:y 237)
       (:w 260)
       (:h 48)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 14) (:style :plain)))
       (:align nil)
       (:text "Esse patch varia o perfil aleatoriamente.")
       (:id 3))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 270)
       (:y 447)
       (:w 132)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :function)
       (:reference x->dx)
       (:group-id nil)
       (:name "x->dx")
       (:x 695)
       (:y 92)
       (:w 99)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value (:list 0 1))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference om-scale)
       (:group-id nil)
       (:name "om-scale")
       (:x 48)
       (:y 237)
       (:w 127)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux")
       (:x 75)
       (:y 193)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 7))
      (:box
       (:type :function)
       (:reference reverse)
       (:group-id nil)
       (:name "reverse")
       (:x 212)
       (:y 292)
       (:w 113)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 42)
       (:y 444)
       (:w 132)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:comment
       (:x 342)
       (:y 104)
       (:w 280)
       (:h 26)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "se o perfil Ã© mais aberto ou fechado")
       (:id 10))
      (:box
       (:type :function)
       (:reference om-scale)
       (:group-id nil)
       (:name "om-scale")
       (:x 112)
       (:y 370)
       (:w 127)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 144)
       (:y 335)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 3)
       (:id 12))
      (:box
       (:type :function)
       (:reference om/)
       (:group-id nil)
       (:name "om/")
       (:x 265)
       (:y 100)
       (:w 78)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 2)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 297)
       (:y 65)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 14))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 143)
       (:y 496)
       (:w 132)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 308)
       (:y 740)
       (:w 70)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :function)
       (:reference om-scale)
       (:group-id nil)
       (:name "om-scale")
       (:x 286)
       (:y 393)
       (:w 127)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 318)
       (:y 358)
       (:w 37)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6)
       (:id 18))
      (:box
       (:type :function)
       (:reference om-scale)
       (:group-id nil)
       (:name "om-scale")
       (:x 489)
       (:y 364)
       (:w 127)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 538)
       (:y 300)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 20))
      (:box
       (:type :function)
       (:reference om/)
       (:group-id nil)
       (:name "om/")
       (:x 496)
       (:y 242)
       (:w 78)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 2)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 21))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 541)
       (:y 197)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2)
       (:id 22))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 301)
       (:y 689)
       (:w 132)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lst?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 23))
      (:box
       (:type :function)
       (:reference om-scale)
       (:group-id nil)
       (:name "om-scale")
       (:x 632)
       (:y 597)
       (:w 284)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 24))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 663)
       (:y 539)
       (:w 155)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 25))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 681)
       (:y 504)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 26))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 759)
       (:y 471)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 5)
       (:id 27))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 818)
       (:y 505)
       (:w 155)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 4)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 28))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 836)
       (:y 470)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 8)
       (:id 29))
      (:box
       (:type :function)
       (:reference om-scale)
       (:group-id nil)
       (:name "om-scale")
       (:x 115)
       (:y 618)
       (:w 284)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 30))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 247)
       (:y 535)
       (:w 155)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 2)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 5)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 31))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 385)
       (:y 501)
       (:w 155)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 2)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 5)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 32))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 401)
       (:y 449)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 9)
       (:id 33))
      (:box
       (:type :function)
       (:reference om-scale)
       (:group-id nil)
       (:name "om-scale")
       (:x 509)
       (:y 758)
       (:w 127)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 34))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 541)
       (:y 704)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 35))
      (:box
       (:type :function)
       (:reference first-n)
       (:group-id nil)
       (:name "first-n")
       (:x 603)
       (:y 846)
       (:w 90)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "N")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 36))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 652)
       (:y 811)
       (:w 39)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 40)
       (:id 37)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 32 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 34 :in 2)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 28 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 15 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 1)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 11 :in 1)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 6 :in 2)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 11 :in 2)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 17 :in 2)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 21 :in 0)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 13 :in 1)))
      (:connection
       (:from (:box 15 :out 0))
       (:to (:box 24 :in 0))
       (:attributes (:color nil :style nil :modif (0 22/75))))
      (:connection (:from (:box 15 :out 0)) (:to (:box 30 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 34 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 17 :in 1)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 4 :in 1)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 19 :in 1)))
      (:connection (:from (:box 21 :out 0)) (:to (:box 19 :in 2)))
      (:connection (:from (:box 22 :out 0)) (:to (:box 21 :in 1)))
      (:connection (:from (:box 23 :out 0)) (:to (:box 16 :in 0)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 23 :in 1)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 23 :in 2)))
      (:connection (:from (:box 25 :out 0)) (:to (:box 24 :in 1)))
      (:connection (:from (:box 26 :out 0)) (:to (:box 25 :in 0)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 25 :in 1)))
      (:connection (:from (:box 28 :out 0)) (:to (:box 24 :in 2)))
      (:connection (:from (:box 29 :out 0)) (:to (:box 28 :in 0)))
      (:connection (:from (:box 30 :out 0)) (:to (:box 23 :in 0)))
      (:connection (:from (:box 31 :out 0)) (:to (:box 30 :in 1)))
      (:connection (:from (:box 32 :out 0)) (:to (:box 30 :in 2)))
      (:connection (:from (:box 33 :out 0)) (:to (:box 32 :in 0)))
      (:connection (:from (:box 34 :out 0)) (:to (:box 36 :in 0)))
      (:connection (:from (:box 35 :out 0)) (:to (:box 34 :in 1)))
      (:connection (:from (:box 36 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 37 :out 0)) (:to (:box 36 :in 1))))))
   (:group-id nil)
   (:name "Perfil")
   (:x 1187/10)
   (:y 318)
   (:w 200)
   (:h 87)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive t))
    (:input (:type :standard) (:name "in") (:value nil) (:reactive t)))
   (:outputs (:output (:name "output") (:reactive t)))
   (:id 1))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 17")
   (:x 783)
   (:y 532)
   (:w 43)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 20)
   (:id 2))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "padrao")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (500 699)) (:position (160 160)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 205)
       (:y 638)
       (:w 88)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 21)
       (:y 42)
       (:w 73)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 96)
       (:y 44)
       (:w 93)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "lispfunction")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (1183 628)) (:position (64 64)))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION for \"lispfunction\""
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           ""
           "(lambda (list) (let ((L()))"
           "    (loop for x from 0 to (1- (length list)) do"
           "          (when (not (equal (nth (+ x 1) list) (nth x list)))"
           "            (push (nth x list) L)))"
           "    (reverse L))))"))))
       (:group-id nil)
       (:name "lispfunction")
       (:x 47)
       (:y 402)
       (:w 152)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 184)
       (:y 560)
       (:w 70)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "OMLOOP")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (911 701)) (:position (128 128)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 12)
           (:y 6)
           (:w 73)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 214)
           (:y 592)
           (:w 107)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :function)
           (:reference flat)
           (:group-id nil)
           (:name "flat")
           (:x 239)
           (:y 237)
           (:w 70)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :function)
           (:reference om-round)
           (:group-id nil)
           (:name "om-round")
           (:x 333)
           (:y 152)
           (:w 136)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "N")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :special)
           (:reference repeat-n)
           (:group-id nil)
           (:name "repeat-n")
           (:x 281)
           (:y 199)
           (:w 130)
           (:h 28)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :left)
           (:lock nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "self")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "num")
             (:value 0)
             (:reactive nil)))
           (:outputs
            (:output (:name "collected results") (:reactive nil)))
           (:id 4))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux")
           (:x 410)
           (:y 36)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 5)
           (:id 5))
          (:box
           (:type :function)
           (:reference om/)
           (:group-id nil)
           (:name "om/")
           (:x 364)
           (:y 89)
           (:w 78)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 216)
           (:y 21)
           (:w 100)
           (:h 36)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :value)
           (:reference cons)
           (:group-id nil)
           (:name "list")
           (:x 199)
           (:y 152)
           (:w 112)
           (:h 36)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value (:list 4 3 1 4 2))
           (:id 8))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 151)
           (:y 460)
           (:w 84)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 9))
          (:box
           (:type :special)
           (:reference repeat-n)
           (:group-id nil)
           (:name "repeat-n")
           (:x 106)
           (:y 361)
           (:w 130)
           (:h 28)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :left)
           (:lock nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "self")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "num")
             (:value 0)
             (:reactive nil)))
           (:outputs
            (:output (:name "collected results") (:reactive nil)))
           (:id 10))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 114)
           (:y 592)
           (:w 88)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 11))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 159)
           (:y 289)
           (:w 101)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 12))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 87)
           (:y 74)
           (:w 101)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 13)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 0 :out 0)) (:to (:box 13 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 12 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 1)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 1)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 11 :in 0)))
          (:connection (:from (:box 9 :out 1)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 10 :in 1)))
          (:connection
           (:from (:box 13 :out 0))
           (:to (:box 10 :in 0))))))
       (:group-id nil)
       (:name "OMLOOP")
       (:x 161)
       (:y 483)
       (:w 125)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference reverse)
       (:group-id nil)
       (:name "reverse")
       (:x 313)
       (:y 205)
       (:w 113)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 337)
       (:y 62)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 7))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 223)
       (:y 16)
       (:w 155)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference om=)
       (:group-id nil)
       (:name "om=")
       (:x 270)
       (:y 123)
       (:w 85)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NUM1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NUM2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :special)
       (:reference if)
       (:group-id nil)
       (:name "IF")
       (:x 170)
       (:y 270)
       (:w 62)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TEST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "THEN")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "else")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 81)
       (:y 331)
       (:w 70)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux")
       (:x 300)
       (:y 278)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 12)
       (:id 12))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 214)
       (:y 329)
       (:w 130)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 13))
      (:box
       (:type :function)
       (:reference first-n)
       (:group-id nil)
       (:name "first-n")
       (:x 87)
       (:y 144)
       (:w 97)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "N")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 14 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 10 :in 2)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 13 :in 1)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 10 :in 1))))))
   (:group-id nil)
   (:name "padrao")
   (:x 716)
   (:y 576)
   (:w 128)
   (:h 58)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "output") (:reactive t)))
   (:id 3))
  (:box
   (:type :function)
   (:reference om-scale)
   (:group-id nil)
   (:name "om-scale")
   (:x 1138)
   (:y 91)
   (:w 127)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "SELF") (:value 1) (:reactive t))
    (:input
     (:type :standard)
     (:name "MINOUT")
     (:value 0)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "MAXOUT")
     (:value 0)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 4))
  (:box
   (:type :function)
   (:reference om-round)
   (:group-id nil)
   (:name "om-round")
   (:x 1140)
   (:y 148)
   (:w 136)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 1) (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 5))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 2")
   (:x 1610)
   (:y 211)
   (:w 86)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 5 4)))
   (:id 6))
  (:box
   (:type :function)
   (:reference sort-list)
   (:group-id nil)
   (:name "sort-list")
   (:x 978)
   (:y 641)
   (:w 114)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 7))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference choose)
   (:group-id nil)
   (:name "choose")
   (:x 716)
   (:y 725)
   (:w 107)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list (:list 6000 6530) (:list 7203 5049)))
     (:reactive t))
    (:input
     (:type :standard)
     (:name "CHORD-N")
     (:value (:list 2))
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 8))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "diamante")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1400 736)) (:position (96 96)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 479)
       (:y 650)
       (:w 88)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "Lista de Razoes")
         (:doc "")))
       (:group-id nil)
       (:name "Lista de Razoes")
       (:x 676)
       (:y 47)
       (:w 178)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "nota de referencia da AfinaÃ§Ã£o Justa")
         (:doc "")))
       (:group-id nil)
       (:name "nota de referencia da AfinaÃ§Ã£o Justa")
       (:x 226)
       (:y 33)
       (:w 389)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 3) (:name "nota grave") (:doc "")))
       (:group-id nil)
       (:name "nota grave")
       (:x 8)
       (:y 410)
       (:w 130)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 4)
         (:name "nota mais aguda")
         (:doc "")))
       (:group-id nil)
       (:name "nota mais aguda")
       (:x 170)
       (:y 418)
       (:w 189)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference rt->mc)
       (:group-id nil)
       (:name "rt->mc")
       (:x 532)
       (:y 158)
       (:w 109)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value 11/8)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FUNDAMENTAL")
         (:value 6000)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference om+)
       (:group-id nil)
       (:name "om+")
       (:x 691)
       (:y 343)
       (:w 85)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 1200)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 737)
       (:y 295)
       (:w 56)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2400)
       (:id 7))
      (:comment
       (:x 797)
       (:y 298)
       (:w 197)
       (:h 26)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "acrescimo de uma oitava")
       (:id 8))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 522)
       (:y 410)
       (:w 132)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:comment
       (:x 855)
       (:y 151)
       (:w 197)
       (:h 26)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "acrescimo de uma oitava")
       (:id 10))
      (:comment
       (:x 340)
       (:y 242)
       (:w 119)
       (:h 44)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "Temperamento ")
       (:id 11))
      (:comment
       (:x 308)
       (:y 189)
       (:w 178)
       (:h 26)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "aproximacao em cents")
       (:id 12))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference range-reduce)
       (:group-id nil)
       (:name "range-reduce")
       (:x 90)
       (:y 508)
       (:w 172)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 4800 7200 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GRAVE")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "AGUDA")
         (:value 7902)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux")
       (:x 608)
       (:y 293)
       (:w 56)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1200)
       (:id 14))
      (:box
       (:type :function)
       (:reference om+)
       (:group-id nil)
       (:name "om+")
       (:x 577)
       (:y 329)
       (:w 85)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 1200)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 551)
       (:y 215)
       (:w 70)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference filter-ac-inst)
       (:group-id nil)
       (:name "filter-ac-inst")
       (:x 219)
       (:y 286)
       (:w 160)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 6000 6530 7203 5049))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "APPROX")
         (:value 10)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEMPERAMENT")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 11")
       (:x 268)
       (:y 186)
       (:w 37)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 10)
       (:id 18))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 12")
       (:x 313)
       (:y 236)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 4)
       (:id 19))
      (:box
       (:type :function)
       (:reference remove-dup)
       (:group-id nil)
       (:name "remove-dup")
       (:x 444)
       (:y 600)
       (:w 160)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value (:list 1 2 3 4))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEST")
         (:value eq)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DEPTH")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 20))
      (:box
       (:type :function)
       (:reference om-round)
       (:group-id nil)
       (:name "om-round")
       (:x 406)
       (:y 556)
       (:w 136)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 21))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference rt-octave)
       (:group-id nil)
       (:name "rt-octave")
       (:x 736)
       (:y 146)
       (:w 115)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FRAQ")
         (:value 3/2)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "octave")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 22))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 796)
       (:y 111)
       (:w 32)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2)
       (:id 23))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference range-reduce)
       (:group-id nil)
       (:name "range-reduce")
       (:x 810)
       (:y 433)
       (:w 152)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 4800 7200 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GRAVE")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "AGUDA")
         (:value 7902)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 24))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 856)
       (:y 398)
       (:w 61)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 7900)
       (:id 25))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 930)
       (:y 398)
       (:w 61)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 9100)
       (:id 26)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 22 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 5 :in 1)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 13 :in 1))
       (:attributes
        (:color (:color 0.0S0 1.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 13 :in 2))
       (:attributes
        (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 16 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 24 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 1)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 17 :in 0))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 15 :in 1)))
      (:connection
       (:from (:box 15 :out 0))
       (:to (:box 9 :in 1))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 0)))
      (:connection
       (:from (:box 16 :out 0))
       (:to (:box 6 :in 0))
       (:attributes (:color nil :style nil :modif (0 -25/102))))
      (:connection (:from (:box 16 :out 0)) (:to (:box 9 :in 0)))
      (:connection
       (:from (:box 17 :out 0))
       (:to (:box 21 :in 0))
       (:attributes (:color nil :style nil :modif (0 -21/61))))
      (:connection
       (:from (:box 18 :out 0))
       (:to (:box 17 :in 1))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 19 :out 0))
       (:to (:box 17 :in 2))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 21 :out 0)) (:to (:box 20 :in 0)))
      (:connection (:from (:box 22 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 23 :out 0)) (:to (:box 22 :in 1)))
      (:connection (:from (:box 25 :out 0)) (:to (:box 24 :in 1)))
      (:connection (:from (:box 26 :out 0)) (:to (:box 24 :in 2))))))
   (:group-id nil)
   (:name "diamante")
   (:x 5539/6)
   (:y 403)
   (:w 200)
   (:h 103)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "Lista de Razoes")
     (:value nil)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "nota de referencia da AfinaÃ§Ã£o Justa")
     (:value nil)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "nota grave")
     (:value nil)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "nota mais aguda")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "output") (:reactive t)))
   (:id 9))
  (:box
   (:type :function)
   (:reference maketreegroups)
   (:group-id nil)
   (:name "maketreegroups")
   (:x 1514)
   (:y 256)
   (:w 202)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FIGURES")
     (:value
      (:list (:list 1 1 1) (:list 1 2 1) (:list 3 4) (:list 1 1 1 1)))
     (:reactive t))
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value (:list 0 3 0 2 0 1 0 0 3))
     (:reactive t))
    (:input
     (:type :standard)
     (:name "MEASURES")
     (:value (:list (:list 4 4)))
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 10))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 15")
   (:x 1103)
   (:y 342)
   (:w 69)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 7200)
   (:id 11))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 9")
   (:x 1035)
   (:y 342)
   (:w 69)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6000)
   (:id 12))
  (:box
   (:type :object)
   (:reference voice)
   (:group-id nil)
   (:name "VOICE 2")
   (:x 1272)
   (:y 339)
   (:w 569)
   (:h 124)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "TREE")
     (:value (:list ? (:list (:list (:list 4 4) (:list 1 1 1 1)))))
     (:reactive t))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value
      (:list
       (:object
        (:class chord)
        (:slots
         ((:symbolic-date nil)
          (:symbolic-dur nil)
          (:symbolic-dur-extent 0)
          (:extras nil)
          (:onset 0)
          (:item-time nil)
          (:item-internal-time nil)
          (:item-type nil)
          (:attributes nil)
          (:lmidic (:list 6000))
          (:lvel (:list 100))
          (:loffset (:list 0))
          (:ldur (:list 1000))
          (:lchan (:list 1))
          (:lport (:list nil)))))))
     (:reactive t))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 80)
     (:reactive t)))
   (:outputs
    (:output (:name "SELF") (:reactive t))
    (:output (:name "TREE") (:reactive t))
    (:output (:name "LMIDIC") (:reactive t))
    (:output (:name "TEMPO") (:reactive t)))
   (:window (:size nil) (:position nil))
   (:edition-params
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 7.5)
      (:list 750 13.0)
      (:list 938 16.625)
      (:list 1312 20.875)
      (:list 1500 24.5)
      (:list 1875 28.75)
      (:list 2000 32.166665)
      (:list 2125 35.583332)
      (:list 2250 39.0)
      (:list 3000 44.5)
      (:list 3250 48.333332)
      (:list 3500 52.166665)
      (:list 3750 61.999997)
      (:list 3938 65.125)
      (:list 4312 69.875)
      (:list 4500 73.5)
      (:list 5250 79.0)
      (:list 6000 84.5)
      (:list 6375 88.75)
      (:list 6750 93.0)
      (:list 7500 104.5)
      (:list 7875 108.75)
      (:list 8250 113.0)
      (:list 8625 117.25)
      (:list 9000 121.0)))
    (:staff :empty))
   (:value
    (:object
     (:class voice)
     (:slots
      ((:onset 0)
       (:duration 8999)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "VOICE 2")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:tree
        (:list
         3
         (:list
          (:list
           (:list 5 4)
           (:list
            1
            (:list 1 (:list 1 2 1))
            (:list 1 (:list 1 (:list 1 (:list 1 1 1))))
            1
            (:list 1 (:list 1 1 1))))
          (:list
           (:list 5 4)
           (:list
            (:list 1 (:list 1 -2 1))
            1
            1
            (:list 1 (:list 1 1))
            1))
          (:list
           (:list 5 4)
           (:list (:list 1 (:list 1 1)) (:list 1 (:list 1 1)) -3)))))
       (:lmidic (:list 6000))
       (:lonset
        (:list
         0
         750
         938
         1312
         1500
         1875
         2000
         2125
         2250
         3000
         3250
         3500
         3750
         4312
         4500
         5250
         6000
         6375
         6750
         7500
         7875
         8250
         8625
         11250))
       (:ldur
        (:list
         (:list 749)
         (:list 187)
         (:list 373)
         (:list 187)
         (:list 374)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 749)
         (:list 249)
         (:list 249)
         (:list 249)
         (:list 187)
         (:list 187)
         (:list 749)
         (:list 749)
         (:list 374)
         (:list 374)
         (:list 749)
         (:list 374)
         (:list 374)
         (:list 374)
         (:list 374)))
       (:lvel (:list 100))
       (:loffset (:list 0))
       (:lchan (:list 1))
       (:lport (:list nil))
       (:llegato nil)
       (:tempo 80)))))
   (:id 13))
  (:box
   (:type :object)
   (:reference bpf)
   (:group-id nil)
   (:name "BPF")
   (:x 19)
   (:y 438)
   (:w 687)
   (:h 155)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 100))
     (:reactive t))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive t))
    (:input (:type :key) (:name "decimals") (:value 0) (:reactive t)))
   (:outputs
    (:output (:name "SELF") (:reactive t))
    (:output (:name "X-POINTS") (:reactive t))
    (:output (:name "Y-POINTS") (:reactive t))
    (:output (:name "decimals") (:reactive t)))
   (:window (:size (581 400)) (:position (192 192)))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 3900)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.0S0 0.0S0 0.0S0 1.0))
       (:decimals 0)
       (:x-points
        (:list
         0
         100
         200
         300
         400
         500
         600
         700
         800
         900
         1000
         1100
         1200
         1300
         1400
         1500
         1600
         1700
         1800
         1900
         2000
         2100
         2200
         2300
         2400
         2500
         2600
         2700
         2800
         2900
         3000
         3100
         3200
         3300
         3400
         3500
         3600
         3700
         3800
         3900))
       (:y-points
        (:list
         2
         2
         8
         1
         4
         6
         3
         8
         3
         4
         7
         6
         8
         6
         6
         2
         1
         4
         1
         2
         3
         2
         7
         2
         4
         5
         3
         7
         4
         4
         6
         6
         7
         6
         6
         3
         2
         4
         2
         2))))
     (:add-slots ((:name "BPF")))))
   (:id 14))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 14")
   (:x 906)
   (:y 599)
   (:w 56)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 90)
   (:id 15))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 13")
   (:x 865)
   (:y 599)
   (:w 43)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 20)
   (:id 16))
  (:box
   (:type :function)
   (:reference om-scale)
   (:group-id nil)
   (:name "om-scale")
   (:x 807)
   (:y 645)
   (:w 168)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "SELF") (:value 1) (:reactive t))
    (:input
     (:type :standard)
     (:name "MINOUT")
     (:value 0)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "MAXOUT")
     (:value 0)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 17))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 3")
   (:x 965)
   (:y 343)
   (:w 69)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6000)
   (:id 18))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference choose)
   (:group-id nil)
   (:name "choose")
   (:x 905)
   (:y 279)
   (:w 107)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list (:list 6000 6530) (:list 7203 5049)))
     (:reactive t))
    (:input
     (:type :standard)
     (:name "CHORD-N")
     (:value (:list 2))
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 19))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference diamond-identity)
   (:group-id nil)
   (:name "diamond-identity")
   (:x 760)
   (:y 205)
   (:w 209)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "IDENTITY")
     (:value (:list 11 19 97))
     (:reactive t)))
   (:outputs
    (:output (:name "out0") (:reactive t))
    (:output (:name "out1") (:reactive t)))
   (:id 20))
  (:box
   (:type :function)
   (:reference length)
   (:group-id nil)
   (:name "length")
   (:x 479)
   (:y 326)
   (:w 100)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 21))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 967)
   (:y 239)
   (:w 32)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6)
   (:id 22))
  (:box
   (:type :function)
   (:reference flat)
   (:group-id nil)
   (:name "flat")
   (:x 891)
   (:y 344)
   (:w 70)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 23))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference play-om\#)
   (:group-id nil)
   (:name "play-om#")
   (:x 128)
   (:y 968)
   (:w 136)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICE")
     (:value (:list nil))
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 24))
  (:box
   (:type :function)
   (:reference om-scale)
   (:group-id nil)
   (:name "om-scale")
   (:x 108)
   (:y 699)
   (:w 127)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "SELF") (:value 1) (:reactive t))
    (:input
     (:type :standard)
     (:name "MINOUT")
     (:value 0)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "MAXOUT")
     (:value 1)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 25))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 150)
   (:y 659)
   (:w 32)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 26))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 180)
   (:y 659)
   (:w 43)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 27))
  (:box
   (:type :function)
   (:reference om-round)
   (:group-id nil)
   (:name "om-round")
   (:x 98)
   (:y 738)
   (:w 136)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 1) (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 28))
  (:box
   (:type :object)
   (:reference voice)
   (:group-id nil)
   (:name nil)
   (:x 80)
   (:y 791)
   (:w 1580)
   (:h 149)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "TREE")
     (:value (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
     (:reactive t))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list (:list 6000)))
     (:reactive t))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 80)
     (:reactive t))
    (:input (:type :key) (:name "lvel") (:value 100) (:reactive t))
    (:input (:type :key) (:name "loffset") (:value 0) (:reactive t))
    (:input (:type :key) (:name "lchan") (:value 1) (:reactive t)))
   (:outputs
    (:output (:name "SELF") (:reactive t))
    (:output (:name "TREE") (:reactive t))
    (:output (:name "LMIDIC") (:reactive t))
    (:output (:name "TEMPO") (:reactive t))
    (:output (:name "lvel") (:reactive t))
    (:output (:name "loffset") (:reactive t))
    (:output (:name "lchan") (:reactive t)))
   (:window (:size (1924 1030)) (:position (-9 -9)))
   (:edition-params
    (:font-size 36)
    (:scale :scale-1/8)
    (:velocity-display :symbol)
    (:channel-display :hidden)
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 8.3)
      (:list 1000 14.6)
      (:list 1250 19.025)
      (:list 1750 23.275)
      (:list 2000 27.699999)
      (:list 2500 32.75)
      (:list 2667 36.166668)
      (:list 2833 40.383336)
      (:list 3000 43.800003)
      (:list 4000 49.300003)
      (:list 4333 53.133336)
      (:list 4667 56.966668)
      (:list 5000 67.6)
      (:list 5250 70.725)
      (:list 5750 75.475)
      (:list 6000 79.1)
      (:list 7000 85.4)
      (:list 8000 90.9)
      (:list 8500 95.15)
      (:list 9000 99.4)
      (:list 10000 111.700005)
      (:list 10500 116.75001)
      (:list 11000 121.80001)
      (:list 11500 126.85001)
      (:list 12000 130.6))))
   (:value
    (:object
     (:class voice)
     (:slots
      ((:onset 0)
       (:duration 11999)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name nil)
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:tree
        (:list
         3
         (:list
          (:list
           (:list 5 4)
           (:list
            1
            (:list 1 (:list 1 2 1))
            (:list 1 (:list 1 (:list 1 (:list 1 1 1))))
            1
            (:list 1 (:list 1 1 1))))
          (:list
           (:list 5 4)
           (:list
            (:list 1 (:list 1 -2 1))
            1
            1
            (:list 1 (:list 1 1))
            1))
          (:list
           (:list 5 4)
           (:list (:list 1 (:list 1 1)) (:list 1 (:list 1 1)) -3)))))
       (:lmidic
        (:list
         (:list 6592)
         (:list 6592)
         (:list 7792)
         (:list 6449)
         (:list 7494)
         (:list 7494)
         (:list 7200)
         (:list 7792)
         (:list 7200)
         (:list 7200)
         (:list 7649)
         (:list 7649)
         (:list 7792)
         (:list 7649)
         (:list 7649)
         (:list 6592)
         (:list 6449)
         (:list 7200)
         (:list 6449)
         (:list 6592)
         (:list 6294)
         (:list 6294)
         (:list 7792)))
       (:lonset
        (:list
         0
         1000
         1250
         1750
         2000
         2500
         2667
         2833
         3000
         4000
         4333
         4667
         5000
         5750
         6000
         7000
         8000
         8500
         9000
         10000
         10500
         11000
         11500
         15000))
       (:ldur
        (:list
         (:list 999)
         (:list 249)
         (:list 499)
         (:list 249)
         (:list 499)
         (:list 166)
         (:list 165)
         (:list 166)
         (:list 999)
         (:list 332)
         (:list 333)
         (:list 332)
         (:list 249)
         (:list 249)
         (:list 999)
         (:list 999)
         (:list 499)
         (:list 499)
         (:list 999)
         (:list 499)
         (:list 499)
         (:list 499)
         (:list 499)))
       (:lvel
        (:list
         (:list 20)
         (:list 20)
         (:list 20)
         (:list 20)
         (:list 55)
         (:list 55)
         (:list 55)
         (:list 20)
         (:list 38)
         (:list 38)
         (:list 38)
         (:list 38)
         (:list 73)
         (:list 73)
         (:list 90)
         (:list 90)
         (:list 90)
         (:list 90)
         (:list 73)
         (:list 73)
         (:list 73)
         (:list 55)
         (:list 38)))
       (:loffset (:list 0))
       (:lchan
        (:list
         (:list 1)
         (:list 1)
         (:list 4)
         (:list 1)
         (:list 2)
         (:list 3)
         (:list 2)
         (:list 4)
         (:list 2)
         (:list 2)
         (:list 4)
         (:list 3)
         (:list 4)
         (:list 3)
         (:list 3)
         (:list 1)
         (:list 1)
         (:list 2)
         (:list 1)
         (:list 1)
         (:list 2)
         (:list 1)
         (:list 4)))
       (:lport (:list nil))
       (:llegato nil)
       (:tempo 60)))))
   (:id 29))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 837)
   (:y 726)
   (:w 56)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 60)
   (:id 30))
  (:box
   (:type :function)
   (:reference om-round)
   (:group-id nil)
   (:name "om-round")
   (:x 949)
   (:y 731)
   (:w 136)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 1) (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 31))
  (:comment
   (:x 243)
   (:y 706)
   (:w 126)
   (:h 23)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Canal Midi")
   (:id 32))
  (:box
   (:type :function)
   (:reference reverse)
   (:group-id nil)
   (:name "reverse")
   (:x 1290)
   (:y 197)
   (:w 101)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 33))
  (:box
   (:type :function)
   (:reference n-pulses)
   (:group-id nil)
   (:name "n-pulses")
   (:x 1291)
   (:y 472)
   (:w 110)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "TREE")
     (:value
      (:list
       ?
       (:list
        (:list (:list 4 4) (:list 1 (:list 1 (:list 1 2 1 1)) 1 1))
        (:list (:list 4 4) (:list 1 (:list 1 (:list 1 2 1 1)) -1 1)))))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 34))
  (:box
   (:type :function)
   (:reference x-append)
   (:group-id nil)
   (:name "x-append")
   (:x 1163)
   (:y 265)
   (:w 118)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "L1?") (:value nil) (:reactive t))
    (:input
     (:type :standard)
     (:name "L2?")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 35))
  (:box
   (:type :function)
   (:reference om-random)
   (:group-id nil)
   (:name "om-random")
   (:x 1074)
   (:y 23)
   (:w 137)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "LOW") (:value 0) (:reactive t))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 10)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 36))
  (:box
   (:type :function)
   (:reference om-random)
   (:group-id nil)
   (:name "om-random")
   (:x 1215)
   (:y 25)
   (:w 137)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "LOW") (:value 0) (:reactive t))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 10)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 37))
  (:box
   (:type :function)
   (:reference osc-receive)
   (:group-id nil)
   (:name "osc-receive")
   (:x 40)
   (:y 57)
   (:w 135)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "PORT")
     (:value 3000)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "MSG-PROCESSING")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 38))
  (:box
   (:type :function)
   (:reference x->dx)
   (:group-id nil)
   (:name "x->dx")
   (:x 351)
   (:y 258)
   (:w 90)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "SELF") (:value 0) (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 39))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 44)
   (:y 22)
   (:w 61)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3002)
   (:id 40))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "my-patch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (370 365)) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 188)
       (:y 100)
       (:w 66)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value 1)
         (:reactive t))
        (:input
         (:type :optional)
         (:name "level")
         (:value nil)
         (:reactive t)))
       (:outputs (:output (:name "out") (:reactive t)))
       (:id 0))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 209)
       (:y 65)
       (:w 38)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 1))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 50)
       (:y 78)
       (:w 92)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive t)))
       (:outputs (:output (:name "out") (:reactive t)))
       (:id 2))
      (:box
       (:type :function)
       (:reference om-)
       (:group-id nil)
       (:name "om-")
       (:x 84)
       (:y 119)
       (:w 72)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 1)
         (:reactive t))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 1)
         (:reactive t)))
       (:outputs (:output (:name "out") (:reactive t)))
       (:id 3))
      (:box
       (:type :function)
       (:reference last-n)
       (:group-id nil)
       (:name "last-n")
       (:x 147)
       (:y 162)
       (:w 87)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive t))
        (:input
         (:type :standard)
         (:name "N")
         (:value 0)
         (:reactive t)))
       (:outputs (:output (:name "out") (:reactive t)))
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 188)
       (:y 50)
       (:w 82)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 147)
       (:y 223)
       (:w 94)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 6)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 0 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 0 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 1)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 6 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 0 :in 0))
       (:attributes
        (:color
         (:color 0.2 0.4 0.5 1.0)
         :style
         :curved
         :modif
         nil))))))
   (:group-id nil)
   (:name "my-patch")
   (:x 73)
   (:y 119)
   (:w 119)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "output 1") (:reactive t)))
   (:id 41)))
 (:connections
  (:connection (:from (:box 0 :out 1)) (:to (:box 10 :in 0)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 14 :in 2)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 1)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 17 :in 0)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 33 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 35 :in 0)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 10 :in 2)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 8 :in 0))
   (:attributes
    (:color
     (:color 1.0S0 0.6470585S0 0.0S0 1.0)
     :style
     nil
     :modif
     (0 41/98))))
  (:connection (:from (:box 8 :out 0)) (:to (:box 29 :in 2)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 7 :in 0)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 21 :in 0))
   (:attributes
    (:color nil :style nil :modif (-47250252/706024397 0))))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 13 :in 1))
   (:attributes
    (:color
     (:color 0.62745095S0 0.12549019S0 0.94117356S0 1.0)
     :style
     nil
     :modif
     nil)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 9 :in 3)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 9 :in 2)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 34 :in 0)))
  (:connection
   (:from (:box 13 :out 1))
   (:to (:box 29 :in 1))
   (:attributes (:color nil :style nil :modif (0 81/296))))
  (:connection
   (:from (:box 14 :out 2))
   (:to (:box 3 :in 0))
   (:attributes (:color nil :style nil :modif (6377/16830 0))))
  (:connection (:from (:box 14 :out 2)) (:to (:box 8 :in 1)))
  (:connection (:from (:box 14 :out 2)) (:to (:box 25 :in 0)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 17 :in 2)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 17 :in 1)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 31 :in 0)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 9 :in 1)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 23 :in 0)))
  (:connection (:from (:box 20 :out 1)) (:to (:box 19 :in 0)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 1 :in 1)))
  (:connection (:from (:box 22 :out 0)) (:to (:box 19 :in 1)))
  (:connection (:from (:box 23 :out 0)) (:to (:box 9 :in 0)))
  (:connection (:from (:box 25 :out 0)) (:to (:box 28 :in 0)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 25 :in 1)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 25 :in 2)))
  (:connection (:from (:box 28 :out 0)) (:to (:box 29 :in 6)))
  (:connection (:from (:box 29 :out 0)) (:to (:box 24 :in 0)))
  (:connection (:from (:box 30 :out 0)) (:to (:box 29 :in 3)))
  (:connection (:from (:box 31 :out 0)) (:to (:box 29 :in 4)))
  (:connection (:from (:box 33 :out 0)) (:to (:box 35 :in 1)))
  (:connection (:from (:box 35 :out 0)) (:to (:box 10 :in 1)))
  (:connection (:from (:box 36 :out 0)) (:to (:box 4 :in 1)))
  (:connection (:from (:box 37 :out 0)) (:to (:box 4 :in 2)))
  (:connection
   (:from (:box 38 :out 0))
   (:to (:box 41 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 39 :out 0))
   (:to (:box 4 :in 0))
   (:attributes (:color nil :style nil :modif (-11/45 0))))
  (:connection (:from (:box 39 :out 0)) (:to (:box 1 :in 0)))
  (:connection (:from (:box 40 :out 0)) (:to (:box 38 :in 0)))
  (:connection
   (:from (:box 41 :out 0))
   (:to (:box 39 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 41 :out 0))
   (:to (:box 20 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))))