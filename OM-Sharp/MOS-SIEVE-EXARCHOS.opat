
(:patch
 (:name "MOS-SIEVE-EXARCHOS")
 (:doc "")
 (:info
  (:created "2020/10/28 15:16:49")
  (:modified "2020/10/29 0:08:43")
  (:by "om-sharp")
  (:version 1.01))
 (:window (:size (1920 1026)) (:position (-9 -9)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:library "OM-Sieves")
   (:type :function)
   (:reference s-limite)
   (:group-id nil)
   (:name "s-limite")
   (:x 244)
   (:y 120)
   (:w 102)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SIEVE-L")
     (:value (:list (:list 19 16) (:list 11 16)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIMITE")
     (:value 225)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MODO")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 88)
   (:y 76)
   (:w 169)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 5 16) (:list 7 16)))
   (:id 1))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 270)
   (:y 75)
   (:w 50)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 51)
   (:id 2))
  (:box
   (:library "OM-Sieves")
   (:type :function)
   (:reference revel-sieve)
   (:group-id nil)
   (:name "revel-sieve")
   (:x 229)
   (:y 173)
   (:w 132)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference interval-sob)
   (:group-id nil)
   (:name "interval-sob")
   (:x 261)
   (:y 485)
   (:w 140)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SIEVE")
     (:value (:list 2 3 7 11 12))
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 4))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "value box")
   (:x 270)
   (:y 450)
   (:w 69)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 19/11)
   (:id 5))
  (:box
   (:type :function)
   (:reference first)
   (:group-id nil)
   (:name "first")
   (:x 311)
   (:y 248)
   (:w 72)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:type :function)
   (:reference x->dx)
   (:group-id nil)
   (:name "x->dx")
   (:x 415)
   (:y 246)
   (:w 90)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:type :function)
   (:reference om*)
   (:group-id nil)
   (:name "om*")
   (:x 418)
   (:y 284)
   (:w 158)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ARG1")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:type :function)
   (:reference dx->x)
   (:group-id nil)
   (:name "dx->x")
   (:x 374)
   (:y 357)
   (:w 114)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "START")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value (:list 1 1))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "value box")
   (:x 512)
   (:y 249)
   (:w 57)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0.3)
   (:id 10))
  (:box
   (:type :function)
   (:reference om-round)
   (:group-id nil)
   (:name "om-round")
   (:x 371)
   (:y 399)
   (:w 121)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 1) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt->mc)
   (:group-id nil)
   (:name "rt->mc")
   (:x 299)
   (:y 616)
   (:w 99)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FUNDAMENTAL")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 356)
   (:y 568)
   (:w 80)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value -10700)
   (:id 13))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name nil)
   (:x 97)
   (:y 671)
   (:w 617)
   (:h 216)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list (:list 6000)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list (:list 1000)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value 100)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil)))
   (:window (:size (938 553)) (:position (256 256)))
   (:edition-params (:scale :scale-1/8) (:staff :ggff))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 12000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name nil)
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:lmidic
        (:list
         (:list 4439)
         (:list 6332)
         (:list 6332)
         (:list 7278)
         (:list 8224)
         (:list 9170)
         (:list 10116)
         (:list 10116)
         (:list 12009)
         (:list 12009)
         (:list 12955)
         (:list 14847)))
       (:lonset
        (:list
         0
         1000
         2000
         3000
         4000
         5000
         6000
         7000
         8000
         9000
         10000
         11000
         12000))
       (:ldur (:list 1000))
       (:lvel (:list 100))
       (:loffset (:list 0))
       (:lchan (:list 1))
       (:lport (:list nil))
       (:llegato nil)))))
   (:id 14))
  (:box
   (:type :function)
   (:reference om-round)
   (:group-id nil)
   (:name "om-round")
   (:x 221)
   (:y 887)
   (:w 121)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 1) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:type :function)
   (:reference flat)
   (:group-id nil)
   (:name "flat")
   (:x 397)
   (:y 898)
   (:w 66)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "value box")
   (:x 50)
   (:y 303)
   (:w 68)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 19/11)
   (:id 17))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 120)
   (:y 301)
   (:w 61)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6000)
   (:id 18))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 183)
   (:y 297)
   (:w 61)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 9600)
   (:id 19))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference mos)
   (:group-id nil)
   (:name "mos")
   (:x 95)
   (:y 394)
   (:w 170)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 4/3)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "GRAVE")
     (:value 6000)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "AGUDA")
     (:value 7200)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOBREPOSITION")
     (:value 11)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 20))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 221)
   (:y 359)
   (:w 39)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 40)
   (:id 21))
  (:box
   (:type :function)
   (:reference sort-list)
   (:group-id nil)
   (:name "sort-list")
   (:x 98)
   (:y 456)
   (:w 103)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:box
   (:type :function)
   (:reference x->dx)
   (:group-id nil)
   (:name "x->dx")
   (:x 105)
   (:y 506)
   (:w 90)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 23))
  (:box
   (:type :function)
   (:reference om^)
   (:group-id nil)
   (:name "om^")
   (:x 601)
   (:y 110)
   (:w 78)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "A") (:value 1) (:reactive nil))
    (:input (:type :standard) (:name "B") (:value 1) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 24))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "value box")
   (:x 589)
   (:y 55)
   (:w 68)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 19/11)
   (:id 25))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt->mc)
   (:group-id nil)
   (:name "rt->mc")
   (:x 686)
   (:y 197)
   (:w 99)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FUNDAMENTAL")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 26))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 728)
   (:y 162)
   (:w 61)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6000)
   (:id 27))
  (:box
   (:type :function)
   (:reference arithm-ser)
   (:group-id nil)
   (:name "arithm-ser")
   (:x 670)
   (:y 68)
   (:w 128)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "BEGIN")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "END")
     (:value 10)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "STEP")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 28))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 677)
   (:y 33)
   (:w 32)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 29))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 749)
   (:y 33)
   (:w 32)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 30))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 709)
   (:y 33)
   (:w 40)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 51)
   (:id 31))
  (:box
   (:type :function)
   (:reference om/)
   (:group-id nil)
   (:name "om/")
   (:x 956)
   (:y 371)
   (:w 73)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ARG1")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value 1200)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 32))
  (:box
   (:type :function)
   (:reference first)
   (:group-id nil)
   (:name "first")
   (:x 883)
   (:y 243)
   (:w 72)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 33))
  (:box
   (:type :function)
   (:reference last-elem)
   (:group-id nil)
   (:name "last-elem")
   (:x 957)
   (:y 240)
   (:w 117)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 34))
  (:box
   (:type :function)
   (:reference om-)
   (:group-id nil)
   (:name "om-")
   (:x 941)
   (:y 310)
   (:w 72)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ARG1")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 35))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference range-reduce)
   (:group-id nil)
   (:name "range-reduce")
   (:x 715)
   (:y 474)
   (:w 152)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list 4800 7200 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "GRAVE")
     (:value 6000)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "AGUDA")
     (:value 7902)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 36))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 761)
   (:y 399)
   (:w 61)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6000)
   (:id 37))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 808)
   (:y 439)
   (:w 72)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 12000)
   (:id 38))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name nil)
   (:x 755)
   (:y 685)
   (:w 617)
   (:h 216)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list (:list 6000)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list (:list 1000)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value 100)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil)))
   (:window (:size (1356 469)) (:position (192 192)))
   (:edition-params (:staff :ggff))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 31000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "CHORD-SEQ")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:lmidic
        (:list
         (:list 6256)
         (:list 6579)
         (:list 6902)
         (:list 6924)
         (:list 7224)
         (:list 7547)
         (:list 7570)
         (:list 7870)
         (:list 8193)
         (:list 8493)
         (:list 8516)
         (:list 8839)
         (:list 9139)
         (:list 9417)
         (:list 9740)
         (:list 10063)
         (:list 10386)
         (:list 10709)
         (:list 10731)
         (:list 11032)
         (:list 11354)
         (:list 11633)
         (:list 11677)
         (:list 11677)
         (:list 11677)
         (:list 11677)
         (:list 11677)
         (:list 11677)
         (:list 11677)
         (:list 11677)
         (:list 11677)))
       (:lonset
        (:list
         0
         1000
         2000
         3000
         4000
         5000
         6000
         7000
         8000
         9000
         10000
         11000
         12000
         13000
         14000
         15000
         16000
         17000
         18000
         19000
         20000
         21000
         22000
         23000
         24000
         25000
         26000
         27000
         28000
         29000
         30000
         31000))
       (:ldur (:list 1000))
       (:lvel (:list 100))
       (:loffset (:list 0))
       (:lchan (:list 1))
       (:lport (:list nil))
       (:llegato nil)))))
   (:id 39))
  (:box
   (:type :function)
   (:reference sort-list)
   (:group-id nil)
   (:name "sort-list")
   (:x 1102)
   (:y 444)
   (:w 103)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 40))
  (:box
   (:type :function)
   (:reference x->dx)
   (:group-id nil)
   (:name "x->dx")
   (:x 1109)
   (:y 475)
   (:w 90)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 41))
  (:box
   (:type :function)
   (:reference om-round)
   (:group-id nil)
   (:name "om-round")
   (:x 922)
   (:y 466)
   (:w 121)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 1) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 42))
  (:box
   (:type :function)
   (:reference remove-dup)
   (:group-id nil)
   (:name "remove-dup")
   (:x 1127)
   (:y 521)
   (:w 142)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value (:list 1 2 3 4))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEST")
     (:value eq)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DEPTH")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 43))
  (:box
   (:type :function)
   (:reference sort-list)
   (:group-id nil)
   (:name "sort-list")
   (:x 1146)
   (:y 556)
   (:w 103)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 44))
  (:box
   (:type :function)
   (:reference sort-list)
   (:group-id nil)
   (:name "sort-list")
   (:x 930)
   (:y 515)
   (:w 103)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 45))
  (:box
   (:type :function)
   (:reference remove-dup)
   (:group-id nil)
   (:name "remove-dup")
   (:x 506)
   (:y 544)
   (:w 142)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value (:list 1 2 3 4))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEST")
     (:value eq)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "DEPTH")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 46))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference choose)
   (:group-id nil)
   (:name "choose")
   (:x 748)
   (:y 595)
   (:w 97)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list 1 2 3 4 5 6 7 8 9 10))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHORD-N")
     (:value (:list 1 7 9))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 47))
  (:box
   (:type :function)
   (:reference om+)
   (:group-id nil)
   (:name "om+")
   (:x 1230)
   (:y 141)
   (:w 78)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ARG1")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 48))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 1236)
   (:y 106)
   (:w 32)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 49))
  (:box
   (:type :function)
   (:reference flat)
   (:group-id nil)
   (:name "flat")
   (:x 906)
   (:y 908)
   (:w 66)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 50))
  (:box
   (:library "OM-Sieves")
   (:type :function)
   (:reference s-symmetry-perfil)
   (:group-id nil)
   (:name "s-symmetry-perfil")
   (:x 1172)
   (:y 275)
   (:w 191)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SIEVE-L")
     (:value (:list sieve))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RANGE")
     (:value (:list 25 500))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MODO")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 51))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1221)
   (:y 240)
   (:w 94)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 5 500))
   (:id 52))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1048)
   (:y 198)
   (:w 158)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 7 16) (:list 5 16)))
   (:id 53))
  (:box
   (:type :function)
   (:reference x->dx)
   (:group-id nil)
   (:name "x->dx")
   (:x 532)
   (:y 914)
   (:w 90)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 54))
  (:box
   (:type :function)
   (:reference x->dx)
   (:group-id nil)
   (:name "x->dx")
   (:x 515)
   (:y 416)
   (:w 90)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 55))
  (:box
   (:type :function)
   (:reference mc->n)
   (:group-id nil)
   (:name "mc->n")
   (:x 478)
   (:y 602)
   (:w 96)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MIDIC")
     (:value (:list 6000))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 56)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 3 :in 0)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 0 :in 0)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 1)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 6 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 4 :out 1)) (:to (:box 12 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 9 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 1)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 11 :in 0)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 8 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 4 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 46 :in 0)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 55 :in 0)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 14 :in 1)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 12 :in 1)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 56 :in 0)))
  (:connection (:from (:box 14 :out 1)) (:to (:box 15 :in 0)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 16 :in 0)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 54 :in 0)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 20 :in 0)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 20 :in 1)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 20 :in 2)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 22 :in 0)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 20 :in 3)))
  (:connection (:from (:box 22 :out 0)) (:to (:box 23 :in 0)))
  (:connection (:from (:box 24 :out 0)) (:to (:box 26 :in 0)))
  (:connection (:from (:box 25 :out 0)) (:to (:box 24 :in 0)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 33 :in 0)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 34 :in 0)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 36 :in 0)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 26 :in 1)))
  (:connection (:from (:box 28 :out 0)) (:to (:box 24 :in 1)))
  (:connection (:from (:box 29 :out 0)) (:to (:box 28 :in 0)))
  (:connection (:from (:box 30 :out 0)) (:to (:box 28 :in 2)))
  (:connection (:from (:box 31 :out 0)) (:to (:box 28 :in 1)))
  (:connection (:from (:box 33 :out 0)) (:to (:box 35 :in 1)))
  (:connection (:from (:box 34 :out 0)) (:to (:box 35 :in 0)))
  (:connection (:from (:box 35 :out 0)) (:to (:box 32 :in 0)))
  (:connection (:from (:box 36 :out 0)) (:to (:box 42 :in 0)))
  (:connection (:from (:box 37 :out 0)) (:to (:box 36 :in 1)))
  (:connection (:from (:box 38 :out 0)) (:to (:box 36 :in 2)))
  (:connection (:from (:box 39 :out 1)) (:to (:box 50 :in 0)))
  (:connection (:from (:box 40 :out 0)) (:to (:box 41 :in 0)))
  (:connection (:from (:box 41 :out 0)) (:to (:box 43 :in 0)))
  (:connection (:from (:box 42 :out 0)) (:to (:box 40 :in 0)))
  (:connection (:from (:box 42 :out 0)) (:to (:box 45 :in 0)))
  (:connection (:from (:box 43 :out 0)) (:to (:box 44 :in 0)))
  (:connection (:from (:box 45 :out 0)) (:to (:box 47 :in 0)))
  (:connection (:from (:box 46 :out 0)) (:to (:box 47 :in 1)))
  (:connection (:from (:box 47 :out 0)) (:to (:box 39 :in 1)))
  (:connection (:from (:box 49 :out 0)) (:to (:box 48 :in 0)))
  (:connection (:from (:box 52 :out 0)) (:to (:box 51 :in 1)))
  (:connection (:from (:box 53 :out 0)) (:to (:box 51 :in 0)))))