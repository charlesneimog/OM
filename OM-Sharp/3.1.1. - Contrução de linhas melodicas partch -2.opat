
(:patch
 (:name "3.1.1. - Contrução de linhas melodicas partch -2")
 (:doc "")
 (:info
  (:created "2020/10/13 18:52:57")
  (:modified "2020/10/13 19:59:09")
  (:by "om-sharp")
  (:version 1.0))
 (:window (:size (1583 887)) (:position (67 94)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :function)
   (:reference om-)
   (:group-id nil)
   (:name "om-")
   (:x 1020)
   (:y 298)
   (:w 67)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ARG1")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "i")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (500 500)) (:position (192 192)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 123)
       (:y 237)
       (:w 69)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 50)
       (:y 50)
       (:w 125)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :function)
       (:reference om=)
       (:group-id nil)
       (:name "om=")
       (:x 92)
       (:y 136)
       (:w 71)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NUM1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NUM2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 0))))))
   (:group-id nil)
   (:name "i")
   (:x 740)
   (:y 503/2)
   (:w 68)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 1))
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name "TEXTFILE")
   (:x 1195)
   (:y 87)
   (:w 200)
   (:h 113)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "output-mode")
     (:value :list)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil))
    (:output (:name "output-mode") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:output-mode :list))
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         "(1) (1 1) (3 1) (1 2 1) (1 -2 1) (1 1 1) (-1 1 -1) (2 (2 (1 1 1))) (1 (1 (1 -1 1))) (2 (3 (-1 1 2))) (2 (4 (-1 1 1 2))) "
         ""
         ""
         ""))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 2))
  (:box
   (:type :function)
   (:reference omif)
   (:group-id nil)
   (:name "omif")
   (:x 879)
   (:y 264)
   (:w 71)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "TEST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ACTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "else")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "Construcao de perfil")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1920 1026)) (:position (-9 -9)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 227)
       (:y 582)
       (:w 69)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 101)
       (:y 50)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :function)
       (:reference x->dx)
       (:group-id nil)
       (:name "x->dx")
       (:x 50)
       (:y 107)
       (:w 77)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value (:list 0 1))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference om-scale)
       (:group-id nil)
       (:name "om-scale")
       (:x 103)
       (:y 310)
       (:w 104)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux")
       (:x 127)
       (:y 248)
       (:w 32)
       (:h 38)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 3)
       (:id 4))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 148)
       (:y 190)
       (:w 125)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 11")
       (:x 163)
       (:y 149)
       (:w 32)
       (:h 38)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 7)
       (:id 6))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 12")
       (:x 240)
       (:y 149)
       (:w 32)
       (:h 38)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 13)
       (:id 7))
      (:box
       (:type :function)
       (:reference reverse)
       (:group-id nil)
       (:name "reverse")
       (:x 150)
       (:y 351)
       (:w 92)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 42)
       (:y 444)
       (:w 105)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:comment
       (:x 282)
       (:y 187)
       (:w 100)
       (:h 60)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "se o perfil é mais aberto ou fechado")
       (:id 10))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 202)
       (:y 531)
       (:w 105)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :function)
       (:reference reverse)
       (:group-id nil)
       (:name "reverse")
       (:x 349)
       (:y 485)
       (:w 92)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 3 :in 2)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 5 :in 1)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 11 :in 1))))))
   (:group-id nil)
   (:name "Construcao de perfil")
   (:x 1487/10)
   (:y 188)
   (:w 185)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 4))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 21")
   (:x 1071)
   (:y 62)
   (:w 32)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 8)
   (:id 5))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 20")
   (:x 1000)
   (:y 64)
   (:w 32)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 6))
  (:box
   (:type :function)
   (:reference om-random)
   (:group-id nil)
   (:name "om-random")
   (:x 984)
   (:y 112)
   (:w 125)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "LOW") (:value 0) (:reactive nil))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 19")
   (:x 823)
   (:y 121)
   (:w 32)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 13)
   (:id 8))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 18")
   (:x 763)
   (:y 123)
   (:w 32)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 5)
   (:id 9))
  (:box
   (:type :function)
   (:reference om-random)
   (:group-id nil)
   (:name "om-random")
   (:x 748)
   (:y 158)
   (:w 125)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "LOW") (:value 0) (:reactive nil))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 17")
   (:x 387)
   (:y 305)
   (:w 32)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 5)
   (:id 11))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "padrao")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 252)
       (:y 571)
       (:w 69)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 21)
       (:y 42)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 96)
       (:y 44)
       (:w 71)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "lispfunction")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           ";;; Edit a valid LAMBDA EXPRESSION for \"lispfunction\""
           ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
           ""
           "(lambda (list) (let ((L()))"
           "    (loop for x from 0 to (1- (length list)) do"
           "          (when (not (equal (nth (+ x 1) list) (nth x list)))"
           "            (push (nth x list) L)))"
           "    (reverse L))))"))))
       (:group-id nil)
       (:name "lispfunction")
       (:x 95)
       (:y 574)
       (:w 123)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 231)
       (:y 493)
       (:w 62)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "OMLOOP")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 12)
           (:y 6)
           (:w 59)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 308)
           (:y 418)
           (:w 82)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :function)
           (:reference flat)
           (:group-id nil)
           (:name "flat")
           (:x 411)
           (:y 254)
           (:w 62)
           (:h 38)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :function)
           (:reference om-round)
           (:group-id nil)
           (:name "om-round")
           (:x 285)
           (:y 86)
           (:w 111)
           (:h 38)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "N")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :special)
           (:reference repeat-n)
           (:group-id nil)
           (:name "repeat-n")
           (:x 375)
           (:y 132)
           (:w 102)
           (:h 28)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :left)
           (:lock nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "self")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "num")
             (:value 0)
             (:reactive nil)))
           (:outputs
            (:output (:name "collected results") (:reactive nil)))
           (:id 4))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux")
           (:x 272)
           (:y 39)
           (:w 32)
           (:h 38)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 5)
           (:id 5))
          (:box
           (:type :function)
           (:reference om/)
           (:group-id nil)
           (:name "om/")
           (:x 262)
           (:y 69)
           (:w 69)
           (:h 38)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 216)
           (:y 21)
           (:w 84)
           (:h 38)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :value)
           (:reference cons)
           (:group-id nil)
           (:name "list")
           (:x 347)
           (:y 28)
           (:w 89)
           (:h 38)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value (:list 4 3 1 4 2))
           (:id 8))
          (:box
           (:type :function)
           (:reference om-round)
           (:group-id nil)
           (:name "om-round")
           (:x 521)
           (:y 293)
           (:w 111)
           (:h 38)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "N")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 4")
           (:x 589)
           (:y 136)
           (:w 32)
           (:h 38)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 4)
           (:id 10))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 3")
           (:x 517)
           (:y 110)
           (:w 32)
           (:h 38)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 11))
          (:box
           (:type :value)
           (:reference cons)
           (:group-id nil)
           (:name "aux 2")
           (:x 467)
           (:y 20)
           (:w 107)
           (:h 38)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value (:list 11 8 3 11 5))
           (:id 12))
          (:box
           (:type :function)
           (:reference om-scale)
           (:group-id nil)
           (:name "om-scale")
           (:x 497)
           (:y 182)
           (:w 104)
           (:h 38)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "MINOUT")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "MAXOUT")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 245)
           (:y 286)
           (:w 67)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 14))
          (:box
           (:type :special)
           (:reference repeat-n)
           (:group-id nil)
           (:name "repeat-n")
           (:x 207)
           (:y 185)
           (:w 102)
           (:h 28)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :left)
           (:lock nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "self")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "num")
             (:value 0)
             (:reactive nil)))
           (:outputs
            (:output (:name "collected results") (:reactive nil)))
           (:id 15))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 208)
           (:y 418)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 16))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 309)
           (:y 198)
           (:w 78)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 17))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 87)
           (:y 74)
           (:w 78)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 18)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 0 :out 0)) (:to (:box 18 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 17 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 1)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 1)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 13 :in 2)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 13 :in 1)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 13 :in 0)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 16 :in 0)))
          (:connection (:from (:box 14 :out 1)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 0)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 15 :in 1)))
          (:connection
           (:from (:box 18 :out 0))
           (:to (:box 15 :in 0))))))
       (:group-id nil)
       (:name "OMLOOP")
       (:x 208)
       (:y 416)
       (:w 106)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference reverse)
       (:group-id nil)
       (:name "reverse")
       (:x 249)
       (:y 217)
       (:w 92)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 216)
       (:y 105)
       (:w 32)
       (:h 38)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 7))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 161)
       (:y 16)
       (:w 125)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference om=)
       (:group-id nil)
       (:name "om=")
       (:x 206)
       (:y 135)
       (:w 71)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NUM1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NUM2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference omif)
       (:group-id nil)
       (:name "omif")
       (:x 170)
       (:y 270)
       (:w 71)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TEST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ACTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "else")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 81)
       (:y 331)
       (:w 62)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux")
       (:x 244)
       (:y 299)
       (:w 32)
       (:h 38)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 12)
       (:id 12))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 214)
       (:y 329)
       (:w 102)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 13))
      (:box
       (:type :function)
       (:reference first-n)
       (:group-id nil)
       (:name "first-n")
       (:x 87)
       (:y 144)
       (:w 81)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "N")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 14 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 10 :in 2)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 13 :in 1)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 10 :in 1))))))
   (:group-id nil)
   (:name "padrao")
   (:x 343)
   (:y 368)
   (:w 89)
   (:h 49)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 12))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 8")
   (:x 1060)
   (:y 164)
   (:w 36)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 11)
   (:id 13))
  (:box
   (:type :function)
   (:reference om-scale)
   (:group-id nil)
   (:name "om-scale")
   (:x 994)
   (:y 204)
   (:w 104)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MINOUT")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MAXOUT")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:type :function)
   (:reference reverse)
   (:group-id nil)
   (:name "reverse")
   (:x 910)
   (:y 161)
   (:w 92)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:type :function)
   (:reference om-round)
   (:group-id nil)
   (:name "om-round")
   (:x 859)
   (:y 314)
   (:w 111)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 1) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 7")
   (:x 708)
   (:y 158)
   (:w 32)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 17))
  (:box
   (:type :function)
   (:reference om-scale)
   (:group-id nil)
   (:name "om-scale")
   (:x 670)
   (:y 203)
   (:w 175)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MINOUT")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MAXOUT")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 18))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 2")
   (:x 1331)
   (:y 205)
   (:w 54)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 4 4)))
   (:id 19))
  (:box
   (:type :function)
   (:reference om-random)
   (:group-id nil)
   (:name "om-random")
   (:x 481)
   (:y 166)
   (:w 146)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "LOW") (:value 1) (:reactive nil))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 20))
  (:box
   (:type :function)
   (:reference length)
   (:group-id nil)
   (:name "length")
   (:x 567)
   (:y 127)
   (:w 84)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 21))
  (:box
   (:type :function)
   (:reference sort-list)
   (:group-id nil)
   (:name "sort-list")
   (:x 617)
   (:y 400)
   (:w 93)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference choose)
   (:group-id nil)
   (:name "choose")
   (:x 189)
   (:y 534)
   (:w 90)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list (:list 6000 6530) (:list 7203 5049)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHORD-N")
     (:value (:list 2))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 23))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "diamante")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1920 1026)) (:position (-9 -9)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 164)
       (:y 556)
       (:w 69)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "Lista de Razoes")
         (:doc "")))
       (:group-id nil)
       (:name "Lista de Razoes")
       (:x 768)
       (:y 70)
       (:w 126)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "nota de referencia da Afinação Justa")
         (:doc "")))
       (:group-id nil)
       (:name "nota de referencia da Afinação Justa")
       (:x 929)
       (:y 79)
       (:w 271)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 3) (:name "nota grave") (:doc "")))
       (:group-id nil)
       (:name "nota grave")
       (:x 173)
       (:y 344)
       (:w 95)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 4)
         (:name "nota mais aguda")
         (:doc "")))
       (:group-id nil)
       (:name "nota mais aguda")
       (:x 278)
       (:y 358)
       (:w 136)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference rt->mc)
       (:group-id nil)
       (:name "rt->mc")
       (:x 891)
       (:y 157)
       (:w 86)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value 11/8)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FUNDAMENTAL")
         (:value 6000)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 4")
       (:x 748)
       (:y 296)
       (:w 54)
       (:h 38)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 7902)
       (:id 6))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 3")
       (:x 693)
       (:y 285)
       (:w 54)
       (:h 38)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6000)
       (:id 7))
      (:box
       (:type :function)
       (:reference om+)
       (:group-id nil)
       (:name "om+")
       (:x 757)
       (:y 542)
       (:w 71)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 1200)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 803)
       (:y 494)
       (:w 54)
       (:h 38)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2400)
       (:id 9))
      (:comment
       (:x 858)
       (:y 505)
       (:w 200)
       (:h 22)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "acrescimo de uma oitava")
       (:id 10))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 540)
       (:y 537)
       (:w 105)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lst?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:comment
       (:x 181)
       (:y 234)
       (:w 251)
       (:h 60)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "filtro para instrumento acustico")
       (:id 12))
      (:comment
       (:x 854)
       (:y 383)
       (:w 200)
       (:h 26)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "acrescimo de uma oitava")
       (:id 13))
      (:comment
       (:x 181)
       (:y 180)
       (:w 152)
       (:h 39)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "Temperamento ")
       (:id 14))
      (:comment
       (:x 707)
       (:y 159)
       (:w 182)
       (:h 42)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "aproximacao em cents")
       (:id 15))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference range-reduce)
       (:group-id nil)
       (:name "range-reduce")
       (:x 168)
       (:y 467)
       (:w 136)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 4800 7200 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GRAVE")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "AGUDA")
         (:value 7902)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux")
       (:x 804)
       (:y 378)
       (:w 54)
       (:h 38)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1200)
       (:id 17))
      (:box
       (:type :function)
       (:reference om+)
       (:group-id nil)
       (:name "om+")
       (:x 774)
       (:y 415)
       (:w 71)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 1200)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 614)
       (:y 247)
       (:w 62)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference range-reduce)
       (:group-id nil)
       (:name "range-reduce")
       (:x 651)
       (:y 345)
       (:w 136)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 4800 7200 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GRAVE")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "AGUDA")
         (:value 7902)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 20))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference filter-ac-inst)
       (:group-id nil)
       (:name "filter-ac-inst")
       (:x 51)
       (:y 231)
       (:w 126)
       (:h 38)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 6000 6530 7203 5049))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "APPROX")
         (:value 10)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEMPERAMENT")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 21))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 11")
       (:x 108)
       (:y 137)
       (:w 32)
       (:h 38)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 10)
       (:id 22))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 12")
       (:x 148)
       (:y 176)
       (:w 32)
       (:h 38)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2)
       (:id 23)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 5 :in 1)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 16 :in 1))
       (:attributes
        (:color (:color 0.0S0 1.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 16 :in 2))
       (:attributes
        (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 20 :in 2)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 20 :in 1)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 11 :in 2))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 1)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 21 :in 0))
       (:attributes
        (:color
         (:color 0.0S0 0.0S0 1.0S0 1.0)
         :style
         nil
         :modif
         (-34/199 0))))
      (:connection
       (:from (:box 16 :out 0))
       (:to (:box 0 :in 0))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 18 :in 1)))
      (:connection
       (:from (:box 18 :out 0))
       (:to (:box 11 :in 1))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 19 :out 0))
       (:to (:box 20 :in 0))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 20 :out 0))
       (:to (:box 8 :in 0))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 20 :out 0))
       (:to (:box 11 :in 0))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 20 :out 0))
       (:to (:box 18 :in 0))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 21 :out 0))
       (:to (:box 16 :in 0))
       (:attributes
        (:color
         (:color 0.0S0 0.0S0 1.0S0 1.0)
         :style
         nil
         :modif
         (0 17/52))))
      (:connection
       (:from (:box 22 :out 0))
       (:to (:box 21 :in 1))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 23 :out 0))
       (:to (:box 21 :in 2))
       (:attributes
        (:color
         (:color 0.0S0 0.0S0 1.0S0 1.0)
         :style
         nil
         :modif
         nil))))))
   (:group-id nil)
   (:name "diamante")
   (:x 3205/6)
   (:y 316)
   (:w 107)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "Lista de Razoes")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "nota de referencia da Afinação Justa")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "nota grave")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "nota mais aguda")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 24))
  (:box
   (:type :function)
   (:reference maketreegroups)
   (:group-id nil)
   (:name "maketreegroups")
   (:x 1197)
   (:y 244)
   (:w 157)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FIGURES")
     (:value
      (:list (:list 1 1 1) (:list 1 2 1) (:list 3 4) (:list 1 1 1 1)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value (:list 0 3 0 2 0 1 0 0 3))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEASURES")
     (:value (:list (:list 4 4)))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 25))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 15")
   (:x 663)
   (:y 271)
   (:w 57)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 8400)
   (:id 26))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 9")
   (:x 590)
   (:y 259)
   (:w 55)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6000)
   (:id 27))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 14")
   (:x 438)
   (:y 476)
   (:w 38)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 127)
   (:id 28))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 13")
   (:x 403)
   (:y 475)
   (:w 32)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 55)
   (:id 29))
  (:box
   (:type :function)
   (:reference om-scale)
   (:group-id nil)
   (:name "om-scale")
   (:x 369)
   (:y 517)
   (:w 134)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MINOUT")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MAXOUT")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 30))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 10")
   (:x 898)
   (:y 534)
   (:w 36)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 80)
   (:id 31))
  (:box
   (:type :object)
   (:reference voice)
   (:group-id nil)
   (:name "VOICE")
   (:x 349)
   (:y 601)
   (:w 1007)
   (:h 117)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TREE")
     (:value (:list ? (:list (:list (:list 4 4) (:list 1 1 1 1)))))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value
      (:list
       (:object
        (:class chord)
        (:slots
         ((:symbolic-date nil)
          (:symbolic-dur nil)
          (:symbolic-dur-extent 0)
          (:extras nil)
          (:onset 0)
          (:item-time nil)
          (:item-internal-time nil)
          (:item-type nil)
          (:attributes nil)
          (:lmidic (:list 6000))
          (:lvel (:list 100))
          (:loffset (:list 0))
          (:ldur (:list 1000))
          (:lchan (:list 1))
          (:lport (:list nil)))))))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 60)
     (:reactive nil))
    (:input (:type :key) (:name "lvel") (:value 100) (:reactive nil))
    (:input (:type :key) (:name "loffset") (:value 0) (:reactive nil))
    (:input (:type :key) (:name "lchan") (:value 1) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "TREE") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "TEMPO") (:reactive nil))
    (:output (:name "lvel") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil)))
   (:window (:size (1920 1026)) (:position (-9 -9)))
   (:edition-params
    (:scale :scale-1/2)
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 7.5)
      (:list 375 12.55)
      (:list 500 15.966667)
      (:list 625 19.383334)
      (:list 750 23.599999)
      (:list 1125 27.849999)
      (:list 1250 30.766665)
      (:list 1375 34.68333)
      (:list 1500 38.1)
      (:list 1875 42.35)
      (:list 2000 45.766667)
      (:list 2125 49.183335)
      (:list 2250 53.4)
      (:list 2625 58.45)
      (:list 2750 61.86667)
      (:list 2875 65.28334)
      (:list 3000 75.50001)
      (:list 3375 79.75001)
      (:list 3500 82.66667)
      (:list 3625 87.38334)
      (:list 3750 90.3)
      (:list 4000 94.63334)
      (:list 4250 97.966675)
      (:list 4500 102.30001)
      (:list 4800 105.80001)
      (:list 4912 109.67501)
      (:list 5025 113.05001)
      (:list 5250 116.30001)
      (:list 5500 120.63335)
      (:list 5750 123.96668)
      (:list 6000 135.10002)
      (:list 6300 138.60002)
      (:list 6412 142.47502)
      (:list 6525 145.85002)
      (:list 6750 150.40003)
      (:list 7000 154.23336)
      (:list 7250 158.06668)
      (:list 7500 161.90001)
      (:list 7750 165.23334)
      (:list 7850 169.06667)
      (:list 7950 172.4)
      (:list 8050 175.73332)
      (:list 8250 178.9)))
    (:staff :g))
   (:value
    (:object
     (:class voice)
     (:slots
      ((:onset 0)
       (:duration 8249)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "VOICE")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:tree
        (:list
         3
         (:list
          (:list
           (:list 4 4)
           (:list
            (:list 1 (:list 2 (:list 2 (:list 1 1 1))))
            (:list 1 (:list 1 (:list 1 (:list 1 -1 1))))
            (:list 1 (:list 2 (:list 2 (:list 1 1 1))))
            (:list 1 (:list 2 (:list 2 (:list 1 1 1))))))
          (:list
           (:list 4 4)
           (:list
            (:list 1 (:list 1 (:list 1 (:list 1 -1 1))))
            (:list 1 (:list -1 1 -1))
            (:list 1 (:list 2 (:list 3 (:list -1 1 2))))
            (:list 1 (:list -1 1 -1))))
          (:list
           (:list 4 4)
           (:list
            (:list 1 (:list 2 (:list 3 (:list -1 1 2))))
            (:list 1 (:list 1 1 1))
            (:list 1 (:list 2 (:list 4 (:list -1 1 1 2))))
            -1)))))
       (:lmidic
        (:list
         (:list 6200)
         (:list 6893)
         (:list 7400)
         (:list 7702)
         (:list 8093)
         (:list 7702)
         (:list 7400)
         (:list 7702)
         (:list 7702)
         (:list 7702)
         (:list 7702)
         (:list 6893)
         (:list 6893)
         (:list 6502)
         (:list 6502)
         (:list 6893)
         (:list 7400)
         (:list 8093)
         (:list 7702)
         (:list 7702)
         (:list 7702)
         (:list 7400)
         (:list 7702)
         (:list 8093)
         (:list 7702)
         (:list 7400)
         (:list 6893)
         (:list 6200)
         (:list 6200)
         (:list 6200)
         (:list 6200)
         (:list 6200)
         (:list 6200)))
       (:lonset
        (:list
         0
         375
         500
         625
         750
         1125
         1375
         1500
         1875
         2000
         2125
         2250
         2625
         2750
         2875
         3000
         3375
         3625
         4000
         4500
         4912
         5025
         5500
         6000
         6412
         6525
         6750
         7000
         7250
         7500
         7850
         7950
         8050
         9000))
       (:ldur
        (:list
         (:list 374)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 374)
         (:list 124)
         (:list 124)
         (:list 374)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 374)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 374)
         (:list 124)
         (:list 124)
         (:list 249)
         (:list 299)
         (:list 112)
         (:list 224)
         (:list 249)
         (:list 299)
         (:list 112)
         (:list 224)
         (:list 249)
         (:list 249)
         (:list 249)
         (:list 249)
         (:list 99)
         (:list 99)
         (:list 199)))
       (:lvel
        (:list
         (:list 127)
         (:list 127)
         (:list 127)
         (:list 127)
         (:list 55)
         (:list 55)
         (:list 55)
         (:list 117)
         (:list 65)
         (:list 65)
         (:list 65)
         (:list 65)
         (:list 108)
         (:list 108)
         (:list 127)
         (:list 127)
         (:list 127)
         (:list 127)
         (:list 55)
         (:list 55)
         (:list 55)
         (:list 117)
         (:list 65)
         (:list 65)
         (:list 65)
         (:list 65)
         (:list 108)
         (:list 108)
         (:list 65)
         (:list 65)
         (:list 65)
         (:list 65)
         (:list 117)))
       (:loffset (:list 0))
       (:lchan (:list 9))
       (:lport (:list nil))
       (:llegato nil)
       (:tempo 80)))))
   (:id 32))
  (:box
   (:type :function)
   (:reference x->dx)
   (:group-id nil)
   (:name "x->dx")
   (:x 665)
   (:y 29)
   (:w 77)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value (:list 0 1))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 33))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 3")
   (:x 547)
   (:y 222)
   (:w 70)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6200)
   (:id 34))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference choose)
   (:group-id nil)
   (:name "choose")
   (:x 396)
   (:y 234)
   (:w 146)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list (:list 6000 6530) (:list 7203 5049)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHORD-N")
     (:value (:list 2))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 35))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference diamond-identity)
   (:group-id nil)
   (:name "diamond-identity")
   (:x 391)
   (:y 69)
   (:w 163)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "IDENTITY")
     (:value (:list 11 19 97))
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 36))
  (:box
   (:library "OM-Sieves")
   (:type :function)
   (:reference c-union-l)
   (:group-id nil)
   (:name "c-union-l")
   (:x 174)
   (:y 83)
   (:w 102)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "CRIBLE")
     (:value (:list (:list 19 16 64) (:list 11 16 64)))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 37))
  (:box
   (:library "OM-Sieves")
   (:type :function)
   (:reference revel-crible)
   (:group-id nil)
   (:name "revel-crible")
   (:x 169)
   (:y 129)
   (:w 120)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 38))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 84)
   (:y 29)
   (:w 226)
   (:h 47)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 19 16 128) (:list 17 16 128)))
   (:id 39))
  (:box
   (:type :object)
   (:reference bpf)
   (:group-id nil)
   (:name nil)
   (:x 15)
   (:y 261)
   (:w 292)
   (:h 125)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 2000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 86000.0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.0S0 0.0S0 0.0S0 1.0))
       (:decimals 2)
       (:x-points
        (:list
         0.0
         2000.0
         4000.0
         6000.0
         8000.0
         10000.0
         12000.0
         14000.0
         16000.0
         18000.0
         20000.0
         22000.0
         24000.0
         26000.0
         28000.0
         30000.0
         32000.0
         34000.0
         36000.0
         38000.0
         40000.0
         42000.0
         44000.0
         46000.0
         48000.0
         50000.0
         52000.0
         54000.0
         56000.0
         58000.0
         60000.0
         62000.0
         64000.0
         66000.0
         68000.0
         70000.0
         72000.0
         74000.0
         76000.0
         78000.0
         80000.0
         82000.0
         84000.0
         86000.0))
       (:y-points
        (:list
         17.0
         2.0
         15.0
         4.0
         13.0
         6.0
         11.0
         8.0
         9.0
         10.0
         7.0
         6.0
         7.8
         7.2
         6.6
         8.4
         5.4
         9.6
         4.2
         10.8
         3.0
         12.0
         13.0
         3.0
         11.67
         4.33
         10.33
         5.67
         9.0
         7.0
         7.67
         8.33
         6.33
         7.0
         10.0
         9.0
         8.0
         11.0
         6.0
         13.0
         4.0
         15.0
         2.0
         17.0))))
     (:add-slots ((:name "BPF")))))
   (:id 40))
  (:box
   (:type :function)
   (:reference om-round)
   (:group-id nil)
   (:name "om-round")
   (:x 20)
   (:y 430)
   (:w 111)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 1) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 41))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference play-om\#)
   (:group-id nil)
   (:name "play-om#")
   (:x 373)
   (:y 733)
   (:w 113)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICE")
     (:value (:list nil))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 42))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 1255)
   (:y 566)
   (:w 32)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 9)
   (:id 43))
  (:box
   (:type :function)
   (:reference flat)
   (:group-id nil)
   (:name "flat")
   (:x 647)
   (:y 734)
   (:w 62)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 44))
  (:box
   (:type :function)
   (:reference remove)
   (:group-id nil)
   (:name "remove")
   (:x 87)
   (:y 593)
   (:w 94)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ITEM")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 45)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 25 :in 1)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 0)))
  (:connection (:from (:box 2 :out 1)) (:to (:box 25 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 16 :in 0)))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 12 :in 0))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 1.0 0.0 0.0 1.0)) (:t-or-nil t))
     :style
     nil
     :modif
     (0 -55/142))))
  (:connection (:from (:box 4 :out 0)) (:to (:box 40 :in 2)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 1)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 14 :in 1)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 10 :in 1)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 18 :in 2)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 1)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 30 :in 0)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 14 :in 2)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 3 :in 2)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 0)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 0 :in 0)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 18 :in 1)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 3 :in 1))
   (:attributes (:color nil :style nil :modif (0 -39/118))))
  (:connection (:from (:box 19 :out 0)) (:to (:box 25 :in 2)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 35 :in 1)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 20 :in 1)))
  (:connection
   (:from (:box 22 :out 0))
   (:to (:box 23 :in 0))
   (:attributes
    (:color
     (:color 1.0S0 0.6470585S0 0.0S0 1.0)
     :style
     nil
     :modif
     (0 -33/106))))
  (:connection (:from (:box 23 :out 0)) (:to (:box 45 :in 1)))
  (:connection (:from (:box 24 :out 0)) (:to (:box 22 :in 0)))
  (:connection
   (:from (:box 25 :out 0))
   (:to (:box 32 :in 1))
   (:attributes (:color nil :style nil :modif (0 11/47))))
  (:connection (:from (:box 26 :out 0)) (:to (:box 24 :in 3)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 24 :in 2)))
  (:connection (:from (:box 28 :out 0)) (:to (:box 30 :in 2)))
  (:connection (:from (:box 29 :out 0)) (:to (:box 30 :in 1)))
  (:connection (:from (:box 30 :out 0)) (:to (:box 32 :in 4)))
  (:connection (:from (:box 31 :out 0)) (:to (:box 32 :in 3)))
  (:connection (:from (:box 32 :out 0)) (:to (:box 42 :in 0)))
  (:connection (:from (:box 32 :out 2)) (:to (:box 44 :in 0)))
  (:connection (:from (:box 33 :out 0)) (:to (:box 15 :in 0)))
  (:connection
   (:from (:box 33 :out 0))
   (:to (:box 18 :in 0))
   (:attributes
    (:color
     (:color 0.62745095S0 0.12549019S0 0.94117356S0 1.0)
     :style
     nil
     :modif
     nil)))
  (:connection (:from (:box 34 :out 0)) (:to (:box 24 :in 1)))
  (:connection (:from (:box 35 :out 0)) (:to (:box 24 :in 0)))
  (:connection (:from (:box 36 :out 0)) (:to (:box 35 :in 0)))
  (:connection (:from (:box 36 :out 1)) (:to (:box 21 :in 0)))
  (:connection (:from (:box 37 :out 0)) (:to (:box 38 :in 0)))
  (:connection
   (:from (:box 38 :out 0))
   (:to (:box 33 :in 0))
   (:attributes (:color nil :style nil :modif (-43/152 0))))
  (:connection (:from (:box 38 :out 0)) (:to (:box 4 :in 0)))
  (:connection (:from (:box 38 :out 0)) (:to (:box 36 :in 0)))
  (:connection (:from (:box 39 :out 0)) (:to (:box 37 :in 0)))
  (:connection (:from (:box 40 :out 2)) (:to (:box 41 :in 0)))
  (:connection (:from (:box 41 :out 0)) (:to (:box 23 :in 1)))
  (:connection (:from (:box 43 :out 0)) (:to (:box 32 :in 6)))
  (:connection (:from (:box 45 :out 0)) (:to (:box 32 :in 2)))))