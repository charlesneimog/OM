
(:patch
 (:name "3.2.1 - densificação por bpf")
 (:doc "")
 (:info
  (:created "2020/08/27 19:18:36")
  (:modified "2020/11/16 15:11:31")
  (:by "om-sharp")
  (:version 1.01))
 (:window (:size (1942 1102)) (:position (-9 -9)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 3")
   (:x 1176)
   (:y 244)
   (:w 61)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4900)
   (:id 0))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt->mc)
   (:group-id nil)
   (:name "rt->mc")
   (:x 1126)
   (:y 279)
   (:w 99)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FUNDAMENTAL")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux")
   (:x 865)
   (:y 143)
   (:w 61)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6700)
   (:id 2))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt->mc)
   (:group-id nil)
   (:name "rt->mc")
   (:x 823)
   (:y 187)
   (:w 99)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FUNDAMENTAL")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :object)
   (:reference bpf)
   (:group-id nil)
   (:name "BPF")
   (:x 9)
   (:y 205)
   (:w 255)
   (:h 92)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "decimals")
     (:value 0)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil))
    (:output (:name "decimals") (:reactive nil)))
   (:window (:size (581 400)) (:position (130 130)))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 200)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.0S0 0.0S0 0.0S0 1.0))
       (:decimals 0)
       (:x-points (:list 0 100 200))
       (:y-points (:list 1 7 11))))
     (:add-slots ((:name "BPF")))))
   (:id 4))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "crivo")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1366 725)) (:position (-8 -8)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 43)
       (:y 540)
       (:w 78)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 678)
       (:y 444)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:library "OM-Sieves")
       (:type :function)
       (:reference s-union-l)
       (:group-id nil)
       (:name "s-union-l")
       (:x 423)
       (:y 236)
       (:w 115)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SIEVE")
         (:value (:list (:list 19 16 64) (:list 11 16 64)))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 369)
       (:y 201)
       (:w 224)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list (:list 11 16 64) (:list 19 16 64)))
       (:id 3))
      (:box
       (:library "OM-Sieves")
       (:type :function)
       (:reference s-perfil)
       (:group-id nil)
       (:name "s-perfil")
       (:x 107)
       (:y 305)
       (:w 98)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SIEVE")
         (:value (:list 23 33 47 63 70))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:library "OM-Sieves")
       (:type :function)
       (:reference s-perfil)
       (:group-id nil)
       (:name "s-perfil")
       (:x 419)
       (:y 356)
       (:w 98)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SIEVE")
         (:value (:list 23 33 47 63 70))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:library "OM-Sieves")
       (:type :function)
       (:reference revel-sieve)
       (:group-id nil)
       (:name "revel-sieve")
       (:x 623)
       (:y 339)
       (:w 132)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6)))
     (:connections
      (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 1 :in 0))))))
   (:group-id nil)
   (:name "crivo")
   (:x 304)
   (:y 10)
   (:w 85)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs
    (:output (:name "output") (:reactive nil))
    (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:type :object)
   (:reference bpf)
   (:group-id nil)
   (:name "BPF")
   (:x 425)
   (:y 207)
   (:w 255)
   (:h 92)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "decimals")
     (:value 0)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil))
    (:output (:name "decimals") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 200)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.0S0 0.0S0 0.0S0 1.0))
       (:decimals 0)
       (:x-points (:list 0 100 200))
       (:y-points (:list 11 7 1))))
     (:add-slots ((:name "BPF")))))
   (:id 6))
  (:box
   (:type :object)
   (:reference voice)
   (:group-id nil)
   (:name nil)
   (:x 41)
   (:y 617)
   (:w 464)
   (:h 92)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TREE")
     (:value (:list 1 (:list (:list (:list 4 4) (:list 1 1 1)))))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list (:list 6000)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 20)
     (:reactive nil))
    (:input (:type :key) (:name "lvel") (:value 100) (:reactive nil))
    (:input (:type :key) (:name "loffset") (:value 0) (:reactive nil))
    (:input (:type :key) (:name "lchan") (:value 1) (:reactive nil))
    (:input (:type :key) (:name "lport") (:value nil) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "TREE") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "TEMPO") (:reactive nil))
    (:output (:name "lvel") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "lport") (:reactive nil)))
   (:window (:size (915 254)) (:position (32 32)))
   (:edition-params
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 12.6)
      (:list 1333 25.311112)
      (:list 2667 38.02222)
      (:list 4000 51.533333)
      (:list 5333 65.844445)
      (:list 6667 79.35556)
      (:list 8000 93.66667)
      (:list 9333 108.77779)
      (:list 10667 123.8889))))
   (:value
    (:object
     (:class voice)
     (:slots
      ((:onset 0)
       (:duration 11999)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "VOICE")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:tree
        (:list
         1
         (:list
          (:list
           (:list 4 4)
           (:list (:list 4 (:list 1 1 1 1 1 1 1 1 1)))))))
       (:lmidic
        (:list
         (:list 8496 8932 6994 8492 7900 6882 6700 8349)
         (:list 8496 8932 6994 8492 7900 6882 6700 8932)
         (:list 8496 8932 6994 8492 7900 6882 5618 8932)
         (:list 8496 8932 6994 8492 7900 6337 5618 8932)
         (:list 8496 8932 6994 8492 7774 6337 5618 8932)
         (:list 8496 8932 6994 7056 7774 6337 5618 8932)
         (:list 8496 8932 8494 7056 7774 6337 5618 8932)
         (:list 8496 7775 8494 7056 7774 6337 5618 8932)
         (:list 8496 7775 8494 7056 7774 6337 5618 8932)))
       (:lonset
        (:list 0 1333 2667 4000 5333 6667 8000 9333 10667 12000))
       (:ldur
        (:list
         (:list 1332 1332 1332 1332 1332 1332 1332 1332)
         (:list 1333 1333 1333 1333 1333 1333 1333 1333)
         (:list 1332 1332 1332 1332 1332 1332 1332 1332)
         (:list 1332 1332 1332 1332 1332 1332 1332 1332)
         (:list 1333 1333 1333 1333 1333 1333 1333 1333)
         (:list 1332 1332 1332 1332 1332 1332 1332 1332)
         (:list 1332 1332 1332 1332 1332 1332 1332 1332)
         (:list 1333 1333 1333 1333 1333 1333 1333 1333)
         (:list 1332 1332 1332 1332 1332 1332 1332 1332)))
       (:lvel (:list 100 100 100 100 100 100 100 100))
       (:loffset (:list 0 0 0 0 0 0 0 0))
       (:lchan (:list 9 9 9 9 9 9 9 9))
       (:lport (:list nil nil nil nil nil nil nil nil))
       (:llegato nil)
       (:tempo 20)))))
   (:id 7))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference play-om\#)
   (:group-id nil)
   (:name "play-om#")
   (:x 53)
   (:y 722)
   (:w 122)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICE")
     (:value (:list nil))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 938)
   (:y 577)
   (:w 32)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 9)
   (:id 9))
  (:box
   (:type :function)
   (:reference om-scale)
   (:group-id nil)
   (:name "om-scale")
   (:x 512)
   (:y 136)
   (:w 115)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MINOUT")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MAXOUT")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 548)
   (:y 101)
   (:w 32)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 11))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 580)
   (:y 101)
   (:w 38)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 11)
   (:id 12))
  (:box
   (:type :function)
   (:reference om-scale)
   (:group-id nil)
   (:name "om-scale")
   (:x 187)
   (:y 138)
   (:w 115)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MINOUT")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MAXOUT")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 223)
   (:y 103)
   (:w 32)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 14))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 255)
   (:y 103)
   (:w 38)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 11)
   (:id 15))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 51)
   (:y 537)
   (:w 306)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1 1 1 1 1 1)))))
   (:id 16))
  (:box
   (:type :function)
   (:reference reverse)
   (:group-id nil)
   (:name "reverse")
   (:x 56)
   (:y 45)
   (:w 101)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :function)
   (:reference permut-random)
   (:group-id nil)
   (:name "permut-random")
   (:x 760)
   (:y 233)
   (:w 173)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 18))
  (:box
   (:type :function)
   (:reference first-n)
   (:group-id nil)
   (:name "first-n")
   (:x 238)
   (:y 360)
   (:w 90)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda :lambda)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "N") (:value 0) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:box
   (:type :function)
   (:reference mapcar)
   (:group-id nil)
   (:name "mapcar")
   (:x 305)
   (:y 421)
   (:w 102)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 20))
  (:box
   (:type :function)
   (:reference first-n)
   (:group-id nil)
   (:name "first-n")
   (:x 439)
   (:y 361)
   (:w 90)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda :lambda)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "N") (:value 0) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 21))
  (:box
   (:type :function)
   (:reference mapcar)
   (:group-id nil)
   (:name "mapcar")
   (:x 506)
   (:y 410)
   (:w 102)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:box
   (:type :function)
   (:reference permut-random)
   (:group-id nil)
   (:name "permut-random")
   (:x 1076)
   (:y 341)
   (:w 173)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 23))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "densidade")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (500 500)) (:position (32 32)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 85)
       (:y 42)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 255)
       (:y 48)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 165)
       (:y 410)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "loop-list")
       (:x 60)
       (:y 131)
       (:w 90)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 3))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "loop-list")
       (:x 230)
       (:y 132)
       (:w 90)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 4))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 179)
       (:y 249)
       (:w 118)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 133)
       (:y 322)
       (:w 76)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 6))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 80)
       (:y 401)
       (:w 78)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 7)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 6 :out 1)) (:to (:box 2 :in 0))))))
   (:group-id nil)
   (:name "densidade")
   (:x 399)
   (:y 471)
   (:w 128)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 24))
  (:box
   (:type :function)
   (:reference last-n)
   (:group-id nil)
   (:name "last-n")
   (:x 78)
   (:y 106)
   (:w 87)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "N") (:value 0) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 25))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 125)
   (:y 71)
   (:w 32)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 26))
  (:box
   (:type :function)
   (:reference first-n)
   (:group-id nil)
   (:name "first-n")
   (:x 398)
   (:y 78)
   (:w 90)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "N") (:value 0) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 27))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 447)
   (:y 43)
   (:w 32)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 28))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "new-patch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (890 591)) (:position (627 153)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 73)
       (:y 40)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :special)
       (:reference loop-for)
       (:group-id nil)
       (:name "loop-for")
       (:x 71)
       (:y 189)
       (:w 89)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "from")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "to")
         (:value 10)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 1)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 0))))))
   (:group-id nil)
   (:name "new-patch")
   (:x 838)
   (:y 454)
   (:w 128)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs)
   (:id 29))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "new-patch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (717 921)) (:position (774 56)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 76)
       (:y 41)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 261)
       (:y 53)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 408)
       (:y 648)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 50)
       (:y 140)
       (:w 92)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 194)
       (:y 134)
       (:w 92)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 80)
       (:y 193)
       (:w 63)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "args")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "args")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference list-max)
       (:group-id nil)
       (:name "list-max")
       (:x 52)
       (:y 238)
       (:w 107)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value (:list 0 1 2))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :special)
       (:reference loop-for)
       (:group-id nil)
       (:name "loop-for")
       (:x 119)
       (:y 342)
       (:w 89)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "from")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "to")
         (:value 10)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 7))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 125)
       (:y 307)
       (:w 32)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 0)
       (:id 8))
      (:box
       (:type :function)
       (:reference last-n)
       (:group-id nil)
       (:name "last-n")
       (:x 390)
       (:y 423)
       (:w 87)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "N")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference butlast)
       (:group-id nil)
       (:name "butlast")
       (:x 253)
       (:y 424)
       (:w 96)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "n")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 299)
       (:y 479)
       (:w 118)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 337)
       (:y 525)
       (:w 76)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 12))
      (:box
       (:type :function)
       (:reference remove)
       (:group-id nil)
       (:name "remove")
       (:x 387)
       (:y 602)
       (:w 102)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ITEM")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 293)
       (:y 622)
       (:w 78)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 14)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 0 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 1)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 10 :in 1)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 11 :in 1)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 12 :out 1)) (:to (:box 13 :in 1)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 2 :in 0))))))
   (:group-id nil)
   (:name "new-patch")
   (:x 653)
   (:y 511)
   (:w 128)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 30))
  (:box
   (:type :function)
   (:reference first)
   (:group-id nil)
   (:name "first")
   (:x 542)
   (:y 548)
   (:w 72)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 31))
  (:box
   (:type :function)
   (:reference last)
   (:group-id nil)
   (:name "last")
   (:x 705)
   (:y 423)
   (:w 69)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 32))
  (:box
   (:type :function)
   (:reference flat)
   (:group-id nil)
   (:name "flat")
   (:x 706)
   (:y 465)
   (:w 66)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 33))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference diamond-identity)
   (:group-id nil)
   (:name "diamond-identity")
   (:x 686)
   (:y 21)
   (:w 184)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "IDENTITY")
     (:value (:list 11 19 97))
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 34))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference choose)
   (:group-id nil)
   (:name "choose")
   (:x 802)
   (:y 102)
   (:w 97)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list 1 2 3 4 5 6 7 8 9 10))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHORD-N")
     (:value (:list 1 7 9))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 35))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 833)
   (:y 67)
   (:w 78)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6)
   (:id 36))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference interval-sob)
   (:group-id nil)
   (:name "interval-sob")
   (:x 1074)
   (:y 76)
   (:w 140)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SIEVE")
     (:value (:list 2 3 7 11 12))
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 37))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "value box")
   (:x 1078)
   (:y 21)
   (:w 69)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 97/64)
   (:id 38))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt-octave)
   (:group-id nil)
   (:name "rt-octave")
   (:x 1100)
   (:y 200)
   (:w 115)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FRAQ")
     (:value 3/2)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "octave")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 39))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 1160)
   (:y 165)
   (:w 32)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 8)
   (:id 40))
  (:box
   (:type :function)
   (:reference length)
   (:group-id nil)
   (:name "length")
   (:x 1041)
   (:y 521)
   (:w 92)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 41))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt-octave)
   (:group-id nil)
   (:name "rt-octave")
   (:x 709)
   (:y 141)
   (:w 115)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FRAQ")
     (:value 4)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "octave")
     (:value 4)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 42))
  (:box
   (:type :object)
   (:reference voice)
   (:group-id nil)
   (:name nil)
   (:x 249)
   (:y 836)
   (:w 1277)
   (:h 155)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TREE")
     (:value (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list (:list 6000)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 60)
     (:reactive nil))
    (:input (:type :key) (:name "lvel") (:value 100) (:reactive nil))
    (:input (:type :key) (:name "loffset") (:value 0) (:reactive nil))
    (:input (:type :key) (:name "lchan") (:value 1) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "TREE") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "TEMPO") (:reactive nil))
    (:output (:name "lvel") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 8.3)
      (:list 1500 14.6)
      (:list 2000 20.1)
      (:list 3000 24.766667)
      (:list 3200 29.433333)
      (:list 4400 34.433335)
      (:list 4500 39.433335)
      (:list 5200 45.233334)
      (:list 6000 56.366665)
      (:list 6700 60.699997)
      (:list 7500 65.033326)
      (:list 8200 69.36666)
      (:list 9000 73.7)
      (:list 9700 78.03333)
      (:list 10500 82.36667)
      (:list 10900 86.700005)
      (:list 11700 91.03334)
      (:list 12000 101.36668)
      (:list 12900 106.500016)
      (:list 13500 111.30002)
      (:list 14900 116.10002)
      (:list 15000 120.06669)
      (:list 16400 124.033356)
      (:list 16500 128.00002)
      (:list 17900 131.16669)
      (:list 18000 140.33336)
      (:list 18800 143.50003)
      (:list 19100 147.4667)
      (:list 19500 151.93338)
      (:list 20300 156.40006)
      (:list 21000 161.36673)
      (:list 21800 165.5334)
      (:list 22500 169.70008)
      (:list 23300 173.86675)
      (:list 24000 184.03342)
      (:list 24500 187.70009)
      (:list 25500 192.36676))))
   (:value
    (:object
     (:class voice)
     (:slots
      ((:onset 0)
       (:duration 24499)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name nil)
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:tree
        (:list
         5
         (:list
          (:list
           (:list 4 4)
           (:list
            1
            (:list 1 (:list 1.0 2))
            (:list 1 (:list 2.0 12 1.0))
            (:list 1 (:list 7.0 8))))
          (:list
           (:list 4 4)
           (:list
            (:list 1 (:list 7.0 8))
            (:list 1 (:list 7.0 8))
            (:list 1 (:list 7.0 8))
            (:list 1 (:list 4.0 8 3.0))))
          (:list
           (:list 4 4)
           (:list
            (:list 1 (:list 3.0 2))
            (:list 1 (:list 14.0 1))
            (:list 1 (:list 14.0 1))
            (:list 1 (:list 14.0 1))))
          (:list
           (:list 4 4)
           (:list
            (:list 1 (:list 8.0 3.0 4))
            (:list 1 (:list 8.0 7))
            (:list 1 (:list 8.0 7))
            (:list 1 (:list 8.0 7))))
          (:list (:list 4 4) (:list (:list 1 (:list 1.0 -2)) -3)))))
       (:lmidic
        (:list
         (:list 8496)
         (:list 8932)
         (:list 6994)
         (:list 8492)
         (:list 7900)
         (:list 6882)
         (:list 6700)
         (:list 8349)
         (:list 8496)
         (:list 7775)
         (:list 8494)
         (:list 7056)
         (:list 7774)
         (:list 6337)
         (:list 5618)
         (:list 8932)))
       (:lonset
        (:list
         0
         2000
         3200
         5200
         6700
         8200
         9700
         10900
         12900
         14900
         16400
         17900
         19100
         20300
         21800
         23300
         30000))
       (:ldur
        (:list
         (:list 1999)
         (:list 1199)
         (:list 1999)
         (:list 1499)
         (:list 1499)
         (:list 1499)
         (:list 1199)
         (:list 1999)
         (:list 1999)
         (:list 1499)
         (:list 1499)
         (:list 1199)
         (:list 1199)
         (:list 1499)
         (:list 1499)
         (:list 1199)))
       (:lvel (:list 100))
       (:loffset (:list 0))
       (:lchan (:list 9))
       (:lport (:list nil))
       (:llegato nil)
       (:tempo 40)))))
   (:id 43))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 677)
   (:y 662)
   (:w 155)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 1/5 1/3 1/4))
   (:id 44))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference play-om\#)
   (:group-id nil)
   (:name "play-om#")
   (:x 79)
   (:y 953)
   (:w 122)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICE")
     (:value (:list nil))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 45))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 1404)
   (:y 801)
   (:w 32)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 9)
   (:id 46))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "my-patch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (502 416)) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 50)
       (:y 99)
       (:w 82)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 261)
       (:y 50)
       (:w 82)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 300)
       (:y 274)
       (:w 94)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 2") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "output 2")
       (:x 50)
       (:y 210)
       (:w 95)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 50)
       (:y 149)
       (:w 66)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :function)
       (:reference mktree)
       (:group-id nil)
       (:name "mktree")
       (:x 300)
       (:y 213)
       (:w 99)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RHYTHM")
         (:value (:list 1/4 1/4 1/4 1/4))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TIMESIGNS")
         (:value (:list 4 4))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 58)
       (:y 205)
       (:w 92)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference nth-random)
       (:group-id nil)
       (:name "nth-random")
       (:x 261)
       (:y 100)
       (:w 139)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 285)
       (:y 171)
       (:w 117)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 8)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 4 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 7 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 6 :in 0)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 3 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 2 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 5 :in 0))))))
   (:group-id nil)
   (:name "my-patch")
   (:x 664)
   (:y 745)
   (:w 119)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "output 1") (:reactive nil))
    (:output (:name "output 2") (:reactive nil)))
   (:id 47))
  (:box
   (:type :function)
   (:reference first)
   (:group-id nil)
   (:name "first")
   (:x 283)
   (:y 747)
   (:w 72)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 48))
  (:box
   (:type :function)
   (:reference last)
   (:group-id nil)
   (:name "last")
   (:x 506)
   (:y 733)
   (:w 69)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 49))
  (:box
   (:type :function)
   (:reference x-append)
   (:group-id nil)
   (:name "x-append")
   (:x 416)
   (:y 770)
   (:w 118)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "L1?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "L2?")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 50))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 820)
   (:y 785)
   (:w 50)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 40)
   (:id 51))
  (:box
   (:type :function)
   (:reference flat)
   (:group-id nil)
   (:name "flat")
   (:x 1061)
   (:y 628)
   (:w 66)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 52))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference voice->text)
   (:group-id nil)
   (:name "voice->text")
   (:x 51)
   (:y 792)
   (:w 137)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICE")
     (:value (:list nil))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 53))
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name nil)
   (:x 4)
   (:y 838)
   (:w 223)
   (:h 50)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil)))
   (:window (:size (500 713)) (:position (32 32)))
   (:edition-params)
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         "0 , 8496 100 9 1999 ;"
         "1999 , 8932 100 9 1199 ;"
         "3198 , 6994 100 9 1999 ;"
         "5197 , 8492 100 9 1499 ;"
         "6696 , 7900 100 9 1499 ;"
         "8195 , 6882 100 9 1499 ;"
         "9694 , 6700 100 9 1199 ;"
         "10893 , 8349 100 9 1999 ;"
         "12892 , 8496 100 9 1999 ;"
         "14891 , 7775 100 9 1499 ;"
         "16390 , 8494 100 9 1499 ;"
         "17889 , 7056 100 9 1199 ;"
         "19088 , 7774 100 9 1199 ;"
         "20287 , 6337 100 9 1499 ;"
         "21786 , 5618 100 9 1499 ;"
         "23285 , 8932 100 9 1199 ;"))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 54))
  (:box
   (:type :function)
   (:reference remove-duplicates)
   (:group-id nil)
   (:name "remove-duplicates")
   (:x 1197)
   (:y 649)
   (:w 196)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 55)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 1)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 23 :in 0)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 1)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 18 :in 0)))
  (:connection (:from (:box 4 :out 2)) (:to (:box 20 :in 1)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 17 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 27 :in 0)))
  (:connection (:from (:box 5 :out 1)) (:to (:box 34 :in 0)))
  (:connection (:from (:box 5 :out 1)) (:to (:box 37 :in 1)))
  (:connection (:from (:box 6 :out 2)) (:to (:box 22 :in 1)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 7 :out 2)) (:to (:box 48 :in 0)))
  (:connection (:from (:box 7 :out 2)) (:to (:box 49 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 7 :in 6)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 6 :in 2)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 10 :in 1)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 10 :in 2)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 4 :in 2)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 13 :in 1)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 13 :in 2)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 7 :in 1)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 25 :in 0)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 21 :in 0)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 20 :in 0)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 24 :in 0)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 22 :in 0)))
  (:connection (:from (:box 22 :out 0)) (:to (:box 24 :in 1)))
  (:connection (:from (:box 23 :out 0)) (:to (:box 19 :in 0)))
  (:connection (:from (:box 24 :out 0)) (:to (:box 31 :in 0)))
  (:connection (:from (:box 24 :out 0)) (:to (:box 32 :in 0)))
  (:connection (:from (:box 25 :out 0)) (:to (:box 13 :in 0)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 25 :in 1)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 10 :in 0)))
  (:connection (:from (:box 28 :out 0)) (:to (:box 27 :in 1)))
  (:connection (:from (:box 30 :out 0)) (:to (:box 7 :in 2)))
  (:connection (:from (:box 30 :out 0)) (:to (:box 41 :in 0)))
  (:connection (:from (:box 31 :out 0)) (:to (:box 30 :in 0)))
  (:connection (:from (:box 32 :out 0)) (:to (:box 33 :in 0)))
  (:connection (:from (:box 33 :out 0)) (:to (:box 30 :in 1)))
  (:connection (:from (:box 34 :out 1)) (:to (:box 35 :in 0)))
  (:connection (:from (:box 35 :out 0)) (:to (:box 42 :in 0)))
  (:connection (:from (:box 36 :out 0)) (:to (:box 35 :in 1)))
  (:connection (:from (:box 37 :out 1)) (:to (:box 39 :in 0)))
  (:connection (:from (:box 38 :out 0)) (:to (:box 37 :in 0)))
  (:connection (:from (:box 39 :out 0)) (:to (:box 1 :in 0)))
  (:connection (:from (:box 40 :out 0)) (:to (:box 39 :in 1)))
  (:connection (:from (:box 42 :out 0)) (:to (:box 3 :in 0)))
  (:connection (:from (:box 43 :out 0)) (:to (:box 45 :in 0)))
  (:connection (:from (:box 43 :out 0)) (:to (:box 53 :in 0)))
  (:connection (:from (:box 43 :out 2)) (:to (:box 52 :in 0)))
  (:connection
   (:from (:box 44 :out 0))
   (:to (:box 47 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 46 :out 0)) (:to (:box 43 :in 6)))
  (:connection
   (:from (:box 47 :out 0))
   (:to (:box 43 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 47 :out 1))
   (:to (:box 43 :in 2))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 48 :out 0)) (:to (:box 50 :in 0)))
  (:connection (:from (:box 49 :out 0)) (:to (:box 50 :in 1)))
  (:connection (:from (:box 50 :out 0)) (:to (:box 47 :in 0)))
  (:connection (:from (:box 51 :out 0)) (:to (:box 43 :in 3)))
  (:connection (:from (:box 52 :out 0)) (:to (:box 55 :in 0)))
  (:connection (:from (:box 53 :out 0)) (:to (:box 54 :in 0)))))