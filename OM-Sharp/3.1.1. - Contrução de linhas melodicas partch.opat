
(:patch
 (:name "3.1.1. - Contrução de linhas melodicas partch")
 (:doc "")
 (:info
  (:created "2020/09/21 13:25:14")
  (:modified "2020/12/18 21:04:00")
  (:by "om-sharp")
  (:version 1.0101))
 (:window (:size (1942 1102)) (:position (-9 -9)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name "TEXTFILE")
   (:x 1203)
   (:y 57)
   (:w 377)
   (:h 122)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "output-mode")
     (:value :list)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil))
    (:output (:name "output-mode") (:reactive nil)))
   (:window (:size (1920 448)) (:position (0 0)))
   (:edition-params (:output-mode :list))
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         "(1) (1 1) (3 1) (1 2 1) (1 -2 1) (1 1 1) (-1 1 -1) (1 (1 (1 1 1))) (1 (1 (1 -1 1))) (2 (3 (-1 1 2))) (2 (4 (-1 1 1 2))) "
         ""))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 0))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "Perfil")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1920 1026)) (:position (-9 -9)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 316)
       (:y 954)
       (:w 88)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 700)
       (:y 35)
       (:w 73)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 188)
       (:y 36)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:comment
       (:x 560)
       (:y 378)
       (:w 399)
       (:h 80)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font-or-nil
         (:font (:font (:face "Verdana") (:size 24) (:style :bold)))
         (:t-or-nil t)))
       (:align nil)
       (:text "Esse patch varia o perfil aleatoriamente.")
       (:id 3))
      (:comment
       (:x 342)
       (:y 104)
       (:w 280)
       (:h 44)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text
        "Aqui decidimos sem temos um perfil mais aberto ou fechado.")
       (:id 4))
      (:box
       (:type :function)
       (:reference om/)
       (:group-id nil)
       (:name "om/")
       (:x 265)
       (:y 100)
       (:w 78)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 2)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 305)
       (:y 54)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 6))
      (:box
       (:type :function)
       (:reference om/)
       (:group-id nil)
       (:name "om/")
       (:x 496)
       (:y 242)
       (:w 78)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 2)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 541)
       (:y 197)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2)
       (:id 8))
      (:box
       (:type :function)
       (:reference om-scale)
       (:group-id nil)
       (:name "om-scale")
       (:x 429)
       (:y 765)
       (:w 127)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 461)
       (:y 711)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 10))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "escala varios perfis")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (683 590)) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
           (:group-id nil)
           (:name "input 1")
           (:x 358)
           (:y 235)
           (:w 92)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
           (:group-id nil)
           (:name "input 2")
           (:x 136)
           (:y 188)
           (:w 93)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "input 3") (:doc "")))
           (:group-id nil)
           (:name "input 3")
           (:x 77)
           (:y 50)
           (:w 93)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 4) (:name "input 4") (:doc "")))
           (:group-id nil)
           (:name "input 4")
           (:x 483)
           (:y 157)
           (:w 93)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 5) (:name "input 5") (:doc "")))
           (:group-id nil)
           (:name "input 5")
           (:x 165)
           (:y 50)
           (:w 93)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 151)
           (:y 448)
           (:w 107)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 5))
          (:box
           (:type :function)
           (:reference reverse)
           (:group-id nil)
           (:name "reverse")
           (:x 281)
           (:y 141)
           (:w 113)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 50)
           (:y 330)
           (:w 132)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 151)
           (:y 382)
           (:w 132)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "Escala o perfil")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input 1")
                 (:doc "")))
               (:group-id nil)
               (:name "input 1")
               (:x 66)
               (:y 50)
               (:w 92)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 50)
               (:y 220)
               (:w 107)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "input 2")
                 (:doc "")))
               (:group-id nil)
               (:name "input 2")
               (:x 150)
               (:y 50)
               (:w 93)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "input 3")
                 (:doc "")))
               (:group-id nil)
               (:name "input 3")
               (:x 116)
               (:y 104)
               (:w 93)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :function)
               (:reference x-append)
               (:group-id nil)
               (:name "x-append")
               (:x 50)
               (:y 154)
               (:w 132)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "L1?")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "L2?")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :function)
               (:reference om-scale)
               (:group-id nil)
               (:name "om-scale")
               (:x 66)
               (:y 100)
               (:w 127)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "MINOUT")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "MAXOUT")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "value box")
               (:x 98)
               (:y 65)
               (:w 37)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 6)
               (:id 6)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 5 :in 0))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 5 :in 2))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 4 :in 1))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 1 :in 0))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 5 :in 1))))))
           (:group-id nil)
           (:name "Escala o perfil")
           (:x 299)
           (:y 285)
           (:w 177)
           (:h 60)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input 1")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 2")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 3")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 9))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "Escala o perfil reverso")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input 1")
                 (:doc "")))
               (:group-id nil)
               (:name "input 1")
               (:x 50)
               (:y 64)
               (:w 92)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 50)
               (:y 180)
               (:w 107)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "input 2")
                 (:doc "")))
               (:group-id nil)
               (:name "input 2")
               (:x 134)
               (:y 64)
               (:w 93)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :function)
               (:reference om-scale)
               (:group-id nil)
               (:name "om-scale")
               (:x 50)
               (:y 114)
               (:w 127)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "MINOUT")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "MAXOUT")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "value box")
               (:x 99)
               (:y 50)
               (:w 32)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 4)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 3 :in 0))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 3 :in 2))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 1 :in 0))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 3 :in 1))))))
           (:group-id nil)
           (:name "Escala o perfil reverso")
           (:x 383)
           (:y 207)
           (:w 261)
           (:h 60)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input 1")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 2")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 10))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "escala o perfil")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input 1")
                 (:doc "")))
               (:group-id nil)
               (:name "input 1")
               (:x 134)
               (:y 50)
               (:w 92)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 50)
               (:y 166)
               (:w 107)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "input 2")
                 (:doc "")))
               (:group-id nil)
               (:name "input 2")
               (:x 50)
               (:y 50)
               (:w 93)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :function)
               (:reference om-scale)
               (:group-id nil)
               (:name "om-scale")
               (:x 50)
               (:y 100)
               (:w 127)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "MINOUT")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "MAXOUT")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "value box")
               (:x 82)
               (:y 65)
               (:w 32)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 3)
               (:id 4)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 3 :in 2))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 3 :in 0))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 1 :in 0))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 3 :in 1))))))
           (:group-id nil)
           (:name "escala o perfil")
           (:x 136)
           (:y 238)
           (:w 176)
           (:h 60)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input 1")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 2")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 11))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "Escala o perfil")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input 1")
                 (:doc "")))
               (:group-id nil)
               (:name "input 1")
               (:x 134)
               (:y 50)
               (:w 92)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 50)
               (:y 166)
               (:w 107)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "input 2")
                 (:doc "")))
               (:group-id nil)
               (:name "input 2")
               (:x 50)
               (:y 50)
               (:w 93)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :function)
               (:reference om-scale)
               (:group-id nil)
               (:name "om-scale")
               (:x 50)
               (:y 100)
               (:w 127)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "MINOUT")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "MAXOUT")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "aux")
               (:x 92)
               (:y 54)
               (:w 32)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 4)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 3 :in 2))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 3 :in 0))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 1 :in 0))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 3 :in 1))))))
           (:group-id nil)
           (:name "Escala o perfil")
           (:x 77)
           (:y 100)
           (:w 177)
           (:h 60)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input 1")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 2")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 12)))
         (:connections
          (:connection
           (:from (:box 0 :out 0))
           (:to (:box 9 :in 1))
           (:attributes
            (:color
             (:color 0.2 0.4 0.5 1.0)
             :style
             :curved
             :modif
             nil)))
          (:connection
           (:from (:box 1 :out 0))
           (:to (:box 11 :in 0))
           (:attributes
            (:color
             (:color 0.2 0.4 0.5 1.0)
             :style
             :curved
             :modif
             nil)))
          (:connection
           (:from (:box 2 :out 0))
           (:to (:box 12 :in 0))
           (:attributes
            (:color
             (:color 0.2 0.4 0.5 1.0)
             :style
             :curved
             :modif
             nil)))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 10 :in 1))
           (:attributes
            (:color
             (:color 0.2 0.4 0.5 1.0)
             :style
             :curved
             :modif
             nil)))
          (:connection
           (:from (:box 4 :out 0))
           (:to (:box 12 :in 1))
           (:attributes
            (:color
             (:color 0.2 0.4 0.5 1.0)
             :style
             :curved
             :modif
             nil)))
          (:connection
           (:from (:box 6 :out 0))
           (:to (:box 9 :in 0))
           (:attributes
            (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
          (:connection
           (:from (:box 6 :out 0))
           (:to (:box 10 :in 0))
           (:attributes
            (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
          (:connection
           (:from (:box 6 :out 0))
           (:to (:box 11 :in 1))
           (:attributes
            (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 0)))
          (:connection
           (:from (:box 8 :out 0))
           (:to (:box 5 :in 0))
           (:attributes
            (:color
             (:color 0.2 0.4 0.5 1.0)
             :style
             :curved
             :modif
             nil)))
          (:connection
           (:from (:box 9 :out 0))
           (:to (:box 8 :in 1))
           (:attributes
            (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
          (:connection
           (:from (:box 10 :out 0))
           (:to (:box 9 :in 2))
           (:attributes
            (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 7 :in 1))
           (:attributes
            (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
          (:connection
           (:from (:box 12 :out 0))
           (:to (:box 7 :in 0))
           (:attributes
            (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
          (:connection
           (:from (:box 12 :out 0))
           (:to (:box 6 :in 0))
           (:attributes
            (:color
             (:color 0.2 0.4 0.5 1.0)
             :style
             nil
             :modif
             nil))))))
       (:group-id nil)
       (:name "escala varios perfis")
       (:x 270)
       (:y 375)
       (:w 229)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input 1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 3")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 4")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 5")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 11))
      (:comment
       (:x 286)
       (:y 569)
       (:w 262)
       (:h 80)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text
        "Escala o perfil a partir de quantas notas temos na estrutura de afinação")
       (:id 12))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "escala o perfil")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (507 568)) (:position (96 96)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
           (:group-id nil)
           (:name "input 1")
           (:x 315)
           (:y 50)
           (:w 92)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
           (:group-id nil)
           (:name "input 2")
           (:x 138)
           (:y 54)
           (:w 93)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "input 3") (:doc "")))
           (:group-id nil)
           (:name "input 3")
           (:x 50)
           (:y 54)
           (:w 93)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 4) (:name "input 4") (:doc "")))
           (:group-id nil)
           (:name "input 4")
           (:x 233)
           (:y 50)
           (:w 93)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 161)
           (:y 426)
           (:w 107)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 4))
          (:box
           (:type :function)
           (:reference flat)
           (:group-id nil)
           (:name "flat")
           (:x 161)
           (:y 360)
           (:w 70)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 154)
           (:y 309)
           (:w 132)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "scala o perfil")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input 1")
                 (:doc "")))
               (:group-id nil)
               (:name "input 1")
               (:x 12)
               (:y 175)
               (:w 92)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 66)
               (:y 293)
               (:w 107)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "input 2")
                 (:doc "")))
               (:group-id nil)
               (:name "input 2")
               (:x 314)
               (:y 50)
               (:w 93)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :function)
               (:reference om-scale)
               (:group-id nil)
               (:name "om-scale")
               (:x 66)
               (:y 227)
               (:w 284)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "MINOUT")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "MAXOUT")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :function)
               (:reference om-random)
               (:group-id nil)
               (:name "om-random")
               (:x 81)
               (:y 134)
               (:w 155)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LOW")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "HIGH")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "value box")
               (:x 99)
               (:y 99)
               (:w 32)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 5))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "value box")
               (:x 177)
               (:y 66)
               (:w 32)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 5)
               (:id 6))
              (:box
               (:type :function)
               (:reference om-random)
               (:group-id nil)
               (:name "om-random")
               (:x 236)
               (:y 100)
               (:w 155)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LOW")
                 (:value 4)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "HIGH")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 7))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "value box")
               (:x 254)
               (:y 65)
               (:w 32)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 8)
               (:id 8)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 3 :in 0))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 7 :in 1))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 1 :in 0))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 3 :in 1)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 4 :in 1)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 3 :in 2)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 7 :in 0))))))
           (:group-id nil)
           (:name "scala o perfil")
           (:x 233)
           (:y 100)
           (:w 164)
           (:h 60)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input 1")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 2")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 7))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "Escala o perfil")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input 1")
                 (:doc "")))
               (:group-id nil)
               (:name "input 1")
               (:x 50)
               (:y 123)
               (:w 92)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 50)
               (:y 239)
               (:w 107)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "input 2")
                 (:doc "")))
               (:group-id nil)
               (:name "input 2")
               (:x 381)
               (:y 55)
               (:w 93)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :function)
               (:reference om-scale)
               (:group-id nil)
               (:name "om-scale")
               (:x 50)
               (:y 173)
               (:w 284)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "MINOUT")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "MAXOUT")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :function)
               (:reference om-random)
               (:group-id nil)
               (:name "om-random")
               (:x 130)
               (:y 105)
               (:w 155)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LOW")
                 (:value 2)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "HIGH")
                 (:value 5)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :function)
               (:reference om-random)
               (:group-id nil)
               (:name "om-random")
               (:x 303)
               (:y 105)
               (:w 155)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LOW")
                 (:value 2)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "HIGH")
                 (:value 5)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "value box")
               (:x 330)
               (:y 50)
               (:w 32)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 9)
               (:id 6)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 3 :in 0))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 5 :in 1))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 1 :in 0))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 3 :in 1)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 3 :in 2)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 5 :in 0))))))
           (:group-id nil)
           (:name "Escala o perfil")
           (:x 50)
           (:y 104)
           (:w 177)
           (:h 60)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input 1")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 2")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 8)))
         (:connections
          (:connection
           (:from (:box 0 :out 0))
           (:to (:box 7 :in 1))
           (:attributes
            (:color
             (:color 0.2 0.4 0.5 1.0)
             :style
             :curved
             :modif
             nil)))
          (:connection
           (:from (:box 1 :out 0))
           (:to (:box 8 :in 1))
           (:attributes
            (:color
             (:color 0.2 0.4 0.5 1.0)
             :style
             :curved
             :modif
             nil)))
          (:connection
           (:from (:box 2 :out 0))
           (:to (:box 8 :in 0))
           (:attributes
            (:color
             (:color 0.2 0.4 0.5 1.0)
             :style
             :curved
             :modif
             nil)))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 7 :in 0))
           (:attributes
            (:color
             (:color 0.2 0.4 0.5 1.0)
             :style
             :curved
             :modif
             nil)))
          (:connection
           (:from (:box 5 :out 0))
           (:to (:box 4 :in 0))
           (:attributes
            (:color
             (:color 0.2 0.4 0.5 1.0)
             :style
             :curved
             :modif
             nil)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 0)))
          (:connection
           (:from (:box 7 :out 0))
           (:to (:box 6 :in 1))
           (:attributes
            (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
          (:connection
           (:from (:box 7 :out 0))
           (:to (:box 6 :in 2))
           (:attributes
            (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
          (:connection
           (:from (:box 8 :out 0))
           (:to (:box 6 :in 0))
           (:attributes
            (:color
             (:color 0.2 0.4 0.5 1.0)
             :style
             nil
             :modif
             nil))))))
       (:group-id nil)
       (:name "escala o perfil")
       (:x 107)
       (:y 571)
       (:w 176)
       (:h 60)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input 1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 3")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 4")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 13))
      (:comment
       (:x 564)
       (:y 767)
       (:w 363)
       (:h 80)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text
        "Este om-scale é redundante, mas achamos ele necessário para ter certeza que não há erros no que diz a alturas.")
       (:id 14))
      (:box
       (:type :function)
       (:reference first-n)
       (:group-id nil)
       (:name "first-n")
       (:x 417)
       (:y 896)
       (:w 97)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "N")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 576)
       (:y 904)
       (:w 43)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 30)
       (:id 16))
      (:comment
       (:x 624)
       (:y 894)
       (:w 363)
       (:h 80)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text
        "Controla o tamanho da frase criada. Quando menor o número menor a frase.")
       (:id 17)))
     (:connections
      (:connection
       (:from (:box 1 :out 0))
       (:to (:box 11 :in 4))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 9 :in 2)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 13 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 13 :in 1))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 0)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 11 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 11 :in 1))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 11 :in 2))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 1)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 11 :in 3))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 7 :in 1)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 1)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 13 :in 2))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 13 :in 3))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 13 :out 0))
       (:to (:box 9 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 1))))))
   (:group-id nil)
   (:name "Perfil")
   (:x 597/10)
   (:y 139)
   (:w 200)
   (:h 87)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 1))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference choose)
   (:group-id nil)
   (:name "choose")
   (:x 741)
   (:y 603)
   (:w 107)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list (:list 6000 6530) (:list 7203 5049)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHORD-N")
     (:value (:list 2))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 2))
  (:box
   (:type :object)
   (:reference bpf)
   (:group-id nil)
   (:name "BPF")
   (:x 11)
   (:y 254)
   (:w 706)
   (:h 299)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "decimals")
     (:value 0)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil))
    (:output (:name "decimals") (:reactive nil)))
   (:window (:size (581 400)) (:position (192 192)))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 2900)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.0S0 0.0S0 0.0S0 1.0))
       (:decimals 0)
       (:x-points
        (:list
         0
         100
         200
         300
         400
         500
         600
         700
         800
         900
         1000
         1100
         1200
         1300
         1400
         1500
         1600
         1700
         1800
         1900
         2000
         2100
         2200
         2300
         2400
         2500
         2600
         2700
         2800
         2900))
       (:y-points
        (:list
         6
         1
         6
         17
         17
         4
         4
         6
         17
         1
         14
         12
         4
         17
         4
         6
         4
         14
         1
         17
         6
         9
         17
         17
         1
         6
         6
         17
         1
         3))))
     (:add-slots ((:name "BPF")))))
   (:id 3))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "sieve")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1920 1026)) (:position (-9 -9)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 125)
       (:y 723)
       (:w 88)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 2) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 617)
       (:y 734)
       (:w 88)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 77)
       (:y 375)
       (:w 401)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value
        (:list (:list 19 16 128) (:list 7 12 128) (:list 11 15 128)))
       (:id 2))
      (:box
       (:library "OM-Sieves")
       (:type :function)
       (:reference revel-sieve)
       (:group-id nil)
       (:name "revel-sieve")
       (:x 95)
       (:y 637)
       (:w 148)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:library "OM-Sieves")
       (:type :function)
       (:reference s-union-l)
       (:group-id nil)
       (:name "s-union-l")
       (:x 188)
       (:y 478)
       (:w 127)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SIEVE")
         (:value (:list (:list 19 16 64) (:list 11 16 64)))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:library "OM-Sieves")
       (:type :function)
       (:reference s-perfil)
       (:group-id nil)
       (:name "s-perfil")
       (:x 607)
       (:y 626)
       (:w 108)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SIEVE")
         (:value (:list 23 33 47 63 70))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:comment
       (:x 481)
       (:y 376)
       (:w 276)
       (:h 32)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "Aqui temos 3 os crivos")
       (:id 6))
      (:comment
       (:x 719)
       (:y 632)
       (:w 338)
       (:h 32)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "Este objeto revela o perfil deste crivo.")
       (:id 7))
      (:comment
       (:x 246)
       (:y 639)
       (:w 338)
       (:h 32)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "Este objeto revela o próprio crivo.")
       (:id 8))
      (:comment
       (:x 316)
       (:y 481)
       (:w 296)
       (:h 32)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "Este objeto une esses três crivos.")
       (:id 9)))
     (:connections
      (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 1 :in 0))))))
   (:group-id nil)
   (:name "sieve")
   (:x 39)
   (:y 0)
   (:w 200)
   (:h 92)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs
    (:output (:name "output") (:reactive nil))
    (:output (:name "output") (:reactive nil)))
   (:id 4))
  (:box
   (:type :function)
   (:reference length)
   (:group-id nil)
   (:name "length")
   (:x 333)
   (:y 162)
   (:w 100)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference play-om\#)
   (:group-id nil)
   (:name "play-om#")
   (:x 128)
   (:y 898)
   (:w 136)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICE")
     (:value (:list nil))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:type :object)
   (:reference voice)
   (:group-id nil)
   (:name nil)
   (:x 80)
   (:y 721)
   (:w 1580)
   (:h 149)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TREE")
     (:value (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list (:list 6000)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 80)
     (:reactive nil))
    (:input (:type :key) (:name "lvel") (:value 100) (:reactive nil))
    (:input (:type :key) (:name "loffset") (:value 0) (:reactive nil))
    (:input (:type :key) (:name "lchan") (:value 1) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "TREE") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "TEMPO") (:reactive nil))
    (:output (:name "lvel") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil)))
   (:window (:size (1924 1030)) (:position (-9 -9)))
   (:edition-params
    (:font-size 36)
    (:scale :scale-1/8)
    (:velocity-display :symbol)
    (:channel-display :hidden)
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 7)
      (:list 333 12.133333)
      (:list 667 15.466666)
      (:list 1000 19.8)
      (:list 1400 23.3)
      (:list 1550 27.974999)
      (:list 1700 31.349999)
      (:list 2000 34.6)
      (:list 2333 38.93333)
      (:list 2667 42.266663)
      (:list 3000 46.599995)
      (:list 3500 50.849995)
      (:list 4000 55.899994)
      (:list 4750 60.774994)
      (:list 5000 70.399994)
      (:list 5500 74.649994)
      (:list 5667 78.06666)
      (:list 5833 81.48332)
      (:list 6000 84.89999)
      (:list 6333 88.23332)
      (:list 6467 92.06666)
      (:list 6600 96.2)
      (:list 6733 99.53333)
      (:list 7000 103.2)
      (:list 7500 107.45)
      (:list 7667 110.86666)
      (:list 7833 115.08333)
      (:list 8000 117.99999))))
   (:value
    (:object
     (:class voice)
     (:slots
      ((:onset 0)
       (:duration 7999)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name nil)
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:tree
        (:list
         2
         (:list
          (:list
           (:list 5 4)
           (:list
            (:list 1 (:list -1 1 -1))
            (:list 1 (:list 2 (:list 3 (:list -1 1 2))))
            (:list 1 (:list -1 1 -1))
            (:list 1 (:list 1 1))
            (:list 1 (:list 3 1))))
          (:list
           (:list 5 4)
           (:list
            (:list 1 (:list 1 (:list 1 (:list 1 1 1))))
            (:list 1 (:list 2 (:list 4 (:list -1 1 1 2))))
            (:list 1 (:list 1 (:list 1 (:list 1 1 1))))
            -2)))))
       (:lmidic
        (:list
         (:list 7302)
         (:list 6198)
         (:list 7302)
         (:list 8644)
         (:list 8644)
         (:list 7006)
         (:list 7006)
         (:list 7302)
         (:list 8644)
         (:list 6198)
         (:list 8306)
         (:list 8146)
         (:list 7006)
         (:list 8644)
         (:list 7006)
         (:list 7302)
         (:list 7006)
         (:list 8306)
         (:list 6198)
         (:list 8644)
         (:list 7302)))
       (:lonset
        (:list
         333
         1000
         1550
         1700
         2333
         3000
         3500
         4000
         4750
         5000
         5500
         5667
         5833
         6000
         6467
         6600
         6733
         7000
         7500
         7667
         7833
         10000))
       (:ldur
        (:list
         (:list 333)
         (:list 399)
         (:list 149)
         (:list 299)
         (:list 333)
         (:list 499)
         (:list 499)
         (:list 749)
         (:list 249)
         (:list 499)
         (:list 166)
         (:list 165)
         (:list 166)
         (:list 332)
         (:list 132)
         (:list 132)
         (:list 266)
         (:list 499)
         (:list 166)
         (:list 165)
         (:list 166)))
       (:lvel
        (:list
         (:list 90)
         (:list 90)
         (:list 90)
         (:list 90)
         (:list 20)
         (:list 20)
         (:list 20)
         (:list 76)
         (:list 34)
         (:list 34)
         (:list 34)
         (:list 34)
         (:list 41)
         (:list 41)
         (:list 34)
         (:list 34)
         (:list 34)
         (:list 34)
         (:list 90)
         (:list 90)
         (:list 90)))
       (:loffset (:list 0))
       (:lchan (:list 9))
       (:lport (:list nil))
       (:llegato nil)
       (:tempo 60)))))
   (:id 7))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference voice->text)
   (:group-id nil)
   (:name "voice->text")
   (:x 353)
   (:y 897)
   (:w 154)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "VOICE")
     (:value (:list nil))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 837)
   (:y 662)
   (:w 56)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 60)
   (:id 9))
  (:box
   (:type :function)
   (:reference om-round)
   (:group-id nil)
   (:name "om-round")
   (:x 974)
   (:y 600)
   (:w 136)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 1) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name nil)
   (:x 363)
   (:y 938)
   (:w 268)
   (:h 50)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil)))
   (:window (:size (1920 1026)) (:position (-9 -9)))
   (:edition-params)
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         "0 , 6702 62 9 249 ;"
         "249 , 7946 62 9 499 ;"
         "748 , 6702 62 9 249 ;"
         "997 , 7902 62 9 249 ;"
         ""
         "1747 , 7857 34 9 249 ;"
         "1996 , 6746 34 9 249 ;"
         "2245 , 7946 34 9 499 ;"
         "2744 , 7946 62 9 249 ;"
         "2993 , 6702 76 9 249 ;"
         ""
         "3743 , 6702 76 9 249 ;"
         "3992 , 7857 76 9 249 ;"
         ""
         "4742 , 7902 76 9 249 ;"
         "4991 , 6702 20 9 249 ;"
         "5240 , 7902 20 9 499 ;"
         "5739 , 6702 76 9 249 ;"
         "5988 , 6702 76 9 249 ;"
         ""
         "6738 , 7902 76 9 249 ;"
         "6987 , 7857 76 9 249 ;"
         ""
         "7737 , 6746 20 9 249 ;"
         "7986 , 7857 20 9 249 ;"
         "8235 , 7857 20 9 499 ;"
         "8734 , 7902 76 9 249 ;"
         "8983 , 7200 62 9 249 ;"
         "9232 , 7200 62 9 499 ;"
         "9731 , 7902 62 9 249 ;"
         "9980 , 7200 62 9 249 ;"
         ""
         "10730 , 7902 20 9 249 ;"
         "10979 , 7857 20 9 249 ;"
         ""
         "11729 , 7200 90 9 249 ;"
         "11978 , 7200 90 9 249 ;"
         "12227 , 7946 90 9 499 ;"
         "12726 , 7946 90 9 249 ;"
         "12975 , 7857 34 9 249 ;"
         ""
         "13725 , 7857 34 9 249 ;"
         "13974 , 7902 34 9 249 ;"
         "14223 , 7200 62 9 499 ;"
         "14722 , 7946 76 9 249 ;"
         "14971 , 7200 76 9 249 ;"
         "15220 , 7902 76 9 499 ;"
         "15719 , 7902 76 9 249 ;"
         "15968 , 7902 20 9 249 ;"
         ""
         "16718 , 7902 20 9 249 ;"
         "16967 , 7902 90 9 249 ;"
         ""
         "17717 , 7902 90 9 249 ;"
         "17966 , 7902 90 9 249 ;"
         "18215 , 7902 90 9 499 ;"
         "18714 , 7902 20 9 249 ;"
         "18963 , 7902 20 9 249 ;"
         "19212 , 7902 20 9 499 ;"
         "19711 , 7902 90 9 249 ;"
         "19960 , 7902 20 9 249 ;"
         ""
         "20710 , 7902 20 9 249 ;"
         "20959 , 7902 20 9 249 ;"
         ""
         "21709 , 7902 20 9 249 ;"
         "21958 , 7902 76 9 249 ;"
         "22207 , 7902 76 9 499 ;"
         "22706 , 7902 62 9 249 ;"
         "22955 , 7902 62 9 249 ;"
         "23204 , 7902 62 9 499 ;"
         "23703 , 7902 62 9 249 ;"
         "23952 , 7902 34 9 249 ;"
         ""
         "24702 , 7902 34 9 249 ;"
         "24951 , 7902 34 9 249 ;"
         "25200 , 7902 90 9 499 ;"
         "25699 , 7902 20 9 249 ;"
         "25948 , 7902 20 9 249 ;"
         ""
         "26698 , 7902 20 9 249 ;"
         "26947 , 7902 20 9 249 ;"
         ""
         "27697 , 7902 62 9 249 ;"
         "27946 , 7902 62 9 249 ;"
         "28195 , 7902 76 9 499 ;"
         "28694 , 7902 76 9 249 ;"
         "28943 , 7902 76 9 249 ;"
         "29192 , 7902 76 9 499 ;"
         "29691 , 7902 20 9 249 ;"
         "29940 , 7902 20 9 249 ;"
         ""
         "30690 , 7902 20 9 249 ;"
         "30939 , 7902 76 9 249 ;"
         ""
         "31689 , 7902 20 9 249 ;"
         "31938 , 7902 20 9 249 ;"
         "32187 , 7902 20 9 499 ;"
         "32686 , 7902 20 9 249 ;"
         "32935 , 7902 76 9 249 ;"
         ""
         "33685 , 7902 76 9 249 ;"
         "33934 , 7902 62 9 249 ;"
         ""
         "34684 , 7902 62 9 249 ;"
         "34933 , 7902 62 9 249 ;"
         "35182 , 7902 62 9 499 ;"
         "35681 , 7902 34 9 249 ;"
         "35930 , 7902 34 9 249 ;"
         ""
         "36680 , 7902 34 9 249 ;"
         "36929 , 7902 62 9 249 ;"
         "37178 , 7902 20 9 499 ;"
         "37677 , 7902 20 9 249 ;"))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 11))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "partch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (990 705)) (:position (116 109)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "diamante")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (1331 906)) (:position (32 32)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:library "OM-JI")
           (:type :function)
           (:reference rt->mc)
           (:group-id nil)
           (:name "rt->mc")
           (:x 532)
           (:y 158)
           (:w 109)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "RATIO")
             (:value 11/8)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "FUNDAMENTAL")
             (:value 6000)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:comment
           (:x 871)
           (:y 154)
           (:w 197)
           (:h 44)
           (:fgcolor (:color 0 0 0 1.0))
           (:bgcolor nil)
           (:border 0)
           (:roundness nil)
           (:text-font
            (:font (:face "Verdana") (:size 12) (:style :plain)))
           (:align nil)
           (:text "Coloca tudo em três oitavas.")
           (:id 1))
          (:comment
           (:x 461)
           (:y 431)
           (:w 119)
           (:h 44)
           (:fgcolor (:color 0 0 0 1.0))
           (:bgcolor nil)
           (:border 0)
           (:roundness nil)
           (:text-font
            (:font (:face "Verdana") (:size 12) (:style :plain)))
           (:align nil)
           (:text "Temperamento ")
           (:id 2))
          (:comment
           (:x 429)
           (:y 378)
           (:w 178)
           (:h 26)
           (:fgcolor (:color 0 0 0 1.0))
           (:bgcolor nil)
           (:border 0)
           (:roundness nil)
           (:text-font
            (:font (:face "Verdana") (:size 12) (:style :plain)))
           (:align nil)
           (:text "aproximacao em cents")
           (:id 3))
          (:box
           (:type :function)
           (:reference flat)
           (:group-id nil)
           (:name "flat")
           (:x 529)
           (:y 225)
           (:w 114)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:library "OM-JI")
           (:type :function)
           (:reference filter-ac-inst)
           (:group-id nil)
           (:name "filter-ac-inst")
           (:x 340)
           (:y 475)
           (:w 160)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NOTELIST")
             (:value (:list 6000 6530 7203 5049))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "APPROX")
             (:value 10)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "TEMPERAMENT")
             (:value 2)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 11")
           (:x 389)
           (:y 375)
           (:w 37)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 10)
           (:id 6))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 12")
           (:x 434)
           (:y 425)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 4)
           (:id 7))
          (:box
           (:type :function)
           (:reference remove-dup)
           (:group-id nil)
           (:name "remove-dup")
           (:x 444)
           (:y 600)
           (:w 160)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value (:list 1 2 3 4))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "TEST")
             (:value eq)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "DEPTH")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :function)
           (:reference om-round)
           (:group-id nil)
           (:name "om-round")
           (:x 406)
           (:y 556)
           (:w 136)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "N")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:library "OM-JI")
           (:type :function)
           (:reference rt-octave)
           (:group-id nil)
           (:name "rt-octave")
           (:x 736)
           (:y 146)
           (:w 129)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FRAQ")
             (:value 3/2)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "octave")
             (:value 2)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "value box")
           (:x 818)
           (:y 95)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 8)
           (:id 11))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 479)
           (:y 650)
           (:w 88)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 12))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 1)
             (:name "Lista de Razoes")
             (:doc "")))
           (:group-id nil)
           (:name "Lista de Razoes")
           (:x 676)
           (:y 47)
           (:w 178)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 2)
             (:name "nota de referencia da Afinação Justa")
             (:doc "")))
           (:group-id nil)
           (:name "nota de referencia da Afinação Justa")
           (:x 226)
           (:y 33)
           (:w 389)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 14)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 0)))
          (:connection
           (:from (:box 5 :out 0))
           (:to (:box 9 :in 0))
           (:attributes (:color nil :style nil :modif (0 -21/61))))
          (:connection
           (:from (:box 6 :out 0))
           (:to (:box 5 :in 1))
           (:attributes
            (:color
             (:color 0.0S0 0.0S0 1.0S0 1.0)
             :style
             nil
             :modif
             nil)))
          (:connection
           (:from (:box 7 :out 0))
           (:to (:box 5 :in 2))
           (:attributes
            (:color
             (:color 0.0S0 0.0S0 1.0S0 1.0)
             :style
             nil
             :modif
             nil)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 12 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 10 :in 1)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 10 :in 0)))
          (:connection
           (:from (:box 14 :out 0))
           (:to (:box 0 :in 1))))))
       (:group-id nil)
       (:name "diamante")
       (:x 979/6)
       (:y 390)
       (:w 200)
       (:h 103)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "Lista de Razoes")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "nota de referencia da Afinação Justa")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 0))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 3")
       (:x 278)
       (:y 325)
       (:w 69)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6000)
       (:id 1))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference choose)
       (:group-id nil)
       (:name "choose")
       (:x 195)
       (:y 174)
       (:w 107)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list (:list 6000 6530) (:list 7203 5049)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CHORD-N")
         (:value (:list 2))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference diamond-identity)
       (:group-id nil)
       (:name "diamond-identity")
       (:x 50)
       (:y 100)
       (:w 209)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "IDENTITY")
         (:value (:list 11 19 97))
         (:reactive nil)))
       (:outputs
        (:output (:name "out0") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 257)
       (:y 134)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6)
       (:id 4))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 181)
       (:y 239)
       (:w 70)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 73)
       (:y 13)
       (:w 92)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 979/6)
       (:y 518)
       (:w 107)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 7))
      (:comment
       (:x 309)
       (:y 134)
       (:w 253)
       (:h 67)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "Escolhe a 6 diagonal otonal da Tonalidade Diamante.")
       (:id 8))
      (:comment
       (:x 359)
       (:y 325)
       (:w 253)
       (:h 56)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "C é a fundamental desta passagem.")
       (:id 9)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 7 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 0 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 3 :out 1)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 2 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 0 :in 0)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 3 :in 0))
       (:attributes
        (:color
         (:color 0.2 0.4 0.5 1.0)
         :style
         :curved
         :modif
         nil))))))
   (:group-id nil)
   (:name "partch")
   (:x 509)
   (:y 114)
   (:w 132)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 12))
  (:comment
   (:x 642)
   (:y 118)
   (:w 252)
   (:h 56)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Constroi uma estrutura de afinação a partir das sieves.")
   (:id 13))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "perfil")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (485 431)) (:position (192 192)))
     (:grid nil)
     (:lock t)
     (:boxes
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 17")
       (:x 100)
       (:y 104)
       (:w 43)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 20)
       (:id 0))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "padrao")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "lispfunction")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               ";;; Edit a valid LAMBDA EXPRESSION for \"lispfunction\""
               ";;; e.g. (lambda (arg1 arg2 ...) ( ... ))"
               ""
               "(lambda (list) (let ((L()))"
               "    (loop for x from 0 to (1- (length list)) do"
               "          (when (not (equal (nth (+ x 1) list) (nth x list)))"
               "            (push (nth x list) L)))"
               "    (reverse L))))"))))
           (:group-id nil)
           (:name "lispfunction")
           (:x 47)
           (:y 402)
           (:w 152)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :function)
           (:reference flat)
           (:group-id nil)
           (:name "flat")
           (:x 184)
           (:y 560)
           (:w 70)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "OMLOOP")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :function)
               (:reference flat)
               (:group-id nil)
               (:name "flat")
               (:x 239)
               (:y 237)
               (:w 70)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :function)
               (:reference om-round)
               (:group-id nil)
               (:name "om-round")
               (:x 333)
               (:y 152)
               (:w 136)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "N")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :special)
               (:reference repeat-n)
               (:group-id nil)
               (:name "repeat-n")
               (:x 281)
               (:y 199)
               (:w 130)
               (:h 28)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :left)
               (:lock nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "self")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "num")
                 (:value 0)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collected results") (:reactive nil)))
               (:id 2))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "aux")
               (:x 410)
               (:y 36)
               (:w 32)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 5)
               (:id 3))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 364)
               (:y 89)
               (:w 78)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :function)
               (:reference length)
               (:group-id nil)
               (:name "length")
               (:x 216)
               (:y 21)
               (:w 100)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SEQUENCE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :value)
               (:reference cons)
               (:group-id nil)
               (:name "list")
               (:x 199)
               (:y 152)
               (:w 112)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value (:list 4 3 1 4 2))
               (:id 6))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 151)
               (:y 460)
               (:w 84)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 7))
              (:box
               (:type :special)
               (:reference repeat-n)
               (:group-id nil)
               (:name "repeat-n")
               (:x 106)
               (:y 361)
               (:w 130)
               (:h 28)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :left)
               (:lock nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "self")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "num")
                 (:value 0)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collected results") (:reactive nil)))
               (:id 8))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 114)
               (:y 592)
               (:w 88)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 9))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 159)
               (:y 289)
               (:w 101)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 10))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 87)
               (:y 74)
               (:w 101)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 11))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input")
                 (:doc "")))
               (:group-id nil)
               (:name "input")
               (:x 12)
               (:y 6)
               (:w 73)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 12))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 214)
               (:y 592)
               (:w 107)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 13)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 2 :in 1)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 0 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 4 :in 1)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 2 :in 0)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 9 :in 0)))
              (:connection
               (:from (:box 7 :out 1))
               (:to (:box 13 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 8 :in 1)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 5 :in 0)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 11 :in 0))))))
           (:group-id nil)
           (:name "OMLOOP")
           (:x 161)
           (:y 483)
           (:w 125)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 2))
          (:box
           (:type :function)
           (:reference reverse)
           (:group-id nil)
           (:name "reverse")
           (:x 313)
           (:y 205)
           (:w 113)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 2")
           (:x 337)
           (:y 62)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 4))
          (:box
           (:type :function)
           (:reference om-random)
           (:group-id nil)
           (:name "om-random")
           (:x 223)
           (:y 16)
           (:w 155)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LOW")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "HIGH")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :function)
           (:reference om=)
           (:group-id nil)
           (:name "om=")
           (:x 270)
           (:y 123)
           (:w 85)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NUM1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "NUM2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :special)
           (:reference if)
           (:group-id nil)
           (:name "IF")
           (:x 170)
           (:y 270)
           (:w 62)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "TEST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "THEN")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "else")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :function)
           (:reference flat)
           (:group-id nil)
           (:name "flat")
           (:x 81)
           (:y 331)
           (:w 70)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux")
           (:x 300)
           (:y 278)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 12)
           (:id 9))
          (:box
           (:type :special)
           (:reference repeat-n)
           (:group-id nil)
           (:name "repeat-n")
           (:x 214)
           (:y 329)
           (:w 130)
           (:h 28)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :left)
           (:lock nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "self")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "num")
             (:value 0)
             (:reactive nil)))
           (:outputs
            (:output (:name "collected results") (:reactive nil)))
           (:id 10))
          (:box
           (:type :function)
           (:reference first-n)
           (:group-id nil)
           (:name "first-n")
           (:x 87)
           (:y 144)
           (:w 97)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "N")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 11))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 205)
           (:y 638)
           (:w 88)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 12))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 21)
           (:y 42)
           (:w 73)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
           (:group-id nil)
           (:name "input 2")
           (:x 96)
           (:y 44)
           (:w 93)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 14)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 12 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 7 :in 2)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 6 :in 1)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 1)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 7 :in 1)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 11 :in 0)))
          (:connection
           (:from (:box 14 :out 0))
           (:to (:box 11 :in 1))))))
       (:group-id nil)
       (:name "padrao")
       (:x 33)
       (:y 148)
       (:w 128)
       (:h 58)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 2")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 1))
      (:box
       (:type :function)
       (:reference sort-list)
       (:group-id nil)
       (:name "sort-list")
       (:x 271)
       (:y 100)
       (:w 114)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 14")
       (:x 223)
       (:y 171)
       (:w 56)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 90)
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 13")
       (:x 182)
       (:y 171)
       (:w 43)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 20)
       (:id 4))
      (:box
       (:type :function)
       (:reference om-scale)
       (:group-id nil)
       (:name "om-scale")
       (:x 124)
       (:y 217)
       (:w 168)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 9)
       (:y 44)
       (:w 92)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 271)
       (:y 50)
       (:w 93)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 271)
       (:y 166)
       (:w 107)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 8))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 2") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "output 2")
       (:x 124)
       (:y 283)
       (:w 107)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 9)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 1)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 5 :in 0)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 8 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 5 :in 2)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 1)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 9 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 1 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 2 :in 0))
       (:attributes
        (:color
         (:color 0.2 0.4 0.5 1.0)
         :style
         :curved
         :modif
         nil))))))
   (:group-id nil)
   (:name "perfil")
   (:x 894)
   (:y 378)
   (:w 200)
   (:h 86)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "output 1") (:reactive nil))
    (:output (:name "output 2") (:reactive nil)))
   (:id 14))
  (:comment
   (:x 1096)
   (:y 380)
   (:w 206)
   (:h 80)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Escolhe a sequencia das notas a partir do perfil.")
   (:id 15))
  (:box
   (:type :function)
   (:reference first-n)
   (:group-id nil)
   (:name "first-n")
   (:x 661)
   (:y 38)
   (:w 97)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil))
    (:input (:type :standard) (:name "N") (:value 0) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 708)
   (:y 0)
   (:w 43)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 17))
  (:comment
   (:x 761)
   (:y 4)
   (:w 223)
   (:h 39)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Tamanho da frase")
   (:id 18))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "Ritmo")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (944 658)) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :function)
       (:reference om-scale)
       (:group-id nil)
       (:name "om-scale")
       (:x 141)
       (:y 119)
       (:w 127)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :function)
       (:reference om-round)
       (:group-id nil)
       (:name "om-round")
       (:x 143)
       (:y 176)
       (:w 136)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 2")
       (:x 613)
       (:y 239)
       (:w 86)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list (:list 5 4)))
       (:id 2))
      (:box
       (:type :function)
       (:reference maketreegroups)
       (:group-id nil)
       (:name "maketreegroups")
       (:x 517)
       (:y 284)
       (:w 202)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FIGURES")
         (:value
          (:list
           (:list 1 1 1)
           (:list 1 2 1)
           (:list 3 4)
           (:list 1 1 1 1)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value (:list 0 3 0 2 0 1 0 0 3))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MEASURES")
         (:value (:list (:list 4 4)))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :object)
       (:reference voice)
       (:group-id nil)
       (:name "VOICE 2")
       (:x 275)
       (:y 367)
       (:w 569)
       (:h 124)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TREE")
         (:value (:list ? (:list (:list (:list 4 4) (:list 1 1 1 1)))))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value
          (:list
           (:object
            (:class chord)
            (:slots
             ((:symbolic-date nil)
              (:symbolic-dur nil)
              (:symbolic-dur-extent 0)
              (:extras nil)
              (:onset 0)
              (:item-time nil)
              (:item-internal-time nil)
              (:item-type nil)
              (:attributes nil)
              (:lmidic (:list 6000))
              (:lvel (:list 100))
              (:loffset (:list 0))
              (:ldur (:list 1000))
              (:lchan (:list 1))
              (:lport (:list nil)))))))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEMPO")
         (:value 80)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "TREE") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "TEMPO") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params
        (:time-map
         (:list
          (:list -1000 0)
          (:list 0 7.5)
          (:list 188 11.125)
          (:list 562 15.375)
          (:list 750 19.0)
          (:list 938 22.625)
          (:list 1312 26.875)
          (:list 1500 30.5)
          (:list 1688 34.125)
          (:list 2062 38.375)
          (:list 2250 42.0)
          (:list 2438 45.625)
          (:list 2812 49.875)
          (:list 3000 53.5)
          (:list 3250 57.333332)
          (:list 3500 61.166665)
          (:list 3750 71.0)
          (:list 4312 75.875)
          (:list 4500 79.5)
          (:list 4875 83.75)
          (:list 5250 88.0)
          (:list 5812 92.875)
          (:list 6000 96.0)))
        (:staff :empty))
       (:value
        (:object
         (:class voice)
         (:slots
          ((:onset 0)
           (:duration 5999)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:name "VOICE 2")
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:tree
            (:list
             2
             (:list
              (:list
               (:list 5 4)
               (:list
                (:list 1 (:list 1 2 1))
                (:list 1 (:list 1 2 1))
                (:list 1 (:list 1 2 1))
                (:list 1 (:list 1 2 1))
                (:list 1 (:list 1 1 1))))
              (:list
               (:list 5 4)
               (:list
                (:list 1 (:list 3 1))
                (:list 1 (:list 1 1))
                (:list 1 (:list 3 1))
                -2)))))
           (:lmidic (:list 6000))
           (:lonset
            (:list
             0
             188
             562
             750
             938
             1312
             1500
             1688
             2062
             2250
             2438
             2812
             3000
             3250
             3500
             3750
             4312
             4500
             4875
             5250
             5812
             7500))
           (:ldur
            (:list
             (:list 187)
             (:list 373)
             (:list 187)
             (:list 187)
             (:list 373)
             (:list 187)
             (:list 187)
             (:list 373)
             (:list 187)
             (:list 187)
             (:list 373)
             (:list 187)
             (:list 249)
             (:list 249)
             (:list 249)
             (:list 561)
             (:list 187)
             (:list 374)
             (:list 374)
             (:list 561)
             (:list 187)))
           (:lvel (:list 100))
           (:loffset (:list 0))
           (:lchan (:list 1))
           (:lport (:list nil))
           (:llegato nil)
           (:tempo 80)))))
       (:id 4))
      (:box
       (:type :function)
       (:reference reverse)
       (:group-id nil)
       (:name "reverse")
       (:x 293)
       (:y 225)
       (:w 113)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference n-pulses)
       (:group-id nil)
       (:name "n-pulses")
       (:x 287)
       (:y 500)
       (:w 123)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TREE")
         (:value
          (:list
           ?
           (:list
            (:list (:list 4 4) (:list 1 (:list 1 (:list 1 2 1 1)) 1 1))
            (:list
             (:list 4 4)
             (:list 1 (:list 1 (:list 1 2 1 1)) -1 1)))))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 166)
       (:y 293)
       (:w 132)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 50)
       (:y 50)
       (:w 155)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 10)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 218)
       (:y 53)
       (:w 155)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 10)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 141)
       (:y 69)
       (:w 92)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 517)
       (:y 234)
       (:w 93)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 310)
       (:y 516)
       (:w 107)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 12)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 2)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 4 :in 1))
       (:attributes
        (:color
         (:color 0.62745095S0 0.12549019S0 0.94117356S0 1.0)
         :style
         nil
         :modif
         nil)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 6 :in 0)))
      (:connection
       (:from (:box 4 :out 1))
       (:to (:box 12 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 1)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 3 :in 1)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 0 :in 1)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 0 :in 2)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 0 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 3 :in 0))
       (:attributes
        (:color
         (:color 0.2 0.4 0.5 1.0)
         :style
         :curved
         :modif
         nil))))))
   (:group-id nil)
   (:name "Ritmo")
   (:x 1336)
   (:y 368)
   (:w 132)
   (:h 111)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 19))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "canal midi")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (441 427)) (:position (32 32)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :function)
       (:reference om-scale)
       (:group-id nil)
       (:name "om-scale")
       (:x 52)
       (:y 100)
       (:w 127)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 94)
       (:y 65)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 9)
       (:id 1))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 134)
       (:y 58)
       (:w 43)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 9)
       (:id 2))
      (:box
       (:type :function)
       (:reference om-round)
       (:group-id nil)
       (:name "om-round")
       (:x 50)
       (:y 147)
       (:w 136)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:comment
       (:x 197)
       (:y 105)
       (:w 126)
       (:h 32)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "Canal Midi")
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 52)
       (:y 50)
       (:w 92)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 50)
       (:y 213)
       (:w 107)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 6)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 0 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 2)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 6 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 0 :in 0))
       (:attributes
        (:color
         (:color 0.2 0.4 0.5 1.0)
         :style
         :curved
         :modif
         nil))))))
   (:group-id nil)
   (:name "canal midi")
   (:x 93)
   (:y 596)
   (:w 139)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 20))
  (:comment
   (:x 1471)
   (:y 371)
   (:w 206)
   (:h 32)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Controla e cria ritmos.")
   (:id 21))
  (:comment
   (:x 1583)
   (:y 59)
   (:w 206)
   (:h 80)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Coloque as cadeias ritmicas que te interesse.")
   (:id 22)))
 (:connections
  (:connection
   (:from (:box 0 :out 1))
   (:to (:box 19 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 2)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 7 :in 2)))
  (:connection (:from (:box 3 :out 2)) (:to (:box 2 :in 1)))
  (:connection
   (:from (:box 3 :out 2))
   (:to (:box 14 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif (129/440 0))))
  (:connection
   (:from (:box 3 :out 2))
   (:to (:box 20 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 12 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 4 :out 1)) (:to (:box 1 :in 0)))
  (:connection (:from (:box 4 :out 1)) (:to (:box 16 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 1 :in 1)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 0)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 11 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 7 :in 3)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 7 :in 4)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 5 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 14 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 2 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 1))
   (:to (:box 10 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 16 :out 0))
   (:to (:box 19 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 16 :in 1)))
  (:connection
   (:from (:box 19 :out 0))
   (:to (:box 7 :in 1))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 20 :out 0))
   (:to (:box 7 :in 6))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))))