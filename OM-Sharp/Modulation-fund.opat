
(:patch
 (:name "Modulation-fund")
 (:doc "")
 (:info
  (:created "2020/10/25 17:41:28")
  (:modified "2020/11/03 15:43:56")
  (:by "om-sharp")
  (:version 1.01))
 (:window (:size (1920 1026)) (:position (-9 -9)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:library "OM-Sieves")
   (:type :function)
   (:reference s-union-l)
   (:group-id nil)
   (:name "s-union-l")
   (:x 206)
   (:y 61)
   (:w 117)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SIEVE")
     (:value (:list (:list 19 16 64) (:list 11 16 64)))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 149)
   (:y 23)
   (:w 229)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 19 16 64) (:list 11 16 64)))
   (:id 1))
  (:box
   (:library "OM-Sieves")
   (:type :function)
   (:reference revel-sieve)
   (:group-id nil)
   (:name "revel-sieve")
   (:x 196)
   (:y 115)
   (:w 137)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 2))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference choose)
   (:group-id nil)
   (:name "choose")
   (:x 207)
   (:y 250)
   (:w 100)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list 1 2 3 4 5 6 7 8 9 10))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHORD-N")
     (:value (:list 1 7 9))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference diamond-identity)
   (:group-id nil)
   (:name "diamond-identity")
   (:x 168)
   (:y 169)
   (:w 192)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "IDENTITY")
     (:value (:list 11 19 97))
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 4))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 239)
   (:y 215)
   (:w 79)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6)
   (:id 5))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt-octave)
   (:group-id nil)
   (:name "rt-octave")
   (:x 197)
   (:y 301)
   (:w 120)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FRAQ")
     (:value 3/2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference interval-sob)
   (:group-id nil)
   (:name "interval-sob")
   (:x 383)
   (:y 168)
   (:w 169)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SIEVE")
     (:value (:list 2 3 7 11 12))
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 7))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "value box")
   (:x 393)
   (:y 113)
   (:w 70)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 97/64)
   (:id 8))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt-octave)
   (:group-id nil)
   (:name "rt-octave")
   (:x 398)
   (:y 212)
   (:w 120)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FRAQ")
     (:value 3/2)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "octave")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt->mc)
   (:group-id nil)
   (:name "rt->mc")
   (:x 444)
   (:y 288)
   (:w 102)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FUNDAMENTAL")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 487)
   (:y 253)
   (:w 62)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6100)
   (:id 11))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt->mc)
   (:group-id nil)
   (:name "rt->mc")
   (:x 227)
   (:y 407)
   (:w 102)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FUNDAMENTAL")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 271)
   (:y 359)
   (:w 62)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6700)
   (:id 13))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference modulation-notes-fund)
   (:group-id nil)
   (:name "modulation-notes-fund")
   (:x 337)
   (:y 582)
   (:w 244)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LISTNOTE")
     (:value (:list 6000 6530))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LISTNOTE2")
     (:value (:list 7203 5049))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CENTS")
     (:value 10)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPERAMENTO")
     (:value 4)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 468)
   (:y 533)
   (:w 40)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 10)
   (:id 15))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 531)
   (:y 539)
   (:w 32)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 16))
  (:box
   (:type :function)
   (:reference mapcar)
   (:group-id nil)
   (:name "mapcar")
   (:x 198)
   (:y 653)
   (:w 105)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :function)
   (:reference sort-list)
   (:group-id nil)
   (:name "sort-list")
   (:x 170)
   (:y 765)
   (:w 107)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 18))
  (:box
   (:type :function)
   (:reference remove)
   (:group-id nil)
   (:name "remove")
   (:x 176)
   (:y 710)
   (:w 106)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ITEM")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference range-reduce)
   (:group-id nil)
   (:name "range-reduce")
   (:x 471)
   (:y 386)
   (:w 158)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list 4800 7200 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "GRAVE")
     (:value 6000)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "AGUDA")
     (:value 7902)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 20))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference range-reduce)
   (:group-id nil)
   (:name "range-reduce")
   (:x 261)
   (:y 505)
   (:w 158)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list 4800 7200 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "GRAVE")
     (:value 6000)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "AGUDA")
     (:value 7902)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 21))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 299)
   (:y 461)
   (:w 62)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6000)
   (:id 22))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 361)
   (:y 461)
   (:w 62)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 7200)
   (:id 23))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 568)
   (:y 351)
   (:w 62)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 7200)
   (:id 24))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 505)
   (:y 330)
   (:w 62)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6000)
   (:id 25))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference choose)
   (:group-id nil)
   (:name "choose")
   (:x 44)
   (:y 666)
   (:w 100)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda :lambda)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list 1 2 3 4 5 6 7 8 9 10))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHORD-N")
     (:value (:list 1 7 9))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 26))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 100)
   (:y 630)
   (:w 32)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 27))
  (:comment
   (:x 636)
   (:y 386)
   (:w 271)
   (:h 68)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Reduz tudo na mesma oitava para o objeto modulation-notes-fun não sugerir alterações de oitavas.")
   (:id 28))
  (:comment
   (:x 557)
   (:y 259)
   (:w 271)
   (:h 28)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Fundamental em C#.")
   (:id 29))
  (:comment
   (:x 467)
   (:y 118)
   (:w 271)
   (:h 28)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Intervalo utilizado")
   (:id 30))
  (:comment
   (:x 379)
   (:y 26)
   (:w 339)
   (:h 28)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Sieve utilizada na obra Arabesque | 19 11 97.")
   (:id 31))
  (:comment
   (:x 587)
   (:y 584)
   (:w 347)
   (:h 68)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Compara as estruturas de Partch e Johnston em busca de alturas que possam vir a ser iguais em caso de troca de fundamental.")
   (:id 32))
  (:comment
   (:x 292)
   (:y 717)
   (:w 347)
   (:h 68)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Aqui teremos fundamentais que são sugeridas mais de uma vezes, indicando alterações iguais.")
   (:id 33))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 32)
   (:y 832)
   (:w 626)
   (:h 84)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     -950
     -650
     -550
     -300
     -300
     -200
     -100
     50
     50
     150
     150
     300
     300
     350
     350
     600
     600
     600
     600))
   (:id 34))
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name nil)
   (:x 677)
   (:y 690)
   (:w 907)
   (:h 235)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil)))
   (:window (:size (1586 475)) (:position (192 192)))
   (:edition-params)
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         "6405.865 7062.8237 will be equal if the second list have has the fundamental with the difference of -650 cents"
         "6405.865 6103.6607 will be equal if the second list have has the fundamental with the difference of 300 cents"
         "6405.865 6106.2754 will be equal if the second list have has the fundamental with the difference of 300 cents"
         "6700.0 6103.6607 will be equal if the second list have has the fundamental with the difference of 600 cents"
         "6700.0 6343.9746 will be equal if the second list have has the fundamental with the difference of 350 cents"
         "6700.0 6106.2754 will be equal if the second list have has the fundamental with the difference of 600 cents"
         "6250.7256 6103.6607 will be equal if the second list have has the fundamental with the difference of 150 cents"
         "6250.7256 6343.9746 will be equal if the second list have has the fundamental with the difference of -100 cents"
         "6250.7256 6106.2754 will be equal if the second list have has the fundamental with the difference of 150 cents"
         "6108.352 7062.8237 will be equal if the second list have has the fundamental with the difference of -950 cents"
         "6108.352 6103.6607 are equal"
         "6108.352 6106.2754 are equal"
         "6868.2134 7062.8237 will be equal if the second list have has the fundamental with the difference of -200 cents"
         "6868.2134 6825.125 will be equal if the second list have has the fundamental with the difference of 50 cents"
         "6868.2134 6825.648 will be equal if the second list have has the fundamental with the difference of 50 cents"
         "6700.0 6103.6607 will be equal if the second list have has the fundamental with the difference of 600 cents"
         "6700.0 6343.9746 will be equal if the second list have has the fundamental with the difference of 350 cents"
         "6700.0 6106.2754 will be equal if the second list have has the fundamental with the difference of 600 cents"
         "6517.596 7062.8237 will be equal if the second list have has the fundamental with the difference of -550 cents"
         "6517.596 6825.125 will be equal if the second list have has the fundamental with the difference of -300 cents"
         "6517.596 6825.648 will be equal if the second list have has the fundamental with the difference of -300 cents"))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 35)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 2 :in 0)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 0 :in 0)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 0)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 7 :in 1)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 6 :in 0)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 3 :in 1)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 12 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 9 :in 0)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 20 :in 0)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 10 :in 1)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 21 :in 0)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 12 :in 1)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 17 :in 1)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 35 :in 1))
   (:attributes (:color nil :style nil :modif (0 10/49))))
  (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 2)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 14 :in 3)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 19 :in 1)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 34 :in 0)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 18 :in 0)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 14 :in 1)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 14 :in 0)))
  (:connection (:from (:box 22 :out 0)) (:to (:box 21 :in 1)))
  (:connection (:from (:box 23 :out 0)) (:to (:box 21 :in 2)))
  (:connection (:from (:box 24 :out 0)) (:to (:box 20 :in 2)))
  (:connection (:from (:box 25 :out 0)) (:to (:box 20 :in 1)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 17 :in 0)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 26 :in 1)))))