
(:patch
 (:name "SDIF to Score")
 (:doc "")
 (:info
  (:created "2020/08/27 19:18:36")
  (:modified "2020/09/25 16:16:41")
  (:by "om-sharp")
  (:version 1.0))
 (:window (:size (1382 784)) (:position (-8 -8)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "TRANSPOSIÇÃO PARA MAX/MSP-COLL")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1046 729)) (:position (192 8)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "SDIF") (:doc "")))
       (:group-id nil)
       (:name "SDIF")
       (:x 323)
       (:y 13)
       (:w 45)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 138)
       (:y 595)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "tempo e sinoides + conversao")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (1366 725)) (:position (-8 -8)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "tempo") (:doc "")))
           (:group-id nil)
           (:name "tempo")
           (:x 13)
           (:y 5)
           (:w 56)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 320)
           (:y 468)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 2)
             (:name "Tempo sem repetições")
             (:doc "")))
           (:group-id nil)
           (:name "Tempo sem repetições")
           (:x 52)
           (:y 5)
           (:w 141)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 3)
             (:name "amplitude")
             (:doc "")))
           (:group-id nil)
           (:name "amplitude")
           (:x 48)
           (:y 77)
           (:w 76)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 4) (:name "alturas") (:doc "")))
           (:group-id nil)
           (:name "alturas")
           (:x 131)
           (:y 75)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "aux 8")
           (:x 825)
           (:y 411)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value de)
           (:id 5))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "aux 7")
           (:x 887)
           (:y 334)
           (:w 147)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value conversao_para_max/msp)
           (:id 6))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 740)
           (:y 456)
           (:w 159)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 5")
           (:x 329)
           (:y 287)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 20)
           (:id 8))
          (:box
           (:type :function)
           (:reference first-n)
           (:group-id nil)
           (:name "first-n")
           (:x 297)
           (:y 322)
           (:w 72)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "N")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "aux 4")
           (:x 241)
           (:y 182)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value >)
           (:id 10))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "aux 3")
           (:x 300)
           (:y 176)
           (:w 53)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value second)
           (:id 11))
          (:box
           (:type :function)
           (:reference sort-list)
           (:group-id nil)
           (:name "sort-list")
           (:x 175)
           (:y 256)
           (:w 189)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "test")
             (:value (:list quote <))
             (:reactive nil))
            (:input
             (:type :key)
             (:name "key")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 12))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "lispfunction")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               "(lambda (lista1)"
               "  (remove-duplicates lista1 :key #'car))"))))
           (:group-id nil)
           (:name "lispfunction")
           (:x 16)
           (:y 235)
           (:w 102)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "LISTA1")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 1934/3)
           (:y 35)
           (:w 73)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 14))
          (:box
           (:type :function)
           (:reference arithm-ser)
           (:group-id nil)
           (:name "arithm-ser")
           (:x 2207/3)
           (:y 143)
           (:w 96)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "BEGIN")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "END")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "STEP")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux")
           (:x 2399/3)
           (:y 113)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 16))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 2")
           (:x 2228/3)
           (:y 61)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 17))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 441)
           (:y 225)
           (:w 90)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value ",")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 18))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "OMLOOP")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "tempo")
                 (:doc "")))
               (:group-id nil)
               (:name "tempo")
               (:x 284)
               (:y 7)
               (:w 56)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 389)
               (:y 480)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "tempo sem repetições")
                 (:doc "")))
               (:group-id nil)
               (:name "tempo sem repetições")
               (:x 405)
               (:y 53)
               (:w 140)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "amplitude")
                 (:doc "")))
               (:group-id nil)
               (:name "amplitude")
               (:x 144)
               (:y 128)
               (:w 76)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "alturas")
                 (:doc "")))
               (:group-id nil)
               (:name "alturas")
               (:x 14)
               (:y 58)
               (:w 58)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :function)
               (:reference x-append)
               (:group-id nil)
               (:name "x-append")
               (:x 52)
               (:y 367)
               (:w 90)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "L1?")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "L2?")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :function)
               (:reference remove)
               (:group-id nil)
               (:name "remove")
               (:x 540)
               (:y 306)
               (:w 80)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ITEM")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "SEQUENCE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 357)
               (:y 325)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 7))
              (:box
               (:type :function)
               (:reference omif)
               (:group-id nil)
               (:name "omif")
               (:x 336)
               (:y 249)
               (:w 62)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "TEST")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ACTION")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 8))
              (:box
               (:type :function)
               (:reference om=)
               (:group-id nil)
               (:name "om=")
               (:x 346)
               (:y 173)
               (:w 64)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NUM1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "NUM2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 9))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 285)
               (:y 457)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 10))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 72)
               (:y 134)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 11))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 139)
               (:y 225)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 12))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 303)
               (:y 64)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 13)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 13 :in 0)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 9 :in 1)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 12 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 11 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 8 :in 1)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 7 :out 1))
               (:to (:box 6 :in 1)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 5 :in 0)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 5 :in 1)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 9 :in 0))))))
           (:group-id nil)
           (:name "OMLOOP")
           (:x 24)
           (:y 164)
           (:w 86)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "tempo")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "tempo sem repetições")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "amplitude")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "alturas")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 19))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 425)
           (:y 384)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 20))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 405)
           (:y 548)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 21))
          (:box
           (:type :function)
           (:reference first)
           (:group-id nil)
           (:name "first")
           (:x 453)
           (:y 328)
           (:w 60)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 22))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 458)
           (:y 273)
           (:w 92)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 23))
          (:box
           (:type :function)
           (:reference print)
           (:group-id nil)
           (:name "print")
           (:x 607)
           (:y 315)
           (:w 64)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOMETHING")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 24))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 2243/3)
           (:y 269)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 25))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 457)
           (:y 74)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 26)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 19 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 14 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 26 :in 0)))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 19 :in 2))
           (:attributes
            (:color
             (:color 0.0S0 1.0S0 0.0S0 1.0)
             :style
             nil
             :modif
             nil)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 19 :in 3)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 2)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 24 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 1)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 18 :in 1)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 12 :in 1)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 2)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 12 :in 0)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 7 :in 3)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 15 :in 1)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 25 :in 0)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 2)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 15 :in 0)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 23 :in 0)))
          (:connection (:from (:box 19 :out 0)) (:to (:box 13 :in 0)))
          (:connection (:from (:box 20 :out 0)) (:to (:box 21 :in 0)))
          (:connection (:from (:box 20 :out 1)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 22 :out 0)) (:to (:box 20 :in 0)))
          (:connection (:from (:box 23 :out 0)) (:to (:box 22 :in 0)))
          (:connection (:from (:box 24 :out 0)) (:to (:box 23 :in 1)))
          (:connection (:from (:box 25 :out 0)) (:to (:box 7 :in 1)))
          (:connection (:from (:box 26 :out 0)) (:to (:box 18 :in 0)))
          (:connection
           (:from (:box 26 :out 0))
           (:to (:box 19 :in 1))
           (:attributes (:color nil :style nil :modif (0 7/29)))))))
       (:group-id nil)
       (:name "tempo e sinoides + conversao")
       (:x 92)
       (:y 464)
       (:w 205)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock :eval-once)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "tempo")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Tempo sem repetições")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "amplitude")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "alturas")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 2))
      (:comment
       (:x 653)
       (:y 358)
       (:w 208)
       (:h 113)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text
        "compress and expand the timbre.

1 = normal, without difference.

e.g.

0.888 = compress.
1.333 = expanded.")
       (:id 3))
      (:comment
       (:x 367)
       (:y 23)
       (:w 85)
       (:h 45)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "SDIF")
       (:id 4))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "tempo lista")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 558/7)
           (:y 305)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 50)
           (:y 50)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :function)
           (:reference first)
           (:group-id nil)
           (:name "first")
           (:x 537/7)
           (:y 258)
           (:w 60)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :function)
           (:reference mat-trans)
           (:group-id nil)
           (:name "mat-trans")
           (:x 376/7)
           (:y 186)
           (:w 93)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "MATRIX")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0))))))
       (:group-id nil)
       (:name "tempo lista")
       (:x 63/2)
       (:y 358)
       (:w 100)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock :eval-once)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 5))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "Amplitude")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 971/7)
           (:y 406)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 50)
           (:y 50)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :function)
           (:reference om-scale)
           (:group-id nil)
           (:name "om-scale")
           (:x 1230/7)
           (:y 283)
           (:w 88)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "MINOUT")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "MAXOUT")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :function)
           (:reference third)
           (:group-id nil)
           (:name "third")
           (:x 803/7)
           (:y 228)
           (:w 64)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :function)
           (:reference mat-trans)
           (:group-id nil)
           (:name "mat-trans")
           (:x 719/7)
           (:y 148)
           (:w 93)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "MATRIX")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0))))))
       (:group-id nil)
       (:name "Amplitude ")
       (:x 1103/3)
       (:y 1076/3)
       (:w 98)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock :eval-once)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 6))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "Time | ordem | 10 milissegundos")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 1160/7)
           (:y 431)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 50)
           (:y 50)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :function)
           (:reference sort-list)
           (:group-id nil)
           (:name "sort-list")
           (:x 1419/7)
           (:y 347)
           (:w 80)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :function)
           (:reference remove-dup)
           (:group-id nil)
           (:name "remove-dup")
           (:x 1727/7)
           (:y 273)
           (:w 105)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value (:list 1 2 3 4))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "TEST")
             (:value eq)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "DEPTH")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :function)
           (:reference first)
           (:group-id nil)
           (:name "first")
           (:x 1762/7)
           (:y 214)
           (:w 60)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :function)
           (:reference mat-trans)
           (:group-id nil)
           (:name "mat-trans")
           (:x 1839/7)
           (:y 127)
           (:w 93)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "MATRIX")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0))))))
       (:group-id nil)
       (:name "Time | ordem | 10 milissegundos")
       (:x 557/4)
       (:y 1445/4)
       (:w 222)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock :eval-once)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 7))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "Correção SDIF")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 512)
           (:y 429)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 50)
           (:y 50)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 2")
             (:index 2)
             (:doc nil)))
           (:group-id nil)
           (:name "output 2")
           (:x 488)
           (:y 276)
           (:w 67)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 3")
             (:index 3)
             (:doc nil)))
           (:group-id nil)
           (:name "output 3")
           (:x 308)
           (:y 123)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 3))
          (:box
           (:type :function)
           (:reference sort-list)
           (:group-id nil)
           (:name "sort-list")
           (:x 355)
           (:y 38)
           (:w 80)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "OMLOOP")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input")
                 (:doc "")))
               (:group-id nil)
               (:name "input")
               (:x 26)
               (:y 0)
               (:w 50)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 300)
               (:y 225)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 226)
               (:y 132)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 2))
              (:box
               (:type :function)
               (:reference length)
               (:group-id nil)
               (:name "length")
               (:x 225)
               (:y 57)
               (:w 73)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SEQUENCE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 168)
               (:y 231)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 4))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 102)
               (:y 67)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 5)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 5 :in 0)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 2 :out 1))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 2 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 3 :in 0))))))
           (:group-id nil)
           (:name "OMLOOP")
           (:x 201)
           (:y 40)
           (:w 86)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 5))
          (:box
           (:type :function)
           (:reference remove)
           (:group-id nil)
           (:name "remove")
           (:x 187)
           (:y 255)
           (:w 80)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ITEM")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 5")
           (:x 379)
           (:y 367)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 7))
          (:box
           (:type :function)
           (:reference om-)
           (:group-id nil)
           (:name "om-")
           (:x 339)
           (:y 410)
           (:w 61)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 224)
           (:y 381)
           (:w 73)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :function)
           (:reference first-n)
           (:group-id nil)
           (:name "first-n")
           (:x 462)
           (:y 367)
           (:w 72)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "N")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "aux 4")
           (:x 371)
           (:y 236)
           (:w 43)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value third)
           (:id 11))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "aux")
           (:x 332)
           (:y 228)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value <)
           (:id 12))
          (:box
           (:type :function)
           (:reference sort-list)
           (:group-id nil)
           (:name "sort-list")
           (:x 352)
           (:y 276)
           (:w 80)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "test")
             (:value (:list quote <))
             (:reactive nil))
            (:input
             (:type :key)
             (:name "key")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 6 :in 1)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 13 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 1)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 10 :in 1)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 13 :in 2)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 13 :in 1)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 9 :in 0)))
          (:connection
           (:from (:box 13 :out 0))
           (:to (:box 10 :in 0))))))
       (:group-id nil)
       (:name "Correção SDIF")
       (:x 387/7)
       (:y 204)
       (:w 118)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "output") (:reactive nil))
        (:output (:name "output 2") (:reactive nil))
        (:output (:name "output 3") (:reactive nil)))
       (:id 8))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "CATANZARO - Extraindo Parciais de SDIF")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (863 716)) (:position (104 0)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 163)
           (:y 502)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 48)
           (:y 46)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 2")
             (:index 2)
             (:doc nil)))
           (:group-id nil)
           (:name "output 2")
           (:x 242)
           (:y 202)
           (:w 67)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 2))
          (:box
           (:type :function)
           (:reference remove)
           (:group-id nil)
           (:name "remove")
           (:x 195)
           (:y 444)
           (:w 80)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ITEM")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "elegante map car")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input0")
                 (:doc "")))
               (:group-id nil)
               (:name "input0")
               (:x 5)
               (:y 0)
               (:w 56)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 454)
               (:y 466)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "input1")
                 (:doc "")))
               (:group-id nil)
               (:name "input1")
               (:x 292)
               (:y -8)
               (:w 56)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "aux")
               (:x 352)
               (:y 403)
               (:w 32)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 3))
              (:box
               (:type :function)
               (:reference flat)
               (:group-id nil)
               (:name "flat")
               (:x 340)
               (:y 433)
               (:w 56)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LST")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "level")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :function)
               (:reference mapcar)
               (:group-id nil)
               (:name "mapcar")
               (:x 222)
               (:y 268)
               (:w 79)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FUNCTION")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :function)
               (:reference x-append)
               (:group-id nil)
               (:name "x-append")
               (:x 355)
               (:y 178)
               (:w 90)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda :lambda)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "L1?")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "L2?")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 250)
               (:y 362)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 7))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 203)
               (:y 483)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 8))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 312)
               (:y 77)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 9))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 29)
               (:y 77)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 10)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 9 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 4 :in 1)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 5 :in 0)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 7 :out 1))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 6 :in 1)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 5 :in 1))))))
           (:group-id nil)
           (:name "elegante map car")
           (:x 92)
           (:y 203)
           (:w 134)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input0")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input1")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 4))
          (:box
           (:type :function)
           (:reference sort-list)
           (:group-id nil)
           (:name "sort-list")
           (:x 151)
           (:y 306)
           (:w 106)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "test")
             (:value (:list quote <))
             (:reactive nil))
            (:input
             (:type :key)
             (:name "key")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "aux 5")
           (:x 192)
           (:y 270)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value <)
           (:id 6))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "aux 4")
           (:x 229)
           (:y 269)
           (:w 40)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value first)
           (:id 7))
          (:box
           (:type :function)
           (:reference getsdifdata)
           (:group-id nil)
           (:name "getsdifdata")
           (:x 42)
           (:y 136)
           (:w 346)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SID")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "FRAMETYPE")
             (:value "")
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "MATTYPE")
             (:value "")
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CNUM")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "RMIN")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "RMAX")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "TMIN")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "TMAX")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "out0") (:reactive nil))
            (:output (:name "out1") (:reactive nil)))
           (:id 8))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux")
           (:x 108)
           (:y 102)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 0)
           (:id 9))
          (:box
           (:type :value)
           (:reference simple-base-string)
           (:group-id nil)
           (:name "aux 2")
           (:x 143)
           (:y 102)
           (:w 55)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "1TRC")
           (:id 10))
          (:box
           (:type :value)
           (:reference cons)
           (:group-id nil)
           (:name "aux 3")
           (:x 206)
           (:y 48)
           (:w 55)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value (:list 0 1 2))
           (:id 11))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "omloop")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input")
                 (:doc "")))
               (:group-id nil)
               (:name "input")
               (:x 12)
               (:y 5)
               (:w 50)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 944)
               (:y 466)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :function)
               (:reference seq)
               (:group-id nil)
               (:name "seq")
               (:x 1038)
               (:y 332)
               (:w 58)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OP")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "op+")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "op+1") (:reactive nil)))
               (:id 2))
              (:box
               (:type :function)
               (:reference car)
               (:group-id nil)
               (:name "car")
               (:x 767)
               (:y 15)
               (:w 55)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "X")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :object)
               (:reference store)
               (:group-id nil)
               (:name "pointeur")
               (:x 862)
               (:y 0)
               (:w 80)
               (:h 50)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:showname t)
               (:lock :locked)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "VALUE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "SELF") (:reactive nil))
                (:output (:name "VALUE") (:reactive nil)))
               (:window (:size nil) (:position nil))
               (:edition-params)
               (:value
                (:object (:class store) (:slots ((:value 688.0)))))
               (:id 4))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "aux 3")
               (:x 970)
               (:y 54)
               (:w 44)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value value)
               (:id 5))
              (:box
               (:type :function)
               (:reference set-slot)
               (:group-id nil)
               (:name "set-slot")
               (:x 1039)
               (:y 104)
               (:w 79)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "SLOT")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "VALUE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 788)
               (:y 146)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 7))
              (:box
               (:type :function)
               (:reference seq)
               (:group-id nil)
               (:name "seq")
               (:x 658)
               (:y 330)
               (:w 58)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OP")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "op+")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "op+")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "op+")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "op+1") (:reactive nil))
                (:output (:name "op+2") (:reactive nil))
                (:output (:name "op+3") (:reactive nil)))
               (:id 8))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 695)
               (:y 125)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 9))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "aux 2")
               (:x 169)
               (:y 235)
               (:w 44)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value value)
               (:id 10))
              (:box
               (:type :object)
               (:reference store)
               (:group-id nil)
               (:name "pointeur 2")
               (:x 108)
               (:y 217)
               (:w 80)
               (:h 50)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:showname t)
               (:lock :locked)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "VALUE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "SELF") (:reactive nil))
                (:output (:name "VALUE") (:reactive nil)))
               (:window (:size nil) (:position nil))
               (:edition-params)
               (:value
                (:object (:class store) (:slots ((:value 45.0D0)))))
               (:id 11))
              (:box
               (:type :function)
               (:reference get-slot)
               (:group-id nil)
               (:name "get-slot")
               (:x 158)
               (:y 287)
               (:w 80)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "SLOT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 12))
              (:box
               (:type :function)
               (:reference om=)
               (:group-id nil)
               (:name "om=")
               (:x 164)
               (:y 364)
               (:w 85)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NUM1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "NUM2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 13))
              (:box
               (:type :function)
               (:reference omif)
               (:group-id nil)
               (:name "omif")
               (:x 264)
               (:y 403)
               (:w 62)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "TEST")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ACTION")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "else")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :function)
               (:reference car)
               (:group-id nil)
               (:name "car")
               (:x 252)
               (:y 212)
               (:w 55)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "X")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:type :special)
               (:reference init-do)
               (:group-id nil)
               (:name "init-do")
               (:x 21)
               (:y 422)
               (:w 56)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 16))
              (:box
               (:type :object)
               (:reference store)
               (:group-id nil)
               (:name "pointeur")
               (:x 8)
               (:y 120)
               (:w 80)
               (:h 50)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:showname t)
               (:lock :locked)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "VALUE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "SELF") (:reactive nil))
                (:output (:name "VALUE") (:reactive nil)))
               (:window (:size nil) (:position nil))
               (:edition-params)
               (:value
                (:object (:class store) (:slots ((:value 0.0)))))
               (:id 17))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "aux")
               (:x 114)
               (:y 158)
               (:w 44)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value value)
               (:id 18))
              (:box
               (:type :function)
               (:reference set-slot)
               (:group-id nil)
               (:name "set-slot")
               (:x 19)
               (:y 215)
               (:w 79)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "SLOT")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "VALUE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 19))
              (:box
               (:type :function)
               (:reference caar)
               (:group-id nil)
               (:name "caar")
               (:x 73)
               (:y 96)
               (:w 62)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "X")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 20))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 186)
               (:y 595)
               (:w 81)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 21))
              (:box
               (:type :function)
               (:reference length)
               (:group-id nil)
               (:name "length")
               (:x 328)
               (:y 131)
               (:w 73)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SEQUENCE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 22))
              (:box
               (:type :function)
               (:reference arithm-ser)
               (:group-id nil)
               (:name "arithm-ser")
               (:x 399)
               (:y 208)
               (:w 96)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "BEGIN")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "END")
                 (:value 10)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "STEP")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 23))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "value box")
               (:x 388)
               (:y 167)
               (:w 32)
               (:h 29)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 24))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "value box")
               (:x 451)
               (:y 173)
               (:w 32)
               (:h 29)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 25))
              (:box
               (:type :function)
               (:reference print)
               (:group-id nil)
               (:name "print")
               (:x 373)
               (:y 457)
               (:w 64)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SOMETHING")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 26))
              (:box
               (:type :function)
               (:reference list)
               (:group-id nil)
               (:name "list")
               (:x 318)
               (:y 492)
               (:w 54)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value 2)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 27))
              (:box
               (:type :function)
               (:reference first)
               (:group-id nil)
               (:name "first")
               (:x 200)
               (:y 507)
               (:w 60)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 28))
              (:box
               (:type :function)
               (:reference x-append)
               (:group-id nil)
               (:name "x-append")
               (:x 475)
               (:y 572)
               (:w 301)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "L1?")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "L2?")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "lst?")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "lst?")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "lst?")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 29))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "value box")
               (:x 483)
               (:y 530)
               (:w 77)
               (:h 29)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value ordenando)
               (:id 30))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "value box")
               (:x 640)
               (:y 537)
               (:w 32)
               (:h 29)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value de)
               (:id 31))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "value box")
               (:x 717)
               (:y 537)
               (:w 60)
               (:h 29)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value parciais)
               (:id 32))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 242)
               (:y 36)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 33))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 480)
               (:y 303)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 34)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 20 :in 0)))
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 33 :in 0)))
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 22 :in 0)))
              (:connection
               (:from (:box 2 :out 1))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 6 :in 2)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 6 :in 1)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 8 :in 3))
               (:attributes
                (:color
                 (:color 1.0S0 0.7529392S0 0.7960777S0 1.0)
                 :style
                 nil
                 :modif
                 nil)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 2 :in 0))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 nil
                 :modif
                 nil)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 8 :in 0))
               (:attributes
                (:color
                 (:color 1.0S0 0.6470585S0 0.0S0 1.0)
                 :style
                 nil
                 :modif
                 nil)))
              (:connection
               (:from (:box 7 :out 1))
               (:to (:box 2 :in 1))
               (:attributes
                (:color
                 (:color 0.9 0.3 0.3 1.0)
                 :style
                 nil
                 :modif
                 nil)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 14 :in 2)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 8 :in 2))
               (:attributes
                (:color
                 (:color 1.0S0 0.0S0 0.0S0 1.0)
                 :style
                 nil
                 :modif
                 nil)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 14 :in 1))
               (:attributes
                (:color
                 (:color 0.0S0 0.0S0 1.0S0 1.0)
                 :style
                 nil
                 :modif
                 nil)))
              (:connection
               (:from (:box 9 :out 1))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 9 :out 2))
               (:to (:box 8 :in 1))
               (:attributes
                (:color
                 (:color 0.0S0 1.0S0 0.0S0 1.0)
                 :style
                 nil
                 :modif
                 nil)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 12 :in 1)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 12 :in 0)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 13 :in 0)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 27 :in 0)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 13 :in 1)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 19 :in 0)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 19 :in 1)))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 16 :in 0)))
              (:connection
               (:from (:box 20 :out 0))
               (:to (:box 19 :in 2)))
              (:connection
               (:from (:box 22 :out 0))
               (:to (:box 23 :in 1)))
              (:connection
               (:from (:box 22 :out 0))
               (:to (:box 29 :in 3)))
              (:connection
               (:from (:box 23 :out 0))
               (:to (:box 34 :in 0)))
              (:connection
               (:from (:box 24 :out 0))
               (:to (:box 23 :in 0)))
              (:connection
               (:from (:box 25 :out 0))
               (:to (:box 23 :in 2)))
              (:connection
               (:from (:box 26 :out 0))
               (:to (:box 27 :in 1)))
              (:connection
               (:from (:box 27 :out 0))
               (:to (:box 28 :in 0)))
              (:connection
               (:from (:box 28 :out 0))
               (:to (:box 21 :in 0)))
              (:connection
               (:from (:box 29 :out 0))
               (:to (:box 26 :in 0)))
              (:connection
               (:from (:box 30 :out 0))
               (:to (:box 29 :in 0)))
              (:connection
               (:from (:box 31 :out 0))
               (:to (:box 29 :in 2)))
              (:connection
               (:from (:box 32 :out 0))
               (:to (:box 29 :in 4)))
              (:connection
               (:from (:box 33 :out 0))
               (:to (:box 3 :in 0)))
              (:connection
               (:from (:box 33 :out 0))
               (:to (:box 9 :in 0)))
              (:connection
               (:from (:box 33 :out 0))
               (:to (:box 15 :in 0)))
              (:connection
               (:from (:box 34 :out 0))
               (:to (:box 29 :in 1))))))
           (:group-id nil)
           (:name "omloop")
           (:x 385)
           (:y 350)
           (:w 200)
           (:h 125)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock :eval-once)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 12)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 12 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 1)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 5 :in 2)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 8 :out 1)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 8 :out 1)) (:to (:box 4 :in 1)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 1)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 8 :in 2)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 8 :in 3)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 8 :in 4)))
          (:connection
           (:from (:box 12 :out 0))
           (:to (:box 3 :in 1))))))
       (:group-id nil)
       (:name "CATANZARO - Extraindo Parciais de SDIF")
       (:x 686/3)
       (:y 809/9)
       (:w 265)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "output") (:reactive nil))
        (:output (:name "output 2") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 97)
       (:y 150)
       (:w 79)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "Ordem e approx para MAX-MSP")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 286)
           (:y 483)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 288)
           (:y 17)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux")
           (:x 297)
           (:y 275)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 7)
           (:id 2))
          (:box
           (:type :function)
           (:reference om-round)
           (:group-id nil)
           (:name "om-round")
           (:x 257)
           (:y 306)
           (:w 93)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "N")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "decimals")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :function)
           (:reference om-round)
           (:group-id nil)
           (:name "om-round")
           (:x 116)
           (:y 448)
           (:w 93)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "N")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 2")
           (:x 129)
           (:y 337)
           (:w 44)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1000)
           (:id 5))
          (:box
           (:type :function)
           (:reference om*)
           (:group-id nil)
           (:name "om*")
           (:x 94)
           (:y 373)
           (:w 63)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 326)
           (:y 414)
           (:w 90)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :function)
           (:reference third)
           (:group-id nil)
           (:name "third")
           (:x 395)
           (:y 225)
           (:w 64)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :function)
           (:reference second)
           (:group-id nil)
           (:name "second")
           (:x 239)
           (:y 242)
           (:w 77)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :function)
           (:reference fourth)
           (:group-id nil)
           (:name "fourth")
           (:x 35)
           (:y 220)
           (:w 72)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :function)
           (:reference mat-trans)
           (:group-id nil)
           (:name "mat-trans")
           (:x 266)
           (:y 116)
           (:w 93)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "MATRIX")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 11)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 11 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 1)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 7 :in 1)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 1)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 7 :in 2)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 9 :in 0)))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 10 :in 0))))))
       (:group-id nil)
       (:name "Ordem e approx para MAX-MSP")
       (:x 62)
       (:y 11)
       (:w 212)
       (:h 66)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda :lambda)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 11))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "sem substituição")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (939 500)) (:position (156 152)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 390)
           (:y 377)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 50)
           (:y 50)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 2")
             (:index 2)
             (:doc nil)))
           (:group-id nil)
           (:name "output 2")
           (:x 94)
           (:y 295)
           (:w 67)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
           (:group-id nil)
           (:name "input 2")
           (:x 522)
           (:y 131)
           (:w 59)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "input 3") (:doc "")))
           (:group-id nil)
           (:name "input 3")
           (:x 662)
           (:y 109)
           (:w 59)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 3")
             (:index 3)
             (:doc nil)))
           (:group-id nil)
           (:name "output 3")
           (:x 561)
           (:y 382)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 5))
          (:box
           (:type :function)
           (:reference mc->f)
           (:group-id nil)
           (:name "mc->f")
           (:x 461)
           (:y 285)
           (:w 72)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "MIDICS?")
             (:value 6000)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :function)
           (:reference om*)
           (:group-id nil)
           (:name "om*")
           (:x 513)
           (:y 209)
           (:w 63)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :function)
           (:reference dx->x)
           (:group-id nil)
           (:name "dx->x")
           (:x 593)
           (:y 225)
           (:w 72)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "START")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LIST")
             (:value (:list 1 1))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :function)
           (:reference first)
           (:group-id nil)
           (:name "first")
           (:x 582)
           (:y 110)
           (:w 60)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :function)
           (:reference x->dx)
           (:group-id nil)
           (:name "x->dx")
           (:x 402)
           (:y 199)
           (:w 72)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value (:list 0 1))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :function)
           (:reference f->mc)
           (:group-id nil)
           (:name "f->mc")
           (:x 379)
           (:y 107)
           (:w 72)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FREQ")
             (:value 440)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 11))
          (:box
           (:type :function)
           (:reference mat-trans)
           (:group-id nil)
           (:name "mat-trans")
           (:x 803/7)
           (:y 98)
           (:w 93)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "MATRIX")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 12))
          (:box
           (:type :function)
           (:reference second)
           (:group-id nil)
           (:name "second")
           (:x 733/7)
           (:y 160)
           (:w 77)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 12 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 7 :in 1)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 1)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 13 :in 0)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 2 :in 0)))
          (:connection
           (:from (:box 13 :out 0))
           (:to (:box 11 :in 0))))))
       (:group-id nil)
       (:name "sem substituição")
       (:x 963/2)
       (:y 711/2)
       (:w 131)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 3")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "output") (:reactive nil))
        (:output (:name "output 2") (:reactive nil))
        (:output (:name "output 3") (:reactive nil)))
       (:id 12))
      (:comment
       (:x 186)
       (:y 205)
       (:w 229)
       (:h 67)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text
        "SDIF has a problem that causes one of the lists to have more than 3 parameters (amplitude, time, frequency).")
       (:id 13))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 7")
       (:x 1063/2)
       (:y 635/2)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 14)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 1 :in 0)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 2 :in 0))
       (:attributes
        (:color (:color 0.9 0.3 0.3 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 2 :in 2))
       (:attributes
        (:color (:color 0.0S0 1.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 2 :in 1))
       (:attributes
        (:color
         (:color 1.0S0 0.6470585S0 0.0S0 1.0)
         :style
         nil
         :modif
         nil)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 5 :in 0)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 6 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 7 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 12 :in 0))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 10 :in 1))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 8 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 10 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection (:from (:box 12 :out 1)) (:to (:box 2 :in 3)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 12 :in 1))))))
   (:group-id nil)
   (:name "TRANSPOSIÇÃO PARA MAX/MSP-COLL")
   (:x 30)
   (:y 63)
   (:w 250)
   (:h 66)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "SDIF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 0))
  (:box
   (:type :object)
   (:reference sdiffile)
   (:group-id nil)
   (:name nil)
   (:x 72)
   (:y 3)
   (:w 166)
   (:h 56)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:showname t)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size (1366 725)) (:position (-8 -8)))
   (:edition-params)
   (:value
    (:object
     (:class sdiffile)
     (:add-slots
      ((:file-map
        (:list
         (:fstream-desc
          (:id 0)
          (:fsig "1TRC")
          (:tmin 0.0D0)
          (:tmax 6.37999963760376D0)
          (:nf 639)
          (:matrices
           (:list
            (:mstream-desc
             (:msig "1TRC")
             (:fields ("Index" "Frequency" "Amplitude" "Phase"))
             (:rmax 300)
             (:tmin 0.0D0)
             (:tmax 6.37999963760376D0)
             (:nf 639)))))))
       (:file-pathname
        (:pathname
         (:directory (:relative :back "in-files"))
         (:device nil)
         (:host "C")
         (:name "Fl-aeol-G4-p")
         (:type "sdif")))))))
   (:id 1))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "TO chord")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (758 644)) (:position (125 53)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
       (:group-id nil)
       (:name "input 1")
       (:x 413)
       (:y 31)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 169)
       (:y 561)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :function)
       (:reference last-n)
       (:group-id nil)
       (:name "last-n")
       (:x 427)
       (:y 235)
       (:w 70)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "N")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 497)
       (:y 142)
       (:w 73)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference om-)
       (:group-id nil)
       (:name "om-")
       (:x 562)
       (:y 189)
       (:w 61)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :function)
       (:reference mat-trans)
       (:group-id nil)
       (:name "mat-trans")
       (:x 80)
       (:y 53)
       (:w 93)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "MATRIX")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference first)
       (:group-id nil)
       (:name "first")
       (:x 77)
       (:y 108)
       (:w 60)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference f->mc)
       (:group-id nil)
       (:name "f->mc")
       (:x 53)
       (:y 171)
       (:w 72)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FREQ")
         (:value 440)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference om-scale)
       (:group-id nil)
       (:name "om-scale")
       (:x 143)
       (:y 168)
       (:w 241)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference second)
       (:group-id nil)
       (:name "second")
       (:x 160)
       (:y 100)
       (:w 77)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 244)
       (:y 129)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 10))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 316)
       (:y 133)
       (:w 39)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 127)
       (:id 11))
      (:box
       (:type :object)
       (:reference chord)
       (:group-id nil)
       (:name nil)
       (:x 76)
       (:y 267)
       (:w 156)
       (:h 141)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LVEL")
         (:value (:list 80))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LOFFSET")
         (:value (:list 0))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LDUR")
         (:value (:list 1000))
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "LVEL") (:reactive nil))
        (:output (:name "LOFFSET") (:reactive nil))
        (:output (:name "LDUR") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class chord)
         (:slots
          ((:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:onset 0)
           (:item-time nil)
           (:item-internal-time nil)
           (:item-type nil)
           (:attributes nil)
           (:lmidic
            (:list
             6828
             6574
             7906
             9106
             8566
             9042
             9468
             9808
             8650
             8476
             9518
             7776
             9764
             9414
             8030
             8974
             8904
             6278
             7046
             9168))
           (:lvel
            (:list 127 79 70 22 10 8 7 5 5 5 3 2 2 2 1 1 1 1 1 1))
           (:loffset (:list 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
           (:ldur
            (:list
             1000
             1000
             1000
             1000
             1000
             1000
             1000
             1000
             1000
             1000
             1000
             1000
             1000
             1000
             1000
             1000
             1000
             1000
             1000
             1000))
           (:lchan (:list 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
           (:lport
            (:list
             nil
             nil
             nil
             nil
             nil
             nil
             nil
             nil
             nil
             nil
             nil
             nil
             nil
             nil
             nil
             nil
             nil
             nil
             nil
             nil))))))
       (:id 12))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 12)
       (:y 563)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 13))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 42)
       (:y 469)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 14))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 414)
       (:y 79)
       (:w 64)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 15)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 2 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 12 :in 2)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 8 :in 2)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 14 :out 1)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 2 :in 0))))))
   (:group-id nil)
   (:name "TO chord")
   (:x 9)
   (:y 141)
   (:w 165)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 1")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 2))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference choose)
   (:group-id nil)
   (:name "choose")
   (:x 93)
   (:y 273)
   (:w 76)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list 1 2 3 4 5 6 7 8 9 10))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHORD-N")
     (:value (:list 1 7 9))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 130)
   (:y 227)
   (:w 57)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 67)
   (:id 4))
  (:box
   (:type :object)
   (:reference chord)
   (:group-id nil)
   (:name nil)
   (:x 49)
   (:y 315)
   (:w 595)
   (:h 118)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 80))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LOFFSET")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "LOFFSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil)))
   (:window (:size (1366 725)) (:position (-8 -8)))
   (:edition-params
    (:staff :ggff)
    (:chord-mode :chord)
    (:duration-display nil)
    (:scale :scale-1/8))
   (:value
    (:object
     (:class chord)
     (:slots
      ((:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:onset 0)
       (:item-time nil)
       (:item-internal-time nil)
       (:item-type nil)
       (:attributes nil)
       (:lmidic
        (:list
         6700
         9138
         8660
         8622
         6826
         9470
         7910
         9196
         9092
         9046
         6564
         8420
         7036
         10028
         9074
         8556
         9974
         9566
         9438
         8908))
       (:lvel (:list 127 22 15 12 11 9 7 7 6 5 4 3 3 3 2 2 1 1 1 1))
       (:loffset (:list 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0))
       (:ldur
        (:list
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000))
       (:lchan (:list 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1))
       (:lport
        (:list
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil))))))
   (:id 5))
  (:comment
   (:x 167)
   (:y 201)
   (:w 317)
   (:h 32)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Qual o frame que vc deseja analisar/ver?")
   (:id 6))
  (:comment
   (:x 248)
   (:y 8)
   (:w 254)
   (:h 38)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Aqui vc carrega o arquivo SDIF apertando V.")
   (:id 7))
  (:box
   (:type :interface)
   (:reference button)
   (:group-id nil)
   (:name "button")
   (:x 121)
   (:y 458)
   (:w 201)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:send-value t)
   (:text "")
   (:inputs
    (:input
     (:type :key)
     (:name "send-value")
     (:value nil)
     (:reactive nil))
    (:input (:type :key) (:name "text") (:value nil) (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value nil)
   (:id 8)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 2 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 0 :in 0)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 5 :in 0)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 1)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 8 :in 0)))))