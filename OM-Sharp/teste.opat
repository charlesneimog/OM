
(:patch
 (:name "teste")
 (:doc "")
 (:info
  (:created "2020/11/07 14:55:09")
  (:modified "2020/11/07 20:12:07")
  (:by "om-sharp")
  (:version 1.01))
 (:window (:size (1924 1030)) (:position (-9 -9)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "value box")
   (:x 131)
   (:y 238)
   (:w 48)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3/2)
   (:id 0))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 197)
   (:y 208)
   (:w 40)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 1))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "my-patch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1938 1098)) (:position (-9 -9)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "INTERVAL") (:doc "")))
       (:group-id nil)
       (:name "INTERVAL")
       (:x 445)
       (:y 21)
       (:w 107)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "RANGE") (:doc "")))
       (:group-id nil)
       (:name "RANGE")
       (:x 578)
       (:y 24)
       (:w 82)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "SOBREPOSITION")
         (:doc "")))
       (:group-id nil)
       (:name "SOBREPOSITION")
       (:x 705)
       (:y 31)
       (:w 166)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 480)
       (:y 901)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference mos)
       (:group-id nil)
       (:name "mos")
       (:x 253)
       (:y 204)
       (:w 191)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value 4/3)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SOBREPOSITION")
         (:value 11)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "RANGE")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :function)
       (:reference om/)
       (:group-id nil)
       (:name "om/")
       (:x 25)
       (:y 235)
       (:w 73)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference mos)
       (:group-id nil)
       (:name "mos")
       (:x 147)
       (:y 291)
       (:w 74)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value 4/3)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SOBREPOSITION")
         (:value 11)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "RANGE")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference mos-verify)
       (:group-id nil)
       (:name "mos-verify")
       (:x 53)
       (:y 373)
       (:w 129)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "MOS")
         (:value
          (:list
           1
           4/3
           16/9
           32/27
           128/81
           256/243
           1024/729
           4096/2187
           8192/6561
           32768/19683
           65536/59049
           262144/177147
           2))
         (:reactive nil)))
       (:outputs
        (:output (:name "out0") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 7))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference mos-verify)
       (:group-id nil)
       (:name "mos-verify")
       (:x 205)
       (:y 377)
       (:w 129)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "MOS")
         (:value
          (:list
           1
           4/3
           16/9
           32/27
           128/81
           256/243
           1024/729
           4096/2187
           8192/6561
           32768/19683
           65536/59049
           262144/177147
           2))
         (:reactive nil)))
       (:outputs
        (:output (:name "out0") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference reverse)
       (:group-id nil)
       (:name "reverse")
       (:x 82)
       (:y 424)
       (:w 101)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference equal)
       (:group-id nil)
       (:name "equal")
       (:x 163)
       (:y 490)
       (:w 84)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :special)
       (:reference if)
       (:group-id nil)
       (:name "if")
       (:x 236)
       (:y 708)
       (:w 278)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TEST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "THEN")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 525)
       (:y 561)
       (:w 323)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value "interval of")
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value ratios-loop)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lst?")
         (:value "and its complementary")
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lst?")
         (:value (:list om/ range ratios-loop))
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lst?")
         (:value "stacking")
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lst?")
         (:value ckn-loop)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lst?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lst?")
         (:value times)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 945)
       (:y 355)
       (:w 362)
       (:h 47)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "times are complementary in the range")
       (:id 13))
      (:box
       (:type :function)
       (:reference arithm-ser)
       (:group-id nil)
       (:name "arithm-ser")
       (:x 750)
       (:y 134)
       (:w 128)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "BEGIN")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "END")
         (:value 10)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "STEP")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 808)
       (:y 88)
       (:w 32)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 15))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 736)
       (:y 88)
       (:w 32)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2)
       (:id 16))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "loop-list")
       (:x 641)
       (:y 190)
       (:w 90)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 17))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 349)
       (:y 750)
       (:w 76)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 18))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 257)
       (:y 876)
       (:w 78)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 19))
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "value box")
       (:x 481)
       (:y 834)
       (:w 48)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value end)
       (:id 20))
      (:box
       (:type :function)
       (:reference print)
       (:group-id nil)
       (:name "print")
       (:x 430)
       (:y 643)
       (:w 78)
       (:h 36)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SOMETHING")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 21))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 644)
       (:y 501)
       (:w 104)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "stacking")
       (:id 22))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 441)
       (:y 438)
       (:w 230)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "and its complementary")
       (:id 23))
      (:box
       (:type :value)
       (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
       (:group-id nil)
       (:name "value box")
       (:x 387)
       (:y 492)
       (:w 120)
       (:h 36)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "interval of")
       (:id 24)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 0 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 0 :out 0)) (:to (:box 5 :in 1)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 4 :in 2)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 6 :in 2)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 12 :in 7)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 14 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 12 :in 3)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 10 :in 1)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 21 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 12 :in 6)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 2)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 4 :in 1)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 6 :in 1)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 12 :in 5)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 21 :out 0)) (:to (:box 11 :in 1)))
      (:connection (:from (:box 22 :out 0)) (:to (:box 12 :in 4)))
      (:connection (:from (:box 23 :out 0)) (:to (:box 12 :in 2)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 12 :in 0))))))
   (:group-id nil)
   (:name "my-patch")
   (:x 148)
   (:y 316)
   (:w 119)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "INTERVAL")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RANGE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOBREPOSITION")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 2))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 249)
   (:y 250)
   (:w 39)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 30)
   (:id 3))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference mos)
   (:group-id nil)
   (:name "mos")
   (:x 467)
   (:y 232)
   (:w 193)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 4/3)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOBREPOSITION")
     (:value 11)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RANGE")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "value box")
   (:x 481)
   (:y 68)
   (:w 47)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3/2)
   (:id 5))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 546)
   (:y 135)
   (:w 39)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 23)
   (:id 6))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 617)
   (:y 124)
   (:w 32)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 7))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference mos)
   (:group-id nil)
   (:name "mos")
   (:x 730)
   (:y 247)
   (:w 193)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 4/3)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOBREPOSITION")
     (:value 11)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RANGE")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:type :function)
   (:reference om/)
   (:group-id nil)
   (:name "om/")
   (:x 718)
   (:y 115)
   (:w 73)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ARG1")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt->mc)
   (:group-id nil)
   (:name "rt->mc")
   (:x 536)
   (:y 319)
   (:w 99)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FUNDAMENTAL")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 10))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt->mc)
   (:group-id nil)
   (:name "rt->mc")
   (:x 799)
   (:y 318)
   (:w 99)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FUNDAMENTAL")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name nil)
   (:x 313)
   (:y 373)
   (:w 755)
   (:h 242)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list (:list 6000)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list (:list 1000)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value 100)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil)))
   (:window (:size (650 300)) (:position (160 160)))
   (:edition-params (:scale :scale-1/8))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 25000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name nil)
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:lmidic
        (:list
         (:list 6000)
         (:list 6702)
         (:list 7404)
         (:list 8106)
         (:list 6408)
         (:list 7110)
         (:list 7812)
         (:list 6114)
         (:list 6816)
         (:list 7518)
         (:list 8220)
         (:list 6522)
         (:list 7223)
         (:list 7925)
         (:list 6227)
         (:list 6929)
         (:list 7631)
         (:list 8333)
         (:list 6635)
         (:list 7337)
         (:list 8039)
         (:list 6341)
         (:list 7043)
         (:list 7745)
         (:list 8400)))
       (:lonset
        (:list
         0
         1000
         2000
         3000
         4000
         5000
         6000
         7000
         8000
         9000
         10000
         11000
         12000
         13000
         14000
         15000
         16000
         17000
         18000
         19000
         20000
         21000
         22000
         23000
         24000
         25000))
       (:ldur (:list 1000))
       (:lvel (:list 100))
       (:loffset (:list 0))
       (:lchan (:list 1))
       (:lport (:list nil))
       (:llegato nil)))))
   (:id 12))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name nil)
   (:x 308)
   (:y 634)
   (:w 760)
   (:h 242)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list (:list 6000)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list (:list 1000)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value 100)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil)))
   (:window (:size (650 300)) (:position (64 64)))
   (:edition-params (:scale :scale-1/8))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 25000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name nil)
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:lmidic
        (:list
         (:list 6000)
         (:list 7698)
         (:list 6996)
         (:list 6294)
         (:list 7992)
         (:list 7290)
         (:list 6588)
         (:list 8286)
         (:list 7584)
         (:list 6882)
         (:list 6180)
         (:list 7878)
         (:list 7177)
         (:list 6475)
         (:list 8173)
         (:list 7471)
         (:list 6769)
         (:list 6067)
         (:list 7765)
         (:list 7063)
         (:list 6361)
         (:list 8059)
         (:list 7357)
         (:list 6655)
         (:list 8400)))
       (:lonset
        (:list
         0
         1000
         2000
         3000
         4000
         5000
         6000
         7000
         8000
         9000
         10000
         11000
         12000
         13000
         14000
         15000
         16000
         17000
         18000
         19000
         20000
         21000
         22000
         23000
         24000
         25000))
       (:ldur (:list 1000))
       (:lvel (:list 100))
       (:loffset (:list 0))
       (:lchan (:list 1))
       (:lport (:list nil))
       (:llegato nil)))))
   (:id 13))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "my-function")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1920 1026)) (:position (-9 -9)))
     (:text
      (:list
       ""
       "(lambda"
       " (in1_interval in2_range in3_sobreposition)"
       " (let*"
       "  ((mem-4-local nil))"
       "  (loop for it-3 in (arithm-ser 2 in3_sobreposition 1)"
       "   do (let*"
       "       ((box-om/025235 (om/ in2_range in1_interval)))"
       "       (let"
       "        ((collect-val"
       "          (if"
       "           (equal"
       "            (reverse"
       "             (nth"
       "              0"
       "              (multiple-value-list"
       "               (mos-verify"
       "                (mos box-om/025235 it-3 in2_range)))))"
       "            (nth"
       "             0"
       "             (multiple-value-list"
       "              (mos-verify"
       "               (mos in1_interval it-3 in2_range)))))"
       "           (print"
       "            (x-append"
       "             \"interval of\""
       "             in1_interval"
       "             \"and its complementary\""
       "             box-om/025235"
       "             \"stacking\""
       "             it-3"
       "             \"times are complementary in the range\""
       "             in2_range))"
       "           nil)))"
       "        (pushr collect-val mem-4-local)"
       "        collect-val)))"
       "  'end))"))))
   (:group-id nil)
   (:name "my-function")
   (:x 63)
   (:y 526)
   (:w 141)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "IN1_INTERVAL")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "IN2_RANGE")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "IN3_SOBREPOSITION")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference mos)
   (:group-id nil)
   (:name "mos")
   (:x 103)
   (:y 708)
   (:w 74)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 4/3)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOBREPOSITION")
     (:value 11)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RANGE")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference mos-complementary)
   (:group-id nil)
   (:name "mos-complementary")
   (:x 1097)
   (:y 199)
   (:w 214)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "INTERVAL")
     (:value 3/2)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RANGE")
     (:value 4)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOBREPOSITION")
     (:value 50)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "value box")
   (:x 1112)
   (:y 164)
   (:w 47)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3/2)
   (:id 17))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 1188)
   (:y 164)
   (:w 32)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 18))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 1252)
   (:y 164)
   (:w 39)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 50)
   (:id 19))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference mos-complementary)
   (:group-id nil)
   (:name "mos-complementary")
   (:x 1205)
   (:y 433)
   (:w 214)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 3/2)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RANGE")
     (:value 4)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOBREPOSITION")
     (:value 50)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 20))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 1360)
   (:y 398)
   (:w 39)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 50)
   (:id 21))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 1296)
   (:y 398)
   (:w 32)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 22))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "value box")
   (:x 1220)
   (:y 398)
   (:w 47)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3/2)
   (:id 23))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference mos-complementary)
   (:group-id nil)
   (:name "mos-complementary")
   (:x 1076)
   (:y 571)
   (:w 214)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 3/2)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RANGE")
     (:value 4)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOBREPOSITION")
     (:value 50)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 24))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference mos-complementary)
   (:group-id nil)
   (:name "mos-complementary")
   (:x 206)
   (:y 110)
   (:w 214)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 3/2)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RANGE")
     (:value 4)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOBREPOSITION")
     (:value 50)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 25))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 361)
   (:y 75)
   (:w 39)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 30)
   (:id 26))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 297)
   (:y 75)
   (:w 32)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 27))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "value box")
   (:x 221)
   (:y 75)
   (:w 47)
   (:h 36)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3/2)
   (:id 28))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference mos-verify)
   (:group-id nil)
   (:name "mos-verify")
   (:x 378)
   (:y 292)
   (:w 129)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MOS")
     (:value
      (:list
       1
       4/3
       16/9
       32/27
       128/81
       256/243
       1024/729
       4096/2187
       8192/6561
       32768/19683
       65536/59049
       262144/177147
       2))
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 29))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference mos-verify)
   (:group-id nil)
   (:name "mos-verify")
   (:x 674)
   (:y 303)
   (:w 129)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MOS")
     (:value
      (:list
       1
       4/3
       16/9
       32/27
       128/81
       256/243
       1024/729
       4096/2187
       8192/6561
       32768/19683
       65536/59049
       262144/177147
       2))
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 30)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 2 :in 0)))
  (:connection (:from (:box 0 :out 0)) (:to (:box 14 :in 0)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 2 :in 1)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 14 :in 1)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 2)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 14 :in 2)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 10 :in 0)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 29 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 9 :in 1)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 4 :in 1)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 8 :in 1)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 4 :in 2)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 9 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 2)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 11 :in 0)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 30 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 12 :in 1)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 13 :in 1))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 1.0 0.0 0.0 1.0)) (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 16 :in 0)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 16 :in 1)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 16 :in 2)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 20 :in 2)))
  (:connection (:from (:box 22 :out 0)) (:to (:box 20 :in 1)))
  (:connection (:from (:box 23 :out 0)) (:to (:box 20 :in 0)))
  (:connection (:from (:box 26 :out 0)) (:to (:box 25 :in 2)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 25 :in 1)))
  (:connection (:from (:box 28 :out 0)) (:to (:box 25 :in 0)))))