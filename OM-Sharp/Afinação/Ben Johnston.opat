
(:patch
 (:name "1.3.1 - Ben Johnston")
 (:doc "")
 (:info
  (:created "2020/09/01 17:45:54")
  (:modified "2020/09/01 17:46:00")
  (:by "om-sharp")
  (:version 1.0))
 (:window (:size (1382 607)) (:position (0 0)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt->mc)
   (:group-id nil)
   (:name "rt->mc")
   (:x 800)
   (:y 201)
   (:w 77)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FUNDAMENTAL")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 772)
   (:y 292)
   (:w 541)
   (:h 122)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 70000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "CHORD-SEQ")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:lmidic
        (:list
         (:list 6000)
         (:list 6022)
         (:list 6041)
         (:list 6063)
         (:list 6071)
         (:list 6092)
         (:list 6112)
         (:list 6133)
         (:list 6141)
         (:list 6163)
         (:list 6182)
         (:list 6204)
         (:list 6223)
         (:list 6245)
         (:list 6253)
         (:list 6275)
         (:list 6294)
         (:list 6316)
         (:list 6337)
         (:list 6345)
         (:list 6357)
         (:list 6365)
         (:list 6386)
         (:list 6408)
         (:list 6427)
         (:list 6449)
         (:list 6457)
         (:list 6478)
         (:list 6498)
         (:list 6520)
         (:list 6539)
         (:list 6561)
         (:list 6569)
         (:list 6590)
         (:list 6610)
         (:list 6631)
         (:list 6639)
         (:list 6661)
         (:list 6680)
         (:list 6702)
         (:list 6723)
         (:list 6743)
         (:list 6751)
         (:list 6765)
         (:list 6773)
         (:list 6792)
         (:list 6794)
         (:list 6814)
         (:list 6835)
         (:list 6843)
         (:list 6855)
         (:list 6884)
         (:list 6906)
         (:list 6925)
         (:list 6947)
         (:list 6955)
         (:list 6977)
         (:list 6996)
         (:list 7018)
         (:list 7047)
         (:list 7059)
         (:list 7067)
         (:list 7088)
         (:list 7108)
         (:list 7110)
         (:list 7129)
         (:list 7137)
         (:list 7151)
         (:list 7159)
         (:list 7178)))
       (:lonset
        (:list
         0
         1000
         2000
         3000
         4000
         5000
         6000
         7000
         8000
         9000
         10000
         11000
         12000
         13000
         14000
         15000
         16000
         17000
         18000
         19000
         20000
         21000
         22000
         23000
         24000
         25000
         26000
         27000
         28000
         29000
         30000
         31000
         32000
         33000
         34000
         35000
         36000
         37000
         38000
         39000
         40000
         41000
         42000
         43000
         44000
         45000
         46000
         47000
         48000
         49000
         50000
         51000
         52000
         53000
         54000
         55000
         56000
         57000
         58000
         59000
         60000
         61000
         62000
         63000
         64000
         65000
         66000
         67000
         68000
         69000
         70000))
       (:ldur (:list 1000))
       (:lvel (:list 100))
       (:loffset (:list 0))
       (:lchan (:list 1))
       (:lport (:list nil))
       (:llegato nil)))))
   (:id 1))
  (:comment
   (:x 463)
   (:y 243)
   (:w 154)
   (:h 67)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 14) (:style :plain)))
   (:align nil)
   (:text
    "Sobreposição de todos os intervalos até que eles se sobreponham.")
   (:id 2))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 5")
   (:x 325)
   (:y 139)
   (:w 67)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 6/5 5/4))
   (:id 3))
  (:comment
   (:x 222)
   (:y 181)
   (:w 103)
   (:h 113)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 14) (:style :plain)))
   (:align nil)
   (:text
    "Intervalos utilizados para a sobreposição a partir das fundamentais 1/1, 4/3 e 3/2.")
   (:id 4))
  (:comment
   (:x 628)
   (:y 95)
   (:w 208)
   (:h 81)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 14) (:style :plain)))
   (:align nil)
   (:text
    "Todos intervalos usados como fundamentais iniciais (Figura 10). Observe que 1 e 2 são reduzidos à uma única oitava. Por isso só resta o número 1.")
   (:id 5))
  (:box
   (:type :value)
   (:reference simple-base-string)
   (:group-id nil)
   (:name "TEXT-BOX 3")
   (:x 513)
   (:y 89)
   (:w 113)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value "untitled")
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "(1 4/3 3/2 2)")
   (:id 6))
  (:box
   (:type :value)
   (:reference simple-base-string)
   (:group-id nil)
   (:name "TEXT-BOX 2")
   (:x 75)
   (:y 140)
   (:w 70)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value "untitled")
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "3/2")
   (:id 7))
  (:comment
   (:x 187)
   (:y 62)
   (:w 150)
   (:h 62)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 14) (:style :plain)))
   (:align nil)
   (:text "Resulta somente no intervalo da média aritmética.")
   (:id 8))
  (:comment
   (:x 411)
   (:y 179)
   (:w 193)
   (:h 63)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 14) (:style :plain)))
   (:align nil)
   (:text "Faz o processo da figura 10.")
   (:id 9))
  (:comment
   (:x 562)
   (:y 401)
   (:w 211)
   (:h 76)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 15) (:style :plain)))
   (:align nil)
   (:text "Resultado da Avaliação Final")
   (:id 10))
  (:box
   (:type :function)
   (:reference sort-list)
   (:group-id nil)
   (:name "sort-list")
   (:x 683)
   (:y 289)
   (:w 80)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "transfomar todos 3")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 150)
       (:y 25)
       (:w 56)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux")
       (:x 15)
       (:y 105)
       (:w 104)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 1 3/2 5/4 6/5))
       (:id 1))
      (:box
       (:type :function)
       (:reference om*)
       (:group-id nil)
       (:name "om*")
       (:x 604)
       (:y 28)
       (:w 63)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 521)
       (:y 158)
       (:w 90)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference om/)
       (:group-id nil)
       (:name "om/")
       (:x 476)
       (:y 114)
       (:w 60)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference rt-octave)
       (:group-id nil)
       (:name "rt-octave")
       (:x 495)
       (:y 372)
       (:w 88)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FRAQ")
         (:value 3/2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "lispfunction")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           "(lambda (johnston) (remove-duplicates johnston :test #'equal))"))))
       (:group-id nil)
       (:name "lispfunction")
       (:x 595)
       (:y 396)
       (:w 102)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "JOHNSTON")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 580)
       (:y 302)
       (:w 56)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 483)
       (:y 234)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 8))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 419)
       (:y 344)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 9))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 5)
       (:y 5)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 42)
       (:y 150)
       (:w 64)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 11))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 571)
       (:y 495)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 12)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 2 :in 1))
       (:attributes
        (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 4 :in 1))
       (:attributes
        (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 8 :out 1)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 0 :in 0)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 2 :in 0))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 4 :in 0))
       (:attributes
        (:color
         (:color 1.0S0 0.0S0 0.0S0 1.0)
         :style
         nil
         :modif
         nil))))))
   (:group-id nil)
   (:name "transfomar todos 3")
   (:x 658)
   (:y 228)
   (:w 144)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 12))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "transfomar todos 2")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 150)
       (:y 25)
       (:w 56)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux")
       (:x 15)
       (:y 105)
       (:w 104)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 1 3/2 5/4 6/5))
       (:id 1))
      (:box
       (:type :function)
       (:reference om*)
       (:group-id nil)
       (:name "om*")
       (:x 604)
       (:y 28)
       (:w 63)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 521)
       (:y 158)
       (:w 90)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference om/)
       (:group-id nil)
       (:name "om/")
       (:x 476)
       (:y 114)
       (:w 60)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference rt-octave)
       (:group-id nil)
       (:name "rt-octave")
       (:x 495)
       (:y 372)
       (:w 88)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FRAQ")
         (:value 3/2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "lispfunction")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           "(lambda (johnston) (remove-duplicates johnston :test #'equal))"))))
       (:group-id nil)
       (:name "lispfunction")
       (:x 595)
       (:y 396)
       (:w 102)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "JOHNSTON")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 580)
       (:y 302)
       (:w 56)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 483)
       (:y 234)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 8))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 419)
       (:y 344)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 9))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 5)
       (:y 5)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 42)
       (:y 150)
       (:w 64)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 11))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 571)
       (:y 495)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 12)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 2 :in 1))
       (:attributes
        (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 4 :in 1))
       (:attributes
        (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 8 :out 1)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 0 :in 0)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 2 :in 0))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 4 :in 0))
       (:attributes
        (:color
         (:color 1.0S0 0.0S0 0.0S0 1.0)
         :style
         nil
         :modif
         nil))))))
   (:group-id nil)
   (:name "transfomar todos 2")
   (:x 466)
   (:y 317)
   (:w 144)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 13))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 7")
   (:x 256)
   (:y 139)
   (:w 67)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 5/4 6/5))
   (:id 14))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference arith-mean-sob)
   (:group-id nil)
   (:name "arith-mean-sob")
   (:x 48)
   (:y 192)
   (:w 124)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "GRAVE")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "AGUDO")
     (:value 5/4)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "Sobreposição")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 191)
       (:y 404)
       (:w 54)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "args")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "args")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 322)
       (:y 310)
       (:w 90)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lst?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :function)
       (:reference om*)
       (:group-id nil)
       (:name "om*")
       (:x 397)
       (:y 236)
       (:w 63)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference om*)
       (:group-id nil)
       (:name "om*")
       (:x 254)
       (:y 233)
       (:w 63)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference second)
       (:group-id nil)
       (:name "second")
       (:x 14)
       (:y 103)
       (:w 77)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :function)
       (:reference first)
       (:group-id nil)
       (:name "first")
       (:x 63)
       (:y 41)
       (:w 60)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 63)
       (:y 306)
       (:w 90)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lst?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference om*)
       (:group-id nil)
       (:name "om*")
       (:x 175)
       (:y 250)
       (:w 63)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference om*)
       (:group-id nil)
       (:name "om*")
       (:x 107)
       (:y 102)
       (:w 63)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 192)
       (:y 469)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 9))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 126)
       (:y 558)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 10))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 5)
       (:y 5)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 360)
       (:y 67)
       (:w 64)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 12))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 419)
       (:y -4)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 226)
       (:y 558)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 14))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 3) (:name "input 3") (:doc "")))
       (:group-id nil)
       (:name "input 3")
       (:x 222)
       (:y 5)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 0 :in 1)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 1 :in 2))
       (:attributes
        (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 1 :in 1))
       (:attributes
        (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 2 :in 0))
       (:attributes
        (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 3 :in 1))
       (:attributes
        (:color (:color 0.0S0 1.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 7 :in 1))
       (:attributes
        (:color (:color 0.0S0 1.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 2 :in 1))
       (:attributes
        (:color
         (:color 1.0S0 0.6470585S0 0.0S0 1.0)
         :style
         nil
         :modif
         nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 8 :in 1))
       (:attributes
        (:color
         (:color 1.0S0 0.6470585S0 0.0S0 1.0)
         :style
         nil
         :modif
         nil)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 0 :in 0)))
      (:connection
       (:from (:box 7 :out 0))
       (:to (:box 6 :in 2))
       (:attributes
        (:color (:color 0.9 0.3 0.3 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 6 :in 1))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 7 :in 0))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 9 :out 1)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 5 :in 0)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 1 :in 0))
       (:attributes
        (:color
         (:color 1.0S0 0.7529392S0 0.7960777S0 1.0)
         :style
         nil
         :modif
         nil)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 3 :in 0))
       (:attributes
        (:color
         (:color 1.0S0 0.7529392S0 0.7960777S0 1.0)
         :style
         nil
         :modif
         nil)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 6 :in 0))
       (:attributes
        (:color
         (:color 1.0S0 0.7529392S0 0.7960777S0 1.0)
         :style
         nil
         :modif
         nil)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 8 :in 0))
       (:attributes
        (:color
         (:color 1.0S0 0.7529392S0 0.7960777S0 1.0)
         :style
         nil
         :modif
         nil)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 12 :in 0))))))
   (:group-id nil)
   (:name "Sobreposição")
   (:x 339)
   (:y 179)
   (:w 112)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 3")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 16))
  (:comment
   (:x 48)
   (:y 406)
   (:w 512)
   (:h 109)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "(1 81/80 128/125 648/625 25/24 135/128 16/15 27/25 625/576 1125/1024 10/9 9/8 256/225 144/125 125/108 75/64 32/27 6/5 243/200 625/512 768/625 100/81 5/4 81/64 32/25 162/125 125/96 675/512 4/3 27/20 512/375 864/625 25/18 45/32 64/45 36/25 625/432 375/256 40/27 3/2 243/160 192/125 125/81 972/625 25/16 128/81 405/256 8/5 81/50 625/384 1024/625 5/3 27/16 128/75 216/125 125/72 225/128 16/9 9/5 1875/1024 1152/625 50/27 15/8 256/135 243/128 48/25 625/324 243/125 125/64 160/81)")
   (:id 17))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 2")
   (:x 413)
   (:y 20)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 18))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux")
   (:x 442)
   (:y 20)
   (:w 37)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2)
   (:id 19))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference arith-mean-sob)
   (:group-id nil)
   (:name "arith-mean-sob")
   (:x 388)
   (:y 50)
   (:w 124)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "GRAVE")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "AGUDO")
     (:value 5/4)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 20))
  (:box
   (:type :value)
   (:reference simple-base-string)
   (:group-id nil)
   (:name "TEXT-BOX")
   (:x 36)
   (:y 279)
   (:w 127)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value "untitled")
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "(1 6/5 5/4 3/2)")
   (:id 21))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference arith-mean)
   (:group-id nil)
   (:name "arith-mean")
   (:x 108)
   (:y 60)
   (:w 99)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "GRAVE")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "AGUDO")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 4")
   (:x 152)
   (:y 19)
   (:w 37)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2)
   (:id 23))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "transfomar todos ")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:comment
       (:x 441)
       (:y 101)
       (:w 216)
       (:h 61)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 14) (:style :plain)))
       (:align nil)
       (:text "Sobrepõe um intervalo por vez.")
       (:id 0))
      (:comment
       (:x 278)
       (:y 492)
       (:w 309)
       (:h 62)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 14) (:style :plain)))
       (:align nil)
       (:text "Remove (caso haja) razões duplicadas.")
       (:id 1))
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "aux 2")
       (:x 228)
       (:y 473)
       (:w 48)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value equal)
       (:id 2))
      (:box
       (:type :function)
       (:reference remove-duplicates)
       (:group-id nil)
       (:name "remove-duplicates")
       (:x 166)
       (:y 503)
       (:w 140)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "test")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:comment
       (:x 232)
       (:y 422)
       (:w 309)
       (:h 62)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 14) (:style :plain)))
       (:align nil)
       (:text
        "Coloca todas as razões em uma única oitava. Como Johnston o faz.")
       (:id 4))
      (:comment
       (:x 232)
       (:y 297)
       (:w 161)
       (:h 32)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 14) (:style :plain)))
       (:align nil)
       (:text "Coleta todos os dados")
       (:id 5))
      (:comment
       (:x 242)
       (:y 223)
       (:w 177)
       (:h 62)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "União dos intervalos ascendentes e descententes")
       (:id 6))
      (:comment
       (:x 401)
       (:y 21)
       (:w 242)
       (:h 54)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 14) (:style :plain)))
       (:align nil)
       (:text
        "Intervalos utilizados por Johnston na sobreposição de intervalos até eles se sobreporem.")
       (:id 7))
      (:comment
       (:x 88)
       (:y 161)
       (:w 96)
       (:h 41)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "Sobreposição Descendente")
       (:id 8))
      (:comment
       (:x 222)
       (:y 99)
       (:w 88)
       (:h 44)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "Sobreposição ascendente")
       (:id 9))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 76)
       (:y 48)
       (:w 56)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux")
       (:x 289)
       (:y 32)
       (:w 104)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 1 3/2 5/4 6/5))
       (:id 11))
      (:box
       (:type :function)
       (:reference om*)
       (:group-id nil)
       (:name "om*")
       (:x 194)
       (:y 100)
       (:w 63)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 181)
       (:y 209)
       (:w 90)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:type :function)
       (:reference om/)
       (:group-id nil)
       (:name "om/")
       (:x 70)
       (:y 165)
       (:w 60)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference rt-octave)
       (:group-id nil)
       (:name "rt-octave")
       (:x 177)
       (:y 404)
       (:w 88)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FRAQ")
         (:value 3/2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 193)
       (:y 345)
       (:w 56)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 187)
       (:y 279)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 17))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 80)
       (:y 356)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 18))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 62)
       (:y -16)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 404)
       (:y 91)
       (:w 64)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 20))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 204)
       (:y 576)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 21)))
     (:connections
      (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 21 :in 0)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 12 :in 1))
       (:attributes
        (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 14 :in 1))
       (:attributes
        (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 20 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 13 :in 1)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 17 :out 1)) (:to (:box 16 :in 0)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 10 :in 0)))
      (:connection
       (:from (:box 20 :out 0))
       (:to (:box 12 :in 0))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 20 :out 0))
       (:to (:box 14 :in 0))
       (:attributes
        (:color
         (:color 1.0S0 0.0S0 0.0S0 1.0)
         :style
         nil
         :modif
         nil))))))
   (:group-id nil)
   (:name "transfomar todos ")
   (:x 372)
   (:y 250)
   (:w 137)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 24))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 3")
   (:x 112)
   (:y 19)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 25)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 1)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 16 :in 1)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 15 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 0 :in 0)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 11 :in 0)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 12 :in 0)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 16 :in 0)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 21 :in 0)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 24 :in 0)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 20 :in 0)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 20 :in 1)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 6 :in 0)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 16 :in 2)))
  (:connection (:from (:box 22 :out 0)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 23 :out 0)) (:to (:box 22 :in 1)))
  (:connection (:from (:box 24 :out 0)) (:to (:box 13 :in 0)))
  (:connection (:from (:box 25 :out 0)) (:to (:box 22 :in 0)))))