
(:patch
 (:name "1.3.2 - moments of symmetry")
 (:doc "")
 (:info
  (:created "2020/09/01 17:46:54")
  (:modified "2020/09/01 17:47:41")
  (:by "om-sharp")
  (:version 1.0))
 (:window (:size (1168 698)) (:position (182 0)))
 (:grid nil)
 (:lock t)
 (:boxes
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 12")
   (:x 253)
   (:y 67)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 16)
   (:id 0))
  (:box
   (:type :function)
   (:reference om-random)
   (:group-id nil)
   (:name "om-random")
   (:x 235)
   (:y 97)
   (:w 103)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "LOW") (:value 0) (:reactive nil))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 32)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:box
   (:type :function)
   (:reference om-random)
   (:group-id nil)
   (:name "om-random")
   (:x 72)
   (:y 104)
   (:w 103)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LOW")
     (:value 16)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 32)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 2))
  (:box
   (:type :function)
   (:reference om/)
   (:group-id nil)
   (:name "om/")
   (:x 237)
   (:y 178)
   (:w 60)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ARG1")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :function)
   (:reference f->mc)
   (:group-id nil)
   (:name "f->mc")
   (:x 339)
   (:y 508)
   (:w 72)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FREQ")
     (:value 440)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 4))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 11")
   (:x 331)
   (:y 413)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 5))
  (:box
   (:type :function)
   (:reference om*)
   (:group-id nil)
   (:name "om*")
   (:x 321)
   (:y 443)
   (:w 63)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ARG1")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:type :function)
   (:reference mc->f)
   (:group-id nil)
   (:name "mc->f")
   (:x 258)
   (:y 379)
   (:w 72)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MIDICS?")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 10")
   (:x 119)
   (:y 198)
   (:w 44)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 8400)
   (:id 8))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "aux 9")
   (:x 50)
   (:y 211)
   (:w 49)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 27/16)
   (:id 9))
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "aux 8")
   (:x 206)
   (:y 505)
   (:w 42)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0.01)
   (:id 10))
  (:box
   (:type :function)
   (:reference om*)
   (:group-id nil)
   (:name "om*")
   (:x 195)
   (:y 533)
   (:w 63)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ARG1")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 7")
   (:x 29)
   (:y 487)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 72)
   (:id 12))
  (:box
   (:type :function)
   (:reference om-)
   (:group-id nil)
   (:name "om-")
   (:x 33)
   (:y 521)
   (:w 88)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ARG1")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 6")
   (:x 193)
   (:y 204)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 5)
   (:id 14))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "aux 5")
   (:x 324)
   (:y 265)
   (:w 37)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4/3)
   (:id 15))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 4")
   (:x 365)
   (:y 265)
   (:w 44)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6000)
   (:id 16))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 3")
   (:x 410)
   (:y 265)
   (:w 44)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 7200)
   (:id 17))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 2")
   (:x 459)
   (:y 265)
   (:w 38)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 200)
   (:id 18))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux")
   (:x 506)
   (:y 265)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2)
   (:id 19))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference mos-check)
   (:group-id nil)
   (:name "mos-check")
   (:x 297)
   (:y 295)
   (:w 266)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "INTERVAL")
     (:value 4/3)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FUND")
     (:value 6000)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "AGUDA")
     (:value 7200)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOBREPOSITION")
     (:value 11)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "NUMBER_OF_INTERVAL")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 20))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference mos)
   (:group-id nil)
   (:name "mos")
   (:x 61)
   (:y 244)
   (:w 141)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 4/3)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "GRAVE")
     (:value 6000)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "AGUDA")
     (:value 7200)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SOBREPOSITION")
     (:value 11)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 21))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "MOS")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 4")
       (:x 239)
       (:y 78)
       (:w 44)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 7200)
       (:id 0))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference mos)
       (:group-id nil)
       (:name "mos")
       (:x 88)
       (:y 123)
       (:w 285)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value 4/3)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GRAVE")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "AGUDA")
         (:value 7200)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SOBREPOSITION")
         (:value 11)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :object)
       (:reference chord-seq)
       (:group-id nil)
       (:name "CHORD-SEQ")
       (:x 89)
       (:y 244)
       (:w 305)
       (:h 99)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LONSET")
         (:value (:list 0 450))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LDUR")
         (:value (:list 1000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LVEL")
         (:value (:list 100))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "loffset")
         (:value (:list 0))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "lchan")
         (:value (:list 1))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "llegato")
         (:value 0)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "LONSET") (:reactive nil))
        (:output (:name "LDUR") (:reactive nil))
        (:output (:name "LVEL") (:reactive nil))
        (:output (:name "loffset") (:reactive nil))
        (:output (:name "lchan") (:reactive nil))
        (:output (:name "llegato") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params (:staff :g))
       (:value
        (:object
         (:class chord-seq)
         (:slots
          ((:onset 0)
           (:duration 5500)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:name "CHORD-SEQ")
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:lmidic
            (:list
             (:list 6498)
             (:list 6996)
             (:list 6294)
             (:list 6792)
             (:list 6090)
             (:list 6588)
             (:list 7086)
             (:list 6384)
             (:list 6882)
             (:list 6180)
             (:list 6678)))
           (:lonset
            (:list
             0
             450
             900
             1350
             1800
             2250
             2700
             3150
             3600
             4050
             4500
             5500))
           (:ldur (:list 1000))
           (:lvel (:list 100))
           (:loffset (:list 0))
           (:lchan (:list 1))
           (:lport (:list nil))
           (:llegato nil)))))
       (:id 2))
      (:box
       (:type :value)
       (:reference ratio)
       (:group-id nil)
       (:name "aux 3")
       (:x 129)
       (:y 78)
       (:w 37)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 4/3)
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 182)
       (:y 78)
       (:w 44)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6000)
       (:id 4))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux")
       (:x 302)
       (:y 78)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 11)
       (:id 5)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 2)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 2 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 1 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 1 :in 3))))))
   (:group-id nil)
   (:name "MOS")
   (:x 453)
   (:y 130)
   (:w 63)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs)
   (:id 22))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "MOS-CHECK")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :value)
       (:reference simple-base-string)
       (:group-id nil)
       (:name "TEXT-BOX")
       (:x 76)
       (:y 182)
       (:w 299)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "in")
         (:value "untitled")
         (:reactive nil)))
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "(5 8 9 13 17 21 25 29 33 37 41 78 115)")
       (:id 0))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 17")
       (:x 166)
       (:y 59)
       (:w 44)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6000)
       (:id 1))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 25")
       (:x 210)
       (:y 18)
       (:w 44)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 7200)
       (:id 2))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 24")
       (:x 298)
       (:y 54)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2)
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 23")
       (:x 242)
       (:y 48)
       (:w 38)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 150)
       (:id 4))
      (:box
       (:type :value)
       (:reference ratio)
       (:group-id nil)
       (:name "aux 22")
       (:x 124)
       (:y 57)
       (:w 37)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 5/4)
       (:id 5))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference mos-check)
       (:group-id nil)
       (:name "mos-check")
       (:x 125)
       (:y 97)
       (:w 206)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "INTERVAL")
         (:value 4/3)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FUND")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "AGUDA")
         (:value 7200)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SOBREPOSITION")
         (:value 11)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NUMBER_OF_INTERVAL")
         (:value 11)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 6 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 6 :in 2)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 6 :in 4)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 6 :in 3)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 0 :in 0))))))
   (:group-id nil)
   (:name "MOS-CHECK")
   (:x 1717/4)
   (:y 44)
   (:w 107)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs)
   (:id 23))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "MOS-verify")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1076 500)) (:position (52 48)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference mos-verify)
       (:group-id nil)
       (:name "mos-verify")
       (:x 173)
       (:y 177)
       (:w 97)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 6754 6308 7062 6616 6178))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference mos-verify)
       (:group-id nil)
       (:name "mos-verify")
       (:x 443)
       (:y 245)
       (:w 97)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 6754 6308 7062 6616 6178))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :value)
       (:reference simple-base-string)
       (:group-id nil)
       (:name "TEXT-BOX 2")
       (:x 367)
       (:y 340)
       (:w 227)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "in")
         (:value "untitled")
         (:reactive nil)))
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "This is not a MOS")
       (:id 2))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "ratio->mc")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (500 500)) (:position (78 74)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:library "OM-JI")
           (:type :function)
           (:reference rt-octave)
           (:group-id nil)
           (:name "rt-octave")
           (:x 177)
           (:y 147)
           (:w 88)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FRAQ")
             (:value (:list 1/3 1 5/3))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 50)
           (:y 316)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 156)
           (:y 50)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:library "OM-JI")
           (:type :function)
           (:reference rt->mc)
           (:group-id nil)
           (:name "rt->mc")
           (:x 103)
           (:y 216)
           (:w 77)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "RATIO")
             (:value 11/8)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "FUNDAMENTAL")
             (:value 6000)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 1 :in 0))))))
       (:group-id nil)
       (:name "ratio->mc")
       (:x 847/2)
       (:y 343/2)
       (:w 94)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 5")
       (:x 391)
       (:y 60)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 5)
       (:id 4))
      (:box
       (:type :value)
       (:reference simple-base-string)
       (:group-id nil)
       (:name "TEXT-BOX")
       (:x 87)
       (:y 273)
       (:w 227)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "in")
         (:value "untitled")
         (:reactive nil)))
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "(s L s L s s L s L s)")
       (:id 5))
      (:box
       (:type :value)
       (:reference ratio)
       (:group-id nil)
       (:name "aux 4")
       (:x 116)
       (:y 68)
       (:w 37)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 4/3)
       (:id 6))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 3")
       (:x 155)
       (:y 68)
       (:w 44)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6000)
       (:id 7))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 200)
       (:y 68)
       (:w 44)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 7200)
       (:id 8))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux")
       (:x 245)
       (:y 68)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 11)
       (:id 9))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference mos)
       (:group-id nil)
       (:name "mos")
       (:x 150)
       (:y 98)
       (:w 92)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value 4/3)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GRAVE")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "AGUDA")
         (:value 7200)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SOBREPOSITION")
         (:value 11)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference diamond)
       (:group-id nil)
       (:name "diamond")
       (:x 556)
       (:y 118)
       (:w 86)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIMITE")
         (:value 11)
         (:reactive nil)))
       (:outputs
        (:output (:name "out0") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 11)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 10 :in 1)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 10 :in 2)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 3)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 3 :in 0))))))
   (:group-id nil)
   (:name "MOS-verify")
   (:x 1143/2)
   (:y 365/2)
   (:w 99)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs)
   (:id 24)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 0)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 1)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 21 :in 0)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 11 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 1)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 4 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 0)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 21 :in 2)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 11 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 13 :in 0)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 13 :in 1)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 21 :in 3)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 20 :in 0)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 20 :in 1)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 20 :in 2)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 20 :in 3)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 20 :in 4)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 7 :in 0)))))