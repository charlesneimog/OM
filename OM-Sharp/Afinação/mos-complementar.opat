
(:patch
 (:name "1.2.2 - mos-complementar")
 (:doc "")
 (:info
  (:created "2020/09/01 17:44:45")
  (:modified "2020/09/01 17:45:41")
  (:by "om-sharp")
  (:version 1.0))
 (:window (:size (1366 725)) (:position (-8 -8)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "mypatch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 12")
       (:x 220)
       (:y 284)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 8)
       (:id 0))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 9")
       (:x 175)
       (:y 284)
       (:w 44)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 7200)
       (:id 1))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 7")
       (:x 129)
       (:y 284)
       (:w 44)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6000)
       (:id 2))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 5")
       (:x 569)
       (:y 280)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 8)
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 4")
       (:x 521)
       (:y 280)
       (:w 44)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 7200)
       (:id 4))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 3")
       (:x 472)
       (:y 280)
       (:w 44)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6000)
       (:id 5))
      (:comment
       (:x 222)
       (:y 491)
       (:w 189)
       (:h 61)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 14) (:style :plain)))
       (:align nil)
       (:text "<- um é espelho do outro ->")
       (:id 6))
      (:box
       (:type :value)
       (:reference simple-base-string)
       (:group-id nil)
       (:name "TEXT-BOX 2")
       (:x 73)
       (:y 486)
       (:w 149)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "in")
         (:value "untitled")
         (:reactive nil)))
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "(L L s L s L s L s)")
       (:id 7))
      (:box
       (:type :value)
       (:reference simple-base-string)
       (:group-id nil)
       (:name "TEXT-BOX")
       (:x 410)
       (:y 486)
       (:w 149)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "in")
         (:value "untitled")
         (:reactive nil)))
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "(s L s L s L s L L)")
       (:id 8))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference mos-verify)
       (:group-id nil)
       (:name "mos-verify")
       (:x 456)
       (:y 402)
       (:w 97)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 6754 6308 7062 6616 6178))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :value)
       (:reference ratio)
       (:group-id nil)
       (:name "aux 2")
       (:x 419)
       (:y 280)
       (:w 49)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 22/19)
       (:id 10))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference mos)
       (:group-id nil)
       (:name "mos")
       (:x 410)
       (:y 325)
       (:w 156)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value 4/3)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GRAVE")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "AGUDA")
         (:value 7200)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SOBREPOSITION")
         (:value 8)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference mos-verify)
       (:group-id nil)
       (:name "mos-verify")
       (:x 119)
       (:y 394)
       (:w 97)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 6754 6308 7062 6616 6178))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :value)
       (:reference ratio)
       (:group-id nil)
       (:name "aux")
       (:x 77)
       (:y 284)
       (:w 49)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 19/11)
       (:id 13))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference mos)
       (:group-id nil)
       (:name "mos")
       (:x 73)
       (:y 320)
       (:w 156)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value 4/3)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GRAVE")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "AGUDA")
         (:value 7200)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SOBREPOSITION")
         (:value 8)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:comment
       (:x 54)
       (:y 205)
       (:w 702)
       (:h 70)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text
        "OM > (\"interval of\" 19/11 \"and its complementary\" 22/19 stacking 8 ((184 70) (70 184) (\"interval range\" 2) (\"range\" 2)))
OM > (\"interval of\" 19/11 \"and its complementary\" 22/19 stacking 13 ((114 70) (70 114) (\"interval range\" 2) (\"range\" 2)))
OM > (\"interval of\" 19/11 \"and its complementary\" 22/19 stacking 18 ((44 70) (70 44) (\"interval range\" 2) (\"range\" 2)))
OM => \"finish\"
")
       (:id 15))
      (:comment
       (:x 86)
       (:y 50)
       (:w 150)
       (:h 38)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 14) (:style :plain)))
       (:align nil)
       (:text "Intervalos que serão testados.")
       (:id 16))
      (:comment
       (:x 250)
       (:y 50)
       (:w 131)
       (:h 60)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 14) (:style :plain)))
       (:align nil)
       (:text "Testa todas as sobreposições de MOS de 8 até 30.")
       (:id 17))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 10")
       (:x 262)
       (:y 112)
       (:w 51)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 8 30))
       (:id 18))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "mos complementar")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :function)
           (:reference second)
           (:group-id nil)
           (:name "second")
           (:x 126)
           (:y 48)
           (:w 77)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :function)
           (:reference first)
           (:group-id nil)
           (:name "first")
           (:x 73)
           (:y 52)
           (:w 60)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :function)
           (:reference omif)
           (:group-id nil)
           (:name "omif")
           (:x 1691/7)
           (:y 3540/7)
           (:w 62)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "TEST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ACTION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "else")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 676/7)
           (:y 2931/7)
           (:w 73)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :function)
           (:reference om=)
           (:group-id nil)
           (:name "om=")
           (:x 1334/7)
           (:y 3246/7)
           (:w 64)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NUM1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "NUM2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 3")
           (:x 1390/7)
           (:y 3008/7)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 0)
           (:id 5))
          (:box
           (:type :function)
           (:reference remove)
           (:group-id nil)
           (:name "remove")
           (:x 634/7)
           (:y 2525/7)
           (:w 80)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ITEM")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :value)
           (:reference simple-base-string)
           (:group-id nil)
           (:name "aux 4")
           (:x 174)
           (:y 390)
           (:w 264)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "There are no results for these parameters.")
           (:id 7))
          (:box
           (:type :value)
           (:reference simple-base-string)
           (:group-id nil)
           (:name "aux 2")
           (:x 312)
           (:y 424)
           (:w 58)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "finish")
           (:id 8))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux")
           (:x 196)
           (:y 46)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 9))
          (:box
           (:type :function)
           (:reference arithm-ser)
           (:group-id nil)
           (:name "arithm-ser")
           (:x 97)
           (:y 102)
           (:w 96)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "BEGIN")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "END")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "STEP")
             (:value t)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "omloop2")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :abstraction)
               (:reference
                (:patch
                 (:name "omloop3 2")
                 (:doc "")
                 (:info
                  (:created nil)
                  (:modified nil)
                  (:by *app-name*)
                  (:version 0))
                 (:window (:size nil) (:position nil))
                 (:grid nil)
                 (:lock nil)
                 (:boxes
                  (:box
                   (:type :function)
                   (:reference reverse)
                   (:group-id nil)
                   (:name "reverse")
                   (:x 69)
                   (:y 70)
                   (:w 79)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "SEQUENCE")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 0))
                  (:box
                   (:type :function)
                   (:reference remove-dup)
                   (:group-id nil)
                   (:name "remove-dup")
                   (:x 297)
                   (:y 318)
                   (:w 105)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "LIST")
                     (:value (:list 1 2 3 4))
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "TEST")
                     (:value eq)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "DEPTH")
                     (:value 1)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 1))
                  (:box
                   (:type :value)
                   (:reference cons)
                   (:group-id nil)
                   (:name "aux 2")
                   (:x 245)
                   (:y 130)
                   (:w 46)
                   (:h 29)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:lock nil)
                   (:inputs)
                   (:outputs (:output (:name "value") (:reactive nil)))
                   (:value (:list 4 1))
                   (:id 2))
                  (:box
                   (:type :function)
                   (:reference omif)
                   (:group-id nil)
                   (:name "omif")
                   (:x 222)
                   (:y 186)
                   (:w 62)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "TEST")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "ACTION")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :optional)
                     (:name "else")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 3))
                  (:box
                   (:type :value)
                   (:reference cons)
                   (:group-id nil)
                   (:name "aux")
                   (:x 290)
                   (:y 150)
                   (:w 46)
                   (:h 29)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:lock nil)
                   (:inputs)
                   (:outputs (:output (:name "value") (:reactive nil)))
                   (:value (:list 2 1))
                   (:id 4))
                  (:box
                   (:type :function)
                   (:reference om/=)
                   (:group-id nil)
                   (:name "om/=")
                   (:x 146)
                   (:y 129)
                   (:w 69)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "NUM1")
                     (:value 0)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "NUM2")
                     (:value 0)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 5))
                  (:box
                   (:type :special)
                   (:reference collect)
                   (:group-id nil)
                   (:name "collect")
                   (:x 143)
                   (:y 265)
                   (:w 57)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.7 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "data-in")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "push")
                     (:value t)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "init")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs
                    (:output (:name "collect") (:reactive nil))
                    (:output (:name "data-out") (:reactive nil))
                    (:output (:name "init") (:reactive nil)))
                   (:id 6))
                  (:box
                   (:type :special)
                   (:reference iterate)
                   (:group-id nil)
                   (:name "iterate")
                   (:x 77)
                   (:y 397)
                   (:w 57)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.85 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "action")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 7))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 1)
                     (:name "input")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input")
                   (:x 5)
                   (:y 5)
                   (:w 50)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 8))
                  (:box
                   (:type :special)
                   (:reference loop-list)
                   (:group-id nil)
                   (:name "list-loop")
                   (:x 196)
                   (:y 49)
                   (:w 64)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.85 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "list")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "i") (:reactive nil)))
                   (:id 9))
                  (:box
                   (:type :special)
                   (:reference loop-list)
                   (:group-id nil)
                   (:name "list-loop")
                   (:x 26)
                   (:y 121)
                   (:w 64)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.85 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "list")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "i") (:reactive nil)))
                   (:id 10))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 2)
                     (:name "input 2")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input 2")
                   (:x 268)
                   (:y 3)
                   (:w 59)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 11))
                  (:box
                   (:type :io)
                   (:reference
                    (:out
                     (:type omout)
                     (:name "output 1")
                     (:index 1)
                     (:doc "")))
                   (:group-id nil)
                   (:name "output 1")
                   (:x 201)
                   (:y 395)
                   (:w 68)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "out-value")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 12)))
                 (:connections
                  (:connection
                   (:from (:box 0 :out 0))
                   (:to (:box 10 :in 0)))
                  (:connection
                   (:from (:box 1 :out 0))
                   (:to (:box 12 :in 0)))
                  (:connection
                   (:from (:box 2 :out 0))
                   (:to (:box 3 :in 1)))
                  (:connection
                   (:from (:box 3 :out 0))
                   (:to (:box 6 :in 0)))
                  (:connection
                   (:from (:box 4 :out 0))
                   (:to (:box 3 :in 2)))
                  (:connection
                   (:from (:box 5 :out 0))
                   (:to (:box 3 :in 0)))
                  (:connection
                   (:from (:box 6 :out 0))
                   (:to (:box 7 :in 0)))
                  (:connection
                   (:from (:box 6 :out 1))
                   (:to (:box 1 :in 0)))
                  (:connection
                   (:from (:box 8 :out 0))
                   (:to (:box 0 :in 0)))
                  (:connection
                   (:from (:box 9 :out 0))
                   (:to (:box 5 :in 1)))
                  (:connection
                   (:from (:box 10 :out 0))
                   (:to (:box 5 :in 0)))
                  (:connection
                   (:from (:box 11 :out 0))
                   (:to (:box 9 :in 0))))))
               (:group-id nil)
               (:name "omloop3 2")
               (:x 361)
               (:y 365)
               (:w 96)
               (:h 48)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:lock nil)
               (:lambda nil)
               (:pre-delay 0)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "input")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "input 2")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "output 1") (:reactive nil)))
               (:id 0))
              (:box
               (:type :function)
               (:reference omif)
               (:group-id nil)
               (:name "omif")
               (:x 333)
               (:y 582)
               (:w 62)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "TEST")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ACTION")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "aux 3")
               (:x 284)
               (:y 522)
               (:w 32)
               (:h 29)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 2)
               (:id 2))
              (:box
               (:type :function)
               (:reference length)
               (:group-id nil)
               (:name "length")
               (:x 186)
               (:y 499)
               (:w 73)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SEQUENCE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :function)
               (:reference om=)
               (:group-id nil)
               (:name "om=")
               (:x 274)
               (:y 552)
               (:w 64)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NUM1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "NUM2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :value)
               (:reference simple-base-string)
               (:group-id nil)
               (:name "aux 2")
               (:x 350)
               (:y 483)
               (:w 116)
               (:h 29)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "NAO FUNCIONA")
               (:id 5))
              (:box
               (:type :function)
               (:reference list)
               (:group-id nil)
               (:name "list")
               (:x 431)
               (:y 520)
               (:w 274)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :value)
               (:reference simple-base-string)
               (:group-id nil)
               (:name "list 2")
               (:x 59)
               (:y 158)
               (:w 155)
               (:h 29)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "and its complementary")
               (:id 7))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "aux 5")
               (:x 103)
               (:y 246)
               (:w 64)
               (:h 29)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value stacking)
               (:id 8))
              (:box
               (:type :value)
               (:reference simple-base-string)
               (:group-id nil)
               (:name "aux")
               (:x 8)
               (:y 193)
               (:w 84)
               (:h 29)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "interval of")
               (:id 9))
              (:box
               (:type :function)
               (:reference list)
               (:group-id nil)
               (:name "list")
               (:x 12)
               (:y 285)
               (:w 173)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 10))
              (:box
               (:type :function)
               (:reference list)
               (:group-id nil)
               (:name "list")
               (:x 586)
               (:y 264)
               (:w 54)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 11))
              (:box
               (:type :value)
               (:reference simple-base-string)
               (:group-id nil)
               (:name "list 5")
               (:x 497)
               (:y 224)
               (:w 105)
               (:h 29)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "interval range")
               (:id 12))
              (:box
               (:type :function)
               (:reference list)
               (:group-id nil)
               (:name "list")
               (:x 665)
               (:y 271)
               (:w 54)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 13))
              (:box
               (:type :value)
               (:reference simple-base-string)
               (:group-id nil)
               (:name "list 3")
               (:x 633)
               (:y 234)
               (:w 60)
               (:h 29)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "range")
               (:id 14))
              (:box
               (:type :function)
               (:reference list)
               (:group-id nil)
               (:name "list")
               (:x 248)
               (:y 365)
               (:w 54)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 120)
               (:y 510)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 16))
              (:box
               (:type :abstraction)
               (:reference
                (:patch
                 (:name "resultado")
                 (:doc "")
                 (:info
                  (:created nil)
                  (:modified nil)
                  (:by *app-name*)
                  (:version 0))
                 (:window (:size nil) (:position nil))
                 (:grid nil)
                 (:lock nil)
                 (:boxes
                  (:box
                   (:type :function)
                   (:reference omif)
                   (:group-id nil)
                   (:name "omif")
                   (:x 188)
                   (:y 460)
                   (:w 62)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "TEST")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "ACTION")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :optional)
                     (:name "else")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 0))
                  (:box
                   (:type :function)
                   (:reference print)
                   (:group-id nil)
                   (:name "print")
                   (:x 212)
                   (:y 328)
                   (:w 64)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "SOMETHING")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 1))
                  (:box
                   (:type :value)
                   (:reference fixnum)
                   (:group-id nil)
                   (:name "aux 3")
                   (:x 148)
                   (:y 362)
                   (:w 32)
                   (:h 29)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:lock nil)
                   (:inputs)
                   (:outputs (:output (:name "value") (:reactive nil)))
                   (:value 3)
                   (:id 2))
                  (:box
                   (:type :function)
                   (:reference om=)
                   (:group-id nil)
                   (:name "om=")
                   (:x 138)
                   (:y 392)
                   (:w 64)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "NUM1")
                     (:value 0)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "NUM2")
                     (:value 0)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 3))
                  (:box
                   (:type :function)
                   (:reference flat)
                   (:group-id nil)
                   (:name "flat")
                   (:x 34)
                   (:y 113)
                   (:w 56)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "LST")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 4))
                  (:box
                   (:type :function)
                   (:reference second)
                   (:group-id nil)
                   (:name "second")
                   (:x 121)
                   (:y 251)
                   (:w 77)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "LIST")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 5))
                  (:box
                   (:type :function)
                   (:reference first)
                   (:group-id nil)
                   (:name "first")
                   (:x 39)
                   (:y 252)
                   (:w 60)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "LIST")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 6))
                  (:box
                   (:type :function)
                   (:reference om+)
                   (:group-id nil)
                   (:name "om+")
                   (:x 99)
                   (:y 329)
                   (:w 65)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "ARG1")
                     (:value 0)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "ARG2")
                     (:value 0)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 7))
                  (:box
                   (:type :value)
                   (:reference cons)
                   (:group-id nil)
                   (:name "aux 2")
                   (:x 102)
                   (:y 129)
                   (:w 45)
                   (:h 29)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:lock nil)
                   (:inputs)
                   (:outputs (:output (:name "value") (:reactive nil)))
                   (:value (:list 4 1))
                   (:id 8))
                  (:box
                   (:type :function)
                   (:reference omif)
                   (:group-id nil)
                   (:name "omif")
                   (:x 98)
                   (:y 189)
                   (:w 62)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "TEST")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "ACTION")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :optional)
                     (:name "else")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 9))
                  (:box
                   (:type :value)
                   (:reference fixnum)
                   (:group-id nil)
                   (:name "aux")
                   (:x 220)
                   (:y 115)
                   (:w 32)
                   (:h 29)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:lock nil)
                   (:inputs)
                   (:outputs (:output (:name "value") (:reactive nil)))
                   (:value 1)
                   (:id 10))
                  (:box
                   (:type :function)
                   (:reference om=)
                   (:group-id nil)
                   (:name "om=")
                   (:x 188)
                   (:y 151)
                   (:w 64)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "NUM1")
                     (:value 0)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "NUM2")
                     (:value 0)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 11))
                  (:box
                   (:type :function)
                   (:reference length)
                   (:group-id nil)
                   (:name "length")
                   (:x 177)
                   (:y 92)
                   (:w 73)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "SEQUENCE")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 12))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 1)
                     (:name "input")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input")
                   (:x 5)
                   (:y 45)
                   (:w 50)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 13))
                  (:box
                   (:type :io)
                   (:reference
                    (:out
                     (:type omout)
                     (:name "output")
                     (:index 1)
                     (:doc nil)))
                   (:group-id nil)
                   (:name "output")
                   (:x 147)
                   (:y 550)
                   (:w 58)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "out-value")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 14))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 2)
                     (:name "input 2")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input 2")
                   (:x 232)
                   (:y 247)
                   (:w 59)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 15))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 3)
                     (:name "input 3")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input 3")
                   (:x 295)
                   (:y 384)
                   (:w 59)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 16)))
                 (:connections
                  (:connection
                   (:from (:box 0 :out 0))
                   (:to (:box 14 :in 0)))
                  (:connection
                   (:from (:box 1 :out 0))
                   (:to (:box 0 :in 1)))
                  (:connection
                   (:from (:box 2 :out 0))
                   (:to (:box 3 :in 1)))
                  (:connection
                   (:from (:box 3 :out 0))
                   (:to (:box 0 :in 0)))
                  (:connection
                   (:from (:box 4 :out 0))
                   (:to (:box 9 :in 1)))
                  (:connection
                   (:from (:box 5 :out 0))
                   (:to (:box 7 :in 1)))
                  (:connection
                   (:from (:box 6 :out 0))
                   (:to (:box 7 :in 0)))
                  (:connection
                   (:from (:box 7 :out 0))
                   (:to (:box 3 :in 0)))
                  (:connection
                   (:from (:box 8 :out 0))
                   (:to (:box 9 :in 2)))
                  (:connection
                   (:from (:box 9 :out 0))
                   (:to (:box 5 :in 0)))
                  (:connection
                   (:from (:box 9 :out 0))
                   (:to (:box 6 :in 0)))
                  (:connection
                   (:from (:box 10 :out 0))
                   (:to (:box 11 :in 1)))
                  (:connection
                   (:from (:box 11 :out 0))
                   (:to (:box 9 :in 0)))
                  (:connection
                   (:from (:box 12 :out 0))
                   (:to (:box 11 :in 0)))
                  (:connection
                   (:from (:box 13 :out 0))
                   (:to (:box 4 :in 0)))
                  (:connection
                   (:from (:box 13 :out 0))
                   (:to (:box 12 :in 0)))
                  (:connection
                   (:from (:box 15 :out 0))
                   (:to (:box 1 :in 0)))
                  (:connection
                   (:from (:box 16 :out 0))
                   (:to (:box 0 :in 2))))))
               (:group-id nil)
               (:name "resultado")
               (:x 89)
               (:y 438)
               (:w 89)
               (:h 48)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:lock nil)
               (:lambda nil)
               (:pre-delay 0)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "input")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "input 2")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "input 3")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "output") (:reactive nil)))
               (:id 17))
              (:box
               (:type :abstraction)
               (:reference
                (:patch
                 (:name "mos ii")
                 (:doc "")
                 (:info
                  (:created nil)
                  (:modified nil)
                  (:by *app-name*)
                  (:version 0))
                 (:window (:size nil) (:position nil))
                 (:grid nil)
                 (:lock nil)
                 (:boxes
                  (:box
                   (:library "OM-JI")
                   (:type :function)
                   (:reference mos)
                   (:group-id nil)
                   (:name "mos")
                   (:x 29)
                   (:y 189)
                   (:w 78)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "RATIO")
                     (:value 4/3)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "GRAVE")
                     (:value 6000)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "AGUDA")
                     (:value 7200)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "SOBREPOSITION")
                     (:value 11)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 0))
                  (:box
                   (:type :function)
                   (:reference remove-dup)
                   (:group-id nil)
                   (:name "remove-dup")
                   (:x 150)
                   (:y 600)
                   (:w 105)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "LIST")
                     (:value (:list 1 2 3 4))
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "TEST")
                     (:value eq)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "DEPTH")
                     (:value 1)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 1))
                  (:box
                   (:type :function)
                   (:reference x->dx)
                   (:group-id nil)
                   (:name "x->dx")
                   (:x 80)
                   (:y 460)
                   (:w 72)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "SELF")
                     (:value (:list 0 1))
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 2))
                  (:box
                   (:type :function)
                   (:reference f->mc)
                   (:group-id nil)
                   (:name "f->mc")
                   (:x 167)
                   (:y 210)
                   (:w 72)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "FREQ")
                     (:value 440)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 3))
                  (:box
                   (:type :function)
                   (:reference mc->f)
                   (:group-id nil)
                   (:name "mc->f")
                   (:x 276)
                   (:y 182)
                   (:w 72)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "MIDICS?")
                     (:value 6000)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 4))
                  (:box
                   (:type :function)
                   (:reference om*)
                   (:group-id nil)
                   (:name "om*")
                   (:x 321)
                   (:y 949/4)
                   (:w 63)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "ARG1")
                     (:value 0)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "ARG2")
                     (:value 0)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 5))
                  (:box
                   (:type :abstraction)
                   (:reference
                    (:textfun
                     (:name "lispfunction")
                     (:doc "")
                     (:info
                      (:created nil)
                      (:modified nil)
                      (:by *app-name*)
                      (:version 0))
                     (:window (:size nil) (:position nil))
                     (:text
                      (:list
                       "(lambda (notelist) (let* ((mem-8-local nil)) (loop for it-9 in (x->dx (sort-list (flat notelist))) do (let* ()"
                       "       (let ((collect-val (if (om= it-9 (first (sort-list (remove-dup (x->dx (sort-list (flat notelist))) 'eq 1)))) 2 1)))"
                       "        (pushr collect-val mem-8-local) collect-val))) (if (om= (length (remove-dup (x->dx (sort-list (flat notelist)))"
                       "      'eq 1)) 2) mem-8-local nil))))"))))
                   (:group-id nil)
                   (:name "lispfunction")
                   (:x 137)
                   (:y 414)
                   (:w 102)
                   (:h 48)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:display :mini-view)
                   (:lock nil)
                   (:lambda nil)
                   (:pre-delay 0)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "NOTELIST")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 6))
                  (:box
                   (:type :function)
                   (:reference sort-list)
                   (:group-id nil)
                   (:name "sort-list")
                   (:x 83)
                   (:y 321)
                   (:w 80)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "LST")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 7))
                  (:box
                   (:type :io)
                   (:reference
                    (:out
                     (:type omout)
                     (:name "output")
                     (:index 1)
                     (:doc nil)))
                   (:group-id nil)
                   (:name "output")
                   (:x 147)
                   (:y 492)
                   (:w 58)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "out-value")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 8))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 1)
                     (:name "input")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input")
                   (:x 18)
                   (:y 42)
                   (:w 50)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 9))
                  (:box
                   (:type :io)
                   (:reference
                    (:out
                     (:type omout)
                     (:name "output 2")
                     (:index 2)
                     (:doc nil)))
                   (:group-id nil)
                   (:name "output 2")
                   (:x 11)
                   (:y 573)
                   (:w 67)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "out-value")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 10))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 2)
                     (:name "input 2")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input 2")
                   (:x 133)
                   (:y 46)
                   (:w 59)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 11))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 3)
                     (:name "input 3")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input 3")
                   (:x 195)
                   (:y 45)
                   (:w 59)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 12))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 4)
                     (:name "input 4")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input 4")
                   (:x 272)
                   (:y 45)
                   (:w 59)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 13)))
                 (:connections
                  (:connection
                   (:from (:box 0 :out 0))
                   (:to (:box 7 :in 0)))
                  (:connection
                   (:from (:box 1 :out 0))
                   (:to (:box 10 :in 0)))
                  (:connection
                   (:from (:box 2 :out 0))
                   (:to (:box 1 :in 0)))
                  (:connection
                   (:from (:box 3 :out 0))
                   (:to (:box 0 :in 2)))
                  (:connection
                   (:from (:box 4 :out 0))
                   (:to (:box 5 :in 0)))
                  (:connection
                   (:from (:box 5 :out 0))
                   (:to (:box 3 :in 0)))
                  (:connection
                   (:from (:box 6 :out 0))
                   (:to (:box 8 :in 0)))
                  (:connection
                   (:from (:box 7 :out 0))
                   (:to (:box 2 :in 0)))
                  (:connection
                   (:from (:box 7 :out 0))
                   (:to (:box 6 :in 0)))
                  (:connection
                   (:from (:box 9 :out 0))
                   (:to (:box 0 :in 0)))
                  (:connection
                   (:from (:box 11 :out 0))
                   (:to (:box 0 :in 3)))
                  (:connection
                   (:from (:box 12 :out 0))
                   (:to (:box 5 :in 1)))
                  (:connection
                   (:from (:box 13 :out 0))
                   (:to (:box 0 :in 1)))
                  (:connection
                   (:from (:box 13 :out 0))
                   (:to (:box 4 :in 0))))))
               (:group-id nil)
               (:name "mos ii")
               (:x 368)
               (:y 240)
               (:w 71)
               (:h 48)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:lock nil)
               (:lambda nil)
               (:pre-delay 0)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "input")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "input 2")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "input 3")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "input 4")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "output") (:reactive nil))
                (:output (:name "output 2") (:reactive nil)))
               (:id 18))
              (:box
               (:type :abstraction)
               (:reference
                (:patch
                 (:name "mos I")
                 (:doc "")
                 (:info
                  (:created nil)
                  (:modified nil)
                  (:by *app-name*)
                  (:version 0))
                 (:window (:size nil) (:position nil))
                 (:grid nil)
                 (:lock nil)
                 (:boxes
                  (:box
                   (:library "OM-JI")
                   (:type :function)
                   (:reference mos)
                   (:group-id nil)
                   (:name "mos")
                   (:x 48)
                   (:y 138)
                   (:w 94)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "RATIO")
                     (:value 4/3)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "GRAVE")
                     (:value 6000)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "AGUDA")
                     (:value 7200)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "SOBREPOSITION")
                     (:value 11)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 0))
                  (:box
                   (:type :function)
                   (:reference remove-dup)
                   (:group-id nil)
                   (:name "remove-dup")
                   (:x 141)
                   (:y 591)
                   (:w 105)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "LIST")
                     (:value (:list 1 2 3 4))
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "TEST")
                     (:value eq)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "DEPTH")
                     (:value 1)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 1))
                  (:box
                   (:type :function)
                   (:reference x->dx)
                   (:group-id nil)
                   (:name "x->dx")
                   (:x 84)
                   (:y 445)
                   (:w 72)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "SELF")
                     (:value (:list 0 1))
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 2))
                  (:box
                   (:type :function)
                   (:reference f->mc)
                   (:group-id nil)
                   (:name "f->mc")
                   (:x 206)
                   (:y 233)
                   (:w 72)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "FREQ")
                     (:value 440)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 3))
                  (:box
                   (:type :function)
                   (:reference mc->f)
                   (:group-id nil)
                   (:name "mc->f")
                   (:x 247)
                   (:y 156)
                   (:w 72)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "MIDICS?")
                     (:value 6000)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 4))
                  (:box
                   (:type :function)
                   (:reference om*)
                   (:group-id nil)
                   (:name "om*")
                   (:x 296)
                   (:y 865/4)
                   (:w 63)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "ARG1")
                     (:value 0)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "ARG2")
                     (:value 0)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 5))
                  (:box
                   (:type :abstraction)
                   (:reference
                    (:textfun
                     (:name "lispfunction")
                     (:doc "")
                     (:info
                      (:created nil)
                      (:modified nil)
                      (:by *app-name*)
                      (:version 0))
                     (:window (:size nil) (:position nil))
                     (:text
                      (:list
                       "(lambda (notelist) (let* ((mem-8-local nil)) (loop for it-9 in (x->dx (sort-list (flat notelist))) do (let* ()"
                       "       (let ((collect-val (if (om= it-9 (first (sort-list (remove-dup (x->dx (sort-list (flat notelist))) 'eq 1)))) 2 1)))"
                       "        (pushr collect-val mem-8-local) collect-val))) (if (om= (length (remove-dup (x->dx (sort-list (flat notelist)))"
                       "      'eq 1)) 2) mem-8-local nil))))"))))
                   (:group-id nil)
                   (:name "lispfunction")
                   (:x 160)
                   (:y 396)
                   (:w 102)
                   (:h 48)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:display :mini-view)
                   (:lock nil)
                   (:lambda nil)
                   (:pre-delay 0)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "NOTELIST")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 6))
                  (:box
                   (:type :function)
                   (:reference sort-list)
                   (:group-id nil)
                   (:name "sort-list")
                   (:x 83)
                   (:y 321)
                   (:w 80)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "LST")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 7))
                  (:box
                   (:type :io)
                   (:reference
                    (:out
                     (:type omout)
                     (:name "output")
                     (:index 1)
                     (:doc nil)))
                   (:group-id nil)
                   (:name "output")
                   (:x 211)
                   (:y 485)
                   (:w 58)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "out-value")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 8))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 1)
                     (:name "input")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input")
                   (:x 18)
                   (:y 42)
                   (:w 50)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 9))
                  (:box
                   (:type :io)
                   (:reference
                    (:out
                     (:type omout)
                     (:name "output 2")
                     (:index 2)
                     (:doc nil)))
                   (:group-id nil)
                   (:name "output 2")
                   (:x 46)
                   (:y 625)
                   (:w 67)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "out-value")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 10))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 2)
                     (:name "input 2")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input 2")
                   (:x 133)
                   (:y 46)
                   (:w 59)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 11))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 3)
                     (:name "input 3")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input 3")
                   (:x 276)
                   (:y 48)
                   (:w 59)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 12))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 4)
                     (:name "input 4")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input 4")
                   (:x 347)
                   (:y 44)
                   (:w 59)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 13)))
                 (:connections
                  (:connection
                   (:from (:box 0 :out 0))
                   (:to (:box 7 :in 0)))
                  (:connection
                   (:from (:box 1 :out 0))
                   (:to (:box 10 :in 0)))
                  (:connection
                   (:from (:box 2 :out 0))
                   (:to (:box 1 :in 0)))
                  (:connection
                   (:from (:box 3 :out 0))
                   (:to (:box 0 :in 2)))
                  (:connection
                   (:from (:box 4 :out 0))
                   (:to (:box 5 :in 0)))
                  (:connection
                   (:from (:box 5 :out 0))
                   (:to (:box 3 :in 0)))
                  (:connection
                   (:from (:box 6 :out 0))
                   (:to (:box 8 :in 0)))
                  (:connection
                   (:from (:box 7 :out 0))
                   (:to (:box 2 :in 0)))
                  (:connection
                   (:from (:box 7 :out 0))
                   (:to (:box 6 :in 0)))
                  (:connection
                   (:from (:box 9 :out 0))
                   (:to (:box 0 :in 0)))
                  (:connection
                   (:from (:box 11 :out 0))
                   (:to (:box 0 :in 3)))
                  (:connection
                   (:from (:box 12 :out 0))
                   (:to (:box 5 :in 1)))
                  (:connection
                   (:from (:box 13 :out 0))
                   (:to (:box 0 :in 1)))
                  (:connection
                   (:from (:box 13 :out 0))
                   (:to (:box 4 :in 0))))))
               (:group-id nil)
               (:name "mos I")
               (:x 296)
               (:y 233)
               (:w 70)
               (:h 48)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:lock nil)
               (:lambda nil)
               (:pre-delay 0)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "input")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "input 2")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "input 3")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "input 4")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "output") (:reactive nil))
                (:output (:name "output 2") (:reactive nil)))
               (:id 19))
              (:box
               (:type :function)
               (:reference om/)
               (:group-id nil)
               (:name "om/")
               (:x 355)
               (:y 121)
               (:w 60)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 20))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 60)
               (:y 580)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 21))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input")
                 (:doc "")))
               (:group-id nil)
               (:name "input")
               (:x 5)
               (:y 5)
               (:w 50)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 22))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 202)
               (:y 56)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 23))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "input 2")
                 (:doc "")))
               (:group-id nil)
               (:name "input 2")
               (:x 111)
               (:y 1)
               (:w 59)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 24))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 147)
               (:y 579)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 25))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "input 3")
                 (:doc "")))
               (:group-id nil)
               (:name "input 3")
               (:x 416)
               (:y 31)
               (:w 59)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 26))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "input 4")
                 (:doc "")))
               (:group-id nil)
               (:name "input 4")
               (:x 495)
               (:y 33)
               (:w 59)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 27))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 5)
                 (:name "input 5")
                 (:doc "")))
               (:group-id nil)
               (:name "input 5")
               (:x 600)
               (:y 63)
               (:w 59)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 28)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 17 :in 0)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 17 :in 2)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 4 :in 1)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 1 :in 1)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 6 :in 3)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 10 :in 2)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 6 :in 5)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 10 :in 4)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 6 :in 1)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 17 :in 1)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 15 :in 2)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 11 :in 0)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 15 :in 3)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 13 :in 0)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 6 :in 7)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 10 :in 6)))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 21 :in 0)))
              (:connection
               (:from (:box 16 :out 1))
               (:to (:box 25 :in 0)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 16 :in 0)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 0 :in 1)))
              (:connection
               (:from (:box 18 :out 1))
               (:to (:box 15 :in 1)))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 0 :in 0)))
              (:connection
               (:from (:box 19 :out 1))
               (:to (:box 3 :in 0)))
              (:connection
               (:from (:box 19 :out 1))
               (:to (:box 15 :in 0)))
              (:connection
               (:from (:box 20 :out 0))
               (:to (:box 6 :in 4)))
              (:connection
               (:from (:box 20 :out 0))
               (:to (:box 10 :in 3)))
              (:connection
               (:from (:box 20 :out 0))
               (:to (:box 18 :in 0)))
              (:connection
               (:from (:box 22 :out 0))
               (:to (:box 6 :in 2)))
              (:connection
               (:from (:box 22 :out 0))
               (:to (:box 10 :in 1)))
              (:connection
               (:from (:box 22 :out 0))
               (:to (:box 19 :in 0)))
              (:connection
               (:from (:box 22 :out 0))
               (:to (:box 20 :in 1)))
              (:connection
               (:from (:box 23 :out 0))
               (:to (:box 6 :in 6)))
              (:connection
               (:from (:box 23 :out 0))
               (:to (:box 10 :in 5)))
              (:connection
               (:from (:box 23 :out 0))
               (:to (:box 18 :in 1)))
              (:connection
               (:from (:box 23 :out 0))
               (:to (:box 19 :in 1)))
              (:connection
               (:from (:box 24 :out 0))
               (:to (:box 23 :in 0)))
              (:connection
               (:from (:box 26 :out 0))
               (:to (:box 11 :in 1)))
              (:connection
               (:from (:box 26 :out 0))
               (:to (:box 20 :in 0)))
              (:connection
               (:from (:box 27 :out 0))
               (:to (:box 13 :in 1)))
              (:connection
               (:from (:box 27 :out 0))
               (:to (:box 18 :in 2)))
              (:connection
               (:from (:box 27 :out 0))
               (:to (:box 19 :in 2)))
              (:connection
               (:from (:box 28 :out 0))
               (:to (:box 18 :in 3)))
              (:connection
               (:from (:box 28 :out 0))
               (:to (:box 19 :in 3))))))
           (:group-id nil)
           (:name "omloop2")
           (:x 68)
           (:y 193)
           (:w 155)
           (:h 58)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 2")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 3")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 4")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 5")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 11))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 24)
           (:y 251)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 12))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 0)
           (:y 368)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 13))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 5)
           (:y 5)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 14))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 5)
           (:y 85)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 15))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
           (:group-id nil)
           (:name "input 2")
           (:x 133)
           (:y -11)
           (:w 59)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 16))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 262)
           (:y 571)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 17))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "input 4") (:doc "")))
           (:group-id nil)
           (:name "input 4")
           (:x 166)
           (:y 100)
           (:w 59)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 18))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 4) (:name "input 6") (:doc "")))
           (:group-id nil)
           (:name "input 6")
           (:x 289)
           (:y 125)
           (:w 59)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 19)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 10 :in 1)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 17 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 1)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 2 :in 1)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 2 :in 2)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 2)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 11 :in 1)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 0)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 13 :in 0)))
          (:connection (:from (:box 12 :out 1)) (:to (:box 6 :in 1)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 15 :in 0)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 11 :in 0)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 11 :in 2)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 11 :in 3)))
          (:connection
           (:from (:box 19 :out 0))
           (:to (:box 11 :in 4))))))
       (:group-id nil)
       (:name "mos complementar")
       (:x 50)
       (:y 148)
       (:w 574)
       (:h 58)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 4")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 6")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 19))
      (:comment
       (:x 487)
       (:y 60)
       (:w 122)
       (:h 39)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 14) (:style :plain)))
       (:align nil)
       (:text "Nota mais grave")
       (:id 20))
      (:comment
       (:x 414)
       (:y 71)
       (:w 63)
       (:h 28)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 14) (:style :plain)))
       (:align nil)
       (:text "Range")
       (:id 21))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 11")
       (:x 115)
       (:y 90)
       (:w 92)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 19/11 97/64))
       (:id 22))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 6")
       (:x 517)
       (:y 103)
       (:w 44)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6000)
       (:id 23))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 8")
       (:x 417)
       (:y 104)
       (:w 37)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2)
       (:id 24)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 14 :in 3)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 14 :in 2)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 14 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 11 :in 3)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 11 :in 2)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 11 :in 1)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 19 :in 1)))
      (:connection (:from (:box 22 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 23 :out 0)) (:to (:box 19 :in 3)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 19 :in 2))))))
   (:group-id nil)
   (:name "mypatch")
   (:x 983/3)
   (:y 2075/9)
   (:w 86)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs)
   (:id 0))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list")
   (:x 446)
   (:y 125)
   (:w 91)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 10/9 3/2))
   (:id 1))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "lispfunction")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:text
      (:list
       ""
       "(lambda (in1_ratio in2_fundamental in3_numero_inicial in4_número_final in5_range) (let* ((mem-23-local nil)) "
       ""
       ""
       "(loop for it-26 in in1_ratio do (let* () (let ((collect-val (let* ((mem-24-local nil))"
       "                                                              "
       ""
       "                                                              (loop for it-25 in (arithm-ser in3_numero_inicial in4_número_final 1) do "
       ""
       "(let* () (let ((collect-val (if "
       ""
       "                                (funcall '|patch-6776| (mos it-26 in2_fundamental "
       ""
       "(funcall '|patch-6775| in2_fundamental in5_range) it-25)"
       "            (mos (om/ in5_range it-26) in2_fundamental (funcall '|patch-6775| in2_fundamental in5_range) it-25) "
       "            "
       ""
       ""
       "(funcall '|lispfun-6809| (x->dx (sort-list (mos it-26 in2_fundamental "
       ""
       "                                                            (funcall '|patch-6775| in2_fundamental in5_range) it-25)))"
       "             (reverse (x->dx (sort-list (mos (om/ in5_range it-26) in2_fundamental (funcall '|patch-6775| in2_fundamental in5_range) it-25))))))"
       "           (print (x-append \"interval of\" in1_ratio \"and its complementary\" (om/ in5_range it-26) \"stacking\" it-25)) nil)))"
       "        (pushr collect-val mem-24-local) collect-val))) "
       ""
       ""
       ""
       ""
       ""
       ""
       ""
       "mem-24-local))) (pushr collect-val mem-23-local) collect-val))) \"end\"))"))))
   (:group-id nil)
   (:name "lispfunction")
   (:x 132)
   (:y 86)
   (:w 232)
   (:h 66)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "IN1_RATIO")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "IN2_FUNDAMENTAL")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "IN3_NUMERO_INICIAL")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "IN4_NÚMERO_FINAL")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "IN5_RANGE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 2))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 5")
   (:x 661)
   (:y 160)
   (:w 37)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2)
   (:id 3))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 4")
   (:x 621)
   (:y 160)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 40)
   (:id 4))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 3")
   (:x 581)
   (:y 160)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 9)
   (:id 5))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 2")
   (:x 521)
   (:y 157)
   (:w 44)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6000)
   (:id 6))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "OMLOOP")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :value)
       (:reference simple-base-string)
       (:group-id nil)
       (:name "aux")
       (:x 621)
       (:y 443)
       (:w 49)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value "end")
       (:id 0))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 508)
       (:y 347)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 1))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "OMLOOP")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "mypatch")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :function)
               (:reference f->mc)
               (:group-id nil)
               (:name "f->mc")
               (:x 216)
               (:y 327)
               (:w 72)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FREQ")
                 (:value 440)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :function)
               (:reference om*)
               (:group-id nil)
               (:name "om*")
               (:x 198)
               (:y 244)
               (:w 63)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :function)
               (:reference mc->f)
               (:group-id nil)
               (:name "mc->f")
               (:x 46)
               (:y 166)
               (:w 72)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "MIDICS?")
                 (:value 6000)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output")
                 (:index 1)
                 (:doc nil)))
               (:group-id nil)
               (:name "output")
               (:x 130)
               (:y 376)
               (:w 58)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input")
                 (:doc "")))
               (:group-id nil)
               (:name "input")
               (:x 49)
               (:y 61)
               (:w 50)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "input 2")
                 (:doc "")))
               (:group-id nil)
               (:name "input 2")
               (:x 290)
               (:y 105)
               (:w 59)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 3 :in 0)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 0 :in 0)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 2 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 1 :in 1))))))
           (:group-id nil)
           (:name "mypatch")
           (:x 415)
           (:y 174)
           (:w 86)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 2")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output") (:reactive nil)))
           (:id 0))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "mos-verify")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "aux 2")
               (:x 187)
               (:y 203)
               (:w 32)
               (:h 29)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 0))
              (:box
               (:type :function)
               (:reference om=)
               (:group-id nil)
               (:name "om=")
               (:x 166)
               (:y 234)
               (:w 64)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NUM1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "NUM2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "aux")
               (:x 78)
               (:y 214)
               (:w 32)
               (:h 29)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 2))
              (:box
               (:type :function)
               (:reference om=)
               (:group-id nil)
               (:name "om=")
               (:x 68)
               (:y 244)
               (:w 64)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NUM1")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "NUM2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :function)
               (:reference omand)
               (:group-id nil)
               (:name "omand")
               (:x 198)
               (:y 298)
               (:w 76)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "TEST")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "addtest")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "addtest")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :abstraction)
               (:reference
                (:textfun
                 (:name "lispfunction 2")
                 (:doc "")
                 (:info
                  (:created nil)
                  (:modified nil)
                  (:by *app-name*)
                  (:version 0))
                 (:window (:size nil) (:position nil))
                 (:text
                  (:list
                   "(lambda (notelist)"
                   "(let* "
                   "    ((action1 (loop for cknloop in (x->dx (sort-list (flat notelist)))"
                   ""
                   "        collect (if (om= cknloop (first (sort-list (remove-dup (x->dx (sort-list (flat notelist))) 'eq 1)))) \"s\" \"L\"))))"
                   ""
                   "(if (om= (length (remove-dup (x->dx (sort-list (flat notelist))) 'eq 1)) 2) 1 0)))"))))
               (:group-id nil)
               (:name "lispfunction")
               (:x 152)
               (:y 135)
               (:w 102)
               (:h 48)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:lock nil)
               (:lambda nil)
               (:pre-delay 0)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NOTELIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :abstraction)
               (:reference
                (:textfun
                 (:name "lispfunction")
                 (:doc "")
                 (:info
                  (:created nil)
                  (:modified nil)
                  (:by *app-name*)
                  (:version 0))
                 (:window (:size nil) (:position nil))
                 (:text
                  (:list
                   "(lambda (notelist)"
                   "(let* "
                   "    ((action1 (loop for cknloop in (x->dx (sort-list (flat notelist)))"
                   ""
                   "        collect (if (om= cknloop (first (sort-list (remove-dup (x->dx (sort-list (flat notelist))) 'eq 1)))) \"s\" \"L\"))))"
                   ""
                   "(if (om= (length (remove-dup (x->dx (sort-list (flat notelist))) 'eq 1)) 2) 1 0)))"))))
               (:group-id nil)
               (:name "lispfunction")
               (:x 31)
               (:y 130)
               (:w 102)
               (:h 48)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:lock nil)
               (:lambda nil)
               (:pre-delay 0)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NOTELIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output")
                 (:index 1)
                 (:doc nil)))
               (:group-id nil)
               (:name "output")
               (:x 189)
               (:y 346)
               (:w 58)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 7))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input")
                 (:doc "")))
               (:group-id nil)
               (:name "input")
               (:x 5)
               (:y 45)
               (:w 50)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 8))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "input 2")
                 (:doc "")))
               (:group-id nil)
               (:name "input 2")
               (:x 163)
               (:y 52)
               (:w 59)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 9))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "input 3")
                 (:doc "")))
               (:group-id nil)
               (:name "input 3")
               (:x 295)
               (:y 56)
               (:w 59)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 10)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 1 :in 1)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 4 :in 1)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 3 :in 1)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 3 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 5 :in 0)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 4 :in 2))))))
           (:group-id nil)
           (:name "mos-verify")
           (:x 461)
           (:y 477)
           (:w 97)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 2")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 3")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output") (:reactive nil)))
           (:id 1))
          (:box
           (:library "OM-JI")
           (:type :function)
           (:reference mos)
           (:group-id nil)
           (:name "mos")
           (:x 35)
           (:y 322)
           (:w 251)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "RATIO")
             (:value 4/3)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "GRAVE")
             (:value 6000)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "AGUDA")
             (:value 7200)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SOBREPOSITION")
             (:value 11)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :function)
           (:reference print)
           (:group-id nil)
           (:name "print")
           (:x 978)
           (:y 156)
           (:w 64)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOMETHING")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :value)
           (:reference simple-base-string)
           (:group-id nil)
           (:name "aux 4")
           (:x 1085)
           (:y 17)
           (:w 74)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "stacking")
           (:id 4))
          (:box
           (:type :value)
           (:reference simple-base-string)
           (:group-id nil)
           (:name "aux 3")
           (:x 928)
           (:y 0)
           (:w 155)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "and its complementary")
           (:id 5))
          (:box
           (:type :value)
           (:reference simple-base-string)
           (:group-id nil)
           (:name "aux 2")
           (:x 810)
           (:y 5)
           (:w 84)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "interval of")
           (:id 6))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 850)
           (:y 84)
           (:w 318)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 950)
           (:y 449)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 8))
          (:box
           (:type :function)
           (:reference omif)
           (:group-id nil)
           (:name "omif")
           (:x 830)
           (:y 380)
           (:w 115)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "TEST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ACTION")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "lispfunction")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               "(lambda (list1 list2) (equal (list list1) (list list2)))"))))
           (:group-id nil)
           (:name "lispfunction")
           (:x 198)
           (:y 581)
           (:w 102)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST1")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LIST2")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :function)
           (:reference reverse)
           (:group-id nil)
           (:name "reverse")
           (:x 275)
           (:y 528)
           (:w 79)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 11))
          (:box
           (:type :function)
           (:reference x->dx)
           (:group-id nil)
           (:name "x->dx")
           (:x 201)
           (:y 466)
           (:w 72)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value (:list 0 1))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 12))
          (:box
           (:type :function)
           (:reference x->dx)
           (:group-id nil)
           (:name "x->dx")
           (:x 98)
           (:y 529)
           (:w 72)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value (:list 0 1))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:type :function)
           (:reference sort-list)
           (:group-id nil)
           (:name "sort-list")
           (:x 59)
           (:y 419)
           (:w 80)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 14))
          (:box
           (:type :function)
           (:reference sort-list)
           (:group-id nil)
           (:name "sort-list")
           (:x 290)
           (:y 444)
           (:w 80)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:library "OM-JI")
           (:type :function)
           (:reference mos)
           (:group-id nil)
           (:name "mos")
           (:x 491)
           (:y 323)
           (:w 251)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "RATIO")
             (:value 4/3)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "GRAVE")
             (:value 6000)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "AGUDA")
             (:value 7200)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SOBREPOSITION")
             (:value 11)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 16))
          (:box
           (:type :function)
           (:reference arithm-ser)
           (:group-id nil)
           (:name "arithm-ser")
           (:x 212)
           (:y 132)
           (:w 96)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "BEGIN")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "END")
             (:value 10)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "STEP")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 17))
          (:box
           (:type :function)
           (:reference om/)
           (:group-id nil)
           (:name "om/")
           (:x 675)
           (:y 182)
           (:w 60)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 18))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 835)
           (:y 600)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 19))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "ratio") (:doc "")))
           (:group-id nil)
           (:name "ratio")
           (:x 23)
           (:y 2)
           (:w 46)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 20))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 254)
           (:y 208)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 21))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 2)
             (:name "fundamental")
             (:doc "")))
           (:group-id nil)
           (:name "fundamental")
           (:x 136)
           (:y 5)
           (:w 90)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 22))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 961)
           (:y 587)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 23))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 3)
             (:name "numero inicial")
             (:doc "")))
           (:group-id nil)
           (:name "numero inicial")
           (:x 251)
           (:y 4)
           (:w 97)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 24))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 4)
             (:name "número final")
             (:doc "")))
           (:group-id nil)
           (:name "número final")
           (:x 394)
           (:y 15)
           (:w 90)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 25))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 5) (:name "range") (:doc "")))
           (:group-id nil)
           (:name "range")
           (:x 550)
           (:y 18)
           (:w 52)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 26)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 2 :in 2)))
          (:connection (:from (:box 0 :out 0)) (:to (:box 16 :in 2)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 14 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 9 :in 1)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 7 :in 4)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 2)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 19 :in 0)))
          (:connection (:from (:box 8 :out 1)) (:to (:box 23 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 1 :in 2)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 10 :in 1)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 11 :in 0)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 13 :in 0)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 12 :in 0)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 1 :in 1)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 0)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 21 :in 0)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 7 :in 3)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 16 :in 0)))
          (:connection (:from (:box 20 :out 0)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 20 :out 0)) (:to (:box 7 :in 1)))
          (:connection (:from (:box 20 :out 0)) (:to (:box 18 :in 1)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 2 :in 3)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 7 :in 5)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 16 :in 3)))
          (:connection (:from (:box 22 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 22 :out 0)) (:to (:box 2 :in 1)))
          (:connection (:from (:box 22 :out 0)) (:to (:box 16 :in 1)))
          (:connection (:from (:box 24 :out 0)) (:to (:box 17 :in 0)))
          (:connection (:from (:box 25 :out 0)) (:to (:box 17 :in 1)))
          (:connection (:from (:box 26 :out 0)) (:to (:box 0 :in 1)))
          (:connection
           (:from (:box 26 :out 0))
           (:to (:box 18 :in 0))))))
       (:group-id nil)
       (:name "OMLOOP")
       (:x 281)
       (:y 209)
       (:w 237)
       (:h 58)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "ratio")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "fundamental")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "numero inicial")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "número final")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "range")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 2))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 369)
       (:y 484)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "ratio") (:doc "")))
       (:group-id nil)
       (:name "ratio")
       (:x 75)
       (:y 25)
       (:w 46)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 67)
       (:y 110)
       (:w 64)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "fundamental") (:doc "")))
       (:group-id nil)
       (:name "fundamental")
       (:x 140)
       (:y 28)
       (:w 90)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 606)
       (:y 473)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 7))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "numero inicial")
         (:doc "")))
       (:group-id nil)
       (:name "numero inicial")
       (:x 298)
       (:y 9)
       (:w 97)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 4) (:name "número final") (:doc "")))
       (:group-id nil)
       (:name "número final")
       (:x 413)
       (:y 10)
       (:w 90)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 5) (:name "range") (:doc "")))
       (:group-id nil)
       (:name "range")
       (:x 493)
       (:y 14)
       (:w 52)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 2 :in 1)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 2 :in 2)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 2 :in 3)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 2 :in 4))))))
   (:group-id nil)
   (:name "OMLOOP")
   (:x 466)
   (:y 188)
   (:w 237)
   (:h 58)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "ratio")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "fundamental")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "numero inicial")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "número final")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "range")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 7)))
 (:connections
  (:connection (:from (:box 1 :out 0)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 7 :in 4)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 7 :in 3)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 2)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 1)))))