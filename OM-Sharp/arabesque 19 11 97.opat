
(:patch
 (:name "arabesque 19 11 97")
 (:doc "")
 (:info
  (:created "2020-09-23 21:14:21")
  (:modified "2020/12/09 21:14:52")
  (:by "om-sharp")
  (:version 1.01))
 (:window (:size (1942 1102)) (:position (-9 -9)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference prime-decomposition)
   (:group-id nil)
   (:name "prime-decomposition")
   (:x 142)
   (:y 20)
   (:w 249)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "HARMONIC")
     (:value (:list 9 18 172))
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 0))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "TEXTURA 223")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1924 1030)) (:position (-9 -9)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 10")
       (:x 637)
       (:y 149)
       (:w 61)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6000)
       (:id 0))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 9")
       (:x 847)
       (:y 594)
       (:w 50)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 240)
       (:id 1))
      (:box
       (:type :object)
       (:reference voice)
       (:group-id nil)
       (:name "VOICE")
       (:x 46)
       (:y 650)
       (:w 1241)
       (:h 146)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TREE")
         (:value (:list ? (:list (:list (:list 4 4) (:list 1 1 1 1)))))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value
          (:list
           (:object
            (:class chord)
            (:slots
             ((:symbolic-date nil)
              (:symbolic-dur nil)
              (:symbolic-dur-extent 0)
              (:extras nil)
              (:onset 0)
              (:item-time nil)
              (:item-internal-time nil)
              (:item-type nil)
              (:attributes nil)
              (:lmidic (:list 6000))
              (:lvel (:list 100))
              (:loffset (:list 0))
              (:ldur (:list 1000))
              (:lchan (:list 1))
              (:lport (:list nil)))))))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEMPO")
         (:value 60)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "lvel")
         (:value 100)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "loffset")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "lchan")
         (:value 1)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "TREE") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "TEMPO") (:reactive nil))
        (:output (:name "lvel") (:reactive nil))
        (:output (:name "loffset") (:reactive nil))
        (:output (:name "lchan") (:reactive nil)))
       (:window (:size (1259 448)) (:position (64 64)))
       (:edition-params
        (:grid nil)
        (:duration-display nil)
        (:time-map
         (:list
          (:list -1000 0)
          (:list 0 7.5)
          (:list 50 10.995356)
          (:list 59 15.290711)
          (:list 108 19.586068)
          (:list 118 23.881422)
          (:list 167 28.176777)
          (:list 176 32.472134)
          (:list 226 36.76749)
          (:list 229 41.062848)
          (:list 248 45.048603)
          (:list 250 49.03436)
          (:list 290 53.020115)
          (:list 295 57.00587)
          (:list 296 60.191628)
          (:list 335 63.587914)
          (:list 345 66.9842)
          (:list 348 71.18049)
          (:list 401 75.50887)
          (:list 414 79.83726)
          (:list 415 84.16564)
          (:list 455 88.36193)
          (:list 465 92.55822)
          (:list 467 96.75451)
          (:list 468 100.9508)
          (:list 494 105.01499)
          (:list 499 109.079186)
          (:list 500 119.14338)
          (:list 520 123.20757)
          (:list 573 126.735955)
          (:list 578 130.26435)
          (:list 579 134.59273)
          (:list 632 138.92111)
          (:list 645 143.2495)
          (:list 646 146.77788)
          (:list 699 150.30626)
          (:list 712 154.63465)
          (:list 739 158.96303)
          (:list 749 163.02722)
          (:list 750 167.09142)
          (:list 763 171.15561)
          (:list 765 175.2198)
          (:list 818 178.74819)
          (:list 831 182.27657)
          (:list 832 186.60495)
          (:list 885 190.93334)
          (:list 890 195.26172)
          (:list 891 199.5901)
          (:list 943 203.91849)
          (:list 948 208.24687)
          (:list 949 212.57526)
          (:list 989 216.90364)
          (:list 999 221.09993)
          (:list 1000 231.29622)
          (:list 1002 235.49251)
          (:list 1055 239.82089)
          (:list 1060 244.14928)
          (:list 1061 248.47766)
          (:list 1114 252.80605)
          (:list 1127 257.13443)
          (:list 1128 261.4628)
          (:list 1180 265.79117)
          (:list 1185 270.11954)
          (:list 1186 274.4479)
          (:list 1226 277.9763)
          (:list 1236 281.37256)
          (:list 1238 284.76883)
          (:list 1239 288.9651)
          (:list 1249 292.86414)
          (:list 1250 296.76318)
          (:list 1290 300.66223)
          (:list 1296 304.56128)
          (:list 1297 308.46033)
          (:list 1298 312.35938)
          (:list 1351 316.68774)
          (:list 1364 321.0161)
          (:list 1417 325.34448)
          (:list 1431 329.67285)
          (:list 1484 334.00122)
          (:list 1489 338.3296)
          (:list 1490 342.65796)
          (:list 1500 345.75702)))
        (:staff :g))
       (:value
        (:object
         (:class voice)
         (:slots
          ((:onset 0)
           (:duration 1489)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:name "VOICE")
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:tree
            (:list
             3
             (:list
              (:list
               (:list 2 4)
               (:list
                (:list 1 (:list 64 12.0 64 12.0 64 12.0 64 4.0 24 3.0))
                (:list
                 1
                 (:list
                  768.0
                  96.0
                  16.0
                  7.0
                  768
                  192.0
                  48.0
                  12.0
                  1024
                  256.0
                  12.0
                  768
                  192.0
                  48.0
                  12.0
                  512
                  96.0
                  16.0
                  2.0))))
              (:list
               (:list 2 4)
               (:list
                (:list
                 1
                 (:list
                  384.0
                  8.0
                  2.0
                  1024
                  96.0
                  16.0
                  4.0
                  1024
                  256.0
                  12.0
                  1024
                  256.0
                  12.0
                  512
                  192.0
                  16.0
                  7.0))
                (:list
                 1
                 (:list
                  256.0
                  32.0
                  4.0
                  1.0
                  1024
                  256.0
                  12.0
                  1024
                  96.0
                  16.0
                  4.0
                  1024
                  96.0
                  16.0
                  4.0
                  768
                  192.0
                  16.0
                  4.0))))
              (:list
               (:list 2 4)
               (:list
                (:list
                 1
                 (:list
                  32.0
                  8.0
                  1024
                  96.0
                  16.0
                  4.0
                  1024
                  256.0
                  12.0
                  1024
                  96.0
                  16.0
                  4.0
                  768
                  192.0
                  48.0
                  12.0
                  192
                  16.0
                  4.0
                  1.0))
                (:list
                 1
                 (:list
                  768.0
                  128.0
                  24.0
                  7.0
                  1024
                  256.0
                  12.0
                  1024
                  256.0
                  12.0
                  1024
                  96.0
                  16.0
                  4.0
                  -192
                  -2.0)))))))
           (:lmidic
            (:list
             (:list 8018)
             (:list 7296)
             (:list 6574)
             (:list 6337)
             (:list 6094)
             (:list 8018)
             (:list 7775)
             (:list 7296)
             (:list 6337)
             (:list 8018)
             (:list 7775)
             (:list 8018)
             (:list 7296)
             (:list 7056)
             (:list 6574)
             (:list 6337)
             (:list 6094)
             (:list 7296)
             (:list 6574)
             (:list 6337)
             (:list 8018)
             (:list 7775)
             (:list 7296)
             (:list 6574)
             (:list 6094)))
           (:lonset
            (:list
             0
             59
             118
             176
             229
             296
             348
             415
             468
             520
             579
             646
             712
             765
             832
             891
             949
             1002
             1061
             1128
             1186
             1239
             1298
             1364
             1431
             1500))
           (:ldur
            (:list
             (:list 58)
             (:list 58)
             (:list 57)
             (:list 52)
             (:list 66)
             (:list 51)
             (:list 66)
             (:list 52)
             (:list 51)
             (:list 58)
             (:list 66)
             (:list 65)
             (:list 52)
             (:list 66)
             (:list 58)
             (:list 57)
             (:list 52)
             (:list 58)
             (:list 66)
             (:list 57)
             (:list 52)
             (:list 58)
             (:list 65)
             (:list 66)
             (:list 58)))
           (:lvel
            (:list
             (:list 100)
             (:list 98)
             (:list 95)
             (:list 92)
             (:list 90)
             (:list 100)
             (:list 97)
             (:list 93)
             (:list 90)
             (:list 100)
             (:list 90)
             (:list 100)
             (:list 98)
             (:list 96)
             (:list 94)
             (:list 92)
             (:list 90)
             (:list 100)
             (:list 95)
             (:list 90)
             (:list 100)
             (:list 98)
             (:list 95)
             (:list 92)
             (:list 90)))
           (:loffset (:list 0))
           (:lchan (:list 1))
           (:lport (:list nil))
           (:llegato nil)
           (:tempo 240)))))
       (:id 2))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "list")
       (:x 381)
       (:y 16)
       (:w 500)
       (:h 83)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value
        (:list
         8918
         8508
         6251
         10006
         9100
         6868
         6700
         5500
         6251
         8068
         9708
         8651
         10006
         9851
         6868
         7451
         6406
         8068
         7606
         6700
         6518
         6108
         10300
         9100
         8806))
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 3")
       (:x 710)
       (:y 149)
       (:w 61)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 8400)
       (:id 4))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference range-reduce)
       (:group-id nil)
       (:name "range-reduce")
       (:x 595)
       (:y 195)
       (:w 172)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 4800 7200 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GRAVE")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "AGUDA")
         (:value 8400)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 176)
       (:y 422)
       (:w 100)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 242)
       (:y 356)
       (:w 70)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "Escolha das dinamicas")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (1112 662)) (:position (64 64)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 69)
           (:y 14)
           (:w 73)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 363)
           (:y 514)
           (:w 107)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :function)
           (:reference sort-list)
           (:group-id nil)
           (:name "sort-list")
           (:x 230)
           (:y 307)
           (:w 114)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "aux 6")
           (:x 494)
           (:y 251)
           (:w 57)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value >)
           (:id 3))
          (:box
           (:type :function)
           (:reference sort-list)
           (:group-id nil)
           (:name "sort-list")
           (:x 391)
           (:y 306)
           (:w 114)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "test")
             (:value (:list quote <))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :function)
           (:reference flat)
           (:group-id nil)
           (:name "flat")
           (:x 503)
           (:y 462)
           (:w 70)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 305)
           (:y 388)
           (:w 84)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 6))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 5")
           (:x 613)
           (:y 64)
           (:w 50)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 100)
           (:id 7))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 4")
           (:x 500)
           (:y 66)
           (:w 50)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 100)
           (:id 8))
          (:box
           (:type :function)
           (:reference om-random)
           (:group-id nil)
           (:name "om-random")
           (:x 508)
           (:y 116)
           (:w 155)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LOW")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "HIGH")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 3")
           (:x 428)
           (:y 118)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 90)
           (:id 10))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 2")
           (:x 269)
           (:y 107)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 11))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux")
           (:x 211)
           (:y 98)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 12))
          (:box
           (:type :function)
           (:reference arithm-ser)
           (:group-id nil)
           (:name "arithm-ser")
           (:x 195)
           (:y 181)
           (:w 144)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "BEGIN")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "END")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "STEP")
             (:value t)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:type :function)
           (:reference om-scale)
           (:group-id nil)
           (:name "om-scale")
           (:x 395)
           (:y 181)
           (:w 127)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "MINOUT")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "MAXOUT")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 14))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 69)
           (:y 144)
           (:w 100)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 263)
           (:y 514)
           (:w 88)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 16))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 34)
           (:y 77)
           (:w 101)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 17)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 17 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 1)))
          (:connection
           (:from (:box 4 :out 0))
           (:to (:box 6 :in 0))
           (:attributes (:color nil :style nil :modif (0 -3/148))))
          (:connection (:from (:box 5 :out 0)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 16 :in 0)))
          (:connection (:from (:box 6 :out 1)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 9 :in 1)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 14 :in 2)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 14 :in 1)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 13 :in 2)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 13 :in 0)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 14 :in 0)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 13 :in 1)))
          (:connection
           (:from (:box 17 :out 0))
           (:to (:box 15 :in 0))))))
       (:group-id nil)
       (:name "Escolha das dinamicas")
       (:x 512)
       (:y 330)
       (:w 261)
       (:h 60)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 8))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 5")
       (:x 322)
       (:y 242)
       (:w 111)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 9))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "Escolha das alturas")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (1920 1026)) (:position (-9 -9)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 41)
           (:y -1)
           (:w 73)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 262)
           (:y 561)
           (:w 107)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
           (:group-id nil)
           (:name "input 2")
           (:x 615)
           (:y 190)
           (:w 93)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "in") (:doc "")))
           (:group-id nil)
           (:name "in")
           (:x 286)
           (:y 119)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :function)
           (:reference sort-list)
           (:group-id nil)
           (:name "sort-list")
           (:x 42)
           (:y 246)
           (:w 114)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :function)
           (:reference sort-list)
           (:group-id nil)
           (:name "sort-list")
           (:x 168)
           (:y 247)
           (:w 114)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "test")
             (:value (:list quote <))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 73)
           (:y 406)
           (:w 84)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 6))
          (:box
           (:type :special)
           (:reference repeat-n)
           (:group-id nil)
           (:name "repeat-n")
           (:x 56)
           (:y 143)
           (:w 130)
           (:h 28)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :left)
           (:lock nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "self")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "num")
             (:value 0)
             (:reactive nil)))
           (:outputs
            (:output (:name "collected results") (:reactive nil)))
           (:id 7))
          (:box
           (:library "Morphologie")
           (:type :function)
           (:reference (:symbol "PTRN-SMOOTH" "MORPH"))
           (:group-id nil)
           (:name "ptrn-smooth")
           (:x 57)
           (:y 320)
           (:w 162)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value
              (:list
               (:symbol "A" "MORPH")
               (:symbol "B" "MORPH")
               (:symbol "B" "MORPH")
               (:symbol "B" "MORPH")
               (:symbol "C" "MORPH")
               (:symbol "C" "MORPH")
               (:symbol "C" "MORPH")
               (:symbol "D" "MORPH")
               (:symbol "A" "MORPH")
               (:symbol "A" "MORPH")
               (:symbol "B" "MORPH")
               (:symbol "B" "MORPH")
               (:symbol "C" "MORPH")
               (:symbol "C" "MORPH")
               (:symbol "D" "MORPH")
               (:symbol "E" "MORPH")
               (:symbol "D" "MORPH")
               (:symbol "D" "MORPH")
               (:symbol "D" "MORPH")
               (:symbol "B" "MORPH")
               (:symbol "B" "MORPH")))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :special)
           (:reference repeat-n)
           (:group-id nil)
           (:name "repeat-n")
           (:x 605)
           (:y 323)
           (:w 130)
           (:h 28)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :left)
           (:lock nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "self")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "num")
             (:value 0)
             (:reactive nil)))
           (:outputs
            (:output (:name "collected results") (:reactive nil)))
           (:id 9))
          (:box
           (:type :function)
           (:reference nth-random)
           (:group-id nil)
           (:name "nth-random")
           (:x 15)
           (:y 76)
           (:w 157)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 86)
           (:y 549)
           (:w 88)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 11))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 200)
           (:y 46)
           (:w 101)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 12))
          (:box
           (:type :value)
           (:reference cons)
           (:group-id nil)
           (:name "value box")
           (:x 412)
           (:y 39)
           (:w 303)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value (:list (:list 11 8 3 11 5 6) (:list 6 5 11 3 8 11)))
           (:id 13))
          (:box
           (:type :function)
           (:reference nth-random)
           (:group-id nil)
           (:name "nth-random")
           (:x 422)
           (:y 115)
           (:w 157)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 14))
          (:box
           (:type :function)
           (:reference flat)
           (:group-id nil)
           (:name "flat")
           (:x 434)
           (:y 375)
           (:w 70)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :function)
           (:reference nth-random)
           (:group-id nil)
           (:name "nth-random")
           (:x 305)
           (:y 205)
           (:w 157)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 16))
          (:box
           (:type :value)
           (:reference cons)
           (:group-id nil)
           (:name "value box")
           (:x 356)
           (:y 170)
           (:w 67)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value (:list < >))
           (:id 17)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 9 :in 1)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 5 :in 1)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 11 :in 0)))
          (:connection (:from (:box 6 :out 1)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 15 :in 0)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 7 :in 1)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 14 :in 0)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 12 :in 0)))
          (:connection
           (:from (:box 17 :out 0))
           (:to (:box 16 :in 0))))))
       (:group-id nil)
       (:name "Escolha das alturas")
       (:x 273)
       (:y 281)
       (:w 231)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock :eval-once)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "in")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 10))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 91)
       (:y 481)
       (:w 130)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 11))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 2")
       (:x 9)
       (:y 45)
       (:w 212)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 1/15 1/17 1/19))
       (:id 12))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux")
       (:x 220)
       (:y 480)
       (:w 61)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 2 4))
       (:id 13))
      (:box
       (:type :function)
       (:reference mktree)
       (:group-id nil)
       (:name "mktree")
       (:x 132)
       (:y 529)
       (:w 128)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RHYTHM")
         (:value (:list 1/4 1/4 1/4 1/4))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TIMESIGNS")
         (:value (:list 4 4))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference voice->text)
       (:group-id nil)
       (:name "voice->text")
       (:x 105)
       (:y 799)
       (:w 154)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "VOICE")
         (:value (:list nil))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name nil)
       (:x 75)
       (:y 871)
       (:w 426)
       (:h 132)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class textbuffer)
         (:slots
          ((:contents
            (:list
             "0 , 8018 100 1 58 ;"
             "58 , 7296 98 1 58 ;"
             "116 , 6574 95 1 57 ;"
             "173 , 6337 92 1 52 ;"
             "225 , 6094 90 1 66 ;"
             "291 , 8018 100 1 51 ;"
             "342 , 7775 97 1 66 ;"
             "408 , 7296 93 1 52 ;"
             "460 , 6337 90 1 51 ;"
             "511 , 8018 100 1 58 ;"
             "569 , 7775 90 1 66 ;"
             "635 , 8018 100 1 65 ;"
             "700 , 7296 98 1 52 ;"
             "752 , 7056 96 1 66 ;"
             "818 , 6574 94 1 58 ;"
             "876 , 6337 92 1 57 ;"
             "933 , 6094 90 1 52 ;"
             "985 , 7296 100 1 58 ;"
             "1043 , 6574 95 1 66 ;"
             "1109 , 6337 90 1 57 ;"
             "1166 , 8018 100 1 52 ;"
             "1218 , 7775 98 1 58 ;"
             "1276 , 7296 95 1 65 ;"
             "1341 , 6574 92 1 66 ;"
             "1407 , 6094 90 1 58 ;"))))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 16))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 271)
       (:y 76)
       (:w 98)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 1/2 1))
       (:id 17))
      (:box
       (:library "Alea")
       (:type :function)
       (:reference (:symbol "CHOIX" "ALEA"))
       (:group-id nil)
       (:name "choix")
       (:x 155)
       (:y 222)
       (:w 90)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X1")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "X2")
         (:value 2)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "PX1")
         (:value 0.5)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18))
      (:box
       (:type :function)
       (:reference nth-random)
       (:group-id nil)
       (:name "nth-random")
       (:x 46)
       (:y 159)
       (:w 157)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 288)
       (:y 180)
       (:w 56)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 20))
      (:box
       (:type :object)
       (:reference chord-seq)
       (:group-id nil)
       (:name nil)
       (:x 484)
       (:y 421)
       (:w 687)
       (:h 157)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list (:list 6000)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LONSET")
         (:value (:list 0 200))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LDUR")
         (:value (:list (:list 1000)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LVEL")
         (:value 100)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "loffset")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "lchan")
         (:value 1)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "LONSET") (:reactive nil))
        (:output (:name "LDUR") (:reactive nil))
        (:output (:name "LVEL") (:reactive nil))
        (:output (:name "loffset") (:reactive nil))
        (:output (:name "lchan") (:reactive nil)))
       (:window (:size (650 300)) (:position (160 160)))
       (:edition-params)
       (:value
        (:object
         (:class chord-seq)
         (:slots
          ((:onset 0)
           (:duration 5800)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:name "CHORD-SEQ")
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:lmidic
            (:list
             (:list 8018)
             (:list 7296)
             (:list 6574)
             (:list 6337)
             (:list 6094)
             (:list 8018)
             (:list 7775)
             (:list 7296)
             (:list 6337)
             (:list 8018)
             (:list 7775)
             (:list 8018)
             (:list 7296)
             (:list 7056)
             (:list 6574)
             (:list 6337)
             (:list 6094)
             (:list 7296)
             (:list 6574)
             (:list 6337)
             (:list 8018)
             (:list 7775)
             (:list 7296)
             (:list 6574)
             (:list 6094)))
           (:lonset
            (:list
             0
             200
             400
             600
             800
             1000
             1200
             1400
             1600
             1800
             2000
             2200
             2400
             2600
             2800
             3000
             3200
             3400
             3600
             3800
             4000
             4200
             4400
             4600
             4800
             5800))
           (:ldur (:list 1000))
           (:lvel
            (:list
             (:list 100)
             (:list 98)
             (:list 95)
             (:list 92)
             (:list 90)
             (:list 100)
             (:list 97)
             (:list 93)
             (:list 90)
             (:list 100)
             (:list 90)
             (:list 100)
             (:list 98)
             (:list 96)
             (:list 94)
             (:list 92)
             (:list 90)
             (:list 100)
             (:list 95)
             (:list 90)
             (:list 100)
             (:list 98)
             (:list 95)
             (:list 92)
             (:list 90)))
           (:loffset (:list 0))
           (:lchan (:list 5))
           (:lport (:list nil))
           (:llegato nil)))))
       (:id 21))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 1102)
       (:y 349)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 5)
       (:id 22))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 808)
       (:y 832)
       (:w 84)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 23))
      (:box
       (:type :object)
       (:reference poly)
       (:group-id nil)
       (:name nil)
       (:x 1239)
       (:y 810)
       (:w 487)
       (:h 204)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock :locked)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "OBJ-LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "OBJ-LIST") (:reactive nil)))
       (:window (:size (1920 1026)) (:position (-9 -9)))
       (:edition-params
        (:font-size 15)
        (:staff :ggf)
        (:scale :scale-1/8)
        (:time-map
         (:list
          (:list -1000 0)
          (:list 0 8.3)
          (:list 84 12.806663)
          (:list 97 16.227715)
          (:list 105 20.513545)
          (:list 141 24.074948)
          (:list 177 27.781609)
          (:list 182 31.48827)
          (:list 202 35.759377)
          (:list 211 39.245205)
          (:list 218 43.692978)
          (:list 239 47.254383)
          (:list 276 51.37719)
          (:list 285 54.848298)
          (:list 287 59.119404)
          (:list 340 62.826065)
          (:list 364 66.47384)
          (:list 428 70.759674)
          (:list 440 75.26634)
          (:list 441 79.77301)
          (:list 462 83.00857)
          (:list 463 86.4944)
          (:list 470 90.61721)
          (:list 488 94.53867)
          (:list 491 97.77423)
          (:list 494 101.89704)
          (:list 498 105.0185)
          (:list 500 109.941315)
          (:list 601 114.86413)
          (:list 619 118.89969)
          (:list 622 122.93525)
          (:list 623 126.97081)
          (:list 723 130.47333)
          (:list 748 133.97585)
          (:list 755 137.47837)
          (:list 756 140.98088)
          (:list 907 144.73465)
          (:list 932 148.48842)
          (:list 937 152.24219)
          (:list 938 156.79596)
          (:list 988 161.34973)
          (:list 998 165.40099)
          (:list 1000 175.45224)
          (:list 1038 180.37505)
          (:list 1042 184.4263)
          (:list 1043 188.47756)
          (:list 1194 192.23133)
          (:list 1207 195.98509)
          (:list 1219 200.1079)
          (:list 1224 203.86167)
          (:list 1225 207.61544)
          (:list 1233 211.3692)
          (:list 1238 215.492)
          (:list 1239 220.41481)
          (:list 1376 224.10578)
          (:list 1377 228.65955)
          (:list 1389 232.35051)
          (:list 1390 236.27198)
          (:list 1392 240.76294)
          (:list 1401 244.4539)
          (:list 1406 248.20767)
          (:list 1407 251.96144)
          (:list 1453 255.71521)
          (:list 1470 259.63666)
          (:list 1482 262.75812)
          (:list 1494 266.935)
          (:list 1495 270.05646)
          (:list 1496 273.43335)
          (:list 1499 276.95157)
          (:list 1500 281.26978)
          (:list 1517 284.788)
          (:list 1524 288.3062)
          (:list 1525 291.82443)
          (:list 1526 295.34265)
          (:list 1550 299.66086)
          (:list 1569 303.5823)
          (:list 1574 307.50375)
          (:list 1575 311.4252)
          (:list 1588 315.179)
          (:list 1589 318.55588)
          (:list 1629 322.30966)
          (:list 1631 326.62787)
          (:list 1726 330.1461)
          (:list 1735 334.69986)
          (:list 1736 339.01807)
          (:list 1739 342.5363)
          (:list 1742 346.29007)
          (:list 1751 350.04385)
          (:list 1755 353.79764)
          (:list 1757 358.3514)
          (:list 1840 362.90518)
          (:list 1843 366.4234)
          (:list 1857 370.7259)
          (:list 1866 375.02838)
          (:list 1868 378.5466)
          (:list 1870 382.0491)
          (:list 1874 385.56732)
          (:list 1876 389.06982)
          (:list 1882 393.3723)
          (:list 1889 397.6748)
          (:list 1890 401.9773)
          (:list 1973 405.4798)
          (:list 1975 408.99802)
          (:list 1976 412.08438)
          (:list 1991 415.58688)
          (:list 1992 419.0894)
          (:list 1995 422.17575)
          (:list 1999 425.67825)
          (:list 2000 434.76462)
          (:list 2025 438.26712)
          (:list 2028 441.76962)
          (:list 2030 446.0721)
          (:list 2038 449.8259)
          (:list 2042 453.3284)
          (:list 2044 456.8309)
          (:list 2069 460.5847)
          (:list 2078 463.67105)
          (:list 2080 466.75742)
          (:list 2180 471.07562)
          (:list 2184 474.8294)
          (:list 2195 478.34763)
          (:list 2197 482.1014)
          (:list 2198 485.8552)
          (:list 2206 490.40897)
          (:list 2210 494.96274)
          (:list 2211 499.5165)
          (:list 2213 504.07028)
          (:list 2298 507.76123)
          (:list 2312 511.26373)
          (:list 2323 514.76624)
          (:list 2330 518.26874)
          (:list 2331 522.5712)
          (:list 2337 526.325)
          (:list 2343 529.8275)
          (:list 2345 533.33)
          (:list 2352 537.8838)
          (:list 2365 542.37476)
          (:list 2367 546.8657)
          (:list 2471 551.3567)
          (:list 2482 555.67487)
          (:list 2484 560.22864)
          (:list 2485 564.7824)
          (:list 2496 568.5362)
          (:list 2497 573.08997)
          (:list 2498 576.60816)
          (:list 2499 581.1619)
          (:list 2500 585.4801)
          (:list 2519 589.7983)
          (:list 2520 594.11646)
          (:list 2521 598.43464)
          (:list 2601 601.9528)
          (:list 2613 605.75867)
          (:list 2618 609.62146)
          (:list 2622 614.129)
          (:list 2626 617.63154)
          (:list 2632 622.1853)
          (:list 2777 625.9391)
          (:list 2783 630.49286)
          (:list 2802 634.24665)
          (:list 2807 638.0004)
          (:list 2808 642.5542)
          (:list 2813 647.108)
          (:list 2814 651.66175)
          (:list 2909 655.4155)
          (:list 2914 659.718)
          (:list 2919 664.0205)
          (:list 2920 667.523)
          (:list 2934 672.0306)
          (:list 2940 675.5331)
          (:list 2941 679.0356)
          (:list 2942 683.3381)
          (:list 2992 687.64057)
          (:list 2994 690.89185)
          (:list 2995 694.26874)
          (:list 2998 699.5763)
          (:list 2999 702.8276)
          (:list 3000 713.00446)
          (:list 3031 718.312)
          (:list 3043 722.3633)
          (:list 3046 726.41456)
          (:list 3047 730.4658)
          (:list 3051 733.93696)
          (:list 3052 737.31385)
          (:list 3141 741.58497)
          (:list 3147 745.0561)
          (:list 3149 749.3272)
          (:list 3152 753.5983)
          (:list 3154 757.2265)
          (:list 3157 760.69764)
          (:list 3158 764.16877)
          (:list 3278 767.79694)
          (:list 3283 771.4251)
          (:list 3301 775.0533)
          (:list 3305 778.68146)
          (:list 3306 782.30964)
          (:list 3307 785.9378)
          (:list 3311 789.566)
          (:list 3406 793.19416)
          (:list 3414 796.6653)
          (:list 3417 800.1364)
          (:list 3432 803.60755)
          (:list 3479 807.2357)
          (:list 3480 810.8639)
          (:list 3487 814.178)
          (:list 3488 818.60614)
          (:list 3495 822.2343)
          (:list 3499 825.5484)
          (:list 3500 829.6625)
          (:list 3601 834.97004)
          (:list 3613 838.02894)
          (:list 3618 842.5365)
          (:list 3638 847.84406)
          (:list 3641 851.70295)
          (:list 3642 855.5618)
          (:list 3742 859.8643)
          (:list 3747 864.1668)
          (:list 3769 867.6693)
          (:list 3771 871.4231)
          (:list 3772 875.97687)
          (:list 3847 880.53064)
          (:list 3873 884.8331)
          (:list 3879 889.1356)
          (:list 3880 893.4381)
          (:list 3923 897.7406)
          (:list 3951 902.2944)
          (:list 3953 906.84815)
          (:list 3954 910.6019)
          (:list 3981 914.59034)
          (:list 3992 918.09284)
          (:list 3999 921.28125)
          (:list 4000 931.26966)
          (:list 4025 935.57215)
          (:list 4031 939.87464)
          (:list 4034 944.1771)
          (:list 4101 947.6796)
          (:list 4126 950.86805)
          (:list 4135 954.05646)
          (:list 4136 957.55896)
          (:list 4139 961.31275)
          (:list 4286 965.0665)
          (:list 4289 968.8203)
          (:list 4290 972.5741)
          (:list 4315 976.3279)
          (:list 4320 980.08167)
          (:list 4321 983.83545)
          (:list 4377 987.58924)
          (:list 4390 990.9033)
          (:list 4408 994.4058)
          (:list 4415 997.7199)
          (:list 4416 1001.2224)
          (:list 4417 1005.3365)
          (:list 4421 1008.6506)
          (:list 4422 1012.1531)
          (:list 4423 1015.6556)
          (:list 4447 1019.1581)
          (:list 4453 1022.6606)
          (:list 4454 1026.9631)
          (:list 4480 1031.2658)
          (:list 4492 1035.3799)
          (:list 4495 1039.3684)
          (:list 4498 1043.4826)
          (:list 4499 1047.6594)
          (:list 4500 1051.7736)
          (:list 4550 1055.1504)
          (:list 4555 1058.5272)
          (:list 4556 1061.904)
          (:list 4563 1066.2067)
          (:list 4569 1070.3208)
          (:list 4570 1074.4349)
          (:list 4571 1077.749)
          (:list 4601 1083.4335)
          (:list 4607 1087.422)
          (:list 4608 1091.4105)
          (:list 4657 1095.1643)
          (:list 4682 1098.6669)
          (:list 4688 1102.1694)
          (:list 4689 1105.672)
          (:list 4690 1109.9746)
          (:list 4759 1114.5285)
          (:list 4784 1119.0823)
          (:list 4789 1123.6361)
          (:list 4790 1128.19)
          (:list 4840 1132.995)
          (:list 4843 1137.5488)
          (:list 4947 1141.3026)
          (:list 4991 1146.187)
          (:list 4994 1150.9921)
          (:list 4995 1154.7459)
          (:list 4997 1160.4303)
          (:list 4999 1164.4353)
          (:list 5000 1176.1198)
          (:list 5101 1181.8042)
          (:list 5126 1185.616)
          (:list 5130 1189.4277)
          (:list 5131 1193.2395)
          (:list 5231 1196.7421)
          (:list 5256 1200.2446)
          (:list 5263 1203.7472)
          (:list 5264 1207.2498)
          (:list 5364 1210.7523)
          (:list 5390 1214.2549)
          (:list 5396 1217.7575)
          (:list 5397 1221.26)
          (:list 5498 1224.7626)
          (:list 5499 1228.2651)
          (:list 5500 1231.7677)
          (:list 5563 1236.6521)
          (:list 5569 1241.5365)
          (:list 5570 1246.4209)
          (:list 5571 1251.3053)
          (:list 5575 1254.9335)
          (:list 5579 1258.436)
          (:list 5680 1261.9386)
          (:list 5684 1265.4412)
          (:list 5696 1269.195)
          (:list 5701 1272.8231)
          (:list 5743 1276.8281)
          (:list 5751 1280.4563)
          (:list 5752 1284.8845)
          (:list 5776 1288.8268)
          (:list 5789 1292.8318)
          (:list 5790 1296.8368)
          (:list 5835 1300.8418)
          (:list 5837 1304.5956)
          (:list 5838 1308.3494)
          (:list 5891 1312.1032)
          (:list 5916 1315.6057)
          (:list 5922 1319.1083)
          (:list 5923 1323.4109)
          (:list 5939 1326.9135)
          (:list 5941 1331.2161)
          (:list 5964 1335.1583)
          (:list 5970 1338.6609)
          (:list 5971 1342.1635)
          (:list 5972 1346.4661)
          (:list 5988 1350.3917)
          (:list 5997 1355.134)
          (:list 5999 1359.0597)
          (:list 6000 1369.2366)
          (:list 6057 1373.9789)
          (:list 6094 1378.5327)
          (:list 6118 1382.4584)
          (:list 6124 1386.384)
          (:list 6125 1389.5097)
          (:list 6208 1393.9379)
          (:list 6236 1398.4917)
          (:list 6238 1403.0455)
          (:list 6239 1406.7993)
          (:list 6251 1410.9299)
          (:list 6298 1414.5581)
          (:list 6306 1418.1863)
          (:list 6307 1421.8145)
          (:list 6401 1425.4426)
          (:list 6409 1428.9137)
          (:list 6412 1433.1848)
          (:list 6465 1436.6559)
          (:list 6475 1441.5866)
          (:list 6493 1444.9006)
          (:list 6498 1449.0313)
          (:list 6499 1453.9619)
          (:list 6500 1458.076)
          (:list 6538 1463.0067)
          (:list 6544 1467.1209)
          (:list 6546 1471.235)
          (:list 6646 1474.7376)
          (:list 6671 1478.2401)
          (:list 6678 1481.7427)
          (:list 6679 1485.2453)
          (:list 6701 1489.5479)
          (:list 6751 1494.2902)
          (:list 6752 1499.0325)
          (:list 6780 1502.9747)
          (:list 6784 1507.2774)
          (:list 6853 1511.58)
          (:list 6878 1515.8826)
          (:list 6884 1520.1852)
          (:list 6885 1524.4878)
          (:list 6886 1528.7904)
          (:list 6890 1533.093)
          (:list 6986 1536.5956)
          (:list 6990 1540.0982)
          (:list 6999 1543.6007)
          (:list 7000 1553.1033)
          (:list 7019 1557.2339)
          (:list 7022 1560.9877)
          (:list 7023 1564.4902)
          (:list 7123 1567.9928)
          (:list 7149 1571.4954)
          (:list 7155 1574.9979)
          (:list 7156 1578.5005)
          (:list 7170 1582.003)
          (:list 7195 1585.7568)
          (:list 7200 1589.5106)
          (:list 7201 1594.0645)
          (:list 7226 1598.1951)
          (:list 7236 1602.3257)
          (:list 7238 1606.4563)
          (:list 7239 1611.387)
          (:list 7257 1614.8895)
          (:list 7262 1619.1921)
          (:list 7339 1623.9972)
          (:list 7352 1628.2998)
          (:list 7354 1632.8536)
          (:list 7355 1637.4075)
          (:list 7364 1641.9613)
          (:list 7371 1646.2639)
          (:list 7372 1650.5665)
          (:list 7455 1654.8692)
          (:list 7460 1659.1718)
          (:list 7463 1663.4744)
          (:list 7472 1668.2794)
          (:list 7488 1672.582)
          (:list 7497 1677.3871)
          (:list 7498 1682.1921)
          (:list 7499 1686.4948)
          (:list 7500 1691.2998)
          (:list 7505 1696.1049)
          (:list 7575 1699.6074)
          (:list 7588 1702.7959)
          (:list 7593 1705.9844)
          (:list 7606 1709.4869)
          (:list 7631 1712.9895)
          (:list 7637 1716.4921)
          (:list 7638 1719.9946)
          (:list 7639 1724.2973)
          (:list 7694 1728.8048)
          (:list 7699 1732.3074)
          (:list 7900 1736.3124)
          (:list 7940 1741.1174)
          (:list 7975 1745.625)
          (:list 7990 1750.43)
          (:list 7994 1754.9376)
          (:list 7999 1758.9426)
          (:list 8000 1769.7477)
          (:list 8201 1775.0553)
          (:list 8251 1779.8604)
          (:list 8261 1784.6654)
          (:list 8262 1789.4705)
          (:list 8463 1793.4755)
          (:list 8488 1797.4805)
          (:list 8497 1801.4855)
          (:list 8499 1805.4905)
          (:list 8500 1810.2955)
          (:list 8601 1815.6032)
          (:list 8638 1820.9108)
          (:list 8639 1826.2184)
          (:list 8651 1830.726)
          (:list 8688 1834.731)
          (:list 8698 1838.736)
          (:list 8699 1842.741)
          (:list 8789 1846.746)
          (:list 8815 1850.4998)
          (:list 8819 1854.2536)
          (:list 8820 1858.0073)
          (:list 8900 1861.7611)
          (:list 8921 1865.7661)
          (:list 8946 1869.2687)
          (:list 8952 1872.7713)
          (:list 8954 1877.0739)
          (:list 8975 1880.5764)
          (:list 8991 1885.3815)
          (:list 8994 1888.57)
          (:list 8998 1893.375)
          (:list 8999 1897.3635)
          (:list 9000 1908.1686)
          (:list 9050 1912.9736)
          (:list 9057 1916.9622)
          (:list 9059 1920.9507)
          (:list 9201 1924.7045)
          (:list 9210 1929.5095)
          (:list 9235 1934.0634)
          (:list 9240 1938.6172)
          (:list 9241 1943.171)
          (:list 9251 1946.9248)
          (:list 9261 1950.9298)
          (:list 9262 1954.9348)
          (:list 9392 1958.9398)
          (:list 9412 1962.6936)
          (:list 9415 1967.2474)
          (:list 9417 1971.0012)
          (:list 9421 1974.755)
          (:list 9423 1978.5088)
          (:list 9491 1983.0626)
          (:list 9497 1987.2395)
          (:list 9498 1990.6163)
          (:list 9499 1994.7932)
          (:list 9500 1998.9701)
          (:list 9550 2003.7752)
          (:list 9569 2007.952)
          (:list 9601 2011.7058)
          (:list 9604 2015.0827)
          (:list 9605 2018.4595)
          (:list 9651 2021.962)
          (:list 9688 2025.967)
          (:list 9698 2029.972)
          (:list 9699 2034.7771)
          (:list 9705 2038.7821)
          (:list 9710 2042.2847)
          (:list 9720 2047.0897)
          (:list 9745 2051.6436)
          (:list 9750 2056.1973)
          (:list 9751 2060.751)
          (:list 9900 2065.3047)
          (:list 9902 2069.3098)
          (:list 9904 2073.0635)
          (:list 9905 2076.8172)
          (:list 9911 2080.5708)
          (:list 9975 2085.376)
          (:list 9980 2089.381)
          (:list 9986 2092.758)
          (:list 9994 2097.5633)
          (:list 9999 2102.3684)
          (:list 10000 2113.1736)
          (:list 10009 2117.1787)
          (:list 10010 2121.3557)
          (:list 10161 2125.9095)
          (:list 10186 2130.4632)
          (:list 10191 2135.0169)
          (:list 10192 2139.5706)
          (:list 10343 2143.3242)
          (:list 10345 2147.078)
          (:list 10346 2151.6316)
          (:list 10497 2156.1853)
          (:list 10499 2160.739)
          (:list 10500 2165.2928)
          (:list 10651 2170.098)
          (:list 10653 2174.903)
          (:list 10654 2178.704)
          (:list 10688 2183.2578)
          (:list 10698 2188.063)
          (:list 10699 2192.8682)
          (:list 10701 2196.8733)
          (:list 10707 2200.8784)
          (:list 10710 2204.8836)
          (:list 10799 2209.6887)
          (:list 10804 2213.1912)
          (:list 10824 2217.7449)
          (:list 10829 2221.2473)
          (:list 10831 2225.801)
          (:list 10832 2230.1035)
          (:list 10834 2233.8572)
          (:list 10835 2238.411)
          (:list 10861 2242.1646)
          (:list 10886 2245.9182)
          (:list 10890 2249.6719)
          (:list 10892 2253.4256)
          (:list 10983 2257.1792)
          (:list 10986 2261.733)
          (:list 10988 2266.2866)
          (:list 10989 2270.8404)
          (:list 10992 2274.594)
          (:list 10995 2278.0965)
          (:list 10998 2281.85)
          (:list 10999 2285.3526)
          (:list 11000 2294.3997)
          (:list 11019 2298.1533)
          (:list 11024 2301.6558)
          (:list 11025 2305.1582)
          (:list 11151 2308.9119)
          (:list 11170 2311.959)
          (:list 11171 2315.8062)
          (:list 11176 2319.3086)
          (:list 11178 2323.0623)
          (:list 11179 2327.616)
          (:list 11272 2332.1697)
          (:list 11297 2336.4722)
          (:list 11303 2340.7747)
          (:list 11304 2345.0772)
          (:list 11330 2349.6309)
          (:list 11332 2354.1846)
          (:list 11333 2357.9383)
          (:list 11433 2361.4407)
          (:list 11438 2364.943)
          (:list 11455 2369.2456)
          (:list 11457 2373.7993)
          (:list 11458 2378.353)
          (:list 11488 2382.1067)
          (:list 11496 2385.358)
          (:list 11498 2388.5464)
          (:list 11499 2391.7976)
          (:list 11500 2394.986)
          (:list 11571 2398.7398)
          (:list 11575 2402.4463)
          (:list 11588 2405.6348)
          (:list 11591 2408.8233)
          (:list 11592 2412.0117)
          (:list 11713 2415.7654)
          (:list 11724 2419.472)
          (:list 11725 2423.9785)
          (:list 11742 2427.685)
          (:list 11767 2431.4387)
          (:list 11772 2435.1924)
          (:list 11773 2438.946)
          (:list 11802 2442.6997)
          (:list 11827 2446.4534)
          (:list 11831 2450.207)
          (:list 11832 2454.7608)
          (:list 11866 2459.3145)
          (:list 11878 2463.821)
          (:list 11879 2467.5276)
          (:list 11924 2470.9988)
          (:list 11932 2475.5525)
          (:list 11949 2479.055)
          (:list 11954 2482.8086)
          (:list 11955 2486.5623)
          (:list 11958 2491.116)
          (:list 11964 2495.4185)
          (:list 11965 2499.721)
          (:list 11973 2503.2234)
          (:list 11990 2506.6946)
          (:list 11993 2509.8203)
          (:list 11997 2513.0088)
          (:list 11999 2516.48)
          (:list 12000 2525.6685)
          (:list 12024 2529.1397)
          (:list 12032 2532.6109)
          (:list 12033 2536.082)
          (:list 12101 2540.9666)
          (:list 12126 2544.155)
          (:list 12135 2547.3435)
          (:list 12137 2550.532)
          (:list 12238 2554.0345)
          (:list 12263 2557.5369)
          (:list 12269 2561.0393)
          (:list 12270 2564.5418)
          (:list 12410 2568.5469)
          (:list 12471 2573.4314)
          (:list 12480 2577.4366)
          (:list 12496 2582.321)
          (:list 12498 2586.3262)
          (:list 12499 2591.2107)
          (:list 12500 2596.0952)
          (:list 12877 2600.9798)
          (:list 12940 2604.1055)
          (:list 12963 2607.2312)
          (:list 12965 2610.357)
          (:list 12997 2613.514)
          (:list 13000 2622.671)
          (:list 13024 2627.5554)
          (:list 13032 2632.44)
          (:list 13033 2638.1245)
          (:list 13075 2643.009)
          (:list 13094 2646.166)
          (:list 13097 2649.323)
          (:list 13099 2653.28)
          (:list 13199 2657.5825)
          (:list 13201 2661.085)
          (:list 13224 2665.8902)
          (:list 13231 2670.1927)
          (:list 13232 2674.495)
          (:list 13251 2678.2488)
          (:list 13270 2683.054)
          (:list 13371 2687.8592)
          (:list 13383 2691.3616)
          (:list 13396 2695.9153)
          (:list 13402 2700.2178)
          (:list 13403 2704.5203)
          (:list 13404 2708.8228)
          (:list 13408 2712.6997)
          (:list 13410 2717.2534)
          (:list 13413 2722.138)
          (:list 13414 2726.6917)
          (:list 13479 2729.9453)
          (:list 13480 2734.3396)
          (:list 13489 2740.0242)
          (:list 13498 2744.2012)
          (:list 13499 2749.8858)
          (:list 13500 2755.5703)
          (:list 13575 2762.3704)
          (:list 13594 2766.5474)
          (:list 13595 2770.7244)
          (:list 13596 2774.9014)
          (:list 13696 2778.4038)
          (:list 13721 2781.9063)
          (:list 13727 2785.4087)
          (:list 13729 2788.9112)
          (:list 13829 2792.4136)
          (:list 13834 2796.716)
          (:list 13935 2801.0186)
          (:list 13939 2805.321)
          (:list 13990 2808.8235)
          (:list 13999 2812.0747)
          (:list 14000 2822.126)
          (:list 14024 2827.8106)
          (:list 14032 2833.495)
          (:list 14033 2838.3797)
          (:list 14075 2841.8509)
          (:list 14088 2845.102)
          (:list 14093 2848.3533)
          (:list 14127 2851.8557)
          (:list 14136 2855.327)
          (:list 14138 2858.798)
          (:list 14194 2862.5047)
          (:list 14199 2866.007)
          (:list 14279 2869.7608)
          (:list 14291 2873.4673)
          (:list 14292 2877.9739)
          (:list 14349 2881.6804)
          (:list 14374 2885.434)
          (:list 14379 2889.1878)
          (:list 14380 2893.7415)
          (:list 14433 2898.2952)
          (:list 14469 2902.8018)
          (:list 14474 2907.3084)
          (:list 14481 2911.226)
          (:list 14497 2915.5286)
          (:list 14499 2919.4463)
          (:list 14500 2923.364)
          (:list 14513 2927.6665)
          (:list 14514 2931.969)
          (:list 14561 2936.5227)
          (:list 14577 2940.4405)
          (:list 14578 2944.3582)
          (:list 14579 2947.4759)
          (:list 14664 2951.8885)
          (:list 14690 2956.4422)
          (:list 14694 2960.9959)
          (:list 14695 2965.5496)
          (:list 14696 2969.3033)
          (:list 14701 2973.057)
          (:list 14712 2977.4695)
          (:list 14846 2981.2862)
          (:list 14871 2985.0398)
          (:list 14876 2989.5935)
          (:list 14877 2993.4102)
          (:list 14891 2997.9639)
          (:list 14893 3002.5806)
          (:list 14894 3007.1973)
          (:list 14976 3011.4055)
          (:list 14978 3014.8137)
          (:list 14996 3019.1162)
          (:list 14997 3022.5244)
          (:list 15000 3032.827)
          (:list 15038 3037.1294)
          (:list 15047 3041.3377)
          (:list 15048 3045.546)
          (:list 15050 3051.056)
          (:list 15057 3054.5584)
          (:list 15059 3058.0608)
          (:list 15160 3061.5633)
          (:list 15185 3065.0657)
          (:list 15191 3068.568)
          (:list 15192 3072.0706)
          (:list 15450 3076.0782)
          (:list 15488 3079.2666)
          (:list 15494 3082.8137)
          (:list 15497 3086.8213)
          (:list 15499 3090.333)
          (:list 15500 3094.8406)
          (:list 16000 3106.8406)
          (:list 16188 3111.3482)
          (:list 16191 3115.8557)
          (:list 16192 3120.3633)
          (:list 16475 3124.7766)
          (:list 16499 3129.19)
          (:list 16500 3133.6033)
          (:list 17000 3144.0166)
          (:list 17188 3148.43)
          (:list 17191 3152.8433)
          (:list 17192 3158.0567)
          (:list 17334 3162.5633)
          (:list 17369 3167.0699)
          (:list 17374 3170.7764)
          (:list 17469 3174.2476)
          (:list 17492 3177.7188)
          (:list 17498 3181.19)
          (:list 17499 3184.6612)
          (:list 17500 3188.1324)
          (:list 18000 3197.6035)
          (:list 18283 3201.0747)
          (:list 18353 3204.546)
          (:list 18371 3208.017)
          (:list 18374 3212.2884)
          (:list 18469 3216.5596)
          (:list 18477 3220.8308)
          (:list 18480 3224.302)
          (:list 18497 3227.3904)
          (:list 18499 3230.4788)
          (:list 18500 3233.5672)
          (:list 18601 3236.6555)
          (:list 18610 3239.744)
          (:list 18612 3242.8323)
          (:list 18613 3245.9207)
          (:list 18713 3249.423)
          (:list 18718 3252.9256)
          (:list 18919 3256.9307)
          (:list 18995 3260.9358)
          (:list 18999 3264.941)
          (:list 19000 3274.946)
          (:list 19500 3278.9512)
          (:list 19701 3282.9563)
          (:list 19714 3286.9615)
          (:list 19717 3290.9666)
          (:list 19718 3294.9717)
          (:list 19869 3298.9768)
          (:list 19894 3302.7305)
          (:list 19899 3306.4842)
          (:list 19900 3310.2378)
          (:list 19975 3313.9915)
          (:list 19994 3317.3684)
          (:list 19999 3320.7454)
          (:list 20000 3330.1223)
          (:list 20025 3333.4993)
          (:list 20031 3336.8762)
          (:list 20033 3340.2532)
          (:list 20184 3344.0069)
          (:list 20209 3347.7605)
          (:list 20214 3351.5142)
          (:list 20215 3356.0679)
          (:list 20316 3360.6216)
          (:list 20320 3364.924)
          (:list 20421 3369.2266)
          (:list 20426 3373.529)
          (:list 20476 3376.7803)
          (:list 20495 3379.8745)
          (:list 20499 3382.898)
          (:list 20500 3385.9))))
       (:value
        (:object
         (:class poly)
         (:slots
          ((:chord-seqs
            (:list
             (:object
              (:class voice)
              (:slots
               ((:onset 0)
                (:duration 15047)
                (:interpol
                 (:number-or-nil (:number 50) (:t-or-nil nil)))
                (:name "VOICE")
                (:symbolic-date nil)
                (:symbolic-dur nil)
                (:symbolic-dur-extent 0)
                (:extras nil)
                (:tree
                 (:list
                  16
                  (:list
                   (:list
                    (:list 2 4)
                    (:list
                     (:list 1 (:list 48 12.0 64 12.0 128 16.0 4.0 1.0))
                     1.0))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       1536.0
                       192.0
                       32.0
                       8.0
                       1024
                       96.0
                       16.0
                       4.0
                       768
                       24.0
                       4.0
                       1.0))
                     (:list
                      1
                      (:list
                       128.0
                       48.0
                       12.0
                       3.0
                       768
                       12.0
                       768
                       12.0
                       768
                       192.0
                       28.0
                       768
                       12.0
                       128
                       48.0
                       8.0
                       2.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       512.0
                       64.0
                       16.0
                       2.0
                       768
                       192.0
                       28.0
                       1024
                       96.0
                       16.0
                       4.0
                       768
                       192.0
                       16.0
                       7.0))
                     (:list
                      1
                      (:list
                       1536.0
                       128.0
                       48.0
                       12.0
                       3.0
                       8192
                       384.0
                       4.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       4096
                       512.0
                       128.0
                       24.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       512.0
                       192.0
                       48.0
                       12.0
                       1536
                       128.0
                       48.0
                       4.0
                       2048
                       384.0
                       64.0
                       12.0
                       2048
                       768.0
                       128.0
                       16.0
                       4.0
                       192
                       7.0))
                     (:list
                      1
                      (:list
                       8192.0
                       3072.0
                       256.0
                       24.0
                       1.0
                       8192
                       384.0
                       4.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       8192
                       1536.0
                       32.0
                       2.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       2048.0
                       512.0
                       192.0
                       24.0
                       2.0
                       8192
                       384.0
                       4.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       3072
                       512.0
                       96.0
                       24.0
                       4.0
                       1.0))
                     (:list
                      1
                      (:list
                       8192.0
                       512.0
                       96.0
                       24.0
                       7.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       16384
                       512.0
                       192.0
                       16.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     1.0
                     (:list
                      1
                      (:list
                       16384.0
                       6144.0
                       1024.0
                       96.0
                       3.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       6144
                       64.0
                       28.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       1536.0
                       8.0
                       4096
                       768.0
                       64.0
                       12.0
                       6144
                       768.0
                       128.0
                       48.0
                       12.0
                       1.0))
                     1.0))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       16384.0
                       2048.0
                       768.0
                       192.0
                       48.0
                       12.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       8192
                       2048.0
                       192.0
                       3.0))
                     (:list
                      1
                      (:list
                       384.0
                       48.0
                       1.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       24576
                       4096.0
                       768.0
                       14.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     1.0
                     (:list
                      1
                      (:list
                       8192.0
                       3072.0
                       32.0
                       4.0
                       1.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       3072
                       512.0
                       128.0
                       48.0
                       6.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       4096.0
                       512.0
                       192.0
                       14.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       6144
                       128.0
                       24.0
                       4.0
                       1.0))
                     (:list
                      1
                      (:list
                       8192.0
                       256.0
                       64.0
                       7.0
                       8192
                       384.0
                       4.0
                       16384
                       6144.0
                       1024.0
                       96.0
                       8.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     1.0
                     (:list
                      1
                      (:list
                       16384.0
                       512.0
                       192.0
                       8.0
                       3.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       8192
                       512.0
                       128.0
                       4.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       1536.0
                       384.0
                       112.0
                       12288
                       192.0
                       48.0
                       12.0
                       12288
                       192.0
                       48.0
                       12.0
                       8192
                       384.0
                       4.0
                       4096
                       768.0
                       192.0
                       7.0))
                     (:list
                      1
                      (:list
                       384.0
                       3.0
                       768
                       64.0
                       4.0
                       768
                       64.0
                       4.0
                       512
                       128.0
                       16.0
                       2.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list 128.0 48.0 2.0 2048 384.0 96.0 8.0 3.0))
                     1.0))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list 128.0 48.0 2.0 2048 384.0 96.0 8.0 3.0))
                     1.0))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       128.0
                       48.0
                       2.0
                       512
                       48.0
                       12.0
                       768
                       64.0
                       4.0
                       768
                       192.0
                       28.0
                       128
                       12.0
                       3.0))
                     (:list
                      1
                      (:list
                       384.0
                       96.0
                       12.0
                       3.0
                       768
                       64.0
                       4.0
                       1024
                       96.0
                       16.0
                       4.0
                       512
                       128.0
                       24.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       3072.0
                       768.0
                       64.0
                       4.0
                       -32768
                       -3072.0
                       -768.0
                       -192.0
                       -32.0
                       -12.0
                       -3.0))
                     -1)))))
                (:lmidic
                 (:list
                  (:list 6108)
                  (:list 6251)
                  (:list 6406)
                  (:list 7308)
                  (:list 7606)
                  (:list 7900)
                  (:list 6108)
                  (:list 6251)
                  (:list 6518)
                  (:list 6700)
                  (:list 7606)
                  (:list 6108)
                  (:list 6251)
                  (:list 6406)
                  (:list 6518)
                  (:list 6700)
                  (:list 7308)
                  (:list 7451)
                  (:list 7900)
                  (:list 8068)
                  (:list 6108)
                  (:list 7308)
                  (:list 6108)
                  (:list 6251)
                  (:list 6518)
                  (:list 7606)
                  (:list 7900)
                  (:list 6108)
                  (:list 6251)
                  (:list 6406)
                  (:list 6868)
                  (:list 7308)
                  (:list 7451)
                  (:list 7900)
                  (:list 6108)
                  (:list 6251)
                  (:list 6700)
                  (:list 7308)
                  (:list 7606)
                  (:list 7900)
                  (:list 6108)
                  (:list 6251)
                  (:list 6406)
                  (:list 6518)
                  (:list 7606)
                  (:list 7900)
                  (:list 6518)
                  (:list 6700)
                  (:list 6868)
                  (:list 6108)
                  (:list 6406)
                  (:list 6700)
                  (:list 6868)
                  (:list 7451)
                  (:list 7606)
                  (:list 7900)
                  (:list 6108)
                  (:list 6700)
                  (:list 8068)
                  (:list 6108)
                  (:list 6251)
                  (:list 6700)
                  (:list 7308)
                  (:list 7451)))
                (:lonset
                 (:list
                  0
                  105
                  239
                  1239
                  1392
                  1526
                  1631
                  1736
                  1870
                  1975
                  2080
                  2213
                  2367
                  2521
                  2626
                  2808
                  2942
                  3047
                  3152
                  3306
                  3488
                  3642
                  3747
                  3880
                  4034
                  4139
                  4321
                  4454
                  4608
                  4790
                  5790
                  5923
                  6057
                  6239
                  7239
                  7372
                  7505
                  7639
                  8639
                  8820
                  8954
                  9059
                  9241
                  9423
                  9605
                  9710
                  10710
                  10892
                  11025
                  11179
                  11333
                  11438
                  11571
                  11725
                  11879
                  12033
                  13033
                  14033
                  14138
                  14292
                  14474
                  14579
                  14712
                  14894
                  16000))
                (:ldur
                 (:list
                  (:list 104)
                  (:list 133)
                  (:list 999)
                  (:list 152)
                  (:list 133)
                  (:list 104)
                  (:list 104)
                  (:list 133)
                  (:list 104)
                  (:list 104)
                  (:list 132)
                  (:list 153)
                  (:list 153)
                  (:list 104)
                  (:list 181)
                  (:list 133)
                  (:list 104)
                  (:list 104)
                  (:list 153)
                  (:list 181)
                  (:list 153)
                  (:list 104)
                  (:list 132)
                  (:list 153)
                  (:list 104)
                  (:list 181)
                  (:list 132)
                  (:list 153)
                  (:list 181)
                  (:list 999)
                  (:list 132)
                  (:list 133)
                  (:list 181)
                  (:list 999)
                  (:list 132)
                  (:list 132)
                  (:list 133)
                  (:list 999)
                  (:list 180)
                  (:list 133)
                  (:list 104)
                  (:list 181)
                  (:list 181)
                  (:list 181)
                  (:list 104)
                  (:list 999)
                  (:list 181)
                  (:list 132)
                  (:list 153)
                  (:list 153)
                  (:list 104)
                  (:list 132)
                  (:list 153)
                  (:list 153)
                  (:list 153)
                  (:list 999)
                  (:list 999)
                  (:list 104)
                  (:list 153)
                  (:list 181)
                  (:list 104)
                  (:list 132)
                  (:list 181)
                  (:list 153)))
                (:lvel
                 (:list
                  (:list 100)
                  (:list 98)
                  (:list 96)
                  (:list 94)
                  (:list 92)
                  (:list 90)
                  (:list 100)
                  (:list 98)
                  (:list 95)
                  (:list 92)
                  (:list 90)
                  (:list 100)
                  (:list 99)
                  (:list 98)
                  (:list 96)
                  (:list 95)
                  (:list 94)
                  (:list 92)
                  (:list 91)
                  (:list 90)
                  (:list 100)
                  (:list 90)
                  (:list 100)
                  (:list 98)
                  (:list 95)
                  (:list 92)
                  (:list 90)
                  (:list 100)
                  (:list 98)
                  (:list 97)
                  (:list 95)
                  (:list 93)
                  (:list 92)
                  (:list 90)
                  (:list 100)
                  (:list 98)
                  (:list 96)
                  (:list 94)
                  (:list 92)
                  (:list 90)
                  (:list 100)
                  (:list 98)
                  (:list 96)
                  (:list 94)
                  (:list 92)
                  (:list 90)
                  (:list 100)
                  (:list 95)
                  (:list 90)
                  (:list 100)
                  (:list 98)
                  (:list 97)
                  (:list 95)
                  (:list 93)
                  (:list 92)
                  (:list 90)
                  (:list 100)
                  (:list 95)
                  (:list 90)
                  (:list 100)
                  (:list 98)
                  (:list 95)
                  (:list 92)
                  (:list 90)))
                (:loffset (:list 0))
                (:lchan (:list 1))
                (:lport (:list nil))
                (:llegato nil)
                (:tempo 120))))
             (:object
              (:class voice)
              (:slots
               ((:onset 0)
                (:duration 13403)
                (:interpol
                 (:number-or-nil (:number 50) (:t-or-nil nil)))
                (:name "VOICE")
                (:symbolic-date nil)
                (:symbolic-dur nil)
                (:symbolic-dur-extent 0)
                (:extras nil)
                (:tree
                 (:list
                  14
                  (:list
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list 48 4.0 48 4.0 64 12.0 48 4.0 12 3.0))
                     1.0))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list 1 (:list 192.0 32.0 8.0 12 3.0))
                     (:list
                      1
                      (:list
                       4096.0
                       1536.0
                       384.0
                       64.0
                       24.0
                       1.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       8192
                       768.0
                       2.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       3072.0
                       384.0
                       96.0
                       24.0
                       2.0
                       12288
                       192.0
                       48.0
                       12.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       12288
                       192.0
                       48.0
                       12.0
                       1024
                       192.0
                       12.0
                       1.0))
                     (:list
                      1
                      (:list
                       3072.0
                       128.0
                       12.0
                       1.0
                       8192
                       2048.0
                       128.0
                       4.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     1.0
                     (:list
                      1
                      (:list
                       3072.0
                       128.0
                       12.0
                       1.0
                       4096
                       64.0
                       16.0
                       4.0
                       4096
                       768.0
                       64.0
                       12.0
                       1024
                       192.0
                       32.0
                       4.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       8192.0
                       2048.0
                       768.0
                       56.0
                       12288
                       192.0
                       48.0
                       12.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       6144
                       128.0
                       8.0
                       3.0))
                     (:list
                      1
                      (:list
                       4096.0
                       384.0
                       96.0
                       8.0
                       1.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       12288
                       192.0
                       48.0
                       12.0
                       12288
                       192.0
                       48.0
                       12.0
                       192
                       24.0
                       6.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       8192.0
                       2048.0
                       384.0
                       16.0
                       6.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       8192
                       128.0
                       48.0
                       4.0
                       1.0))
                     (:list
                      1
                      (:list
                       6144.0
                       256.0
                       32.0
                       12.0
                       3.0
                       8192
                       384.0
                       4.0
                       12288
                       192.0
                       48.0
                       12.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       2048
                       256.0
                       16.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       1536.0
                       384.0
                       96.0
                       28.0
                       2048
                       768.0
                       128.0
                       16.0
                       4.0
                       1536
                       128.0
                       48.0
                       4.0
                       1024
                       384.0
                       16.0
                       3.0))
                     (:list
                      1
                      (:list
                       3072.0
                       512.0
                       128.0
                       16.0
                       4.0
                       1.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       8192
                       384.0
                       4.0
                       8192
                       384.0
                       4.0
                       8192
                       768.0
                       32.0
                       2.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       1536.0
                       256.0
                       64.0
                       16.0
                       2.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       8192
                       384.0
                       4.0
                       16384
                       2048.0
                       768.0
                       192.0
                       32.0
                       8.0
                       1.0))
                     1.0))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       16384.0
                       4096.0
                       768.0
                       64.0
                       8.0
                       2.0
                       16384
                       2048.0
                       768.0
                       192.0
                       32.0
                       8.0
                       1.0))
                     1.0))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       16384.0
                       4096.0
                       768.0
                       64.0
                       8.0
                       2.0
                       12288
                       192.0
                       48.0
                       12.0
                       6144
                       512.0
                       192.0
                       32.0
                       12.0
                       1.0))
                     (:list
                      1
                      (:list
                       4096.0
                       1536.0
                       12.0
                       3.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       12288
                       192.0
                       48.0
                       12.0
                       6144
                       1536.0
                       64.0
                       4.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       768.0
                       64.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       12288
                       192.0
                       48.0
                       12.0
                       12288
                       192.0
                       48.0
                       12.0
                       16
                       7.0))
                     (:list
                      1
                      (:list
                       12288.0
                       192.0
                       32.0
                       4.0
                       1.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       12288
                       192.0
                       48.0
                       12.0
                       768
                       96.0
                       14.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       12288.0
                       1536.0
                       96.0
                       16.0
                       6.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       12288
                       192.0
                       48.0
                       12.0
                       3072
                       256.0
                       64.0
                       12.0
                       1.0))
                     (:list
                      1
                      (:list
                       6144.0
                       1024.0
                       256.0
                       32.0
                       7.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       3072
                       512.0
                       64.0
                       4.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       8192.0
                       2048.0
                       768.0
                       128.0
                       32.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       16384
                       2048.0
                       256.0
                       24.0
                       7.0))
                     1.0))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       16384.0
                       4096.0
                       1536.0
                       16.0
                       4.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       -6144
                       -1536.0
                       -128.0
                       -32.0
                       -8.0
                       -3.0))
                     -1)))))
                (:lmidic
                 (:list
                  (:list 7606)
                  (:list 7451)
                  (:list 6700)
                  (:list 6518)
                  (:list 6406)
                  (:list 6108)
                  (:list 7900)
                  (:list 7451)
                  (:list 6700)
                  (:list 6518)
                  (:list 6406)
                  (:list 6251)
                  (:list 6108)
                  (:list 6700)
                  (:list 6518)
                  (:list 6251)
                  (:list 7900)
                  (:list 7606)
                  (:list 6700)
                  (:list 6518)
                  (:list 6406)
                  (:list 6251)
                  (:list 6108)
                  (:list 7308)
                  (:list 6868)
                  (:list 6700)
                  (:list 6518)
                  (:list 7900)
                  (:list 7606)
                  (:list 6406)
                  (:list 6251)
                  (:list 8068)
                  (:list 7900)
                  (:list 7308)
                  (:list 6868)
                  (:list 6700)
                  (:list 6251)
                  (:list 8068)
                  (:list 7606)
                  (:list 6700)
                  (:list 6251)
                  (:list 7900)
                  (:list 7606)
                  (:list 7451)
                  (:list 7308)
                  (:list 6700)
                  (:list 6518)
                  (:list 6251)
                  (:list 7900)
                  (:list 7308)
                  (:list 6251)
                  (:list 7900)
                  (:list 7451)
                  (:list 6868)
                  (:list 6251)
                  (:list 6108)
                  (:list 8068)
                  (:list 7900)
                  (:list 7606)
                  (:list 6700)
                  (:list 6518)
                  (:list 6406)
                  (:list 6251)))
                (:lonset
                 (:list
                  0
                  105
                  211
                  364
                  470
                  1470
                  1575
                  1757
                  1890
                  2044
                  2198
                  2331
                  2485
                  2618
                  3618
                  3772
                  3954
                  4136
                  4290
                  4423
                  4556
                  4690
                  4843
                  4997
                  5131
                  5264
                  5397
                  5579
                  5684
                  5838
                  5972
                  6125
                  6307
                  6412
                  6546
                  6679
                  6784
                  6890
                  7023
                  7156
                  7262
                  8262
                  9262
                  9415
                  9569
                  9751
                  9905
                  10010
                  10192
                  10346
                  10500
                  10654
                  10835
                  10989
                  11171
                  11304
                  11458
                  11592
                  11773
                  11955
                  12137
                  12270
                  13270
                  14000))
                (:ldur
                 (:list
                  (:list 104)
                  (:list 105)
                  (:list 152)
                  (:list 105)
                  (:list 999)
                  (:list 104)
                  (:list 181)
                  (:list 132)
                  (:list 153)
                  (:list 153)
                  (:list 132)
                  (:list 153)
                  (:list 132)
                  (:list 999)
                  (:list 153)
                  (:list 181)
                  (:list 181)
                  (:list 153)
                  (:list 132)
                  (:list 132)
                  (:list 133)
                  (:list 152)
                  (:list 153)
                  (:list 133)
                  (:list 132)
                  (:list 132)
                  (:list 181)
                  (:list 104)
                  (:list 153)
                  (:list 133)
                  (:list 152)
                  (:list 181)
                  (:list 104)
                  (:list 133)
                  (:list 132)
                  (:list 104)
                  (:list 105)
                  (:list 132)
                  (:list 132)
                  (:list 105)
                  (:list 999)
                  (:list 999)
                  (:list 152)
                  (:list 153)
                  (:list 181)
                  (:list 153)
                  (:list 104)
                  (:list 181)
                  (:list 153)
                  (:list 153)
                  (:list 153)
                  (:list 180)
                  (:list 153)
                  (:list 181)
                  (:list 132)
                  (:list 153)
                  (:list 133)
                  (:list 180)
                  (:list 181)
                  (:list 181)
                  (:list 132)
                  (:list 999)
                  (:list 133)))
                (:lvel
                 (:list
                  (:list 100)
                  (:list 98)
                  (:list 96)
                  (:list 94)
                  (:list 92)
                  (:list 90)
                  (:list 100)
                  (:list 98)
                  (:list 97)
                  (:list 95)
                  (:list 93)
                  (:list 92)
                  (:list 90)
                  (:list 100)
                  (:list 95)
                  (:list 90)
                  (:list 100)
                  (:list 98)
                  (:list 97)
                  (:list 95)
                  (:list 93)
                  (:list 92)
                  (:list 90)
                  (:list 100)
                  (:list 97)
                  (:list 93)
                  (:list 90)
                  (:list 100)
                  (:list 97)
                  (:list 93)
                  (:list 90)
                  (:list 100)
                  (:list 98)
                  (:list 96)
                  (:list 94)
                  (:list 92)
                  (:list 90)
                  (:list 100)
                  (:list 97)
                  (:list 93)
                  (:list 90)
                  (:list 100)
                  (:list 98)
                  (:list 97)
                  (:list 95)
                  (:list 93)
                  (:list 92)
                  (:list 90)
                  (:list 100)
                  (:list 95)
                  (:list 90)
                  (:list 100)
                  (:list 98)
                  (:list 95)
                  (:list 92)
                  (:list 90)
                  (:list 100)
                  (:list 98)
                  (:list 97)
                  (:list 95)
                  (:list 93)
                  (:list 92)
                  (:list 90)))
                (:loffset (:list 0))
                (:lchan (:list 1))
                (:lport (:list nil))
                (:llegato nil)
                (:tempo 120))))
             (:object
              (:class voice)
              (:slots
               ((:onset 0)
                (:duration 20425)
                (:interpol
                 (:number-or-nil (:number 50) (:t-or-nil nil)))
                (:name "VOICE")
                (:symbolic-date nil)
                (:symbolic-dur nil)
                (:symbolic-dur-extent 0)
                (:extras nil)
                (:tree
                 (:list
                  21
                  (:list
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       768
                       192.0
                       28.0
                       512
                       48.0
                       12.0
                       768
                       64.0
                       4.0
                       256
                       64.0
                       1.0))
                     (:list
                      1
                      (:list
                       8192.0
                       1536.0
                       256.0
                       16.0
                       4.0
                       1.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       4096
                       768.0
                       192.0
                       6.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       3072.0
                       384.0
                       48.0
                       14.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       6144
                       1024.0
                       384.0
                       32.0
                       12.0
                       1.0))
                     (:list
                      1
                      (:list
                       6144.0
                       1024.0
                       48.0
                       7.0
                       12288
                       192.0
                       48.0
                       12.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       8192
                       1536.0
                       384.0
                       12.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       2048.0
                       256.0
                       112.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       12288
                       192.0
                       48.0
                       12.0
                       96
                       12.0
                       3.0))
                     (:list
                      1
                      (:list
                       8192.0
                       2048.0
                       512.0
                       4.0
                       1.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       8192
                       384.0
                       4.0
                       6144
                       384.0
                       64.0
                       6.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       768.0
                       64.0
                       16.0
                       6.0
                       1536
                       128.0
                       48.0
                       4.0
                       2048
                       384.0
                       64.0
                       12.0
                       1536
                       128.0
                       48.0
                       4.0
                       1024
                       256.0
                       64.0
                       12.0
                       1.0))
                     1.0))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       6144.0
                       512.0
                       128.0
                       8.0
                       2.0
                       1024
                       256.0
                       64.0
                       12.0
                       1.0))
                     (:list
                      1
                      (:list
                       1024.0
                       96.0
                       24.0
                       7.0
                       6144
                       768.0
                       64.0
                       24.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     1.0
                     (:list
                      1
                      (:list
                       1024.0
                       96.0
                       24.0
                       7.0
                       2048
                       768.0
                       128.0
                       16.0
                       4.0
                       3072
                       768.0
                       192.0
                       4.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     1.0
                     (:list
                      1
                      (:list
                       16384.0
                       4096.0
                       64.0
                       24.0
                       7.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       8192
                       1024.0
                       96.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       1536.0
                       16.0
                       4.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       12288
                       192.0
                       48.0
                       12.0
                       8192
                       384.0
                       4.0
                       3072
                       128.0
                       48.0
                       8.0
                       3.0))
                     (:list
                      1
                      (:list
                       6144.0
                       1024.0
                       384.0
                       48.0
                       8.0
                       1.0
                       8192
                       384.0
                       4.0
                       16384
                       6144.0
                       1536.0
                       384.0
                       96.0
                       16.0
                       6.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     1.0
                     (:list
                      1
                      (:list
                       12288.0
                       3072.0
                       768.0
                       48.0
                       12.0
                       1.0
                       16384
                       6144.0
                       1536.0
                       384.0
                       96.0
                       16.0
                       6.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     1.0
                     (:list
                      1
                      (:list
                       12288.0
                       3072.0
                       768.0
                       48.0
                       12.0
                       1.0
                       16384
                       6144.0
                       1536.0
                       384.0
                       96.0
                       16.0
                       6.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     1.0
                     (:list
                      1
                      (:list
                       12288.0
                       3072.0
                       768.0
                       48.0
                       12.0
                       1.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       12288
                       1024.0
                       384.0
                       2.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     1.0
                     (:list
                      1
                      (:list
                       24576.0
                       2048.0
                       384.0
                       48.0
                       1.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       2048
                       768.0
                       14.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     1.0
                     (:list
                      1
                      (:list
                       6144.0
                       1024.0
                       384.0
                       32.0
                       1.0
                       512
                       48.0
                       6.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       6144.0
                       1536.0
                       256.0
                       96.0
                       6.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       6144
                       768.0
                       96.0
                       16.0
                       4.0
                       1.0))
                     (:list
                      1
                      (:list
                       6144.0
                       1536.0
                       96.0
                       12.0
                       3.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       8192
                       384.0
                       4.0
                       8192
                       384.0
                       4.0
                       4096
                       768.0
                       64.0
                       8.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       6144.0
                       1024.0
                       384.0
                       48.0
                       4.0
                       8192
                       384.0
                       4.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       8192
                       1536.0
                       16.0
                       7.0))
                     (:list
                      1
                      (:list
                       1024.0
                       64.0
                       24.0
                       4.0
                       1.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       8192
                       1536.0
                       256.0
                       14.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       4096.0
                       512.0
                       192.0
                       16.0
                       6.0
                       8192
                       2048.0
                       512.0
                       96.0
                       16.0
                       4.0
                       24576
                       384.0
                       96.0
                       8.0
                       1.0))
                     1.0))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list 1 (:list 1024.0 16.0 6.0 1536 128.0 7.0))
                     1.0))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       1024.0
                       16.0
                       6.0
                       768
                       192.0
                       28.0
                       512
                       128.0
                       32.0
                       8.0
                       3.0))
                     1.0))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       1536.0
                       384.0
                       96.0
                       16.0
                       2.0
                       512
                       48.0
                       12.0
                       96
                       12.0
                       3.0))
                     (:list
                      1
                      (:list
                       8192.0
                       768.0
                       192.0
                       48.0
                       3.0
                       8192
                       384.0
                       4.0
                       16384
                       6144.0
                       384.0
                       48.0
                       12.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     1.0
                     (:list
                      1
                      (:list
                       16384.0
                       1024.0
                       256.0
                       96.0
                       16.0
                       7.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       6144
                       1536.0
                       384.0
                       64.0
                       24.0))))
                   (:list
                    (:list 2 4)
                    (:list
                     (:list
                      1
                      (:list
                       2048.0
                       512.0
                       128.0
                       28.0
                       12288
                       2048.0
                       384.0
                       96.0
                       4.0
                       8192
                       384.0
                       4.0
                       8192
                       384.0
                       4.0
                       -4096
                       -1536.0
                       -384.0
                       -32.0
                       -8.0
                       -3.0))
                     -1)))))
                (:lmidic
                 (:list
                  (:list 8068)
                  (:list 7606)
                  (:list 7451)
                  (:list 7308)
                  (:list 6868)
                  (:list 6700)
                  (:list 7451)
                  (:list 6868)
                  (:list 6700)
                  (:list 6406)
                  (:list 8068)
                  (:list 7900)
                  (:list 7606)
                  (:list 7451)
                  (:list 6700)
                  (:list 6518)
                  (:list 6406)
                  (:list 6251)
                  (:list 6108)
                  (:list 8068)
                  (:list 7606)
                  (:list 6868)
                  (:list 7900)
                  (:list 7606)
                  (:list 7451)
                  (:list 6868)
                  (:list 6700)
                  (:list 6251)
                  (:list 6108)
                  (:list 7900)
                  (:list 7606)
                  (:list 7451)
                  (:list 7308)
                  (:list 6868)
                  (:list 6700)
                  (:list 6406)
                  (:list 7606)
                  (:list 7451)
                  (:list 7308)
                  (:list 6700)
                  (:list 6251)
                  (:list 8068)
                  (:list 7606)
                  (:list 7451)
                  (:list 6700)
                  (:list 6108)
                  (:list 8068)
                  (:list 7606)
                  (:list 7308)
                  (:list 6868)
                  (:list 6700)
                  (:list 6406)
                  (:list 6251)
                  (:list 6108)
                  (:list 7606)
                  (:list 6868)
                  (:list 8068)
                  (:list 7900)
                  (:list 7606)
                  (:list 7451)
                  (:list 6406)
                  (:list 6108)
                  (:list 7900)
                  (:list 7606)
                  (:list 6868)
                  (:list 6700)
                  (:list 6518)
                  (:list 6406)
                  (:list 6251)
                  (:list 6108)))
                (:lonset
                 (:list
                  0
                  182
                  287
                  441
                  623
                  756
                  938
                  1043
                  1225
                  1407
                  1589
                  1742
                  1876
                  2030
                  2211
                  2345
                  2499
                  2632
                  2814
                  2919
                  3052
                  3158
                  3311
                  3417
                  4417
                  4571
                  5571
                  5752
                  6752
                  6886
                  7019
                  7201
                  7355
                  7460
                  7593
                  7699
                  8699
                  9699
                  10699
                  10832
                  11832
                  11965
                  12965
                  13099
                  13232
                  13414
                  13596
                  13729
                  13834
                  13939
                  14093
                  14199
                  14380
                  14514
                  14696
                  14877
                  15059
                  15192
                  16192
                  17192
                  17374
                  18374
                  18480
                  18613
                  18718
                  19718
                  19900
                  20033
                  20215
                  20320
                  21000))
                (:ldur
                 (:list
                  (:list 181)
                  (:list 104)
                  (:list 153)
                  (:list 181)
                  (:list 132)
                  (:list 181)
                  (:list 104)
                  (:list 181)
                  (:list 181)
                  (:list 181)
                  (:list 152)
                  (:list 133)
                  (:list 153)
                  (:list 180)
                  (:list 133)
                  (:list 153)
                  (:list 132)
                  (:list 181)
                  (:list 104)
                  (:list 132)
                  (:list 105)
                  (:list 152)
                  (:list 105)
                  (:list 999)
                  (:list 153)
                  (:list 999)
                  (:list 180)
                  (:list 999)
                  (:list 133)
                  (:list 132)
                  (:list 181)
                  (:list 153)
                  (:list 104)
                  (:list 132)
                  (:list 105)
                  (:list 999)
                  (:list 999)
                  (:list 999)
                  (:list 132)
                  (:list 999)
                  (:list 132)
                  (:list 999)
                  (:list 133)
                  (:list 132)
                  (:list 181)
                  (:list 181)
                  (:list 132)
                  (:list 104)
                  (:list 104)
                  (:list 153)
                  (:list 105)
                  (:list 180)
                  (:list 133)
                  (:list 181)
                  (:list 180)
                  (:list 181)
                  (:list 132)
                  (:list 999)
                  (:list 999)
                  (:list 181)
                  (:list 999)
                  (:list 105)
                  (:list 132)
                  (:list 104)
                  (:list 999)
                  (:list 181)
                  (:list 132)
                  (:list 181)
                  (:list 104)
                  (:list 105)))
                (:lvel
                 (:list
                  (:list 100)
                  (:list 98)
                  (:list 96)
                  (:list 94)
                  (:list 92)
                  (:list 90)
                  (:list 100)
                  (:list 97)
                  (:list 93)
                  (:list 90)
                  (:list 100)
                  (:list 99)
                  (:list 98)
                  (:list 96)
                  (:list 95)
                  (:list 94)
                  (:list 92)
                  (:list 91)
                  (:list 90)
                  (:list 100)
                  (:list 95)
                  (:list 90)
                  (:list 100)
                  (:list 98)
                  (:list 97)
                  (:list 95)
                  (:list 93)
                  (:list 92)
                  (:list 90)
                  (:list 100)
                  (:list 98)
                  (:list 97)
                  (:list 95)
                  (:list 93)
                  (:list 92)
                  (:list 90)
                  (:list 100)
                  (:list 98)
                  (:list 95)
                  (:list 92)
                  (:list 90)
                  (:list 100)
                  (:list 98)
                  (:list 95)
                  (:list 92)
                  (:list 90)
                  (:list 100)
                  (:list 99)
                  (:list 97)
                  (:list 96)
                  (:list 94)
                  (:list 93)
                  (:list 91)
                  (:list 90)
                  (:list 100)
                  (:list 90)
                  (:list 100)
                  (:list 98)
                  (:list 96)
                  (:list 94)
                  (:list 92)
                  (:list 90)
                  (:list 100)
                  (:list 99)
                  (:list 97)
                  (:list 96)
                  (:list 94)
                  (:list 93)
                  (:list 91)
                  (:list 90)))
                (:loffset (:list 0))
                (:lchan (:list 1))
                (:lport (:list nil))
                (:llegato nil)
                (:tempo 120))))))
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)))))
       (:id 24))
      (:box
       (:type :value)
       (:reference symbol)
       (:group-id nil)
       (:name "value box")
       (:x 438)
       (:y 243)
       (:w 38)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value >)
       (:id 25))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference play-om\#)
       (:group-id nil)
       (:name "play-om#")
       (:x 648)
       (:y 880)
       (:w 136)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "VOICE")
         (:value (:list nil))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 26))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 1169)
       (:y 615)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 27))
      (:box
       (:type :function)
       (:reference nth-random)
       (:group-id nil)
       (:name "nth-random")
       (:x 192)
       (:y 126)
       (:w 157)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 28))
      (:box
       (:library "OM-Sieves")
       (:type :function)
       (:reference s-union-l)
       (:group-id nil)
       (:name "s-union-l")
       (:x 1302)
       (:y 52)
       (:w 127)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SIEVE")
         (:value (:list (:list 19 16 64) (:list 11 16 64)))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 29))
      (:box
       (:library "OM-Sieves")
       (:type :function)
       (:reference revel-sieve)
       (:group-id nil)
       (:name "revel-sieve")
       (:x 1261)
       (:y 106)
       (:w 148)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 30))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 1248)
       (:y 17)
       (:w 224)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list (:list 19 16 64) (:list 11 16 64)))
       (:id 31))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference diamond-identity)
       (:group-id nil)
       (:name "diamond-identity")
       (:x 1236)
       (:y 161)
       (:w 209)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "IDENTITY")
         (:value (:list 11 19 97))
         (:reactive nil)))
       (:outputs
        (:output (:name "out0") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 32))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference choose)
       (:group-id nil)
       (:name "choose")
       (:x 1391)
       (:y 221)
       (:w 107)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value 6)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CHORD-N")
         (:value 6)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 33))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference rt->mc)
       (:group-id nil)
       (:name "rt->mc")
       (:x 1461)
       (:y 314)
       (:w 109)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value 11/8)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FUNDAMENTAL")
         (:value 6000)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 34))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 1503)
       (:y 279)
       (:w 61)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6700)
       (:id 35))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference range-reduce)
       (:group-id nil)
       (:name "range-reduce")
       (:x 1471)
       (:y 403)
       (:w 172)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 4800 7200 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GRAVE")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "AGUDA")
         (:value 7902)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 36))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 1564)
       (:y 368)
       (:w 61)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 8400)
       (:id 37))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference interval-sob)
       (:group-id nil)
       (:name "interval-sob")
       (:x 921)
       (:y 165)
       (:w 157)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value 11/8)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SIEVE")
         (:value (:list 2 3 7 11 12))
         (:reactive nil)))
       (:outputs
        (:output (:name "out0") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 38))
      (:box
       (:type :value)
       (:reference ratio)
       (:group-id nil)
       (:name "value box")
       (:x 930)
       (:y 130)
       (:w 69)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 97/64)
       (:id 39))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference rt->mc)
       (:group-id nil)
       (:name "rt->mc")
       (:x 1127)
       (:y 262)
       (:w 109)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value 11/8)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FUNDAMENTAL")
         (:value 6000)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 40))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 1169)
       (:y 227)
       (:w 61)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6100)
       (:id 41))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference rt-octave)
       (:group-id nil)
       (:name "rt-octave")
       (:x 939)
       (:y 255)
       (:w 129)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FRAQ")
         (:value 3/2)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "octave")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 42))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 999)
       (:y 220)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 4)
       (:id 43))
      (:box
       (:type :function)
       (:reference om-round)
       (:group-id nil)
       (:name "om-round")
       (:x 650)
       (:y 256)
       (:w 136)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 44)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 5 :in 1)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 2 :in 3)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 23 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 26 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 2)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 44 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 11 :in 1)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 21 :in 1)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 21 :in 4)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 1)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 14 :in 1)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 2 :in 1)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 16 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 28 :in 0)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 18 :in 2)))
      (:connection (:from (:box 21 :out 1)) (:to (:box 2 :in 2)))
      (:connection
       (:from (:box 21 :out 4))
       (:to (:box 2 :in 4))
       (:attributes (:color nil :style nil :modif (0 25/103))))
      (:connection (:from (:box 22 :out 0)) (:to (:box 21 :in 6)))
      (:connection (:from (:box 23 :out 1)) (:to (:box 24 :in 1)))
      (:connection (:from (:box 25 :out 0)) (:to (:box 10 :in 2)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 2 :in 6)))
      (:connection (:from (:box 28 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 29 :out 0)) (:to (:box 30 :in 0)))
      (:connection (:from (:box 30 :out 0)) (:to (:box 32 :in 0)))
      (:connection (:from (:box 30 :out 0)) (:to (:box 38 :in 1)))
      (:connection (:from (:box 31 :out 0)) (:to (:box 29 :in 0)))
      (:connection (:from (:box 32 :out 0)) (:to (:box 33 :in 0)))
      (:connection (:from (:box 33 :out 0)) (:to (:box 34 :in 0)))
      (:connection (:from (:box 34 :out 0)) (:to (:box 36 :in 0)))
      (:connection (:from (:box 35 :out 0)) (:to (:box 34 :in 1)))
      (:connection (:from (:box 37 :out 0)) (:to (:box 36 :in 2)))
      (:connection (:from (:box 38 :out 1)) (:to (:box 42 :in 0)))
      (:connection (:from (:box 39 :out 0)) (:to (:box 38 :in 0)))
      (:connection (:from (:box 40 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 41 :out 0)) (:to (:box 40 :in 1)))
      (:connection (:from (:box 42 :out 0)) (:to (:box 40 :in 0)))
      (:connection (:from (:box 43 :out 0)) (:to (:box 42 :in 1)))
      (:connection (:from (:box 44 :out 0)) (:to (:box 10 :in 0))))))
   (:group-id nil)
   (:name "TEXTURA 223")
   (:x 1358)
   (:y 309)
   (:w 176)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs)
   (:id 1))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "sieve")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (965 500)) (:position (104 100)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 353)
       (:y 390)
       (:w 88)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 83)
       (:y 84)
       (:w 245)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list (:list 19 16) (:list 11 16) (:list 97 16)))
       (:id 1))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 332)
       (:y 112)
       (:w 47)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 64)
       (:id 2))
      (:box
       (:library "OM-Sieves")
       (:type :function)
       (:reference s-limite)
       (:group-id nil)
       (:name "s-limite")
       (:x 305)
       (:y 176)
       (:w 111)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SIEVE-L")
         (:value (:list (:list 19 16) (:list 11 16)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIMITE")
         (:value 225)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MODO")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:library "OM-Sieves")
       (:type :function)
       (:reference revel-sieve)
       (:group-id nil)
       (:name "revel-sieve")
       (:x 269)
       (:y 297)
       (:w 148)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 0 :in 0))))))
   (:group-id nil)
   (:name "sieve")
   (:x 502)
   (:y 17)
   (:w 142)
   (:h 83)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 2))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "ritmo sons")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1384 797)) (:position (-8 -8)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :object)
       (:reference chord)
       (:group-id nil)
       (:name "CHORD")
       (:x 527)
       (:y 320)
       (:w 162)
       (:h 109)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LVEL")
         (:value (:list 100))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LOFFSET")
         (:value (:list 0))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LDUR")
         (:value (:list 1000))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "lchan")
         (:value 9)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "LVEL") (:reactive nil))
        (:output (:name "LOFFSET") (:reactive nil))
        (:output (:name "LDUR") (:reactive nil))
        (:output (:name "lchan") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params (:staff :g))
       (:value
        (:object
         (:class chord)
         (:slots
          ((:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:onset 0)
           (:item-time nil)
           (:item-internal-time nil)
           (:item-type nil)
           (:attributes nil)
           (:lmidic (:list 8806 7900 7451 7308 6868 6700 6518))
           (:lvel (:list 100 100 100 100 100 100 100))
           (:loffset (:list 0 0 0 0 0 0 0))
           (:ldur (:list 1000 1000 1000 1000 1000 1000 1000))
           (:lchan (:list 9 9 9 9 9 9 9))
           (:lport (:list nil nil nil nil nil nil nil))))))
       (:id 0))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 13")
       (:x 480)
       (:y 420)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 4)
       (:id 1))
      (:box
       (:type :function)
       (:reference approx-m)
       (:group-id nil)
       (:name "approx-m")
       (:x 446)
       (:y 450)
       (:w 135)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "APPROX")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 12")
       (:x 553)
       (:y 474)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 50)
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 11")
       (:x 1143)
       (:y 524)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 12)
       (:id 4))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 1113)
       (:y 554)
       (:w 130)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 696)
       (:y 447)
       (:w 70)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "v")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (960 500)) (:position (52 48)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 41)
           (:y -3)
           (:w 73)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 285)
           (:y 522)
           (:w 107)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
           (:group-id nil)
           (:name "input 2")
           (:x 193)
           (:y 8)
           (:w 93)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "input 3") (:doc "")))
           (:group-id nil)
           (:name "input 3")
           (:x 257)
           (:y 13)
           (:w 93)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 4) (:name "input 4") (:doc "")))
           (:group-id nil)
           (:name "input 4")
           (:x 326)
           (:y 15)
           (:w 93)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :function)
           (:reference remove)
           (:group-id nil)
           (:name "remove")
           (:x 488)
           (:y 417)
           (:w 114)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ITEM")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 236)
           (:y 367)
           (:w 84)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 6))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 230)
           (:y 298)
           (:w 132)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :function)
           (:reference nth-random)
           (:group-id nil)
           (:name "nth-random")
           (:x 423)
           (:y 92)
           (:w 157)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :special)
           (:reference if)
           (:group-id nil)
           (:name "IF")
           (:x 407)
           (:y 177)
           (:w 75)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "TEST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "THEN")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :function)
           (:reference nth-random)
           (:group-id nil)
           (:name "nth-random")
           (:x 286)
           (:y 135)
           (:w 157)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :special)
           (:reference if)
           (:group-id nil)
           (:name "IF")
           (:x 275)
           (:y 204)
           (:w 75)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "TEST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "THEN")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 11))
          (:box
           (:type :function)
           (:reference nth-random)
           (:group-id nil)
           (:name "nth-random")
           (:x 160)
           (:y 128)
           (:w 157)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 12))
          (:box
           (:type :special)
           (:reference if)
           (:group-id nil)
           (:name "IF")
           (:x 148)
           (:y 219)
           (:w 75)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "TEST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "THEN")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 3")
           (:x 369)
           (:y 101)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 3)
           (:id 14))
          (:box
           (:type :function)
           (:reference om=)
           (:group-id nil)
           (:name "om=")
           (:x 357)
           (:y 131)
           (:w 85)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NUM1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "NUM2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux")
           (:x 253)
           (:y 145)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 2)
           (:id 16))
          (:box
           (:type :function)
           (:reference om=)
           (:group-id nil)
           (:name "om=")
           (:x 241)
           (:y 175)
           (:w 85)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NUM1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "NUM2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 17))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 2")
           (:x 113)
           (:y 147)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 18))
          (:box
           (:type :function)
           (:reference om=)
           (:group-id nil)
           (:name "om=")
           (:x 101)
           (:y 177)
           (:w 85)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NUM1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "NUM2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 19))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 185)
           (:y 522)
           (:w 88)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 20))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 44)
           (:y 65)
           (:w 101)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 21)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 21 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 12 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 20 :in 0)))
          (:connection (:from (:box 6 :out 1)) (:to (:box 5 :in 1)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 1)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 7 :in 2)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 11 :in 1)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 7 :in 1)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 13 :in 1)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 15 :in 1)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 17 :in 1)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 11 :in 0)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 19 :in 1)))
          (:connection (:from (:box 19 :out 0)) (:to (:box 13 :in 0)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 15 :in 0)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 17 :in 0)))
          (:connection
           (:from (:box 21 :out 0))
           (:to (:box 19 :in 0))))))
       (:group-id nil)
       (:name "v")
       (:x 1016)
       (:y 454)
       (:w 86)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 3")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 4")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 7))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 10")
       (:x 963)
       (:y 324)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 5)
       (:id 8))
      (:box
       (:type :function)
       (:reference last-n)
       (:group-id nil)
       (:name "last-n")
       (:x 923)
       (:y 354)
       (:w 95)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "N")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 9")
       (:x 866)
       (:y 454)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 5)
       (:id 10))
      (:box
       (:type :function)
       (:reference last-n)
       (:group-id nil)
       (:name "last-n")
       (:x 803)
       (:y 487)
       (:w 95)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "N")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 8")
       (:x 852)
       (:y 330)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 10)
       (:id 12))
      (:box
       (:type :function)
       (:reference first-n)
       (:group-id nil)
       (:name "first-n")
       (:x 827)
       (:y 364)
       (:w 97)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "N")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 7")
       (:x 774)
       (:y 315)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 5)
       (:id 14))
      (:box
       (:type :function)
       (:reference sort-list)
       (:group-id nil)
       (:name "sort-list")
       (:x 824)
       (:y 233)
       (:w 114)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :function)
       (:reference first-n)
       (:group-id nil)
       (:name "first-n")
       (:x 755)
       (:y 363)
       (:w 97)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "N")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :function)
       (:reference nth-random)
       (:group-id nil)
       (:name "nth-random")
       (:x 1054)
       (:y 308)
       (:w 157)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:type :function)
       (:reference list)
       (:group-id nil)
       (:name "list")
       (:x 1083)
       (:y 250)
       (:w 66)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "args")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "args")
         (:value 2)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "args")
         (:value 3)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "args")
         (:value 4)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "list 4")
       (:x 1232)
       (:y 203)
       (:w 45)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 2 3 1))
       (:id 19))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "list 3")
       (:x 1166)
       (:y 203)
       (:w 45)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 2 1 3))
       (:id 20))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "list 2")
       (:x 1099)
       (:y 207)
       (:w 45)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 3 1 2))
       (:id 21))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 6")
       (:x 1040)
       (:y 207)
       (:w 55)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 1 3 2))
       (:id 22))
      (:box
       (:type :object)
       (:reference voice)
       (:group-id nil)
       (:name "VOICE")
       (:x 23)
       (:y 0)
       (:w 780)
       (:h 141)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock :locked)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TREE")
         (:value (:list ? (:list (:list (:list 4 4) (:list 1 1 1 1)))))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value
          (:list
           (:object
            (:class chord)
            (:slots
             ((:symbolic-date nil)
              (:symbolic-dur nil)
              (:symbolic-dur-extent 0)
              (:extras nil)
              (:onset 0)
              (:item-time nil)
              (:item-internal-time nil)
              (:item-type nil)
              (:attributes nil)
              (:lmidic (:list 6000))
              (:lvel (:list 100))
              (:loffset (:list 0))
              (:ldur (:list 1000))
              (:lchan (:list 1))
              (:lport (:list nil)))))))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEMPO")
         (:value 80)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "TREE") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "TEMPO") (:reactive nil)))
       (:window (:size (1920 1026)) (:position (-9 -9)))
       (:edition-params
        (:font-size 39)
        (:scale :scale-1/8)
        (:time-map
         (:list
          (:list -1000 0)
          (:list 0 7.5)
          (:list 500 12.55)
          (:list 1000 16.3)
          (:list 1250 20.425)
          (:list 2000 25.3)
          (:list 2250 29.724999)
          (:list 2500 34.149998)
          (:list 2750 37.774998)
          (:list 3000 41.399998)
          (:list 3250 45.824997)
          (:list 3500 48.949997)
          (:list 3750 53.074997)
          (:list 4000 62.199997)
          (:list 4250 66.325)
          (:list 5000 71.2)
          (:list 5250 75.625)
          (:list 5500 79.25)
          (:list 6000 83.5)
          (:list 6750 87.75)
          (:list 7000 91.375)
          (:list 7250 95.0)
          (:list 7500 99.425)
          (:list 7750 103.850006)
          (:list 8000 114.27501)
          (:list 8250 117.90001)
          (:list 8500 122.32501)
          (:list 8750 125.95001)
          (:list 9000 129.57501)
          (:list 9250 134.00002)
          (:list 9500 137.12502)
          (:list 10000 141.87502)
          (:list 10250 145.50002)
          (:list 10500 149.12502)
          (:list 11000 153.37502)
          (:list 11250 157.62502)
          (:list 11500 160.75002)))
        (:staff :g))
       (:value
        (:object
         (:class voice)
         (:slots
          ((:onset 0)
           (:duration 11499)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:name "VOICE")
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:tree
            (:list
             3
             (:list
              (:list
               (:list 4 4)
               (:list
                (:list 4 (:list 1 1))
                -1
                3
                (:list 4 (:list 1 1 1 1))
                (:list 2 (:list 1 1))
                -1
                1))
              (:list
               (:list 4 4)
               (:list
                -1
                3
                (:list 4 (:list (:list 1 (:list 1 1)) 1))
                (:list 4 (:list 3.0 1))
                (:list 4 (:list 1.0 1 1 1))))
              (:list
               (:list 4 4)
               (:list
                (:list 2 (:list 1 1 1 1))
                (:list 1 (:list 1.0 1))
                -1
                (:list 2 (:list (:list 1 (:list 1 1)) 1))
                (:list 1 (:list 1.0 1))
                -1)))))
           (:lmidic
            (:list
             (:list 8600)
             (:list 8500)
             (:list 8800)
             (:list 7900)
             (:list 7300)
             (:list 8500)
             (:list 7600)
             (:list 7900)
             (:list 7300)
             (:list 7900)
             (:list 7400)
             (:list 7900)
             (:list 7300)
             (:list 7600)
             (:list 8800)
             (:list 7900)
             (:list 8500)
             (:list 7500)
             (:list 7300)
             (:list 8800)
             (:list 7500)
             (:list 7900)
             (:list 8500)
             (:list 7600)
             (:list 8600)
             (:list 7900)
             (:list 9100)))
           (:lonset
            (:list
             0
             500
             1250
             2000
             2250
             2500
             2750
             3000
             3250
             3750
             4250
             5000
             5250
             5500
             6750
             7250
             7500
             7750
             8000
             8250
             8500
             8750
             9250
             10000
             10250
             10500
             11250
             12000))
           (:ldur
            (:list
             (:list 499)
             (:list 499)
             (:list 749)
             (:list 249)
             (:list 249)
             (:list 249)
             (:list 249)
             (:list 249)
             (:list 249)
             (:list 249)
             (:list 749)
             (:list 249)
             (:list 249)
             (:list 1249)
             (:list 499)
             (:list 249)
             (:list 249)
             (:list 249)
             (:list 249)
             (:list 249)
             (:list 249)
             (:list 499)
             (:list 249)
             (:list 249)
             (:list 249)
             (:list 749)
             (:list 249)))
           (:lvel (:list 100))
           (:loffset (:list 0))
           (:lchan (:list 1))
           (:lport (:list nil))
           (:llegato nil)
           (:tempo 60)))))
       (:id 23))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 877)
       (:y 200)
       (:w 132)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 24))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 5")
       (:x 967)
       (:y 125)
       (:w 44)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1200)
       (:id 25))
      (:box
       (:type :function)
       (:reference om+)
       (:group-id nil)
       (:name "om+")
       (:x 933)
       (:y 155)
       (:w 85)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 26))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 4")
       (:x 838)
       (:y 142)
       (:w 46)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 7200)
       (:id 27))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 3")
       (:x 791)
       (:y 140)
       (:w 46)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6000)
       (:id 28))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux")
       (:x 1477/3)
       (:y 548/3)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6)
       (:id 29))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "list")
       (:x 548)
       (:y 186)
       (:w 56)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6700)
       (:id 30))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "TEXT-BOX")
       (:x 309)
       (:y 154)
       (:w 287)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 16 27 35 38 49 54 60))
       (:id 31))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "altura")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (1366 725)) (:position (-8 -8)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 2")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output 2")
           (:x 288)
           (:y 551)
           (:w 107)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 119)
           (:y 50)
           (:w 73)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
           (:group-id nil)
           (:name "input 2")
           (:x 481)
           (:y 200)
           (:w 93)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "input 3") (:doc "")))
           (:group-id nil)
           (:name "input 3")
           (:x 552)
           (:y 301)
           (:w 93)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 4) (:name "input 4") (:doc "")))
           (:group-id nil)
           (:name "input 4")
           (:x 432)
           (:y 91)
           (:w 93)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux")
           (:x 390)
           (:y 127)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 0)
           (:id 5))
          (:box
           (:type :function)
           (:reference om=)
           (:group-id nil)
           (:name "om=")
           (:x 385)
           (:y 181)
           (:w 85)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NUM1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "NUM2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :special)
           (:reference if)
           (:group-id nil)
           (:name "IF")
           (:x 255)
           (:y 251)
           (:w 75)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "TEST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "THEN")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "else")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:library "OM-JI")
           (:type :function)
           (:reference choose)
           (:group-id nil)
           (:name "choose")
           (:x 404)
           (:y 379)
           (:w 107)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NOTELIST")
             (:value (:list (:list 6000 6530) (:list 7203 5049)))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CHORD-N")
             (:value (:list 2))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:library "OM-JI")
           (:type :function)
           (:reference diamond-identity)
           (:group-id nil)
           (:name "diamond-identity")
           (:x 242)
           (:y 128)
           (:w 209)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "IDENTITY")
             (:value (:list 11 19 97))
             (:reactive nil)))
           (:outputs
            (:output (:name "out0") (:reactive nil))
            (:output (:name "out1") (:reactive nil)))
           (:id 9))
          (:box
           (:library "OM-JI")
           (:type :function)
           (:reference rt->mc)
           (:group-id nil)
           (:name "rt->mc")
           (:x 455)
           (:y 446)
           (:w 109)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "RATIO")
             (:value 11/8)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "FUNDAMENTAL")
             (:value 6000)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 8 :in 1)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 10 :in 1)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 1)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 7 :in 1)))
          (:connection (:from (:box 9 :out 1)) (:to (:box 7 :in 2)))
          (:connection
           (:from (:box 10 :out 0))
           (:to (:box 0 :in 0))))))
       (:group-id nil)
       (:name "altura")
       (:x 1345/3)
       (:y 674/3)
       (:w 219)
       (:h 66)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 3")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 4")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 2") (:reactive nil)))
       (:id 32))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 1840/3)
       (:y 551/3)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 0)
       (:id 33))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference range-reduce)
       (:group-id nil)
       (:name "range-reduce")
       (:x 760)
       (:y 172)
       (:w 172)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 4800 7200 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GRAVE")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "AGUDA")
         (:value 7902)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 34)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 2 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 7 :in 3)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 11 :in 1)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 7 :in 2)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 13 :in 1)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 16 :in 1)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 16 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 7 :in 1)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 18 :in 3)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 18 :in 2)))
      (:connection (:from (:box 21 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 22 :out 0)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 25 :out 0)) (:to (:box 26 :in 1)))
      (:connection (:from (:box 26 :out 0)) (:to (:box 24 :in 1)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 34 :in 2)))
      (:connection (:from (:box 28 :out 0)) (:to (:box 34 :in 1)))
      (:connection (:from (:box 29 :out 0)) (:to (:box 32 :in 1)))
      (:connection (:from (:box 30 :out 0)) (:to (:box 32 :in 2)))
      (:connection (:from (:box 31 :out 0)) (:to (:box 32 :in 0)))
      (:connection (:from (:box 32 :out 0)) (:to (:box 0 :in 1)))
      (:connection (:from (:box 32 :out 0)) (:to (:box 34 :in 0)))
      (:connection (:from (:box 33 :out 0)) (:to (:box 32 :in 3)))
      (:connection (:from (:box 34 :out 0)) (:to (:box 24 :in 0)))
      (:connection (:from (:box 34 :out 0)) (:to (:box 26 :in 0))))))
   (:group-id nil)
   (:name "ritmo sons")
   (:x 1361)
   (:y 196)
   (:w 143)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs)
   (:id 3))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "SIMETRIA")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1126 615)) (:position (156 152)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 630)
       (:y 455)
       (:w 70)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 5")
       (:x 488)
       (:y 119)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 11)
       (:id 1))
      (:box
       (:type :function)
       (:reference dx->x)
       (:group-id nil)
       (:name "dx->x")
       (:x 489)
       (:y 156)
       (:w 99)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "START")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value (:list 1 1))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 4")
       (:x 388)
       (:y 194)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 0)
       (:id 3))
      (:box
       (:type :function)
       (:reference om-round)
       (:group-id nil)
       (:name "om-round")
       (:x 354)
       (:y 224)
       (:w 136)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "decimals")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 3")
       (:x 348)
       (:y 131)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 5))
      (:box
       (:type :function)
       (:reference om*)
       (:group-id nil)
       (:name "om*")
       (:x 338)
       (:y 161)
       (:w 82)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "reverse-inverse")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (518 572)) (:position (182 178)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 50)
           (:y 372)
           (:w 88)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 55)
           (:y 50)
           (:w 73)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 2")
             (:index 2)
             (:doc nil)))
           (:group-id nil)
           (:name "output 2")
           (:x 318)
           (:y 377)
           (:w 107)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 2))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "lispfunction")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size (797 338)) (:position (26 26)))
             (:text
              (:list
               ""
               "(lambda (series octave-adj) "
               ""
               ""
               "(let*"
               "("
               "(12tone (flat series))"
               "(seriesint (om::x->dx 12tone))"
               "(invseriesint (loop for x in seriesint collect (* -1 x)))"
               "(invresult (om::dx->x (first 12tone) invseriesint))"
               ")"
               "(reverse (loop for x in invresult collect (+ x octave-adj)))"
               "))"))))
           (:group-id nil)
           (:name "lispfunction")
           (:x 134)
           (:y 221)
           (:w 152)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "SERIES")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "OCTAVE-ADJ")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :function)
           (:reference reverse)
           (:group-id nil)
           (:name "reverse")
           (:x 47)
           (:y 177)
           (:w 113)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 3")
           (:x 234)
           (:y 176)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 0)
           (:id 5)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 3 :in 1))))))
       (:group-id nil)
       (:name "reverse-inverse")
       (:x 394/3)
       (:y 985/3)
       (:w 194)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "output") (:reactive nil))
        (:output (:name "output 2") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference x->dx)
       (:group-id nil)
       (:name "x->dx")
       (:x 258)
       (:y 106)
       (:w 99)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value (:list 0 1))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "list 3")
       (:x 304)
       (:y 22)
       (:w 363)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value
        (:list
         6406
         7900
         6250
         6108
         8068
         6518
         7606
         9100
         7450
         7308
         9268
         7718))
       (:id 9))
      (:box
       (:type :object)
       (:reference chord-seq)
       (:group-id nil)
       (:name "CHORD-SEQ")
       (:x 546)
       (:y 246)
       (:w 449)
       (:h 150)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LONSET")
         (:value (:list 0 1000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LDUR")
         (:value (:list 1000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LVEL")
         (:value (:list 100))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "loffset")
         (:value (:list 0))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "lchan")
         (:value (:list 1))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "llegato")
         (:value 0)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "LONSET") (:reactive nil))
        (:output (:name "LDUR") (:reactive nil))
        (:output (:name "LVEL") (:reactive nil))
        (:output (:name "loffset") (:reactive nil))
        (:output (:name "lchan") (:reactive nil))
        (:output (:name "llegato") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params (:staff :g))
       (:value
        (:object
         (:class chord-seq)
         (:slots
          ((:onset 0)
           (:duration 1000)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:name "CHORD-SEQ")
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:lmidic (:list 6000))
           (:lonset (:list 0 1000))
           (:ldur (:list 1000))
           (:lvel (:list 100))
           (:loffset (:list 0))
           (:lchan (:list 1))
           (:lport (:list nil))
           (:llegato nil)))))
       (:id 10))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "list 2")
       (:x 36)
       (:y 32)
       (:w 97)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 11 8 3 11 5 6))
       (:id 11))
      (:box
       (:type :object)
       (:reference bpf)
       (:group-id nil)
       (:name "BPF 3")
       (:x 245)
       (:y 402)
       (:w 233)
       (:h 125)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "X-POINTS")
         (:value (:list 0 100))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y-POINTS")
         (:value (:list 0 100))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "decimals")
         (:value 0)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "X-POINTS") (:reactive nil))
        (:output (:name "Y-POINTS") (:reactive nil))
        (:output (:name "decimals") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class bpf)
         (:slots
          ((:onset 0)
           (:duration 500)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:action nil)
           (:color (:color 0.0S0 0.0S0 0.0S0 1.0))
           (:decimals 0)
           (:x-points (:list 0 100 200 300 400 500))
           (:y-points (:list 80 85 55 95 70 55))))
         (:add-slots ((:name "BPF")))))
       (:id 12))
      (:box
       (:type :object)
       (:reference bpf)
       (:group-id nil)
       (:name "BPF 2")
       (:x 9)
       (:y 401)
       (:w 233)
       (:h 125)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "X-POINTS")
         (:value (:list 0 100))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y-POINTS")
         (:value (:list 0 100))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "decimals")
         (:value 0)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "X-POINTS") (:reactive nil))
        (:output (:name "Y-POINTS") (:reactive nil))
        (:output (:name "decimals") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class bpf)
         (:slots
          ((:onset 0)
           (:duration 500)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:action nil)
           (:color (:color 0.0S0 0.0S0 0.0S0 1.0))
           (:decimals 0)
           (:x-points (:list 0 100 200 300 400 500))
           (:y-points (:list 30 25 55 15 40 55))))
         (:add-slots ((:name "BPF")))))
       (:id 13))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 224)
       (:y 24)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 5)
       (:id 14))
      (:box
       (:type :function)
       (:reference om*)
       (:group-id nil)
       (:name "om*")
       (:x 121)
       (:y 133)
       (:w 82)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux")
       (:x 152)
       (:y 16)
       (:w 55)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 2 1 3))
       (:id 16))
      (:box
       (:type :object)
       (:reference bpf)
       (:group-id nil)
       (:name "BPF")
       (:x 26)
       (:y 187)
       (:w 233)
       (:h 125)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "X-POINTS")
         (:value (:list 0 100))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y-POINTS")
         (:value (:list 0 100))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "decimals")
         (:value 0)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "X-POINTS") (:reactive nil))
        (:output (:name "Y-POINTS") (:reactive nil))
        (:output (:name "decimals") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class bpf)
         (:slots
          ((:onset 0)
           (:duration 500)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:action nil)
           (:color (:color 0.0S0 0.0S0 0.0S0 1.0))
           (:decimals 0)
           (:x-points (:list 0 100 200 300 400 500))
           (:y-points (:list 55 40 15 55 25 30))))
         (:add-slots ((:name "BPF")))))
       (:id 17)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 2 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 1)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 13 :in 2)))
      (:connection (:from (:box 7 :out 1)) (:to (:box 12 :in 2)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 10 :out 1)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 15 :in 1)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 17 :in 2)))
      (:connection (:from (:box 17 :out 2)) (:to (:box 7 :in 0))))))
   (:group-id nil)
   (:name "SIMETRIA")
   (:x 1359)
   (:y 224)
   (:w 138)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs)
   (:id 4))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "sibelius->max")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1920 1026)) (:position (-9 -9)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :object)
       (:reference poly)
       (:group-id nil)
       (:name nil)
       (:x 37)
       (:y 48)
       (:w 229)
       (:h 85)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "OBJ-LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "OBJ-LIST") (:reactive nil)))
       (:window (:size (1920 1026)) (:position (-9 -9)))
       (:edition-params (:time-map nil))
       (:value
        (:object
         (:class poly)
         (:slots
          ((:chord-seqs nil)
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)))))
       (:id 0))
      (:box
       (:type :function)
       (:reference import-musicxml)
       (:group-id nil)
       (:name "import-musicxml")
       (:x 38)
       (:y 3)
       (:w 206)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock :locked)
       (:lambda nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference choose)
       (:group-id nil)
       (:name "choose")
       (:x 48)
       (:y 181)
       (:w 107)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 1 2 3 4 5 6 7 8 9 10))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CHORD-N")
         (:value (:list 1 7 9))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 104)
       (:y 129)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2)
       (:id 3))
      (:box
       (:type :object)
       (:reference voice)
       (:group-id nil)
       (:name nil)
       (:x 21)
       (:y 229)
       (:w 270)
       (:h 87)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TREE")
         (:value (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list (:list 6000)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEMPO")
         (:value 60)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "lvel")
         (:value 100)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "loffset")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "lchan")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "lport")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "extras")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "TREE") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "TEMPO") (:reactive nil))
        (:output (:name "lvel") (:reactive nil))
        (:output (:name "loffset") (:reactive nil))
        (:output (:name "lchan") (:reactive nil))
        (:output (:name "lport") (:reactive nil))
        (:output (:name "extras") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params
        (:time-map
         (:list
          (:list -1000 0)
          (:list 0 7.5)
          (:list 1000 13.0)
          (:list 2000 18.5)
          (:list 3000 24.0))))
       (:value
        (:object
         (:class voice)
         (:slots
          ((:onset 0)
           (:duration 3999)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:name "VOICE")
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:tree
            (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
           (:lmidic (:list 6000))
           (:lonset (:list 0 1000 2000 3000 4000))
           (:ldur (:list 999))
           (:lvel (:list 100))
           (:loffset (:list 0))
           (:lchan (:list 1))
           (:lport (:list nil))
           (:llegato nil)
           (:tempo 60)))))
       (:id 4))
      (:box
       (:type :object)
       (:reference voice)
       (:group-id nil)
       (:name nil)
       (:x 47)
       (:y 597)
       (:w 847)
       (:h 137)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TREE")
         (:value (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list (:list 6000)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEMPO")
         (:value 60)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "lvel")
         (:value 100)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "loffset")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "lchan")
         (:value 1)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "TREE") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "TEMPO") (:reactive nil))
        (:output (:name "lvel") (:reactive nil))
        (:output (:name "loffset") (:reactive nil))
        (:output (:name "lchan") (:reactive nil)))
       (:window (:size (1255 300)) (:position (130 130)))
       (:edition-params
        (:scale :scale-1/8)
        (:time-map
         (:list
          (:list -1000 0)
          (:list 0 7.5)
          (:list 750 13.8)
          (:list 1500 19.3)
          (:list 2250 24.8))))
       (:value
        (:object
         (:class voice)
         (:slots
          ((:onset 0)
           (:duration 2999)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:name "VOICE")
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:tree
            (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
           (:lmidic
            (:list
             (:list 8318)
             (:list 8500)
             (:list 8051)
             (:list 8318)))
           (:lonset (:list 0 750 1500 2250 3000))
           (:ldur (:list 749))
           (:lvel (:list (:list 98) (:list 98) (:list 110) (:list 80)))
           (:loffset (:list 0))
           (:lchan (:list 1))
           (:lport (:list nil))
           (:llegato nil)
           (:tempo 80)))))
       (:id 5))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference interval-sob)
       (:group-id nil)
       (:name "interval-sob")
       (:x 309)
       (:y 116)
       (:w 157)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value 11/8)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SIEVE")
         (:value (:list 2 3 7 11 12))
         (:reactive nil)))
       (:outputs
        (:output (:name "out0") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 6))
      (:box
       (:type :value)
       (:reference ratio)
       (:group-id nil)
       (:name "value box")
       (:x 306)
       (:y 79)
       (:w 63)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 97/64)
       (:id 7))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference rt-octave)
       (:group-id nil)
       (:name "rt-octave")
       (:x 388)
       (:y 187)
       (:w 129)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FRAQ")
         (:value 3/2)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "octave")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 448)
       (:y 149)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2)
       (:id 9))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference choose)
       (:group-id nil)
       (:name "choose")
       (:x 425)
       (:y 383)
       (:w 107)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 1 2 3 4 5 6 7 8 9 10))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CHORD-N")
         (:value (:list 1 7 9))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :function)
       (:reference om-round)
       (:group-id nil)
       (:name "om-round")
       (:x 690)
       (:y 354)
       (:w 136)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 445)
       (:y 529)
       (:w 39)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 80)
       (:id 12))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 320)
       (:y 232)
       (:w 263)
       (:h 94)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 6708 7118 7300 7468 8051 8318 8500 8668 9108))
       (:id 13))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference voice->text)
       (:group-id nil)
       (:name "voice->text")
       (:x 58)
       (:y 798)
       (:w 154)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "VOICE")
         (:value (:list nil))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:type :function)
       (:reference om-scale)
       (:group-id nil)
       (:name "om-scale")
       (:x 532)
       (:y 493)
       (:w 127)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 80)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 110)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :function)
       (:reference om-round)
       (:group-id nil)
       (:name "om-round")
       (:x 524)
       (:y 530)
       (:w 136)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name nil)
       (:x 85)
       (:y 860)
       (:w 500)
       (:h 49)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size (500 250)) (:position (57 52)))
       (:edition-params)
       (:value
        (:object
         (:class textbuffer)
         (:slots
          ((:contents
            (:list
             "0 , 8318 98 1 749 ;"
             "749 , 8500 98 1 749 ;"
             "1498 , 8051 110 1 749 ;"
             "2247 , 8318 80 1 749 ;"))))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 17))
      (:box
       (:type :function)
       (:reference om-scale)
       (:group-id nil)
       (:name "om-scale")
       (:x 592)
       (:y 256)
       (:w 127)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 704)
       (:y 297)
       (:w 130)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 19))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 754)
       (:y 252)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 5)
       (:id 20))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 717)
       (:y 323)
       (:w 70)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 21))
      (:box
       (:type :function)
       (:reference sort-list)
       (:group-id nil)
       (:name "sort-list")
       (:x 400)
       (:y 337)
       (:w 114)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 22))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 634)
       (:y 222)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 5)
       (:id 23))
      (:box
       (:type :function)
       (:reference invert-rhythm)
       (:group-id nil)
       (:name "invert-rhythm")
       (:x 123)
       (:y 342)
       (:w 177)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TREE")
         (:value
          (:list
           ?
           (:list
            (:list (:list 4 4) (:list 1 (:list 1 (:list 1 2 1 1)) 1 1))
            (:list
             (:list 4 4)
             (:list 1 (:list 1 (:list 1 2 1 1)) -1 1)))))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 24))
      (:box
       (:type :interface)
       (:reference switch)
       (:group-id nil)
       (:name "switch")
       (:x 84)
       (:y 385)
       (:w 68)
       (:h 40)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:multiple-selection nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "opt1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "opt2")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
       (:state (:list 0))
       (:id 25))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference play-om\#)
       (:group-id nil)
       (:name "play-om#")
       (:x 192)
       (:y 798)
       (:w 136)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "VOICE")
         (:value (:list nil))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 26))
      (:box
       (:type :function)
       (:reference reverse)
       (:group-id nil)
       (:name "reverse")
       (:x 700)
       (:y 384)
       (:w 113)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 27))
      (:box
       (:library "Morphologie")
       (:type :function)
       (:reference (:symbol "PTRN-SMOOTH" "MORPH"))
       (:group-id nil)
       (:name "ptrn-smooth")
       (:x 330)
       (:y 429)
       (:w 162)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value
          (:list
           (:symbol "A" "MORPH")
           (:symbol "B" "MORPH")
           (:symbol "B" "MORPH")
           (:symbol "B" "MORPH")
           (:symbol "C" "MORPH")
           (:symbol "C" "MORPH")
           (:symbol "C" "MORPH")
           (:symbol "D" "MORPH")
           (:symbol "A" "MORPH")
           (:symbol "A" "MORPH")
           (:symbol "B" "MORPH")
           (:symbol "B" "MORPH")
           (:symbol "C" "MORPH")
           (:symbol "C" "MORPH")
           (:symbol "D" "MORPH")
           (:symbol "E" "MORPH")
           (:symbol "D" "MORPH")
           (:symbol "D" "MORPH")
           (:symbol "D" "MORPH")
           (:symbol "B" "MORPH")
           (:symbol "B" "MORPH")))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 28))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference range-reduce)
       (:group-id nil)
       (:name "range-reduce")
       (:x 1006)
       (:y 367)
       (:w 172)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 4800 7200 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GRAVE")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "AGUDA")
         (:value 7902)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 29))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 870)
       (:y 290)
       (:w 330)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 4900 5651 6268 6708 7118 7300 8318))
       (:id 30))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 1054)
       (:y 331)
       (:w 56)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 7900)
       (:id 31))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 1112)
       (:y 331)
       (:w 56)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 9300)
       (:id 32))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 1036)
       (:y 401)
       (:w 100)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 33))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 670)
       (:y 222)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 7)
       (:id 34))
      (:box
       (:library "OM-Sieves")
       (:type :function)
       (:reference revel-sieve)
       (:group-id nil)
       (:name "revel-sieve")
       (:x 1206)
       (:y 124)
       (:w 148)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 35))
      (:box
       (:library "OM-Sieves")
       (:type :function)
       (:reference s-union-l)
       (:group-id nil)
       (:name "s-union-l")
       (:x 659)
       (:y 43)
       (:w 127)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SIEVE")
         (:value (:list (:list 19 16 64) (:list 11 16 64)))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 36))
      (:box
       (:library "OM-Sieves")
       (:type :function)
       (:reference s-perfil)
       (:group-id nil)
       (:name "s-perfil")
       (:x 605)
       (:y 123)
       (:w 108)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SIEVE")
         (:value (:list 23 33 47 63 70))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 37))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 593)
       (:y 8)
       (:w 260)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list (:list 19 16 64) (:list 11 16 64)))
       (:id 38))
      (:box
       (:library "OM-Sieves")
       (:type :function)
       (:reference s-decompose)
       (:group-id nil)
       (:name "s-decompose")
       (:x 1195)
       (:y 172)
       (:w 170)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SIEVE")
         (:value
          (:list
           23
           33
           47
           63
           70
           71
           93
           95
           119
           123
           143
           153
           167
           174
           183
           191
           213
           215
           239
           243
           263
           273
           278
           287
           303
           311
           333
           335
           359
           363
           382
           383
           393
           407
           423
           431
           453
           455
           479
           483
           486))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 39))
      (:box
       (:library "OM-Sieves")
       (:type :function)
       (:reference revel-sieve)
       (:group-id nil)
       (:name "revel-sieve")
       (:x 398)
       (:y 68)
       (:w 148)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 40)))
     (:connections
      (:connection
       (:from (:box 0 :out 1))
       (:to (:box 2 :in 0))
       (:attributes (:color nil :style nil :modif (0 13/61))))
      (:connection (:from (:box 1 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 1)))
      (:connection (:from (:box 4 :out 1)) (:to (:box 24 :in 0)))
      (:connection (:from (:box 4 :out 1)) (:to (:box 25 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 26 :in 0)))
      (:connection (:from (:box 6 :out 1)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 28 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 27 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 5 :in 3)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 22 :in 0)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 16 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 5 :in 4)))
      (:connection
       (:from (:box 18 :out 0))
       (:to (:box 19 :in 0))
       (:attributes (:color nil :style nil :modif (0 -0.05700282))))
      (:connection (:from (:box 19 :out 0)) (:to (:box 21 :in 0)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 19 :in 1)))
      (:connection (:from (:box 21 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 22 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 23 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 25 :in 1)))
      (:connection (:from (:box 25 :out 0)) (:to (:box 5 :in 1)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 10 :in 1)))
      (:connection (:from (:box 28 :out 0)) (:to (:box 5 :in 2)))
      (:connection (:from (:box 29 :out 0)) (:to (:box 33 :in 0)))
      (:connection (:from (:box 30 :out 0)) (:to (:box 29 :in 0)))
      (:connection (:from (:box 31 :out 0)) (:to (:box 29 :in 1)))
      (:connection (:from (:box 32 :out 0)) (:to (:box 29 :in 2)))
      (:connection (:from (:box 34 :out 0)) (:to (:box 18 :in 2)))
      (:connection (:from (:box 35 :out 0)) (:to (:box 39 :in 0)))
      (:connection (:from (:box 36 :out 0)) (:to (:box 37 :in 0)))
      (:connection (:from (:box 36 :out 0)) (:to (:box 35 :in 0)))
      (:connection (:from (:box 36 :out 0)) (:to (:box 40 :in 0)))
      (:connection (:from (:box 37 :out 0)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 38 :out 0)) (:to (:box 36 :in 0)))
      (:connection (:from (:box 40 :out 0)) (:to (:box 6 :in 1))))))
   (:group-id nil)
   (:name "sibelius->max")
   (:x 1364)
   (:y 11)
   (:w 179)
   (:h 32)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs)
   (:id 5))
  (:box
   (:type :abstraction)
   (:reference
    (:patch-from-file
     (:pathname
      (:directory (:relative))
      (:device nil)
      (:host "C")
      (:name "Cacador de espectro")
      (:type "opat"))))
   (:group-id nil)
   (:name "Cacador de espectro")
   (:x 1363)
   (:y 77)
   (:w 244)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs)
   (:id 6))
  (:box
   (:type :abstraction)
   (:reference
    (:patch-from-file
     (:pathname
      (:directory (:relative))
      (:device nil)
      (:host "C")
      (:name "Processamentos de Timbres")
      (:type "opat"))))
   (:group-id nil)
   (:name "Processamentos de Timbres")
   (:x 1363)
   (:y 118)
   (:w 318)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs)
   (:id 7))
  (:box
   (:type :abstraction)
   (:reference
    (:patch-from-file
     (:pathname
      (:directory (:relative))
      (:device nil)
      (:host "C")
      (:name "SDIF TO TEXT")
      (:type "opat"))))
   (:group-id nil)
   (:name "SDIF TO TEXT")
   (:x 1363)
   (:y 158)
   (:w 180)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs)
   (:id 8))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference filter-ac-inst)
   (:group-id nil)
   (:name "filter-ac-inst")
   (:x 145)
   (:y 404)
   (:w 160)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list 6000 6530 7203 5049))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "APPROX")
     (:value 10)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPERAMENT")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference diamond-identity)
   (:group-id nil)
   (:name "diamond-identity")
   (:x 25)
   (:y 121)
   (:w 209)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "IDENTITY")
     (:value (:list 11 19 97))
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 10))
  (:box
   (:type :interface)
   (:reference switch)
   (:group-id nil)
   (:name "switch")
   (:x 33)
   (:y 162)
   (:w 168)
   (:h 40)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:multiple-selection nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "opt1")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "opt2")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     (:list 1 16/27 16/35 8/19 16/49 8/27 4/15)
     (:list 27/16 1 27/35 27/38 27/49 1/2 9/20)
     (:list 35/16 35/27 1 35/38 5/7 35/54 7/12)
     (:list 19/8 38/27 38/35 1 38/49 19/27 19/30)
     (:list 49/16 49/27 7/5 49/38 1 49/54 49/60)
     (:list 27/8 2 54/35 27/19 54/49 1 9/10)
     (:list 15/4 20/9 12/7 30/19 60/49 10/9 1)))
   (:state (:list 1))
   (:id 11))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference choose)
   (:group-id nil)
   (:name "choose")
   (:x 60)
   (:y 254)
   (:w 107)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list 1 2 3 4 5 6 7 8 9 10))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHORD-N")
     (:value (:list 1 7 9))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 154)
   (:y 209)
   (:w 32)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6)
   (:id 13))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt->mc)
   (:group-id nil)
   (:name "rt->mc")
   (:x 123)
   (:y 324)
   (:w 109)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FUNDAMENTAL")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 174)
   (:y 283)
   (:w 56)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6700)
   (:id 15))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 203)
   (:y 358)
   (:w 37)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 10)
   (:id 16))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 250)
   (:y 360)
   (:w 32)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 17))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 22)
   (:y 445)
   (:w 385)
   (:h 93)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 8805.865 7900.0 7450.7256 7308.352 6700.0))
   (:id 18))
  (:box
   (:type :abstraction)
   (:reference
    (:patch-from-file
     (:pathname
      (:directory (:relative))
      (:device nil)
      (:host "C")
      (:name "Afinação e Altura")
      (:type "opat"))))
   (:group-id nil)
   (:name "Afinação e Altura")
   (:x 1363)
   (:y 40)
   (:w 209)
   (:h 36)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs)
   (:id 19))
  (:box
   (:type :object)
   (:reference bpf)
   (:group-id nil)
   (:name nil)
   (:x 756)
   (:y 157)
   (:w 578)
   (:h 242)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 2000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 10000.0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.0S0 0.0S0 0.0S0 1.0))
       (:decimals 2)
       (:x-points (:list 0.0 2000.0 4000.0 6000.0 8000.0 10000.0))
       (:y-points (:list 8.2 7.4 1.0 11.0 3.0 4.2))))
     (:add-slots ((:name "BPF")))))
   (:id 20))
  (:box
   (:type :function)
   (:reference x->dx)
   (:group-id nil)
   (:name "x->dx")
   (:x 1008)
   (:y 51)
   (:w 99)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 21))
  (:box
   (:type :function)
   (:reference om-scale)
   (:group-id nil)
   (:name "om-scale")
   (:x 1199)
   (:y 79)
   (:w 127)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MINOUT")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MAXOUT")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 1231)
   (:y 44)
   (:w 37)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 23))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 1276)
   (:y 43)
   (:w 37)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 11)
   (:id 24))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "value box")
   (:x 48)
   (:y 664)
   (:w 63)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 17/11)
   (:id 25))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "v")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1207 824)) (:position (658 160)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 53)
       (:y 18)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 325)
       (:y 652)
       (:w 55)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 586)
       (:y 155)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 3) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 650)
       (:y 49)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference arithm-ser)
       (:group-id nil)
       (:name "arithm-ser")
       (:x 222)
       (:y 128)
       (:w 169)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "BEGIN")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "END")
         (:value 10)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "STEP")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 227)
       (:y 79)
       (:w 75)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 5))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 321)
       (:y 53)
       (:w 94)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 100000)
       (:id 6))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 478)
       (:y 81)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2)
       (:id 7))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference rt->mc)
       (:group-id nil)
       (:name "rt->mc")
       (:x 329)
       (:y 311)
       (:w 109)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value 11/8)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FUNDAMENTAL")
         (:value 6000)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference rt-octave)
       (:group-id nil)
       (:name "rt-octave")
       (:x 250)
       (:y 186)
       (:w 129)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FRAQ")
         (:value 3/2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference equal)
       (:group-id nil)
       (:name "equal")
       (:x 103)
       (:y 434)
       (:w 92)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "X")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :special)
       (:reference if)
       (:group-id nil)
       (:name "if")
       (:x 187)
       (:y 503)
       (:w 152)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TEST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "THEN")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "else")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 70)
       (:y 523)
       (:w 88)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 12))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 378)
       (:y 250)
       (:w 56)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6000)
       (:id 13))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 224)
       (:y 552)
       (:w 84)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 14))
      (:box
       (:type :function)
       (:reference print)
       (:group-id nil)
       (:name "print")
       (:x 220)
       (:y 429)
       (:w 85)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SOMETHING")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :function)
       (:reference remove)
       (:group-id nil)
       (:name "remove")
       (:x 356)
       (:y 585)
       (:w 114)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ITEM")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :function)
       (:reference om-round)
       (:group-id nil)
       (:name "om-round")
       (:x 57)
       (:y 166)
       (:w 136)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "decimals")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:type :function)
       (:reference om-round)
       (:group-id nil)
       (:name "om-round")
       (:x 375)
       (:y 357)
       (:w 136)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "decimals")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "loop-list")
       (:x 266)
       (:y 253)
       (:w 101)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 19))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference rt->mc)
       (:group-id nil)
       (:name "rt->mc")
       (:x 30)
       (:y 116)
       (:w 109)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value 11/8)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FUNDAMENTAL")
         (:value 6000)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 20))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference rt-octave)
       (:group-id nil)
       (:name "rt-octave")
       (:x 33)
       (:y 71)
       (:w 129)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FRAQ")
         (:value 3/2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 21)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 21 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 17 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 4 :in 2)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 14 :out 1)) (:to (:box 16 :in 1)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 11 :in 1)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 10 :in 1)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 21 :out 0)) (:to (:box 20 :in 0))))))
   (:group-id nil)
   (:name "v")
   (:x 47)
   (:y 770)
   (:w 117)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 26))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference sieve-prime)
   (:group-id nil)
   (:name "sieve-prime")
   (:x 618)
   (:y 106)
   (:w 156)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SIEVE")
     (:value 11)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 27))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt-octave)
   (:group-id nil)
   (:name "rt-octave")
   (:x 522)
   (:y 279)
   (:w 129)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FRAQ")
     (:value 3/2)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "octave")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 28))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 591)
   (:y 236)
   (:w 37)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2)
   (:id 29))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference diamond-identity)
   (:group-id nil)
   (:name "diamond-identity")
   (:x 512)
   (:y 200)
   (:w 209)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "IDENTITY")
     (:value (:list 11 19 97))
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 30))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt->mc)
   (:group-id nil)
   (:name "rt->mc")
   (:x 167)
   (:y 628)
   (:w 109)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FUNDAMENTAL")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 31))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 87)
   (:y 722)
   (:w 35)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 32))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 123)
   (:y 735)
   (:w 75)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 100000)
   (:id 33))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "value box")
   (:x 135)
   (:y 581)
   (:w 78)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 97/64)
   (:id 34))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference interval-sob)
   (:group-id nil)
   (:name "interval-sob")
   (:x 311)
   (:y 268)
   (:w 192)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SIEVE")
     (:value (:list 2 3 7 11 12))
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 35))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "value box")
   (:x 288)
   (:y 137)
   (:w 83)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 97/64)
   (:id 36))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "contorno")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1920 1026)) (:position (-9 -9)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:comment
       (:x 644)
       (:y 292)
       (:w 116)
       (:h 28)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font (:font (:face "Verdana") (:size 14) (:style :bold)))
       (:align nil)
       (:text "Contorno B")
       (:id 0))
      (:comment
       (:x 353)
       (:y 292)
       (:w 116)
       (:h 48)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font (:font (:face "Verdana") (:size 14) (:style :bold)))
       (:align nil)
       (:text
        "Contorno A
")
       (:id 1))
      (:comment
       (:x 1324)
       (:y 813)
       (:w 302)
       (:h 48)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font-or-nil
         (:font (:font (:face "Georgia") (:size 14) (:style :bold)))
         (:t-or-nil t)))
       (:align nil)
       (:text "As alturas estão filtradas para quartos de tom.")
       (:id 2))
      (:comment
       (:x 621)
       (:y 718)
       (:w 188)
       (:h 28)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font-or-nil
         (:font (:font (:face "Verdana") (:size 14) (:style :bold)))
         (:t-or-nil t)))
       (:align nil)
       (:text "Ritmos arbitrários.")
       (:id 3))
      (:comment
       (:x 787)
       (:y 72)
       (:w 202)
       (:h 48)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font-or-nil
         (:font (:font (:face "Georgia") (:size 14) (:style :bold)))
         (:t-or-nil t)))
       (:align nil)
       (:text "Perfil inverso da sieve.")
       (:id 4))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 846)
       (:y 719)
       (:w 51)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 40)
       (:id 5))
      (:comment
       (:x 1017)
       (:y 315)
       (:w 297)
       (:h 48)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font-or-nil
         (:font (:font (:face "Georgia") (:size 14) (:style :bold)))
         (:t-or-nil t)))
       (:align nil)
       (:text
        "Contrução do contorno melódico
")
       (:id 6))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "Contorno PARTCH")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 177)
           (:y 205)
           (:w 88)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 50)
           (:y 50)
           (:w 73)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 13")
           (:x 140)
           (:y 75)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 2))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 3")
           (:x 176)
           (:y 97)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 5)
           (:id 3))
          (:box
           (:type :function)
           (:reference om-round)
           (:group-id nil)
           (:name "om-round")
           (:x 240)
           (:y 123)
           (:w 136)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "N")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :function)
           (:reference om-scale)
           (:group-id nil)
           (:name "om-scale")
           (:x 141)
           (:y 127)
           (:w 127)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "MINOUT")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "MAXOUT")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 5 :in 1)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 5 :in 2)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0))))))
       (:group-id nil)
       (:name "Contorno PARTCH")
       (:x 1717/4)
       (:y 245/2)
       (:w 217)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 7))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "contorno WILSON")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (500 500)) (:position (96 96)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 84)
           (:y 336)
           (:w 88)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 32)
           (:y 35)
           (:w 73)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
           (:group-id nil)
           (:name "input 2")
           (:x 326)
           (:y 132)
           (:w 93)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :function)
           (:reference om-round)
           (:group-id nil)
           (:name "om-round")
           (:x 68)
           (:y 249)
           (:w 136)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "N")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 2")
           (:x 103)
           (:y 76)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 4))
          (:box
           (:type :function)
           (:reference om-scale)
           (:group-id nil)
           (:name "om-scale")
           (:x 68)
           (:y 132)
           (:w 127)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "MINOUT")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "MAXOUT")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 171)
           (:y 68)
           (:w 100)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 1)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 2))))))
       (:group-id nil)
       (:name "contorno WILSON")
       (:x 3317/4)
       (:y 485/4)
       (:w 217)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 2")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 8))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "Ritmo")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (928 503)) (:position (407 468)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 145)
           (:y 405)
           (:w 88)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :value)
           (:reference cons)
           (:group-id nil)
           (:name "aux 11")
           (:x 345)
           (:y 328)
           (:w 61)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value (:list 2 4))
           (:id 1))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 8")
           (:x 432)
           (:y 169)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 2)
           (:id 2))
          (:box
           (:type :special)
           (:reference repeat-n)
           (:group-id nil)
           (:name "repeat-n")
           (:x 191)
           (:y 235)
           (:w 130)
           (:h 28)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :left)
           (:lock nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "self")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "num")
             (:value 0)
             (:reactive nil)))
           (:outputs
            (:output (:name "collected results") (:reactive nil)))
           (:id 3))
          (:box
           (:type :value)
           (:reference cons)
           (:group-id nil)
           (:name "aux 10")
           (:x 11)
           (:y 62)
           (:w 397)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value (:list 1/24 1/24 1/24 1/24 1/24 1/24))
           (:id 4))
          (:box
           (:type :function)
           (:reference flat)
           (:group-id nil)
           (:name "flat")
           (:x 270)
           (:y 272)
           (:w 70)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :function)
           (:reference mktree)
           (:group-id nil)
           (:name "mktree")
           (:x 261)
           (:y 384)
           (:w 110)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "RHYTHM")
             (:value (:list 1/4 1/4 1/4 1/4))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "TIMESIGNS")
             (:value (:list 3 4))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 6 :in 1)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 1)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 0 :in 0))))))
       (:group-id nil)
       (:name "Ritmo")
       (:x 526)
       (:y 4295/6)
       (:w 96)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs)
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference reverse)
       (:group-id nil)
       (:name "reverse")
       (:x 676)
       (:y 70)
       (:w 113)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :object)
       (:reference voice)
       (:group-id nil)
       (:name "VOICE")
       (:x 290)
       (:y 809)
       (:w 1029)
       (:h 108)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TREE")
         (:value (:list ? (:list (:list (:list 4 4) (:list 1 1 1 1)))))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value
          (:list
           (:object
            (:class chord)
            (:slots
             ((:symbolic-date nil)
              (:symbolic-dur nil)
              (:symbolic-dur-extent 0)
              (:extras nil)
              (:onset 0)
              (:item-time nil)
              (:item-internal-time nil)
              (:item-type nil)
              (:attributes nil)
              (:lmidic (:list 6000))
              (:lvel (:list 100))
              (:loffset (:list 0))
              (:ldur (:list 1000))
              (:lchan (:list 1))
              (:lport (:list nil)))))))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEMPO")
         (:value 100)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "lvel")
         (:value 100)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "loffset")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "lchan")
         (:value 1)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "TREE") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "TEMPO") (:reactive nil))
        (:output (:name "lvel") (:reactive nil))
        (:output (:name "loffset") (:reactive nil))
        (:output (:name "lchan") (:reactive nil)))
       (:window (:size (1229 300)) (:position (160 160)))
       (:edition-params
        (:duration-display nil)
        (:offsets :hidden)
        (:port-display nil)
        (:channel-display :hidden)
        (:velocity-display :symbol)
        (:font-size 18)
        (:scale :scale-1/8)
        (:time-map
         (:list
          (:list -1000 0)
          (:list 0 7.5)
          (:list 250 10.916667)
          (:list 500 14.333334)
          (:list 750 17.75)
          (:list 1000 21.166666)
          (:list 1250 24.583333)
          (:list 1500 27.999999)
          (:list 1750 31.416665)
          (:list 2000 34.833332)
          (:list 2250 39.05)
          (:list 2500 42.466668)
          (:list 2750 45.883336)))
        (:staff :g))
       (:value
        (:object
         (:class voice)
         (:slots
          ((:onset 0)
           (:duration 2999)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:name "VOICE")
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:tree
            (:list
             1
             (:list
              (:list
               (:list 2 4)
               (:list
                (:list 1 (:list 1 1 1 1 1 1))
                (:list 1 (:list 1 1 1 1 1 1)))))))
           (:lmidic
            (:list
             (:list 6608)
             (:list 6168)
             (:list 6906)
             (:list 6000)
             (:list 6751)
             (:list 6906)
             (:list 6700)
             (:list 6700)
             (:list 7149)
             (:list 6092)
             (:list 6882)
             (:list 7149)))
           (:lonset
            (:list
             0
             250
             500
             750
             1000
             1250
             1500
             1750
             2000
             2250
             2500
             2750
             3000))
           (:ldur (:list 249))
           (:lvel
            (:list
             (:list 60)
             (:list 64)
             (:list 69)
             (:list 73)
             (:list 77)
             (:list 81)
             (:list 86)
             (:list 90)
             (:list 67)
             (:list 69)
             (:list 71)
             (:list 74)))
           (:loffset (:list 0))
           (:lchan (:list 1))
           (:lport (:list nil))
           (:llegato nil)
           (:tempo 40)))))
       (:id 11))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "diamante")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (500 676)) (:position (256 256)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 2")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output 2")
           (:x 304)
           (:y 609)
           (:w 107)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 99)
           (:y 50)
           (:w 73)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
           (:group-id nil)
           (:name "input 2")
           (:x 140)
           (:y 250)
           (:w 93)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "input 3") (:doc "")))
           (:group-id nil)
           (:name "input 3")
           (:x 132)
           (:y 382)
           (:w 93)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 4) (:name "input 4") (:doc "")))
           (:group-id nil)
           (:name "input 4")
           (:x 240)
           (:y 179)
           (:w 93)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :function)
           (:reference flat)
           (:group-id nil)
           (:name "flat")
           (:x 42)
           (:y 426)
           (:w 70)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:library "OM-JI")
           (:type :function)
           (:reference range-reduce)
           (:group-id nil)
           (:name "range-reduce")
           (:x 60)
           (:y 491)
           (:w 172)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NOTELIST")
             (:value (:list 4800 7200 6000))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "GRAVE")
             (:value 6000)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "AGUDA")
             (:value 7902)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:library "OM-JI")
           (:type :function)
           (:reference choose)
           (:group-id nil)
           (:name "choose")
           (:x 29)
           (:y 179)
           (:w 107)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NOTELIST")
             (:value (:list (:list 6000 6530) (:list 7203 5049)))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CHORD-N")
             (:value (:list 2 3 2))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :function)
           (:reference flat)
           (:group-id nil)
           (:name "flat")
           (:x 291)
           (:y 431)
           (:w 70)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :function)
           (:reference sort-list)
           (:group-id nil)
           (:name "sort-list")
           (:x 297)
           (:y 534)
           (:w 114)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:library "OM-JI")
           (:type :function)
           (:reference rt->mc)
           (:group-id nil)
           (:name "rt->mc")
           (:x 39)
           (:y 300)
           (:w 109)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "RATIO")
             (:value (:list 1 11/8 7/4))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "FUNDAMENTAL")
             (:value 6000)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 6 :in 1)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 10 :in 1)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 6 :in 2)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 7 :in 1)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 0 :in 0)))
          (:connection
           (:from (:box 10 :out 0))
           (:to (:box 5 :in 0))))))
       (:group-id nil)
       (:name "diamante")
       (:x 243/5)
       (:y 1192/5)
       (:w 200)
       (:h 66)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 3")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 4")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 2") (:reactive nil)))
       (:id 12))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "troca por notas das areas de afinação")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (1091 752)) (:position (192 192)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 5)
           (:y 5)
           (:w 73)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 194)
           (:y 593)
           (:w 107)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
           (:group-id nil)
           (:name "input 2")
           (:x 55)
           (:y 5)
           (:w 93)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 2) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 305)
           (:y 593)
           (:w 55)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 3))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 7")
           (:x 492)
           (:y 130)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 8)
           (:id 4))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 6")
           (:x 451)
           (:y 119)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 90)
           (:id 5))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 5")
           (:x 381)
           (:y 139)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 60)
           (:id 6))
          (:box
           (:type :function)
           (:reference interpolation)
           (:group-id nil)
           (:name "interpolation")
           (:x 394)
           (:y 204)
           (:w 163)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "BEGIN")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "END")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SAMPLES")
             (:value 5)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CURVE")
             (:value 0.0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :function)
           (:reference flat)
           (:group-id nil)
           (:name "flat")
           (:x 222)
           (:y 366)
           (:w 70)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 179)
           (:y 305)
           (:w 132)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :function)
           (:reference last)
           (:group-id nil)
           (:name "last")
           (:x 221)
           (:y 184)
           (:w 73)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :value)
           (:reference single-float)
           (:group-id nil)
           (:name "aux 4")
           (:x 659)
           (:y 229)
           (:w 43)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 0.33)
           (:id 11))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 2")
           (:x 617)
           (:y 225)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 9)
           (:id 12))
          (:box
           (:type :function)
           (:reference reverse)
           (:group-id nil)
           (:name "reverse")
           (:x 628)
           (:y 124)
           (:w 113)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:type :function)
           (:reference interpolation)
           (:group-id nil)
           (:name "interpolation")
           (:x 518)
           (:y 283)
           (:w 163)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "BEGIN")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "END")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SAMPLES")
             (:value 5)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CURVE")
             (:value 0.0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 14))
          (:box
           (:type :function)
           (:reference flat)
           (:group-id nil)
           (:name "flat")
           (:x 420)
           (:y 388)
           (:w 70)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :value)
           (:reference cons)
           (:group-id nil)
           (:name "aux 3")
           (:x 527)
           (:y 378)
           (:w 35)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value (:list 9))
           (:id 16))
          (:box
           (:type :object)
           (:reference chord-seq)
           (:group-id nil)
           (:name "CHORD-SEQ")
           (:x 165)
           (:y 447)
           (:w 502)
           (:h 87)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:showname t)
           (:show-markers t)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LMIDIC")
             (:value (:list 6000))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LONSET")
             (:value (:list 0 200))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LDUR")
             (:value (:list 250))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LVEL")
             (:value (:list 100))
             (:reactive nil))
            (:input
             (:type :key)
             (:name "loffset")
             (:value (:list 0))
             (:reactive nil))
            (:input
             (:type :key)
             (:name "lchan")
             (:value (:list 9))
             (:reactive nil))
            (:input
             (:type :key)
             (:name "llegato")
             (:value 0)
             (:reactive nil)))
           (:outputs
            (:output (:name "SELF") (:reactive nil))
            (:output (:name "LMIDIC") (:reactive nil))
            (:output (:name "LONSET") (:reactive nil))
            (:output (:name "LDUR") (:reactive nil))
            (:output (:name "LVEL") (:reactive nil))
            (:output (:name "loffset") (:reactive nil))
            (:output (:name "lchan") (:reactive nil))
            (:output (:name "llegato") (:reactive nil)))
           (:window (:size nil) (:position nil))
           (:edition-params (:staff :gf))
           (:value
            (:object
             (:class chord-seq)
             (:slots
              ((:onset 0)
               (:duration 9600)
               (:interpol
                (:number-or-nil (:number 50) (:t-or-nil nil)))
               (:name "CHORD-SEQ")
               (:symbolic-date nil)
               (:symbolic-dur nil)
               (:symbolic-dur-extent 0)
               (:extras nil)
               (:lmidic
                (:list
                 (:list 7700)
                 (:list 7092)
                 (:list 6500)
                 (:list 7700)
                 (:list 6794)
                 (:list 6949)
                 (:list 7092)
                 (:list 6794)
                 (:list 7092)
                 (:list 7092)
                 (:list 6908)
                 (:list 7544)
                 (:list 7092)
                 (:list 6704)
                 (:list 7092)
                 (:list 6908)
                 (:list 6908)
                 (:list 7544)
                 (:list 6949)
                 (:list 6704)
                 (:list 7544)
                 (:list 6794)
                 (:list 6908)
                 (:list 7544)
                 (:list 6908)
                 (:list 6704)
                 (:list 7544)
                 (:list 6704)
                 (:list 6908)
                 (:list 7544)
                 (:list 6794)
                 (:list 6548)
                 (:list 7544)
                 (:list 6548)
                 (:list 6908)
                 (:list 7544)
                 (:list 6794)
                 (:list 6548)
                 (:list 7700)
                 (:list 6548)
                 (:list 6908)
                 (:list 7700)
                 (:list 6704)
                 (:list 6548)
                 (:list 7700)
                 (:list 6500)
                 (:list 6908)
                 (:list 7700)))
               (:lonset
                (:list
                 0
                 200
                 400
                 600
                 800
                 1000
                 1200
                 1400
                 1600
                 1800
                 2000
                 2200
                 2400
                 2600
                 2800
                 3000
                 3200
                 3400
                 3600
                 3800
                 4000
                 4200
                 4400
                 4600
                 4800
                 5000
                 5200
                 5400
                 5600
                 5800
                 6000
                 6200
                 6400
                 6600
                 6800
                 7000
                 7200
                 7400
                 7600
                 7800
                 8000
                 8200
                 8400
                 8600
                 8800
                 9000
                 9200
                 9400
                 9600))
               (:ldur (:list 200))
               (:lvel (:list 100))
               (:loffset (:list 0))
               (:lchan (:list 3))
               (:lport (:list nil))
               (:llegato nil)))))
           (:id 17))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "interpolation")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size (500 500)) (:position (64 64)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output")
                 (:index 1)
                 (:doc nil)))
               (:group-id nil)
               (:name "output")
               (:x 235)
               (:y 543)
               (:w 88)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "conjunto de notas")
                 (:doc "")))
               (:group-id nil)
               (:name "conjunto de notas")
               (:x 303)
               (:y 152)
               (:w 203)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "perfil")
                 (:doc "")))
               (:group-id nil)
               (:name "perfil")
               (:x 38)
               (:y 147)
               (:w 72)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :abstraction)
               (:reference
                (:patch
                 (:name "nota-mais-próxima")
                 (:doc "")
                 (:info
                  (:created nil)
                  (:modified nil)
                  (:by *app-name*)
                  (:version 0))
                 (:window (:size nil) (:position nil))
                 (:grid nil)
                 (:lock nil)
                 (:boxes
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 1)
                     (:name "input")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input")
                   (:x 77)
                   (:y 45)
                   (:w 73)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 0))
                  (:box
                   (:type :io)
                   (:reference
                    (:out
                     (:type omout)
                     (:name "output 1")
                     (:index 1)
                     (:doc "")))
                   (:group-id nil)
                   (:name "output 1")
                   (:x 310)
                   (:y 409)
                   (:w 107)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "out-value")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 1))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 2)
                     (:name "input 2")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input 2")
                   (:x 299)
                   (:y 41)
                   (:w 93)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 2))
                  (:box
                   (:type :abstraction)
                   (:reference
                    (:textfun
                     (:name "lispfunction 2")
                     (:doc "")
                     (:info
                      (:created nil)
                      (:modified nil)
                      (:by *app-name*)
                      (:version 0))
                     (:window (:size nil) (:position nil))
                     (:text
                      (:list
                       "(lambda (lista-n)"
                       ""
                       "(loop for x in lista-n collect (loop for y in x collect (abs y))))"))))
                   (:group-id nil)
                   (:name "lispfunction")
                   (:x 311)
                   (:y 321)
                   (:w 172)
                   (:h 48)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:display :mini-view)
                   (:lock nil)
                   (:lambda nil)
                   (:pre-delay 0)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "LISTA-N")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 3))
                  (:box
                   (:type :special)
                   (:reference collect)
                   (:group-id nil)
                   (:name "collect")
                   (:x 208)
                   (:y 306)
                   (:w 84)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.7 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "data-in")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "push")
                     (:value t)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "init")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs
                    (:output (:name "collect") (:reactive nil))
                    (:output (:name "data-out") (:reactive nil))
                    (:output (:name "init") (:reactive nil)))
                   (:id 4))
                  (:box
                   (:type :abstraction)
                   (:reference
                    (:patch
                     (:name "OMLOOP")
                     (:doc "")
                     (:info
                      (:created nil)
                      (:modified nil)
                      (:by *app-name*)
                      (:version 0))
                     (:window (:size nil) (:position nil))
                     (:grid nil)
                     (:lock nil)
                     (:boxes
                      (:box
                       (:type :io)
                       (:reference
                        (:in
                         (:type omin)
                         (:index 1)
                         (:name "input")
                         (:doc "")))
                       (:group-id nil)
                       (:name "input")
                       (:x 29)
                       (:y 19)
                       (:w 73)
                       (:h 42)
                       (:color
                        (:color-or-nil
                         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                         (:t-or-nil t)))
                       (:border 0)
                       (:roundness 0)
                       (:text-font nil)
                       (:align :center)
                       (:icon :top)
                       (:inputs)
                       (:outputs
                        (:output (:name "out") (:reactive nil)))
                       (:id 0))
                      (:box
                       (:type :io)
                       (:reference
                        (:out
                         (:type omout)
                         (:name "output 1")
                         (:index 1)
                         (:doc "")))
                       (:group-id nil)
                       (:name "output 1")
                       (:x 256)
                       (:y 424)
                       (:w 107)
                       (:h 42)
                       (:color
                        (:color-or-nil
                         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                         (:t-or-nil t)))
                       (:border 0)
                       (:roundness 0)
                       (:text-font nil)
                       (:align :center)
                       (:icon :top)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "out-value")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs)
                       (:id 1))
                      (:box
                       (:type :io)
                       (:reference
                        (:in
                         (:type omin)
                         (:index 2)
                         (:name "input 2")
                         (:doc "")))
                       (:group-id nil)
                       (:name "input 2")
                       (:x 281)
                       (:y 18)
                       (:w 93)
                       (:h 42)
                       (:color
                        (:color-or-nil
                         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                         (:t-or-nil t)))
                       (:border 0)
                       (:roundness 0)
                       (:text-font nil)
                       (:align :center)
                       (:icon :top)
                       (:inputs)
                       (:outputs
                        (:output (:name "out") (:reactive nil)))
                       (:id 2))
                      (:box
                       (:type :special)
                       (:reference collect)
                       (:group-id nil)
                       (:name "collect")
                       (:x 194)
                       (:y 269)
                       (:w 84)
                       (:h 42)
                       (:color
                        (:color-or-nil
                         (:color (:color 0.82 0.7 0.7 1.0))
                         (:t-or-nil t)))
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align :center)
                       (:icon :top)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "data-in")
                         (:value nil)
                         (:reactive nil))
                        (:input
                         (:type :standard)
                         (:name "push")
                         (:value t)
                         (:reactive nil))
                        (:input
                         (:type :standard)
                         (:name "init")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs
                        (:output (:name "collect") (:reactive nil))
                        (:output (:name "data-out") (:reactive nil))
                        (:output (:name "init") (:reactive nil)))
                       (:id 3))
                      (:box
                       (:type :function)
                       (:reference om-)
                       (:group-id nil)
                       (:name "om-")
                       (:x 142)
                       (:y 195)
                       (:w 78)
                       (:h 41)
                       (:color nil)
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align nil)
                       (:icon :left)
                       (:lock nil)
                       (:lambda nil)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "ARG1")
                         (:value 0)
                         (:reactive nil))
                        (:input
                         (:type :standard)
                         (:name "ARG2")
                         (:value 0)
                         (:reactive nil)))
                       (:outputs
                        (:output (:name "out") (:reactive nil)))
                       (:id 4))
                      (:box
                       (:type :special)
                       (:reference iterate)
                       (:group-id nil)
                       (:name "iterate")
                       (:x 128)
                       (:y 420)
                       (:w 88)
                       (:h 42)
                       (:color
                        (:color-or-nil
                         (:color (:color 0.82 0.85 0.7 1.0))
                         (:t-or-nil t)))
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align :center)
                       (:icon :top)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "action")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs)
                       (:id 5))
                      (:box
                       (:type :special)
                       (:reference loop-list)
                       (:group-id nil)
                       (:name "list-loop")
                       (:x 32)
                       (:y 107)
                       (:w 101)
                       (:h 42)
                       (:color
                        (:color-or-nil
                         (:color (:color 0.82 0.85 0.7 1.0))
                         (:t-or-nil t)))
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align :center)
                       (:icon :top)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "list")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs (:output (:name "i") (:reactive nil)))
                       (:id 6)))
                     (:connections
                      (:connection
                       (:from (:box 0 :out 0))
                       (:to (:box 6 :in 0)))
                      (:connection
                       (:from (:box 2 :out 0))
                       (:to (:box 4 :in 1)))
                      (:connection
                       (:from (:box 3 :out 0))
                       (:to (:box 5 :in 0)))
                      (:connection
                       (:from (:box 3 :out 1))
                       (:to (:box 1 :in 0)))
                      (:connection
                       (:from (:box 4 :out 0))
                       (:to (:box 3 :in 0)))
                      (:connection
                       (:from (:box 6 :out 0))
                       (:to (:box 4 :in 0))))))
                   (:group-id nil)
                   (:name "OMLOOP")
                   (:x 109)
                   (:y 156)
                   (:w 125)
                   (:h 58)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:display :mini-view)
                   (:lock nil)
                   (:lambda nil)
                   (:pre-delay 0)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "input")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "input 2")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs
                    (:output (:name "output 1") (:reactive nil)))
                   (:id 5))
                  (:box
                   (:type :special)
                   (:reference iterate)
                   (:group-id nil)
                   (:name "iterate")
                   (:x 173)
                   (:y 402)
                   (:w 88)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.85 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "action")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 6))
                  (:box
                   (:type :special)
                   (:reference loop-list)
                   (:group-id nil)
                   (:name "list-loop")
                   (:x 297)
                   (:y 122)
                   (:w 101)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.85 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "list")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "i") (:reactive nil)))
                   (:id 7)))
                 (:connections
                  (:connection
                   (:from (:box 0 :out 0))
                   (:to (:box 5 :in 0)))
                  (:connection
                   (:from (:box 2 :out 0))
                   (:to (:box 7 :in 0)))
                  (:connection
                   (:from (:box 3 :out 0))
                   (:to (:box 1 :in 0)))
                  (:connection
                   (:from (:box 4 :out 0))
                   (:to (:box 6 :in 0)))
                  (:connection
                   (:from (:box 4 :out 1))
                   (:to (:box 3 :in 0)))
                  (:connection
                   (:from (:box 5 :out 0))
                   (:to (:box 4 :in 0)))
                  (:connection
                   (:from (:box 7 :out 0))
                   (:to (:box 5 :in 1))))))
               (:group-id nil)
               (:name "nota-mais-próxima")
               (:x 258)
               (:y 270)
               (:w 229)
               (:h 48)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:lock nil)
               (:lambda nil)
               (:pre-delay 0)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "input")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "input 2")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "output 1") (:reactive nil)))
               (:id 3))
              (:box
               (:type :abstraction)
               (:reference
                (:patch
                 (:name "subtituicao")
                 (:doc "")
                 (:info
                  (:created nil)
                  (:modified nil)
                  (:by *app-name*)
                  (:version 0))
                 (:window (:size nil) (:position nil))
                 (:grid nil)
                 (:lock nil)
                 (:boxes
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 1)
                     (:name "input")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input")
                   (:x 38)
                   (:y 31)
                   (:w 73)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 0))
                  (:box
                   (:type :io)
                   (:reference
                    (:out
                     (:type omout)
                     (:name "output 1")
                     (:index 1)
                     (:doc "")))
                   (:group-id nil)
                   (:name "output 1")
                   (:x 417)
                   (:y 510)
                   (:w 107)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "out-value")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 1))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 2)
                     (:name "input 2")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input 2")
                   (:x 292)
                   (:y 19)
                   (:w 93)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 2))
                  (:box
                   (:type :value)
                   (:reference fixnum)
                   (:group-id nil)
                   (:name "aux 2")
                   (:x 137)
                   (:y 316)
                   (:w 32)
                   (:h 41)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:lock nil)
                   (:inputs)
                   (:outputs (:output (:name "value") (:reactive nil)))
                   (:value 1)
                   (:id 3))
                  (:box
                   (:type :function)
                   (:reference om/=)
                   (:group-id nil)
                   (:name "om/=")
                   (:x 99)
                   (:y 346)
                   (:w 94)
                   (:h 41)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "NUM1")
                     (:value 0)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "NUM2")
                     (:value 0)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 4))
                  (:box
                   (:type :function)
                   (:reference flat)
                   (:group-id nil)
                   (:name "flat")
                   (:x 135)
                   (:y 205)
                   (:w 70)
                   (:h 41)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "LST")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 5))
                  (:box
                   (:type :function)
                   (:reference length)
                   (:group-id nil)
                   (:name "length")
                   (:x 20)
                   (:y 299)
                   (:w 100)
                   (:h 41)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "SEQUENCE")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 6))
                  (:box
                   (:type :special)
                   (:reference if)
                   (:group-id nil)
                   (:name "IF")
                   (:x 301)
                   (:y 389)
                   (:w 62)
                   (:h 41)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "TEST")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "THEN")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :optional)
                     (:name "else")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 7))
                  (:box
                   (:type :function)
                   (:reference nth-random)
                   (:group-id nil)
                   (:name "nth-random")
                   (:x 201)
                   (:y 301)
                   (:w 157)
                   (:h 41)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "LIST")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 8))
                  (:box
                   (:type :function)
                   (:reference list)
                   (:group-id nil)
                   (:name "list")
                   (:x 44)
                   (:y 188)
                   (:w 66)
                   (:h 41)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :optional)
                     (:name "args")
                     (:value 1)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 9))
                  (:box
                   (:type :function)
                   (:reference flat)
                   (:group-id nil)
                   (:name "flat")
                   (:x 507)
                   (:y 414)
                   (:w 70)
                   (:h 41)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "LST")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 10))
                  (:box
                   (:type :special)
                   (:reference collect)
                   (:group-id nil)
                   (:name "collect")
                   (:x 359)
                   (:y 399)
                   (:w 84)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.7 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "data-in")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "push")
                     (:value t)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "init")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs
                    (:output (:name "collect") (:reactive nil))
                    (:output (:name "data-out") (:reactive nil))
                    (:output (:name "init") (:reactive nil)))
                   (:id 11))
                  (:box
                   (:type :abstraction)
                   (:reference
                    (:patch
                     (:name "OMLOOP")
                     (:doc "")
                     (:info
                      (:created nil)
                      (:modified nil)
                      (:by *app-name*)
                      (:version 0))
                     (:window (:size nil) (:position nil))
                     (:grid nil)
                     (:lock nil)
                     (:boxes
                      (:box
                       (:type :io)
                       (:reference
                        (:in
                         (:type omin)
                         (:index 1)
                         (:name "input")
                         (:doc "")))
                       (:group-id nil)
                       (:name "input")
                       (:x 26)
                       (:y 8)
                       (:w 73)
                       (:h 42)
                       (:color
                        (:color-or-nil
                         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                         (:t-or-nil t)))
                       (:border 0)
                       (:roundness 0)
                       (:text-font nil)
                       (:align :center)
                       (:icon :top)
                       (:inputs)
                       (:outputs
                        (:output (:name "out") (:reactive nil)))
                       (:id 0))
                      (:box
                       (:type :io)
                       (:reference
                        (:out
                         (:type omout)
                         (:name "output 1")
                         (:index 1)
                         (:doc "")))
                       (:group-id nil)
                       (:name "output 1")
                       (:x 505)
                       (:y 537)
                       (:w 107)
                       (:h 42)
                       (:color
                        (:color-or-nil
                         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                         (:t-or-nil t)))
                       (:border 0)
                       (:roundness 0)
                       (:text-font nil)
                       (:align :center)
                       (:icon :top)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "out-value")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs)
                       (:id 1))
                      (:box
                       (:type :io)
                       (:reference
                        (:in
                         (:type omin)
                         (:index 2)
                         (:name "input 2")
                         (:doc "")))
                       (:group-id nil)
                       (:name "input 2")
                       (:x 182)
                       (:y 4)
                       (:w 93)
                       (:h 42)
                       (:color
                        (:color-or-nil
                         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                         (:t-or-nil t)))
                       (:border 0)
                       (:roundness 0)
                       (:text-font nil)
                       (:align :center)
                       (:icon :top)
                       (:inputs)
                       (:outputs
                        (:output (:name "out") (:reactive nil)))
                       (:id 2))
                      (:box
                       (:type :function)
                       (:reference remove)
                       (:group-id nil)
                       (:name "remove")
                       (:x 519)
                       (:y 473)
                       (:w 114)
                       (:h 41)
                       (:color nil)
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align nil)
                       (:icon :left)
                       (:lock nil)
                       (:lambda nil)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "ITEM")
                         (:value nil)
                         (:reactive nil))
                        (:input
                         (:type :standard)
                         (:name "SEQUENCE")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs
                        (:output (:name "out") (:reactive nil)))
                       (:id 3))
                      (:box
                       (:type :special)
                       (:reference collect)
                       (:group-id nil)
                       (:name "collect")
                       (:x 433)
                       (:y 419)
                       (:w 84)
                       (:h 42)
                       (:color
                        (:color-or-nil
                         (:color (:color 0.82 0.7 0.7 1.0))
                         (:t-or-nil t)))
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align :center)
                       (:icon :top)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "data-in")
                         (:value nil)
                         (:reactive nil))
                        (:input
                         (:type :standard)
                         (:name "push")
                         (:value t)
                         (:reactive nil))
                        (:input
                         (:type :standard)
                         (:name "init")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs
                        (:output (:name "collect") (:reactive nil))
                        (:output (:name "data-out") (:reactive nil))
                        (:output (:name "init") (:reactive nil)))
                       (:id 4))
                      (:box
                       (:type :special)
                       (:reference if)
                       (:group-id nil)
                       (:name "IF")
                       (:x 176)
                       (:y 310)
                       (:w 89)
                       (:h 41)
                       (:color nil)
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align nil)
                       (:icon :left)
                       (:lock nil)
                       (:lambda nil)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "TEST")
                         (:value nil)
                         (:reactive nil))
                        (:input
                         (:type :standard)
                         (:name "THEN")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs
                        (:output (:name "out") (:reactive nil)))
                       (:id 5))
                      (:box
                       (:type :function)
                       (:reference om=)
                       (:group-id nil)
                       (:name "om=")
                       (:x 233)
                       (:y 245)
                       (:w 85)
                       (:h 41)
                       (:color nil)
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align nil)
                       (:icon :left)
                       (:lock nil)
                       (:lambda nil)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "NUM1")
                         (:value 0)
                         (:reactive nil))
                        (:input
                         (:type :standard)
                         (:name "NUM2")
                         (:value 0)
                         (:reactive nil)))
                       (:outputs
                        (:output (:name "out") (:reactive nil)))
                       (:id 6))
                      (:box
                       (:library "OM-JI")
                       (:type :function)
                       (:reference choose)
                       (:group-id nil)
                       (:name "choose")
                       (:x 305)
                       (:y 145)
                       (:w 107)
                       (:h 41)
                       (:color nil)
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align nil)
                       (:icon :left)
                       (:lock nil)
                       (:lambda nil)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "NOTELIST")
                         (:value
                          (:list (:list 6000 6530) (:list 7203 5049)))
                         (:reactive nil))
                        (:input
                         (:type :standard)
                         (:name "CHORD-N")
                         (:value (:list 2))
                         (:reactive nil)))
                       (:outputs
                        (:output (:name "out") (:reactive nil)))
                       (:id 7))
                      (:box
                       (:type :abstraction)
                       (:reference
                        (:textfun
                         (:name "lispfunction")
                         (:doc "")
                         (:info
                          (:created nil)
                          (:modified nil)
                          (:by *app-name*)
                          (:version 0))
                         (:window (:size nil) (:position nil))
                         (:text
                          (:list
                           "(lambda (lista)"
                           "  (apply 'min lista))"))))
                       (:group-id nil)
                       (:name "lispfunction")
                       (:x 204)
                       (:y 117)
                       (:w 152)
                       (:h 48)
                       (:color nil)
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align :center)
                       (:display :mini-view)
                       (:lock nil)
                       (:lambda nil)
                       (:pre-delay 0)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "LISTA")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs
                        (:output (:name "out") (:reactive nil)))
                       (:id 8))
                      (:box
                       (:type :function)
                       (:reference arithm-ser)
                       (:group-id nil)
                       (:name "arithm-ser")
                       (:x 489)
                       (:y 195)
                       (:w 144)
                       (:h 41)
                       (:color nil)
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align nil)
                       (:icon :left)
                       (:lock nil)
                       (:lambda nil)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "BEGIN")
                         (:value 1)
                         (:reactive nil))
                        (:input
                         (:type :standard)
                         (:name "END")
                         (:value t)
                         (:reactive nil))
                        (:input
                         (:type :standard)
                         (:name "STEP")
                         (:value 1)
                         (:reactive nil)))
                       (:outputs
                        (:output (:name "out") (:reactive nil)))
                       (:id 9))
                      (:box
                       (:type :function)
                       (:reference length)
                       (:group-id nil)
                       (:name "length")
                       (:x 465)
                       (:y 97)
                       (:w 100)
                       (:h 41)
                       (:color nil)
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align nil)
                       (:icon :left)
                       (:lock nil)
                       (:lambda nil)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "SEQUENCE")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs
                        (:output (:name "out") (:reactive nil)))
                       (:id 10))
                      (:box
                       (:library "OM-JI")
                       (:type :function)
                       (:reference choose)
                       (:group-id nil)
                       (:name "choose")
                       (:x 42)
                       (:y 209)
                       (:w 124)
                       (:h 41)
                       (:color nil)
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align nil)
                       (:icon :left)
                       (:lock nil)
                       (:lambda nil)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "NOTELIST")
                         (:value
                          (:list (:list 6000 6530) (:list 7203 5049)))
                         (:reactive nil))
                        (:input
                         (:type :standard)
                         (:name "CHORD-N")
                         (:value (:list 2))
                         (:reactive nil)))
                       (:outputs
                        (:output (:name "out") (:reactive nil)))
                       (:id 11))
                      (:box
                       (:type :special)
                       (:reference iterate)
                       (:group-id nil)
                       (:name "iterate")
                       (:x 400)
                       (:y 536)
                       (:w 88)
                       (:h 42)
                       (:color
                        (:color-or-nil
                         (:color (:color 0.82 0.85 0.7 1.0))
                         (:t-or-nil t)))
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align :center)
                       (:icon :top)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "action")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs)
                       (:id 12))
                      (:box
                       (:type :special)
                       (:reference loop-list)
                       (:group-id nil)
                       (:name "list-loop")
                       (:x 442)
                       (:y 264)
                       (:w 101)
                       (:h 42)
                       (:color
                        (:color-or-nil
                         (:color (:color 0.82 0.85 0.7 1.0))
                         (:t-or-nil t)))
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align :center)
                       (:icon :top)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "list")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs (:output (:name "i") (:reactive nil)))
                       (:id 13)))
                     (:connections
                      (:connection
                       (:from (:box 0 :out 0))
                       (:to (:box 11 :in 0)))
                      (:connection
                       (:from (:box 2 :out 0))
                       (:to (:box 7 :in 0)))
                      (:connection
                       (:from (:box 2 :out 0))
                       (:to (:box 8 :in 0)))
                      (:connection
                       (:from (:box 2 :out 0))
                       (:to (:box 10 :in 0)))
                      (:connection
                       (:from (:box 3 :out 0))
                       (:to (:box 1 :in 0)))
                      (:connection
                       (:from (:box 4 :out 0))
                       (:to (:box 12 :in 0)))
                      (:connection
                       (:from (:box 4 :out 1))
                       (:to (:box 3 :in 1)))
                      (:connection
                       (:from (:box 5 :out 0))
                       (:to (:box 4 :in 0)))
                      (:connection
                       (:from (:box 6 :out 0))
                       (:to (:box 5 :in 0)))
                      (:connection
                       (:from (:box 7 :out 0))
                       (:to (:box 6 :in 1)))
                      (:connection
                       (:from (:box 8 :out 0))
                       (:to (:box 6 :in 0)))
                      (:connection
                       (:from (:box 9 :out 0))
                       (:to (:box 13 :in 0)))
                      (:connection
                       (:from (:box 10 :out 0))
                       (:to (:box 9 :in 1)))
                      (:connection
                       (:from (:box 11 :out 0))
                       (:to (:box 5 :in 1)))
                      (:connection
                       (:from (:box 13 :out 0))
                       (:to (:box 7 :in 1)))
                      (:connection
                       (:from (:box 13 :out 0))
                       (:to (:box 11 :in 1))))))
                   (:group-id nil)
                   (:name "OMLOOP")
                   (:x 150)
                   (:y 119)
                   (:w 125)
                   (:h 48)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:display :mini-view)
                   (:lock nil)
                   (:lambda nil)
                   (:pre-delay 0)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "input")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "input 2")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs
                    (:output (:name "output 1") (:reactive nil)))
                   (:id 12))
                  (:box
                   (:type :special)
                   (:reference iterate)
                   (:group-id nil)
                   (:name "iterate")
                   (:x 308)
                   (:y 496)
                   (:w 88)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.85 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "action")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 13))
                  (:box
                   (:type :special)
                   (:reference loop-list)
                   (:group-id nil)
                   (:name "list-loop")
                   (:x 290)
                   (:y 105)
                   (:w 101)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.85 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "list")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "i") (:reactive nil)))
                   (:id 14)))
                 (:connections
                  (:connection
                   (:from (:box 0 :out 0))
                   (:to (:box 12 :in 0)))
                  (:connection
                   (:from (:box 2 :out 0))
                   (:to (:box 14 :in 0)))
                  (:connection
                   (:from (:box 3 :out 0))
                   (:to (:box 4 :in 1)))
                  (:connection
                   (:from (:box 4 :out 0))
                   (:to (:box 7 :in 0)))
                  (:connection
                   (:from (:box 5 :out 0))
                   (:to (:box 6 :in 0)))
                  (:connection
                   (:from (:box 5 :out 0))
                   (:to (:box 8 :in 0)))
                  (:connection
                   (:from (:box 6 :out 0))
                   (:to (:box 4 :in 0)))
                  (:connection
                   (:from (:box 7 :out 0))
                   (:to (:box 11 :in 0)))
                  (:connection
                   (:from (:box 8 :out 0))
                   (:to (:box 7 :in 1)))
                  (:connection
                   (:from (:box 9 :out 0))
                   (:to (:box 5 :in 0)))
                  (:connection
                   (:from (:box 10 :out 0))
                   (:to (:box 1 :in 0)))
                  (:connection
                   (:from (:box 11 :out 0))
                   (:to (:box 13 :in 0)))
                  (:connection
                   (:from (:box 11 :out 1))
                   (:to (:box 10 :in 0)))
                  (:connection
                   (:from (:box 12 :out 0))
                   (:to (:box 7 :in 2)))
                  (:connection
                   (:from (:box 12 :out 0))
                   (:to (:box 9 :in 0)))
                  (:connection
                   (:from (:box 14 :out 0))
                   (:to (:box 12 :in 1))))))
               (:group-id nil)
               (:name "subtituicao")
               (:x 236)
               (:y 377)
               (:w 147)
               (:h 48)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:lock nil)
               (:lambda nil)
               (:pre-delay 0)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "input")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "input 2")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "output 1") (:reactive nil)))
               (:id 4)))
             (:connections
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 3 :in 1)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 3 :in 0)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 4 :in 1)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 0 :in 0))))))
           (:group-id nil)
           (:name "interpolation")
           (:x 57)
           (:y 556/3)
           (:w 163)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "conjunto de notas")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "perfil")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output") (:reactive nil)))
           (:id 18))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 83)
           (:y 358)
           (:w 84)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 19))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 37)
           (:y 508)
           (:w 88)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 20))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 165)
           (:y 29)
           (:w 101)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 21)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 18 :in 1)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 21 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 7 :in 2)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 1)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 13 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 14 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 17 :in 1)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 1)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 2)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 3)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 14 :in 3)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 14 :in 2)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 14 :in 1)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 15 :in 0)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 17 :in 4)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 17 :in 6)))
          (:connection (:from (:box 17 :out 1)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 17 :out 4)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 19 :in 0)))
          (:connection (:from (:box 19 :out 0)) (:to (:box 20 :in 0)))
          (:connection (:from (:box 19 :out 1)) (:to (:box 9 :in 0)))
          (:connection
           (:from (:box 21 :out 0))
           (:to (:box 18 :in 0))))))
       (:group-id nil)
       (:name "troca por notas das areas de afinação")
       (:x 97)
       (:y 698)
       (:w 418)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 2")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "output 1") (:reactive nil))
        (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 278)
       (:y 540)
       (:w 70)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 70)
       (:y 505)
       (:w 132)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 9")
       (:x 488)
       (:y 588)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 0)
       (:id 16))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 8")
       (:x 431)
       (:y 588)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2)
       (:id 17))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 756)
       (:y 541)
       (:w 70)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18))
      (:box
       (:type :function)
       (:reference interpolation)
       (:group-id nil)
       (:name "interpolation")
       (:x 287)
       (:y 651)
       (:w 245)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "BEGIN")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "END")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SAMPLES")
         (:value 5)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CURVE")
         (:value 0.0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference choose)
       (:group-id nil)
       (:name "choose")
       (:x 913)
       (:y 311)
       (:w 107)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list (:list 6000 6530) (:list 7203 5049)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CHORD-N")
         (:value (:list 2 3 2))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 20))
      (:box
       (:type :object)
       (:reference chord-seq)
       (:group-id nil)
       (:name "CHORD-SEQ 2")
       (:x 725)
       (:y 423)
       (:w 339)
       (:h 90)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LONSET")
         (:value (:list 0 1000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LDUR")
         (:value (:list 1000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LVEL")
         (:value (:list 100))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "loffset")
         (:value (:list 0))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "lchan")
         (:value (:list 9))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "llegato")
         (:value 0)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "LONSET") (:reactive nil))
        (:output (:name "LDUR") (:reactive nil))
        (:output (:name "LVEL") (:reactive nil))
        (:output (:name "loffset") (:reactive nil))
        (:output (:name "lchan") (:reactive nil))
        (:output (:name "llegato") (:reactive nil)))
       (:window (:size (650 300)) (:position (160 160)))
       (:edition-params (:scale :scale-1/8) (:staff :g))
       (:value
        (:object
         (:class chord-seq)
         (:slots
          ((:onset 0)
           (:duration 6000)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:name "CHORD-SEQ")
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:lmidic
            (:list
             (:list 6700)
             (:list 6700)
             (:list 7149)
             (:list 6092)
             (:list 6882)
             (:list 7149)))
           (:lonset (:list 0 1000 2000 3000 4000 5000 6000))
           (:ldur (:list 1000))
           (:lvel (:list 100))
           (:loffset (:list 0))
           (:lchan (:list 9))
           (:lport (:list nil))
           (:llegato nil)))))
       (:id 21))
      (:box
       (:type :object)
       (:reference bpf)
       (:group-id nil)
       (:name "BPF 2")
       (:x 643)
       (:y 191)
       (:w 294)
       (:h 102)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "X-POINTS")
         (:value (:list 0 100))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y-POINTS")
         (:value (:list 0 100))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "decimals")
         (:value 0)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "X-POINTS") (:reactive nil))
        (:output (:name "Y-POINTS") (:reactive nil))
        (:output (:name "decimals") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class bpf)
         (:slots
          ((:onset 0)
           (:duration 500)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:action nil)
           (:color (:color 0.0S0 0.0S0 0.0S0 1.0))
           (:decimals 0)
           (:x-points (:list 0 100 200 300 400 500))
           (:y-points (:list 3 3 7 1 5 7))))
         (:add-slots ((:name "BPF")))))
       (:id 22))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 7")
       (:x 156)
       (:y 194)
       (:w 62)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 7200)
       (:id 23))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 4")
       (:x 94)
       (:y 195)
       (:w 62)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6000)
       (:id 24))
      (:box
       (:type :object)
       (:reference chord-seq)
       (:group-id nil)
       (:name "CHORD-SEQ")
       (:x 416)
       (:y 424)
       (:w 302)
       (:h 88)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LONSET")
         (:value (:list 0 1000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LDUR")
         (:value (:list 1000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LVEL")
         (:value (:list 100))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "loffset")
         (:value (:list 0))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "lchan")
         (:value (:list 9))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "llegato")
         (:value 0)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "LONSET") (:reactive nil))
        (:output (:name "LDUR") (:reactive nil))
        (:output (:name "LVEL") (:reactive nil))
        (:output (:name "loffset") (:reactive nil))
        (:output (:name "lchan") (:reactive nil))
        (:output (:name "llegato") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params (:scale :scale-1/8) (:staff :g))
       (:value
        (:object
         (:class chord-seq)
         (:slots
          ((:onset 0)
           (:duration 6000)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:name "CHORD-SEQ")
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:lmidic
            (:list
             (:list 6608)
             (:list 6168)
             (:list 6906)
             (:list 6000)
             (:list 6751)
             (:list 6906)))
           (:lonset (:list 0 1000 2000 3000 4000 5000 6000))
           (:ldur (:list 1000))
           (:lvel (:list 100))
           (:loffset (:list 0))
           (:lchan (:list 9))
           (:lport (:list nil))
           (:llegato nil)))))
       (:id 25))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference choose)
       (:group-id nil)
       (:name "choose")
       (:x 248)
       (:y 334)
       (:w 107)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list (:list 6000 6530) (:list 7203 5049)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CHORD-N")
         (:value (:list 2 3 2))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 26))
      (:box
       (:type :object)
       (:reference bpf)
       (:group-id nil)
       (:name "BPF")
       (:x 348)
       (:y 192)
       (:w 290)
       (:h 102)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "X-POINTS")
         (:value (:list 0 100))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Y-POINTS")
         (:value (:list 0 100))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "decimals")
         (:value 0)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "X-POINTS") (:reactive nil))
        (:output (:name "Y-POINTS") (:reactive nil))
        (:output (:name "decimals") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class bpf)
         (:slots
          ((:onset 0)
           (:duration 500)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:action nil)
           (:color (:color 0.0S0 0.0S0 0.0S0 1.0))
           (:decimals 0)
           (:x-points (:list 0 100 200 300 400 500))
           (:y-points (:list 3 2 5 1 4 5))))
         (:add-slots ((:name "BPF")))))
       (:id 27))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux")
       (:x 219)
       (:y 195)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6)
       (:id 28))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference diamond-identity)
       (:group-id nil)
       (:name "diamond-identity")
       (:x 58)
       (:y 126)
       (:w 209)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "IDENTITY")
         (:value (:list 11 19 97))
         (:reactive nil)))
       (:outputs
        (:output (:name "out0") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 29))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "sieve")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (1289 623)) (:position (160 160)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 2")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output 2")
           (:x 186)
           (:y 429)
           (:w 107)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 2) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 490)
           (:y 478)
           (:w 55)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :value)
           (:reference cons)
           (:group-id nil)
           (:name "value box")
           (:x 84)
           (:y 83)
           (:w 229)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :left)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value (:list (:list 19 16 64) (:list 11 16 64)))
           (:id 2))
          (:box
           (:library "OM-Sieves")
           (:type :function)
           (:reference s-union-l)
           (:group-id nil)
           (:name "s-union-l")
           (:x 86)
           (:y 214)
           (:w 127)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIEVE")
             (:value (:list (:list 19 16 64) (:list 11 16 64)))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:library "OM-Sieves")
           (:type :function)
           (:reference revel-sieve)
           (:group-id nil)
           (:name "revel-sieve")
           (:x 107)
           (:y 296)
           (:w 148)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:library "OM-Sieves")
           (:type :function)
           (:reference s-perfil)
           (:group-id nil)
           (:name "s-perfil")
           (:x 432)
           (:y 214)
           (:w 108)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SIEVE")
             (:value (:list 23 33 47 63 70))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5)))
         (:connections
          (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 1 :in 0))))))
       (:group-id nil)
       (:name "sieve")
       (:x 91)
       (:y 16)
       (:w 89)
       (:h 66)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs)
       (:outputs
        (:output (:name "output 2") (:reactive nil))
        (:output (:name "out") (:reactive nil)))
       (:id 30))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "play | stop")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (1329 693)) (:position (256 256)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 297)
           (:y 642)
           (:w 88)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 43)
           (:y 12)
           (:w 73)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 2) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 604)
           (:y 599)
           (:w 55)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 2))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 3")
           (:x 635)
           (:y 167)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 3))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "omloop")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size (1432 813)) (:position (32 32)))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input")
                 (:doc "")))
               (:group-id nil)
               (:name "input")
               (:x 13)
               (:y 4)
               (:w 73)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 329)
               (:y 547)
               (:w 107)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "chord")
                 (:doc "")))
               (:group-id nil)
               (:name "chord")
               (:x 526)
               (:y 13)
               (:w 77)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "dinamic")
                 (:doc "")))
               (:group-id nil)
               (:name "dinamic")
               (:x 576)
               (:y 12)
               (:w 99)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "channel")
                 (:doc "")))
               (:group-id nil)
               (:name "channel")
               (:x 695)
               (:y 15)
               (:w 99)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 5)
                 (:name "tempo")
                 (:doc "")))
               (:group-id nil)
               (:name "tempo")
               (:x 314)
               (:y 66)
               (:w 86)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 6)
                 (:name "input 2")
                 (:doc "")))
               (:group-id nil)
               (:name "input 2")
               (:x 883)
               (:y -4)
               (:w 93)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:library "OM-JI")
               (:type :function)
               (:reference choose)
               (:group-id nil)
               (:name "choose")
               (:x 617)
               (:y 131)
               (:w 107)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NOTELIST")
                 (:value (:list (:list 6000 6530) (:list 7203 5049)))
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "CHORD-N")
                 (:value (:list 2 3 2))
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 7))
              (:box
               (:library "OM-JI")
               (:type :function)
               (:reference choose)
               (:group-id nil)
               (:name "choose")
               (:x 567)
               (:y 130)
               (:w 107)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NOTELIST")
                 (:value (:list (:list 6000 6530) (:list 7203 5049)))
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "CHORD-N")
                 (:value (:list 2 3 2))
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 8))
              (:box
               (:library "OM-JI")
               (:type :function)
               (:reference choose)
               (:group-id nil)
               (:name "choose")
               (:x 502)
               (:y 123)
               (:w 107)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NOTELIST")
                 (:value (:list (:list 6000 6530) (:list 7203 5049)))
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "CHORD-N")
                 (:value (:list 2 3 2))
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 9))
              (:box
               (:type :special)
               (:reference if)
               (:group-id nil)
               (:name "IF")
               (:x 252)
               (:y 159)
               (:w 62)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "TEST")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "THEN")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 10))
              (:box
               (:type :function)
               (:reference remove)
               (:group-id nil)
               (:name "remove")
               (:x 316)
               (:y 503)
               (:w 114)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ITEM")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "SEQUENCE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 11))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "aux 3")
               (:x 473)
               (:y 302)
               (:w 32)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value ",")
               (:id 12))
              (:box
               (:type :function)
               (:reference x-append)
               (:group-id nil)
               (:name "x-append")
               (:x 456)
               (:y 418)
               (:w 132)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "L1?")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "L2?")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "lst?")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 13))
              (:box
               (:type :special)
               (:reference if)
               (:group-id nil)
               (:name "IF")
               (:x 96)
               (:y 158)
               (:w 62)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "TEST")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "THEN")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "aux")
               (:x 694)
               (:y 207)
               (:w 33)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value ";")
               (:id 15))
              (:box
               (:type :function)
               (:reference x-append)
               (:group-id nil)
               (:name "x-append")
               (:x 573)
               (:y 295)
               (:w 132)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "L1?")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "L2?")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "lst?")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "lst?")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "lst?")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 16))
              (:box
               (:type :special)
               (:reference if)
               (:group-id nil)
               (:name "IF")
               (:x 164)
               (:y 339)
               (:w 115)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "TEST")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "THEN")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "else")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 17))
              (:box
               (:type :function)
               (:reference plusp)
               (:group-id nil)
               (:name "plusp")
               (:x 14)
               (:y 180)
               (:w 91)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "X")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 18))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 165)
               (:y 429)
               (:w 84)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 19))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 145)
               (:y 532)
               (:w 88)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 20))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 979)
               (:y 80)
               (:w 101)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 21))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 409)
               (:y 147)
               (:w 101)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 22))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 11)
               (:y 84)
               (:w 101)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 23)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 23 :in 0)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 9 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 22 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 21 :in 0)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 16 :in 3)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 16 :in 1)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 16 :in 0)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 13 :in 0)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 13 :in 1)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 17 :in 1)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 16 :in 2)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 16 :in 4)))
              (:connection
               (:from (:box 16 :out 0))
               (:to (:box 13 :in 2)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 19 :in 0)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 17 :in 0)))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 20 :in 0)))
              (:connection
               (:from (:box 19 :out 1))
               (:to (:box 11 :in 1)))
              (:connection
               (:from (:box 21 :out 0))
               (:to (:box 7 :in 1)))
              (:connection
               (:from (:box 21 :out 0))
               (:to (:box 8 :in 1)))
              (:connection
               (:from (:box 21 :out 0))
               (:to (:box 9 :in 1)))
              (:connection
               (:from (:box 22 :out 0))
               (:to (:box 10 :in 1)))
              (:connection
               (:from (:box 23 :out 0))
               (:to (:box 14 :in 1)))
              (:connection
               (:from (:box 23 :out 0))
               (:to (:box 18 :in 0))))))
           (:group-id nil)
           (:name "omloop")
           (:x 20)
           (:y 458)
           (:w 286)
           (:h 58)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "chord")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "dinamic")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "channel")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "tempo")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 2")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 4))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux")
           (:x 480)
           (:y 340)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 0)
           (:id 5))
          (:box
           (:type :function)
           (:reference dx->x)
           (:group-id nil)
           (:name "dx->x")
           (:x 501)
           (:y 381)
           (:w 99)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "START")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LIST")
             (:value (:list 1 1))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "lispfunction 2")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               "(lambda (lista-n)"
               ""
               "(loop for y in lista-n collect (abs y)))"))))
           (:group-id nil)
           (:name "lispfunction")
           (:x 437)
           (:y 250)
           (:w 172)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "LISTA-N")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "omloop")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input")
                 (:doc "")))
               (:group-id nil)
               (:name "input")
               (:x 5)
               (:y 5)
               (:w 73)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 146)
               (:y 274)
               (:w 107)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "aux 2")
               (:x 162)
               (:y 106)
               (:w 32)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 2))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "aux")
               (:x 84)
               (:y 73)
               (:w 32)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 0)
               (:id 3))
              (:box
               (:type :special)
               (:reference if)
               (:group-id nil)
               (:name "IF")
               (:x 142)
               (:y 136)
               (:w 62)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "TEST")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "THEN")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "else")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 98)
               (:y 195)
               (:w 84)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 5))
              (:box
               (:type :function)
               (:reference plusp)
               (:group-id nil)
               (:name "plusp")
               (:x 45)
               (:y 139)
               (:w 91)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "X")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 46)
               (:y 274)
               (:w 88)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 7))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 8)
               (:y 69)
               (:w 101)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 8)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 4 :in 2)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 4 :in 1)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 5 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 5 :out 1))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 6 :in 0))))))
           (:group-id nil)
           (:name "omloop")
           (:x 616)
           (:y 96)
           (:w 111)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 8))
          (:box
           (:type :function)
           (:reference first)
           (:group-id nil)
           (:name "first")
           (:x 685)
           (:y 266)
           (:w 77)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :function)
           (:reference om-)
           (:group-id nil)
           (:name "om-")
           (:x 642)
           (:y 319)
           (:w 78)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "lispfunction 3")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               "(lambda (listadetempo a)"
               "(loop :for cknloop :in listadetempo :collect (if (= 0 cknloop) (setq a (+ a 1)) nil)))"))))
           (:group-id nil)
           (:name "lispfunction 2")
           (:x 589)
           (:y 197)
           (:w 172)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "LISTADETEMPO")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "A")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 11))
          (:box
           (:type :function)
           (:reference om+)
           (:group-id nil)
           (:name "om+")
           (:x 621)
           (:y 404)
           (:w 85)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 12))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 2")
           (:x 676)
           (:y 374)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 13))
          (:box
           (:type :function)
           (:reference save-as-text)
           (:group-id nil)
           (:name "save-as-text")
           (:x 329)
           (:y 569)
           (:w 164)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "path")
             (:value "data")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 14))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "my-function")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               "(lambda (self) "
               " "
               ""
               "(defun normalize-chord-seq (chrdseq)"
               "  (let* ((xdx (x->dx (lonset chrdseq)))"
               "         (filt-durs1 (mapcar 'list-min (ldur chrdseq)))"
               "         (lst-durs (mapcar 'list xdx filt-durs1))"
               "         (filt-durs2 (mapcar 'list-min lst-durs))"
               "         (newdurs (loop "
               "                   for pt in (lmidic chrdseq)"
               "                   for drs in filt-durs2"
               "                   collect (repeat-n drs (length pt)))))"
               "    (make-instance 'chord-seq "
               "                   :lmidic (lmidic chrdseq)"
               "                   :lonset (lonset chrdseq)"
               "                   :ldur newdurs)))"
               ""
               "  (let* ((newchrdseq (if (typep self 'note) "
               "                           (Objfromobjs (Objfromobjs self (make-instance 'chord)) (make-instance 'chord-seq))"
               "                           (Objfromobjs self (make-instance 'chord-seq))))"
               ""
               "         (newcs (normalize-chord-seq newchrdseq))"
               "         (onsets (Lonset newcs))"
               "         (dur (Ldur newcs))"
               "         (newonsets (if (= 2 (length onsets)) (x->dx  onsets) (butlast (x->dx onsets))))"
               "         (newdurs (mapcar 'first dur))"
               "         (resultat1 "
               "          (x-append "
               "          (flat"
               "           (list (mapcar #'(lambda (x y) (if (= 0 (- x y)) x "
               "                                             (list x (- x y))))"
               "                         newdurs newonsets)"
               "                 (last newdurs)))"
               "          (last-elem newdurs)))"
               "         (resultat2 (butlast"
               "                     (if (= 0 (first onsets)) resultat1 (cons (* -1 (first onsets)) resultat1)))))"
               "    "
               "   (let ((result (remove nil (mapcar #'(lambda (x) (if (not (or (= x 1) (= x -1))) x ))"
               "          resultat2))))"
               "         (if (= 2 (length onsets)) (list (car result) (second result)) result))"
               "   )"
               "  )"))))
           (:group-id nil)
           (:name "my-function")
           (:x 8)
           (:y 192)
           (:w 157)
           (:h 60)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :object)
           (:reference voice)
           (:group-id nil)
           (:name nil)
           (:x 34)
           (:y 66)
           (:w 312)
           (:h 114)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:showname nil)
           (:show-markers t)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "TREE")
             (:value
              (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LMIDIC")
             (:value (:list (:list 6000)))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "TEMPO")
             (:value 60)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "lvel")
             (:value 100)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "loffset")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "lchan")
             (:value 1)
             (:reactive nil)))
           (:outputs
            (:output (:name "SELF") (:reactive nil))
            (:output (:name "TREE") (:reactive nil))
            (:output (:name "LMIDIC") (:reactive nil))
            (:output (:name "TEMPO") (:reactive nil))
            (:output (:name "lvel") (:reactive nil))
            (:output (:name "loffset") (:reactive nil))
            (:output (:name "lchan") (:reactive nil)))
           (:window (:size nil) (:position nil))
           (:edition-params
            (:time-map
             (:list
              (:list -1000 0)
              (:list 0 7.5)
              (:list 1000 13.0)
              (:list 2000 18.5)
              (:list 3000 24.0))))
           (:value
            (:object
             (:class voice)
             (:slots
              ((:onset 0)
               (:duration 3999)
               (:interpol
                (:number-or-nil (:number 50) (:t-or-nil nil)))
               (:name "VOICE")
               (:symbolic-date nil)
               (:symbolic-dur nil)
               (:symbolic-dur-extent 0)
               (:extras nil)
               (:tree
                (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
               (:lmidic (:list 6000))
               (:lonset (:list 0 1000 2000 3000 4000))
               (:ldur (:list 999))
               (:lvel (:list 100))
               (:loffset (:list 0))
               (:lchan (:list 1))
               (:lport (:list nil))
               (:llegato nil)
               (:tempo 60)))))
           (:id 16))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "my-patch")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 93)
               (:y 631)
               (:w 107)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 0))
              (:box
               (:type :abstraction)
               (:reference
                (:textfun
                 (:name "lispfunction 4")
                 (:doc "")
                 (:info
                  (:created nil)
                  (:modified nil)
                  (:by *app-name*)
                  (:version 0))
                 (:window (:size nil) (:position nil))
                 (:text
                  (:list
                   "(lambda (lista)"
                   ""
                   "(defun numlist-to-string (lst)"
                   "  (when lst"
                   "    (concatenate 'string "
                   "                 (write-to-string (car lst)) (numlist-to-string (cdr lst)))))"
                   "(numlist-to-string lista))"
                   ""
                   ";; Código de \"https://gist.github.com/tompurl/5174818\""))))
               (:group-id nil)
               (:name "lispfunction 4")
               (:x 37)
               (:y 237)
               (:w 172)
               (:h 48)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:lock :eval-once)
               (:lambda nil)
               (:pre-delay 0)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LISTA")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "aux 5")
               (:x 135)
               (:y 139)
               (:w 37)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value .txt)
               (:id 2))
              (:box
               (:type :function)
               (:reference x-append)
               (:group-id nil)
               (:name "x-append")
               (:x 53)
               (:y 169)
               (:w 132)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "L1?")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "L2?")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "lst?")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "aux 4")
               (:x 164)
               (:y 40)
               (:w 44)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 100)
               (:id 4))
              (:box
               (:type :function)
               (:reference om-random)
               (:group-id nil)
               (:name "om-random")
               (:x 82)
               (:y 80)
               (:w 155)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LOW")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "HIGH")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :function)
               (:reference list)
               (:group-id nil)
               (:name "list")
               (:x 179)
               (:y 548)
               (:w 66)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :function)
               (:reference osc-send)
               (:group-id nil)
               (:name "osc-send")
               (:x 343)
               (:y 442)
               (:w 127)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "BUNDLE")
                 (:value (:list "/test" 0))
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "HOST")
                 (:value "127.0.0.1")
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "PORT")
                 (:value 3002)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 7))
              (:box
               (:type :function)
               (:reference list)
               (:group-id nil)
               (:name "list")
               (:x 214)
               (:y 429)
               (:w 66)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 8))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 146)
               (:y 390)
               (:w 95)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "/note")
               (:id 9))
              (:box
               (:type :function)
               (:reference list)
               (:group-id nil)
               (:name "list")
               (:x 89)
               (:y 514)
               (:w 66)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 10))
              (:box
               (:type :function)
               (:reference first)
               (:group-id nil)
               (:name "first")
               (:x 93)
               (:y 577)
               (:w 77)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 11))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "value box")
               (:x 34)
               (:y 127)
               (:w 41)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value play)
               (:id 12)))
             (:connections
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 8 :in 1)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 3 :in 2)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 5 :in 1)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 3 :in 1)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 10 :in 1)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 11 :in 0)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 0 :in 0))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 3 :in 0))))))
           (:group-id nil)
           (:name "my-patch")
           (:x 423)
           (:y 455)
           (:w 132)
           (:h 60)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock :eval-once)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs)
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 17))
          (:box
           (:type :function)
           (:reference print)
           (:group-id nil)
           (:name "print")
           (:x 369)
           (:y 522)
           (:w 85)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOMETHING")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 18))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "my-patch")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 93)
               (:y 631)
               (:w 107)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 0))
              (:box
               (:type :abstraction)
               (:reference
                (:textfun
                 (:name "lispfunction 4")
                 (:doc "")
                 (:info
                  (:created nil)
                  (:modified nil)
                  (:by *app-name*)
                  (:version 0))
                 (:window (:size nil) (:position nil))
                 (:text
                  (:list
                   "(lambda (lista)"
                   ""
                   "(defun numlist-to-string (lst)"
                   "  (when lst"
                   "    (concatenate 'string "
                   "                 (write-to-string (car lst)) (numlist-to-string (cdr lst)))))"
                   "(numlist-to-string lista))"
                   ""
                   ";; Código de \"https://gist.github.com/tompurl/5174818\""))))
               (:group-id nil)
               (:name "lispfunction 4")
               (:x 37)
               (:y 237)
               (:w 172)
               (:h 48)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:lock :eval-once)
               (:lambda nil)
               (:pre-delay 0)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LISTA")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "aux 5")
               (:x 135)
               (:y 139)
               (:w 37)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value .txt)
               (:id 2))
              (:box
               (:type :function)
               (:reference x-append)
               (:group-id nil)
               (:name "x-append")
               (:x 53)
               (:y 169)
               (:w 132)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "L1?")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "L2?")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "lst?")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "aux 4")
               (:x 164)
               (:y 40)
               (:w 44)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 100)
               (:id 4))
              (:box
               (:type :function)
               (:reference om-random)
               (:group-id nil)
               (:name "om-random")
               (:x 82)
               (:y 80)
               (:w 155)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LOW")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "HIGH")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :function)
               (:reference osc-send)
               (:group-id nil)
               (:name "osc-send")
               (:x 343)
               (:y 442)
               (:w 127)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "BUNDLE")
                 (:value (:list "/test" 0))
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "HOST")
                 (:value "127.0.0.1")
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "PORT")
                 (:value 3002)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :function)
               (:reference list)
               (:group-id nil)
               (:name "list")
               (:x 214)
               (:y 429)
               (:w 66)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value 1)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 7))
              (:box
               (:type :value)
               (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
               (:group-id nil)
               (:name "value box")
               (:x 146)
               (:y 390)
               (:w 95)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value "/note-pause")
               (:id 8))
              (:box
               (:type :function)
               (:reference list)
               (:group-id nil)
               (:name "list")
               (:x 89)
               (:y 514)
               (:w 66)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 9))
              (:box
               (:type :function)
               (:reference first)
               (:group-id nil)
               (:name "first")
               (:x 93)
               (:y 577)
               (:w 77)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 10))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "value box")
               (:x 34)
               (:y 127)
               (:w 41)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value play)
               (:id 11)))
             (:connections
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 7 :in 1)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 9 :in 0)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 3 :in 2)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 5 :in 1)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 3 :in 1)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 9 :in 1)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 0 :in 0))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 3 :in 0))))))
           (:group-id nil)
           (:name "my-patch")
           (:x 607)
           (:y 488)
           (:w 132)
           (:h 60)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock :eval-once)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs)
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 19)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 16 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 11 :in 1)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 14 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 4 :in 4)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 1)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 11 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 1)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 12 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 4 :in 5)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 12 :in 1)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 0)))
          (:connection (:from (:box 16 :out 2)) (:to (:box 4 :in 1)))
          (:connection (:from (:box 16 :out 4)) (:to (:box 4 :in 2)))
          (:connection (:from (:box 16 :out 6)) (:to (:box 4 :in 3)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 18 :in 0)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 14 :in 1)))
          (:connection
           (:from (:box 19 :out 0))
           (:to (:box 2 :in 0))))))
       (:group-id nil)
       (:name "play | stop")
       (:x 1040)
       (:y 941)
       (:w 145)
       (:h 28)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "output") (:reactive nil))
        (:output (:name "out") (:reactive nil)))
       (:id 31))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 1214)
       (:y 758)
       (:w 45)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 1))
       (:id 32))
      (:comment
       (:x 536)
       (:y 592)
       (:w 336)
       (:h 88)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font
        (:font-or-nil
         (:font (:font (:face "Georgia") (:size 14) (:style :bold)))
         (:t-or-nil t)))
       (:align nil)
       (:text
        "9 contornos melódicos. 

O primeiro é o de Partch e o último o de Wilson.")
       (:id 33))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference play-om\#)
       (:group-id nil)
       (:name "play-om#")
       (:x 304)
       (:y 925)
       (:w 136)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "VOICE")
         (:value (:list nil))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 34))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 621)
       (:y 928)
       (:w 70)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 35))
      (:box
       (:type :function)
       (:reference remove-dup)
       (:group-id nil)
       (:name "remove-dup")
       (:x 849)
       (:y 947)
       (:w 160)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value (:list 1 2 3 4))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEST")
         (:value eq)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DEPTH")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 36))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference voice->text)
       (:group-id nil)
       (:name "voice->text")
       (:x 81)
       (:y 818)
       (:w 154)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "VOICE")
         (:value (:list nil))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 37))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name nil)
       (:x 45)
       (:y 870)
       (:w 178)
       (:h 50)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class textbuffer)
         (:slots
          ((:contents
            (:list
             "0 , 6608 60 1 249 ;"
             "249 , 6168 64 1 249 ;"
             "498 , 6906 69 1 249 ;"
             "747 , 6000 73 1 249 ;"
             "996 , 6751 77 1 249 ;"
             "1245 , 6906 81 1 249 ;"
             "1494 , 6700 86 1 249 ;"
             "1743 , 6700 90 1 249 ;"
             "1992 , 7149 67 1 249 ;"
             "2241 , 6092 69 1 249 ;"
             "2490 , 6882 71 1 249 ;"
             "2739 , 7149 74 1 249 ;"))))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 38))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference interval-sob)
       (:group-id nil)
       (:name "interval-sob")
       (:x 1217)
       (:y 90)
       (:w 157)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value 11/8)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SIEVE")
         (:value (:list 2 3 7 11 12))
         (:reactive nil)))
       (:outputs
        (:output (:name "out0") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 39))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference rt->mc)
       (:group-id nil)
       (:name "rt->mc")
       (:x 1248)
       (:y 219)
       (:w 109)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value 11/8)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FUNDAMENTAL")
         (:value 6000)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 40))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 1294)
       (:y 150)
       (:w 62)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 7900)
       (:id 41))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 1312)
       (:y 32)
       (:w 225)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 16 27 35 38 49 54 60))
       (:id 42))
      (:box
       (:type :value)
       (:reference ratio)
       (:group-id nil)
       (:name "value box")
       (:x 1158)
       (:y 41)
       (:w 70)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 97/64)
       (:id 43))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference rt-octave)
       (:group-id nil)
       (:name "rt-octave")
       (:x 1383)
       (:y 119)
       (:w 129)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FRAQ")
         (:value 3/2)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "octave")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 44))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 1447)
       (:y 84)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 4)
       (:id 45))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference choose)
       (:group-id nil)
       (:name "choose")
       (:x 1514)
       (:y 264)
       (:w 107)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 1 2 3 4 5 6 7 8 9 10))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CHORD-N")
         (:value (:list 1 7 9))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 46))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 1554)
       (:y 228)
       (:w 78)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6)
       (:id 47))
      (:box
       (:type :function)
       (:reference om-round)
       (:group-id nil)
       (:name "om-round")
       (:x 50)
       (:y 571)
       (:w 136)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 48))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference voice->text)
       (:group-id nil)
       (:name "voice->text")
       (:x 1233)
       (:y 636)
       (:w 154)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "VOICE")
         (:value (:list nil))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 49))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name nil)
       (:x 1507)
       (:y 651)
       (:w 80)
       (:h 50)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class textbuffer)
         (:slots
          ((:contents
            (:list
             "0 , 7308 60 1 124 ;"
             "124 , 6868 64 1 124 ;"
             "248 , 7606 69 1 124 ;"
             "372 , 6700 73 1 124 ;"
             "496 , 7451 77 1 124 ;"
             "620 , 7606 81 1 124 ;"
             "744 , 7292 86 1 124 ;"
             "868 , 6868 90 1 124 ;"
             "992 , 7732 67 1 124 ;"
             "1116 , 6700 69 1 124 ;"
             "1240 , 7451 71 1 124 ;"
             "1364 , 7732 74 1 124 ;"
             "1488 , 7292 76 1 124 ;"
             "1612 , 6868 79 1 124 ;"
             "1736 , 7900 81 1 124 ;"
             "1860 , 5794 83 1 124 ;"
             "1984 , 7606 71 1 124 ;"
             "2108 , 7900 72 1 124 ;"
             "2232 , 7149 73 1 124 ;"
             "2356 , 7149 74 1 124 ;"
             "2480 , 7900 76 1 124 ;"
             "2604 , 5794 77 1 124 ;"
             "2728 , 7718 78 1 124 ;"
             "2852 , 7900 79 1 124 ;"
             "2976 , 7149 75 1 124 ;"
             "3100 , 7149 75 1 124 ;"
             "3224 , 8082 75 1 124 ;"
             "3348 , 5794 75 1 124 ;"
             "3472 , 7732 75 1 124 ;"
             "3596 , 8082 75 1 124 ;"))))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 50))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference range-reduce)
       (:group-id nil)
       (:name "range-reduce")
       (:x 1347)
       (:y 364)
       (:w 172)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 4800 7200 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GRAVE")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "AGUDA")
         (:value 7902)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 51))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 1393)
       (:y 329)
       (:w 61)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6000)
       (:id 52))
      (:box
       (:type :function)
       (:reference om-round)
       (:group-id nil)
       (:name "om-round")
       (:x 36)
       (:y 367)
       (:w 136)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 53))
      (:box
       (:type :object)
       (:reference chord)
       (:group-id nil)
       (:name nil)
       (:x 62)
       (:y 428)
       (:w 80)
       (:h 50)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LVEL")
         (:value (:list 80))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LOFFSET")
         (:value (:list 0))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LDUR")
         (:value (:list 1000))
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "LVEL") (:reactive nil))
        (:output (:name "LOFFSET") (:reactive nil))
        (:output (:name "LDUR") (:reactive nil)))
       (:window (:size (1168 658)) (:position (27 89)))
       (:edition-params
        (:scale :scale-1/8)
        (:font-size 48)
        (:chord-mode :arp-order))
       (:value
        (:object
         (:class chord)
         (:slots
          ((:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:onset 0)
           (:item-time nil)
           (:item-internal-time nil)
           (:item-type nil)
           (:attributes nil)
           (:lmidic (:list 6700 6868 7308 7451 7606 7718 7900))
           (:lvel (:list 80 80 80 80 80 80 80))
           (:loffset (:list 0 0 0 0 0 0 0))
           (:ldur (:list 1000 1000 1000 1000 1000 1000 1000))
           (:lchan (:list 1 1 1 1 1 1 1))
           (:lport (:list nil nil nil nil nil nil nil))))))
       (:id 54))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 1466)
       (:y 329)
       (:w 61)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 7200)
       (:id 55))
      (:box
       (:type :function)
       (:reference sort-list)
       (:group-id nil)
       (:name "sort-list")
       (:x 1252)
       (:y 467)
       (:w 114)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 56))
      (:box
       (:type :function)
       (:reference sort-list)
       (:group-id nil)
       (:name "sort-list")
       (:x 123)
       (:y 304)
       (:w 114)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 57)))
     (:connections
      (:connection (:from (:box 5 :out 0)) (:to (:box 11 :in 3)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 27 :in 2)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 22 :in 2)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 11 :in 1)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 34 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 37 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 49 :in 0)))
      (:connection (:from (:box 11 :out 2)) (:to (:box 35 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 53 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 57 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 11 :in 2)))
      (:connection (:from (:box 13 :out 1)) (:to (:box 11 :in 4)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 48 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 19 :in 3)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 19 :in 2)))
      (:connection
       (:from (:box 18 :out 0))
       (:to (:box 19 :in 1))
       (:attributes (:color nil :style nil :modif (0 -3/8))))
      (:connection (:from (:box 19 :out 0)) (:to (:box 13 :in 1)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 21 :in 1)))
      (:connection (:from (:box 21 :out 1)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 22 :out 2)) (:to (:box 20 :in 1)))
      (:connection (:from (:box 23 :out 0)) (:to (:box 12 :in 2)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 25 :out 1)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 26 :out 0)) (:to (:box 25 :in 1)))
      (:connection
       (:from (:box 27 :out 2))
       (:to (:box 26 :in 1))
       (:attributes (:color nil :style nil :modif (0 7/19))))
      (:connection (:from (:box 28 :out 0)) (:to (:box 12 :in 3)))
      (:connection (:from (:box 29 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 29 :out 1)) (:to (:box 46 :in 0)))
      (:connection (:from (:box 30 :out 0)) (:to (:box 29 :in 0)))
      (:connection (:from (:box 30 :out 1)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 32 :out 0)) (:to (:box 11 :in 6)))
      (:connection (:from (:box 35 :out 0)) (:to (:box 36 :in 0)))
      (:connection (:from (:box 37 :out 0)) (:to (:box 38 :in 0)))
      (:connection (:from (:box 39 :out 1)) (:to (:box 44 :in 0)))
      (:connection (:from (:box 40 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 40 :out 0)) (:to (:box 51 :in 0)))
      (:connection (:from (:box 41 :out 0)) (:to (:box 40 :in 1)))
      (:connection (:from (:box 42 :out 0)) (:to (:box 39 :in 1)))
      (:connection (:from (:box 43 :out 0)) (:to (:box 39 :in 0)))
      (:connection (:from (:box 45 :out 0)) (:to (:box 44 :in 1)))
      (:connection (:from (:box 46 :out 0)) (:to (:box 40 :in 0)))
      (:connection (:from (:box 47 :out 0)) (:to (:box 46 :in 1)))
      (:connection (:from (:box 49 :out 0)) (:to (:box 50 :in 0)))
      (:connection
       (:from (:box 51 :out 0))
       (:to (:box 15 :in 1))
       (:attributes (:color nil :style nil :modif (0 -0.45))))
      (:connection (:from (:box 51 :out 0)) (:to (:box 56 :in 0)))
      (:connection (:from (:box 52 :out 0)) (:to (:box 51 :in 1)))
      (:connection (:from (:box 53 :out 0)) (:to (:box 54 :in 1)))
      (:connection (:from (:box 55 :out 0)) (:to (:box 51 :in 2)))
      (:connection (:from (:box 56 :out 0)) (:to (:box 20 :in 0)))
      (:connection (:from (:box 57 :out 0)) (:to (:box 26 :in 0))))))
   (:group-id nil)
   (:name "contorno")
   (:x 1360)
   (:y 434)
   (:w 127)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs)
   (:id 37))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference modulation-notes)
   (:group-id nil)
   (:name "modulation-notes")
   (:x 613)
   (:y 701)
   (:w 214)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LISTNOTE")
     (:value (:list 6000 6530))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LISTNOTE2")
     (:value (:list 7203 5049))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CENTS")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 38))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt->mc)
   (:group-id nil)
   (:name "rt->mc")
   (:x 449)
   (:y 514)
   (:w 109)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FUNDAMENTAL")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 39))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 492)
   (:y 479)
   (:w 62)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 7300)
   (:id 40))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt->mc)
   (:group-id nil)
   (:name "rt->mc")
   (:x 627)
   (:y 556)
   (:w 109)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FUNDAMENTAL")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 41))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 671)
   (:y 514)
   (:w 62)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :left)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6700)
   (:id 42))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 752)
   (:y 663)
   (:w 40)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 10)
   (:id 43))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference choose)
   (:group-id nil)
   (:name "choose")
   (:x 768)
   (:y 580)
   (:w 107)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list 1 2 3 4 5 6 7 8 9 10))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHORD-N")
     (:value (:list 1 7 9))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 44))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 800)
   (:y 545)
   (:w 79)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6)
   (:id 45))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt-octave)
   (:group-id nil)
   (:name "rt-octave")
   (:x 410)
   (:y 403)
   (:w 129)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FRAQ")
     (:value 3/2)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "octave")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 46))
  (:box
   (:type :function)
   (:reference om-round)
   (:group-id nil)
   (:name "om-round")
   (:x 388)
   (:y 609)
   (:w 136)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 1) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 47))
  (:box
   (:type :function)
   (:reference om-round)
   (:group-id nil)
   (:name "om-round")
   (:x 602)
   (:y 624)
   (:w 136)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 1) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 48))
  (:box
   (:type :object)
   (:reference chord)
   (:group-id nil)
   (:name nil)
   (:x 586)
   (:y 792)
   (:w 206)
   (:h 130)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 80))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LOFFSET")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "LOFFSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil)))
   (:window (:size (1920 1026)) (:position (-186 510)))
   (:edition-params
    (:font-size 48)
    (:chord-mode :arp-order)
    (:scale :scale-1/8))
   (:value
    (:object
     (:class chord)
     (:slots
      ((:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:onset 0)
       (:item-time nil)
       (:item-internal-time nil)
       (:item-type nil)
       (:attributes nil)
       (:lmidic (:list 6818 7537 9696 8256 8975 8974 9694))
       (:lvel (:list 80 80 80 80 80 80 80))
       (:loffset (:list 0 0 0 0 0 0 0))
       (:ldur (:list 1000 1000 1000 1000 1000 1000 1000))
       (:lchan (:list 1 1 1 1 1 1 1))
       (:lport (:list nil nil nil nil nil nil nil))))))
   (:id 49))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "Micropolifonia")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1938 1098)) (:position (-9 -9)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :object)
       (:reference voice)
       (:group-id nil)
       (:name nil)
       (:x 804)
       (:y 749)
       (:w 652)
       (:h 126)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TREE")
         (:value (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list (:list 6000)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEMPO")
         (:value 60)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "lvel")
         (:value 100)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "loffset")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "lchan")
         (:value 1)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "TREE") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "TEMPO") (:reactive nil))
        (:output (:name "lvel") (:reactive nil))
        (:output (:name "loffset") (:reactive nil))
        (:output (:name "lchan") (:reactive nil)))
       (:window (:size (1924 1030)) (:position (-9 -9)))
       (:edition-params
        (:font-size 30)
        (:staff :g)
        (:scale :scale-1/8)
        (:time-map
         (:list
          (:list -1000 0)
          (:list 0 7.5)
          (:list 300 11.5)
          (:list 500 15.966667)
          (:list 700 19.633334)
          (:list 900 23.3)
          (:list 1100 27.766665)
          (:list 1500 32.899998)
          (:list 1625 37.116665)
          (:list 1750 41.333332))))
       (:value
        (:object
         (:class voice)
         (:slots
          ((:onset 0)
           (:duration 1874)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:name "VOICE")
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:tree
            (:list
             1
             (:list
              (:list
               (:list 5 8)
               (:list
                (:list
                 4
                 (:list
                  1
                  (:list 4 (:list (:list 2 (:list 1 1 1 1)) 1))))
                (:list 1 (:list 1 1 1)))))))
           (:lmidic
            (:list
             (:list 6518)
             (:list 6406)
             (:list 6108)
             (:list 6406)
             (:list 6518)
             (:list 6108)
             (:list 6108)
             (:list 6108)
             (:list 6108)))
           (:lonset (:list 0 300 500 700 900 1100 1500 1625 1750 1875))
           (:ldur
            (:list
             (:list 299)
             (:list 199)
             (:list 199)
             (:list 199)
             (:list 199)
             (:list 399)
             (:list 124)
             (:list 124)
             (:list 124)))
           (:lvel
            (:list
             (:list 50)
             (:list 62)
             (:list 92)
             (:list 98)
             (:list 68)
             (:list 80)
             (:list 74)
             (:list 86)
             (:list 56)))
           (:loffset (:list 0))
           (:lchan
            (:list
             (:list 3)
             (:list 1)
             (:list 2)
             (:list 2)
             (:list 3)
             (:list 3)
             (:list 1)
             (:list 2)
             (:list 2)))
           (:lport (:list nil))
           (:llegato nil)
           (:tempo 80)))))
       (:id 0))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference voice->text)
       (:group-id nil)
       (:name "voice->text")
       (:x 827)
       (:y 907)
       (:w 154)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "VOICE")
         (:value (:list nil))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :object)
       (:reference textbuffer)
       (:group-id nil)
       (:name nil)
       (:x 823)
       (:y 947)
       (:w 305)
       (:h 40)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CONTENTS")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CONTENTS") (:reactive nil)))
       (:window (:size (500 417)) (:position (256 257)))
       (:edition-params)
       (:value
        (:object
         (:class textbuffer)
         (:slots
          ((:contents
            (:list
             ""
             "375 , 7451 50 3 93 ;"
             "468 , 6108 68 1 280 ;"
             ""
             "1124 , 6518 86 3 1124 ;"))))
         (:add-slots ((:input-mode :lines-cols)))))
       (:id 2))
      (:box
       (:type :object)
       (:reference poly)
       (:group-id nil)
       (:name nil)
       (:x 30)
       (:y 104)
       (:w 367)
       (:h 172)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "OBJ-LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "OBJ-LIST") (:reactive nil)))
       (:window (:size (1920 1026)) (:position (-9 -9)))
       (:edition-params
        (:staff :gg)
        (:font-size 63)
        (:time-map
         (:list
          (:list -1000 0)
          (:list 0 7.5)
          (:list 400 11.5)
          (:list 667 15.166667)
          (:list 933 18.833334)
          (:list 1200 22.5)
          (:list 1467 26.166666)
          (:list 2000 30.5)
          (:list 2167 33.916665)
          (:list 2333 37.333332))))
       (:value
        (:object
         (:class poly)
         (:slots
          ((:chord-seqs
            (:list
             (:object
              (:class voice)
              (:slots
               ((:onset 0)
                (:duration 2499)
                (:interpol
                 (:number-or-nil (:number 50) (:t-or-nil nil)))
                (:name nil)
                (:symbolic-date nil)
                (:symbolic-dur nil)
                (:symbolic-dur-extent 0)
                (:extras nil)
                (:tree
                 (:list
                  1
                  (:list
                   (:list
                    (:list 5 8)
                    (:list
                     (:list
                      4
                      (:list
                       1
                       (:list 4 (:list (:list 2 (:list 1 1 1 1)) 1))))
                     (:list 1 (:list 1 1 1)))))))
                (:lmidic
                 (:list
                  (:list 7100)
                  (:list 6500)
                  (:list 6200)
                  (:list 7100)
                  (:list 6500)
                  (:list 6700)
                  (:list 6000)
                  (:list 6500)
                  (:list 6900)))
                (:lonset
                 (:list 0 400 667 933 1200 1467 2000 2167 2333 2500))
                (:ldur
                 (:list
                  (:list 399)
                  (:list 266)
                  (:list 265)
                  (:list 266)
                  (:list 266)
                  (:list 532)
                  (:list 166)
                  (:list 165)
                  (:list 166)))
                (:lvel (:list 80))
                (:loffset (:list 0))
                (:lchan (:list 1))
                (:lport (:list nil))
                (:llegato nil)
                (:tempo 60))))))
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)))))
       (:id 3))
      (:box
       (:type :function)
       (:reference import-musicxml)
       (:group-id nil)
       (:name "import-musicxml")
       (:x 31)
       (:y 39)
       (:w 206)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock :locked)
       (:lambda nil)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 370)
       (:y 10)
       (:w 271)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 5 6 4 7))
       (:id 5))
      (:box
       (:type :function)
       (:reference nth-random)
       (:group-id nil)
       (:name "nth-random")
       (:x 433)
       (:y 44)
       (:w 157)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "my-patch")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (376 666)) (:position (128 128)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 247)
           (:y 557)
           (:w 55)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "in") (:doc "")))
           (:group-id nil)
           (:name "in")
           (:x 58)
           (:y 20)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :function)
           (:reference om*)
           (:group-id nil)
           (:name "om*")
           (:x 86)
           (:y 183)
           (:w 82)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "value box")
           (:x 124)
           (:y 148)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 4)
           (:id 3))
          (:box
           (:type :function)
           (:reference om/)
           (:group-id nil)
           (:name "om/")
           (:x 72)
           (:y 254)
           (:w 78)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "value box")
           (:x 77)
           (:y 219)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 5))
          (:box
           (:type :function)
           (:reference denominator)
           (:group-id nil)
           (:name "denominator")
           (:x 138)
           (:y 299)
           (:w 165)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "N")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :function)
           (:reference om/)
           (:group-id nil)
           (:name "om/")
           (:x 215)
           (:y 387)
           (:w 78)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "value box")
           (:x 251)
           (:y 352)
           (:w 32)
           (:h 41)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 4)
           (:id 8))
          (:box
           (:type :special)
           (:reference repeat-n)
           (:group-id nil)
           (:name "repeat-n")
           (:x 63)
           (:y 447)
           (:w 130)
           (:h 28)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :left)
           (:lock nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "self")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "num")
             (:value 0)
             (:reactive nil)))
           (:outputs
            (:output (:name "collected results") (:reactive nil)))
           (:id 9))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 110)
           (:y 509)
           (:w 84)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 10))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 87)
           (:y 584)
           (:w 88)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 11))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "loop-list")
           (:x 68)
           (:y 93)
           (:w 101)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 12)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 12 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 1)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 1)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 9 :in 1)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 7 :in 1)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 11 :in 0)))
          (:connection (:from (:box 10 :out 1)) (:to (:box 0 :in 0)))
          (:connection
           (:from (:box 12 :out 0))
           (:to (:box 2 :in 0))))))
       (:group-id nil)
       (:name "my-patch")
       (:x 446)
       (:y 164)
       (:w 132)
       (:h 60)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "in")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 665)
       (:y 76)
       (:w 130)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 8))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 727)
       (:y 41)
       (:w 39)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 9))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 686)
       (:y 117)
       (:w 70)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :function)
       (:reference mktree)
       (:group-id nil)
       (:name "mktree")
       (:x 678)
       (:y 200)
       (:w 110)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RHYTHM")
         (:value (:list 1/4 1/4 1/4 1/4))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TIMESIGNS")
         (:value (:list 4 4))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :object)
       (:reference voice)
       (:group-id nil)
       (:name nil)
       (:x 477)
       (:y 249)
       (:w 580)
       (:h 133)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TREE")
         (:value (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list (:list 6000)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEMPO")
         (:value 60)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "TREE") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "TEMPO") (:reactive nil)))
       (:window (:size (650 300)) (:position (32 32)))
       (:edition-params
        (:time-map
         (:list
          (:list -1000 0)
          (:list 0 7.5)
          (:list 750 13.0)
          (:list 1500 18.5)
          (:list 2250 24.0))))
       (:value
        (:object
         (:class voice)
         (:slots
          ((:onset 0)
           (:duration 2999)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:name "VOICE")
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:tree
            (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
           (:lmidic (:list 6000))
           (:lonset (:list 0 750 1500 2250 3000))
           (:ldur (:list 749))
           (:lvel (:list 100))
           (:loffset (:list 0))
           (:lchan (:list 1))
           (:lport (:list nil))
           (:llegato nil)
           (:tempo 80)))))
       (:id 12))
      (:box
       (:type :object)
       (:reference poly)
       (:group-id nil)
       (:name nil)
       (:x 0)
       (:y 451)
       (:w 628)
       (:h 228)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "OBJ-LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "OBJ-LIST") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params
        (:time-map
         (:list
          (:list -1000 0)
          (:list 0 7.5)
          (:list 107 11.125)
          (:list 150 14.482142)
          (:list 188 17.982144)
          (:list 214 21.607144)
          (:list 300 24.964287)
          (:list 321 28.464287)
          (:list 375 31.82143)
          (:list 429 35.44643)
          (:list 450 38.803574)
          (:list 536 42.303574)
          (:list 562 45.660717)
          (:list 600 49.285717)
          (:list 643 52.785717)
          (:list 750 56.14286)
          (:list 900 59.76786)
          (:list 938 63.26786)
          (:list 1050 66.89286)
          (:list 1125 70.39286)
          (:list 1200 74.01786)
          (:list 1312 77.51786)
          (:list 1350 81.14286)
          (:list 1500 84.64286)
          (:list 1650 88.26786)
          (:list 1688 91.76786)
          (:list 1800 95.39286)
          (:list 1875 98.89286)
          (:list 1950 102.51786)
          (:list 2062 106.01786)
          (:list 2100 109.64286)
          (:list 2250 113.14286)
          (:list 2400 116.76786)
          (:list 2438 120.26786)
          (:list 2550 123.89286)
          (:list 2625 127.39286)
          (:list 2700 131.01786)
          (:list 2812 134.51786)
          (:list 2850 138.14286))))
       (:value
        (:object
         (:class poly)
         (:slots
          ((:chord-seqs
            (:list
             (:object
              (:class voice)
              (:slots
               ((:onset 0)
                (:duration 2999)
                (:interpol
                 (:number-or-nil (:number 50) (:t-or-nil nil)))
                (:name nil)
                (:symbolic-date nil)
                (:symbolic-dur nil)
                (:symbolic-dur-extent 0)
                (:extras nil)
                (:tree
                 (:list
                  1
                  (:list
                   (:list
                    (:list 4 4)
                    (:list
                     (:list 1 (:list 1 1 1 1 1))
                     (:list 1 (:list 1 1 1 1 1))
                     (:list 1 (:list 1 1 1 1 1))
                     (:list 1 (:list 1 1 1 1)))))))
                (:lmidic (:list 6000))
                (:lonset
                 (:list
                  0
                  150
                  300
                  450
                  600
                  750
                  900
                  1050
                  1200
                  1350
                  1500
                  1650
                  1800
                  1950
                  2100
                  2250
                  2438
                  2625
                  2812
                  3000))
                (:ldur
                 (:list
                  (:list 149)
                  (:list 149)
                  (:list 149)
                  (:list 149)
                  (:list 149)
                  (:list 149)
                  (:list 149)
                  (:list 149)
                  (:list 149)
                  (:list 149)
                  (:list 149)
                  (:list 149)
                  (:list 149)
                  (:list 149)
                  (:list 149)
                  (:list 187)
                  (:list 186)
                  (:list 186)
                  (:list 187)))
                (:lvel (:list 100))
                (:loffset (:list 0))
                (:lchan (:list 1))
                (:lport (:list nil))
                (:llegato nil)
                (:tempo 80))))
             (:object
              (:class voice)
              (:slots
               ((:onset 0)
                (:duration 2999)
                (:interpol
                 (:number-or-nil (:number 50) (:t-or-nil nil)))
                (:name nil)
                (:symbolic-date nil)
                (:symbolic-dur nil)
                (:symbolic-dur-extent 0)
                (:extras nil)
                (:tree
                 (:list
                  1
                  (:list
                   (:list
                    (:list 4 4)
                    (:list
                     (:list 1 (:list 1 1 1 1))
                     (:list 1 (:list 1 1 1 1))
                     (:list 1 (:list 1 1 1 1 1))
                     (:list 1 (:list 1 1 1 1 1)))))))
                (:lmidic (:list 6000))
                (:lonset
                 (:list
                  0
                  188
                  375
                  562
                  750
                  938
                  1125
                  1312
                  1500
                  1650
                  1800
                  1950
                  2100
                  2250
                  2400
                  2550
                  2700
                  2850
                  3000))
                (:ldur
                 (:list
                  (:list 187)
                  (:list 186)
                  (:list 186)
                  (:list 187)
                  (:list 187)
                  (:list 186)
                  (:list 186)
                  (:list 187)
                  (:list 149)
                  (:list 149)
                  (:list 149)
                  (:list 149)
                  (:list 149)
                  (:list 149)
                  (:list 149)
                  (:list 149)
                  (:list 149)
                  (:list 149)))
                (:lvel (:list 100))
                (:loffset (:list 0))
                (:lchan (:list 1))
                (:lport (:list nil))
                (:llegato nil)
                (:tempo 80))))
             (:object
              (:class voice)
              (:slots
               ((:onset 0)
                (:duration 2999)
                (:interpol
                 (:number-or-nil (:number 50) (:t-or-nil nil)))
                (:name nil)
                (:symbolic-date nil)
                (:symbolic-dur nil)
                (:symbolic-dur-extent 0)
                (:extras nil)
                (:tree
                 (:list
                  1
                  (:list
                   (:list
                    (:list 4 4)
                    (:list
                     (:list 1 (:list 1 1 1 1 1 1 1))
                     (:list 1 (:list 1 1 1 1 1))
                     (:list 1 (:list 1 1 1 1))
                     (:list 1 (:list 1 1 1 1)))))))
                (:lmidic (:list 6000))
                (:lonset
                 (:list
                  0
                  107
                  214
                  321
                  429
                  536
                  643
                  750
                  900
                  1050
                  1200
                  1350
                  1500
                  1688
                  1875
                  2062
                  2250
                  2438
                  2625
                  2812
                  3000))
                (:ldur
                 (:list
                  (:list 106)
                  (:list 106)
                  (:list 106)
                  (:list 107)
                  (:list 106)
                  (:list 106)
                  (:list 106)
                  (:list 149)
                  (:list 149)
                  (:list 149)
                  (:list 149)
                  (:list 149)
                  (:list 187)
                  (:list 186)
                  (:list 186)
                  (:list 187)
                  (:list 187)
                  (:list 186)
                  (:list 186)
                  (:list 187)))
                (:lvel (:list 100))
                (:loffset (:list 0))
                (:lchan (:list 1))
                (:lport (:list nil))
                (:llegato nil)
                (:tempo 80))))))
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)))))
       (:id 13))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 430)
       (:y 409)
       (:w 130)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 14))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 492)
       (:y 374)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 3)
       (:id 15))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "media do grão")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (565 471)) (:position (32 32)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input 1") (:doc "")))
           (:group-id nil)
           (:name "input 1")
           (:x 344)
           (:y 50)
           (:w 92)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 214)
           (:y 375)
           (:w 55)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "my-patch")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input 1")
                 (:doc "")))
               (:group-id nil)
               (:name "input 1")
               (:x 407)
               (:y 64)
               (:w 92)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "out")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "out")
               (:x 497)
               (:y 560)
               (:w 55)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :function)
               (:reference true-durations)
               (:group-id nil)
               (:name "true-durations")
               (:x 50)
               (:y 50)
               (:w 182)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda :lambda)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "CKN")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :function)
               (:reference mapcar)
               (:group-id nil)
               (:name "mapcar")
               (:x 356)
               (:y 114)
               (:w 113)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FUNCTION")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :function)
               (:reference mapcar)
               (:group-id nil)
               (:name "mapcar")
               (:x 238)
               (:y 253)
               (:w 113)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FUNCTION")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :function)
               (:reference dx->x)
               (:group-id nil)
               (:name "dx->x")
               (:x 162)
               (:y 180)
               (:w 99)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda :lambda)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "START")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value (:list 1 1))
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "value box")
               (:x 171)
               (:y 145)
               (:w 32)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 0)
               (:id 6))
              (:box
               (:type :function)
               (:reference sort-list)
               (:group-id nil)
               (:name "sort-list")
               (:x 441)
               (:y 211)
               (:w 114)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 7))
              (:box
               (:type :function)
               (:reference flat)
               (:group-id nil)
               (:name "flat")
               (:x 459)
               (:y 176)
               (:w 70)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 8))
              (:box
               (:type :function)
               (:reference remove-dup)
               (:group-id nil)
               (:name "remove-dup")
               (:x 595)
               (:y 236)
               (:w 160)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value (:list 1 2 3 4))
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "TEST")
                 (:value eq)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "DEPTH")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 9))
              (:box
               (:type :function)
               (:reference x->dx)
               (:group-id nil)
               (:name "x->dx")
               (:x 502)
               (:y 289)
               (:w 99)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 10)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 3 :in 1))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 :curved
                 :modif
                 nil)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 3 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 4 :in 1)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 5 :in 0)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 9 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 1 :in 0))))))
           (:group-id nil)
           (:name "my-patch")
           (:x 344)
           (:y 100)
           (:w 132)
           (:h 60)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :hidden)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input 1")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :function)
           (:reference reduce)
           (:group-id nil)
           (:name "reduce")
           (:x 116)
           (:y 223)
           (:w 106)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FUNCTION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :function)
           (:reference om+)
           (:group-id nil)
           (:name "om+")
           (:x 50)
           (:y 159)
           (:w 85)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda :lambda)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 373)
           (:y 240)
           (:w 100)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :function)
           (:reference om/)
           (:group-id nil)
           (:name "om/")
           (:x 203)
           (:y 295)
           (:w 78)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :function)
           (:reference om-round)
           (:group-id nil)
           (:name "om-round")
           (:x 179)
           (:y 335)
           (:w 136)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "N")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7)))
         (:connections
          (:connection
           (:from (:box 0 :out 0))
           (:to (:box 2 :in 0))
           (:attributes
            (:color
             (:color 0.2 0.4 0.5 1.0)
             :style
             :curved
             :modif
             nil)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 1)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 1)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 1 :in 0))))))
       (:group-id nil)
       (:name "media do grão")
       (:x 140)
       (:y 694)
       (:w 184)
       (:h 60)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input 1")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :object)
       (:reference voice)
       (:group-id nil)
       (:name nil)
       (:x 650)
       (:y 533)
       (:w 146)
       (:h 50)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TREE")
         (:value (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list (:list 6000)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEMPO")
         (:value 60)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "TREE") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "TEMPO") (:reactive nil)))
       (:window (:size (966 300)) (:position (256 256)))
       (:edition-params
        (:h-stretch 2)
        (:staff :gg)
        (:time-map
         (:list
          (:list -1000 0)
          (:list 0 7.5)
          (:list 400 11.5)
          (:list 667 15.166667)
          (:list 933 18.833334)
          (:list 1200 22.5)
          (:list 1467 26.166666)
          (:list 2000 30.5)
          (:list 2167 33.916665)
          (:list 2333 37.333332))))
       (:value
        (:object
         (:class voice)
         (:slots
          ((:onset 0)
           (:duration 2499)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:name "VOICE")
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:tree
            (:list
             1
             (:list
              (:list
               (:list 5 8)
               (:list
                (:list
                 4
                 (:list
                  1
                  (:list 4 (:list (:list 2 (:list 1 1 1 1)) 1))))
                (:list 1 (:list 1 1 1)))))))
           (:lmidic
            (:list
             (:list 7100)
             (:list 6500)
             (:list 6200)
             (:list 7100)
             (:list 6500)
             (:list 6700)
             (:list 6000)
             (:list 6500)
             (:list 6900)))
           (:lonset
            (:list 0 400 667 933 1200 1467 2000 2167 2333 2500))
           (:ldur
            (:list
             (:list 399)
             (:list 266)
             (:list 265)
             (:list 266)
             (:list 266)
             (:list 532)
             (:list 166)
             (:list 165)
             (:list 166)))
           (:lvel (:list 80))
           (:loffset (:list 0))
           (:lchan (:list 1))
           (:lport (:list nil))
           (:llegato nil)
           (:tempo 60)))))
       (:id 17))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "my-patch")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (503 470)) (:position (128 128)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "in") (:doc "")))
           (:group-id nil)
           (:name "in")
           (:x 115)
           (:y 51)
           (:w 40)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "MIN") (:doc "")))
           (:group-id nil)
           (:name "MIN")
           (:x 217)
           (:y 54)
           (:w 61)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "MAX") (:doc "")))
           (:group-id nil)
           (:name "MAX")
           (:x 343)
           (:y 50)
           (:w 67)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:out (:type omout) (:name "out") (:index 1) (:doc "")))
           (:group-id nil)
           (:name "out")
           (:x 160)
           (:y 386)
           (:w 55)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 3))
          (:box
           (:type :special)
           (:reference and)
           (:group-id nil)
           (:name "and")
           (:x 99)
           (:y 283)
           (:w 74)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "test-forms")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "test-forms")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :function)
           (:reference om<=)
           (:group-id nil)
           (:name "om<=")
           (:x 22)
           (:y 199)
           (:w 101)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NUM1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "NUM2")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :function)
           (:reference om>)
           (:group-id nil)
           (:name "om>")
           (:x 196)
           (:y 204)
           (:w 85)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NUM1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "NUM2")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :special)
           (:reference if)
           (:group-id nil)
           (:name "if")
           (:x 156)
           (:y 333)
           (:w 51)
           (:h 41)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "TEST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "THEN")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 7 :in 1)))
          (:connection (:from (:box 0 :out 0)) (:to (:box 5 :in 1)))
          (:connection (:from (:box 0 :out 0)) (:to (:box 6 :in 1)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 4 :in 1)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 3 :in 0))))))
       (:group-id nil)
       (:name "my-patch")
       (:x 873)
       (:y 452)
       (:w 132)
       (:h 60)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda :lambda)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MIN")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAX")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 895)
       (:y 398)
       (:w 61)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6000)
       (:id 19))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 959)
       (:y 398)
       (:w 61)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 8400)
       (:id 20))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 1135)
       (:y 714)
       (:w 50)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 80)
       (:id 21))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 445)
       (:y 689)
       (:w 84)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 22))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 450)
       (:y 737)
       (:w 70)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 23))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference choose)
       (:group-id nil)
       (:name "choose")
       (:x 365)
       (:y 858)
       (:w 107)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 1 2 3 4 5 6 7 8 9 10))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CHORD-N")
         (:value (:list 1 7 9))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 24))
      (:box
       (:type :function)
       (:reference arithm-ser)
       (:group-id nil)
       (:name "arithm-ser")
       (:x 487)
       (:y 846)
       (:w 144)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "BEGIN")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "END")
         (:value 10)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "STEP")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 25))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 494)
       (:y 811)
       (:w 38)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2)
       (:id 26))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 566)
       (:y 811)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 9)
       (:id 27))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 500)
       (:y 775)
       (:w 100)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 28))
      (:box
       (:type :function)
       (:reference concat)
       (:group-id nil)
       (:name "concat")
       (:x 118)
       (:y 889)
       (:w 103)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "S1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "S2")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 29))
      (:box
       (:type :function)
       (:reference first)
       (:group-id nil)
       (:name "first")
       (:x 73)
       (:y 835)
       (:w 77)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 30))
      (:box
       (:type :function)
       (:reference second)
       (:group-id nil)
       (:name "second")
       (:x 148)
       (:y 834)
       (:w 108)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 31))
      (:box
       (:type :function)
       (:reference third)
       (:group-id nil)
       (:name "third")
       (:x 245)
       (:y 833)
       (:w 84)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 32))
      (:box
       (:type :function)
       (:reference concat)
       (:group-id nil)
       (:name "concat")
       (:x 194)
       (:y 935)
       (:w 103)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "S1")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "S2")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 33))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 720)
       (:y 165)
       (:w 61)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :left)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 4 4))
       (:id 34))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 952)
       (:y 214)
       (:w 39)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 80)
       (:id 35))
      (:box
       (:type :function)
       (:reference n->mc)
       (:group-id nil)
       (:name "n->mc")
       (:x 739)
       (:y 460)
       (:w 105)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SYMB")
         (:value (:list g3))
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "middle-c")
         (:value 4)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 36))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 978)
       (:y 17)
       (:w 500)
       (:h 96)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value
        (:list
         6406
         7900
         7451
         7308
         6868
         6700
         6518
         7606
         6700
         6251
         6108
         8068
         7900
         7718))
       (:id 37))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 463)
       (:y 118)
       (:w 130)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 38))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 525)
       (:y 83)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 4)
       (:id 39))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "interpolation")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (500 500)) (:position (64 64)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 235)
           (:y 543)
           (:w 88)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 1)
             (:name "conjunto de notas")
             (:doc "")))
           (:group-id nil)
           (:name "conjunto de notas")
           (:x 303)
           (:y 152)
           (:w 203)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "perfil") (:doc "")))
           (:group-id nil)
           (:name "perfil")
           (:x 38)
           (:y 147)
           (:w 72)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "nota-mais-próxima")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input")
                 (:doc "")))
               (:group-id nil)
               (:name "input")
               (:x 77)
               (:y 45)
               (:w 73)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 310)
               (:y 409)
               (:w 107)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "input 2")
                 (:doc "")))
               (:group-id nil)
               (:name "input 2")
               (:x 299)
               (:y 41)
               (:w 93)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :abstraction)
               (:reference
                (:textfun
                 (:name "lispfunction 2")
                 (:doc "")
                 (:info
                  (:created nil)
                  (:modified nil)
                  (:by *app-name*)
                  (:version 0))
                 (:window (:size nil) (:position nil))
                 (:text
                  (:list
                   "(lambda (lista-n)"
                   ""
                   "(loop for x in lista-n collect (loop for y in x collect (abs y))))"))))
               (:group-id nil)
               (:name "lispfunction")
               (:x 311)
               (:y 321)
               (:w 172)
               (:h 48)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:lock nil)
               (:lambda nil)
               (:pre-delay 0)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LISTA-N")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 208)
               (:y 306)
               (:w 84)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 4))
              (:box
               (:type :abstraction)
               (:reference
                (:patch
                 (:name "OMLOOP")
                 (:doc "")
                 (:info
                  (:created nil)
                  (:modified nil)
                  (:by *app-name*)
                  (:version 0))
                 (:window (:size nil) (:position nil))
                 (:grid nil)
                 (:lock nil)
                 (:boxes
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 1)
                     (:name "input")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input")
                   (:x 29)
                   (:y 19)
                   (:w 73)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 0))
                  (:box
                   (:type :io)
                   (:reference
                    (:out
                     (:type omout)
                     (:name "output 1")
                     (:index 1)
                     (:doc "")))
                   (:group-id nil)
                   (:name "output 1")
                   (:x 256)
                   (:y 424)
                   (:w 107)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "out-value")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 1))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 2)
                     (:name "input 2")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input 2")
                   (:x 281)
                   (:y 18)
                   (:w 93)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 2))
                  (:box
                   (:type :special)
                   (:reference collect)
                   (:group-id nil)
                   (:name "collect")
                   (:x 194)
                   (:y 269)
                   (:w 84)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.7 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "data-in")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "push")
                     (:value t)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "init")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs
                    (:output (:name "collect") (:reactive nil))
                    (:output (:name "data-out") (:reactive nil))
                    (:output (:name "init") (:reactive nil)))
                   (:id 3))
                  (:box
                   (:type :function)
                   (:reference om-)
                   (:group-id nil)
                   (:name "om-")
                   (:x 142)
                   (:y 195)
                   (:w 78)
                   (:h 41)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "ARG1")
                     (:value 0)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "ARG2")
                     (:value 0)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 4))
                  (:box
                   (:type :special)
                   (:reference iterate)
                   (:group-id nil)
                   (:name "iterate")
                   (:x 128)
                   (:y 420)
                   (:w 88)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.85 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "action")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 5))
                  (:box
                   (:type :special)
                   (:reference loop-list)
                   (:group-id nil)
                   (:name "list-loop")
                   (:x 32)
                   (:y 107)
                   (:w 101)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.85 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "list")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "i") (:reactive nil)))
                   (:id 6)))
                 (:connections
                  (:connection
                   (:from (:box 0 :out 0))
                   (:to (:box 6 :in 0)))
                  (:connection
                   (:from (:box 2 :out 0))
                   (:to (:box 4 :in 1)))
                  (:connection
                   (:from (:box 3 :out 0))
                   (:to (:box 5 :in 0)))
                  (:connection
                   (:from (:box 3 :out 1))
                   (:to (:box 1 :in 0)))
                  (:connection
                   (:from (:box 4 :out 0))
                   (:to (:box 3 :in 0)))
                  (:connection
                   (:from (:box 6 :out 0))
                   (:to (:box 4 :in 0))))))
               (:group-id nil)
               (:name "OMLOOP")
               (:x 109)
               (:y 156)
               (:w 125)
               (:h 58)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:lock nil)
               (:lambda nil)
               (:pre-delay 0)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "input")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "input 2")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "output 1") (:reactive nil)))
               (:id 5))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 173)
               (:y 402)
               (:w 88)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 6))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 297)
               (:y 122)
               (:w 101)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 7)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 5 :in 0)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 4 :out 1))
               (:to (:box 3 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 5 :in 1))))))
           (:group-id nil)
           (:name "nota-mais-próxima")
           (:x 258)
           (:y 270)
           (:w 229)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 2")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 3))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "subtituicao")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input")
                 (:doc "")))
               (:group-id nil)
               (:name "input")
               (:x 38)
               (:y 31)
               (:w 73)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 417)
               (:y 510)
               (:w 107)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "input 2")
                 (:doc "")))
               (:group-id nil)
               (:name "input 2")
               (:x 292)
               (:y 19)
               (:w 93)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "aux 2")
               (:x 137)
               (:y 316)
               (:w 32)
               (:h 41)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 3))
              (:box
               (:type :function)
               (:reference om/=)
               (:group-id nil)
               (:name "om/=")
               (:x 99)
               (:y 346)
               (:w 94)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NUM1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "NUM2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :function)
               (:reference flat)
               (:group-id nil)
               (:name "flat")
               (:x 135)
               (:y 205)
               (:w 70)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :function)
               (:reference length)
               (:group-id nil)
               (:name "length")
               (:x 20)
               (:y 299)
               (:w 100)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SEQUENCE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :special)
               (:reference if)
               (:group-id nil)
               (:name "IF")
               (:x 301)
               (:y 389)
               (:w 62)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "TEST")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "THEN")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "else")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 7))
              (:box
               (:type :function)
               (:reference nth-random)
               (:group-id nil)
               (:name "nth-random")
               (:x 201)
               (:y 301)
               (:w 157)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 8))
              (:box
               (:type :function)
               (:reference list)
               (:group-id nil)
               (:name "list")
               (:x 44)
               (:y 188)
               (:w 66)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 9))
              (:box
               (:type :function)
               (:reference flat)
               (:group-id nil)
               (:name "flat")
               (:x 507)
               (:y 414)
               (:w 70)
               (:h 41)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 10))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 359)
               (:y 399)
               (:w 84)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 11))
              (:box
               (:type :abstraction)
               (:reference
                (:patch
                 (:name "OMLOOP")
                 (:doc "")
                 (:info
                  (:created nil)
                  (:modified nil)
                  (:by *app-name*)
                  (:version 0))
                 (:window (:size nil) (:position nil))
                 (:grid nil)
                 (:lock nil)
                 (:boxes
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 1)
                     (:name "input")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input")
                   (:x 26)
                   (:y 8)
                   (:w 73)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 0))
                  (:box
                   (:type :io)
                   (:reference
                    (:out
                     (:type omout)
                     (:name "output 1")
                     (:index 1)
                     (:doc "")))
                   (:group-id nil)
                   (:name "output 1")
                   (:x 505)
                   (:y 537)
                   (:w 107)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "out-value")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 1))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 2)
                     (:name "input 2")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input 2")
                   (:x 182)
                   (:y 4)
                   (:w 93)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 2))
                  (:box
                   (:type :function)
                   (:reference remove)
                   (:group-id nil)
                   (:name "remove")
                   (:x 519)
                   (:y 473)
                   (:w 114)
                   (:h 41)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "ITEM")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "SEQUENCE")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 3))
                  (:box
                   (:type :special)
                   (:reference collect)
                   (:group-id nil)
                   (:name "collect")
                   (:x 433)
                   (:y 419)
                   (:w 84)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.7 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "data-in")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "push")
                     (:value t)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "init")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs
                    (:output (:name "collect") (:reactive nil))
                    (:output (:name "data-out") (:reactive nil))
                    (:output (:name "init") (:reactive nil)))
                   (:id 4))
                  (:box
                   (:type :special)
                   (:reference if)
                   (:group-id nil)
                   (:name "IF")
                   (:x 176)
                   (:y 310)
                   (:w 89)
                   (:h 41)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "TEST")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "THEN")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 5))
                  (:box
                   (:type :function)
                   (:reference om=)
                   (:group-id nil)
                   (:name "om=")
                   (:x 233)
                   (:y 245)
                   (:w 85)
                   (:h 41)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "NUM1")
                     (:value 0)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "NUM2")
                     (:value 0)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 6))
                  (:box
                   (:library "OM-JI")
                   (:type :function)
                   (:reference choose)
                   (:group-id nil)
                   (:name "choose")
                   (:x 305)
                   (:y 145)
                   (:w 107)
                   (:h 41)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "NOTELIST")
                     (:value
                      (:list (:list 6000 6530) (:list 7203 5049)))
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "CHORD-N")
                     (:value (:list 2))
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 7))
                  (:box
                   (:type :abstraction)
                   (:reference
                    (:textfun
                     (:name "lispfunction")
                     (:doc "")
                     (:info
                      (:created nil)
                      (:modified nil)
                      (:by *app-name*)
                      (:version 0))
                     (:window (:size nil) (:position nil))
                     (:text
                      (:list
                       "(lambda (lista)"
                       "  (apply 'min lista))"))))
                   (:group-id nil)
                   (:name "lispfunction")
                   (:x 204)
                   (:y 117)
                   (:w 152)
                   (:h 48)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:display :mini-view)
                   (:lock nil)
                   (:lambda nil)
                   (:pre-delay 0)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "LISTA")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 8))
                  (:box
                   (:type :function)
                   (:reference arithm-ser)
                   (:group-id nil)
                   (:name "arithm-ser")
                   (:x 489)
                   (:y 195)
                   (:w 144)
                   (:h 41)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "BEGIN")
                     (:value 1)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "END")
                     (:value t)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "STEP")
                     (:value 1)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 9))
                  (:box
                   (:type :function)
                   (:reference length)
                   (:group-id nil)
                   (:name "length")
                   (:x 465)
                   (:y 97)
                   (:w 100)
                   (:h 41)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "SEQUENCE")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 10))
                  (:box
                   (:library "OM-JI")
                   (:type :function)
                   (:reference choose)
                   (:group-id nil)
                   (:name "choose")
                   (:x 42)
                   (:y 209)
                   (:w 124)
                   (:h 41)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "NOTELIST")
                     (:value
                      (:list (:list 6000 6530) (:list 7203 5049)))
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "CHORD-N")
                     (:value (:list 2))
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 11))
                  (:box
                   (:type :special)
                   (:reference iterate)
                   (:group-id nil)
                   (:name "iterate")
                   (:x 400)
                   (:y 536)
                   (:w 88)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.85 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "action")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 12))
                  (:box
                   (:type :special)
                   (:reference loop-list)
                   (:group-id nil)
                   (:name "list-loop")
                   (:x 442)
                   (:y 264)
                   (:w 101)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.85 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "list")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "i") (:reactive nil)))
                   (:id 13)))
                 (:connections
                  (:connection
                   (:from (:box 0 :out 0))
                   (:to (:box 11 :in 0)))
                  (:connection
                   (:from (:box 2 :out 0))
                   (:to (:box 7 :in 0)))
                  (:connection
                   (:from (:box 2 :out 0))
                   (:to (:box 8 :in 0)))
                  (:connection
                   (:from (:box 2 :out 0))
                   (:to (:box 10 :in 0)))
                  (:connection
                   (:from (:box 3 :out 0))
                   (:to (:box 1 :in 0)))
                  (:connection
                   (:from (:box 4 :out 0))
                   (:to (:box 12 :in 0)))
                  (:connection
                   (:from (:box 4 :out 1))
                   (:to (:box 3 :in 1)))
                  (:connection
                   (:from (:box 5 :out 0))
                   (:to (:box 4 :in 0)))
                  (:connection
                   (:from (:box 6 :out 0))
                   (:to (:box 5 :in 0)))
                  (:connection
                   (:from (:box 7 :out 0))
                   (:to (:box 6 :in 1)))
                  (:connection
                   (:from (:box 8 :out 0))
                   (:to (:box 6 :in 0)))
                  (:connection
                   (:from (:box 9 :out 0))
                   (:to (:box 13 :in 0)))
                  (:connection
                   (:from (:box 10 :out 0))
                   (:to (:box 9 :in 1)))
                  (:connection
                   (:from (:box 11 :out 0))
                   (:to (:box 5 :in 1)))
                  (:connection
                   (:from (:box 13 :out 0))
                   (:to (:box 7 :in 1)))
                  (:connection
                   (:from (:box 13 :out 0))
                   (:to (:box 11 :in 1))))))
               (:group-id nil)
               (:name "OMLOOP")
               (:x 150)
               (:y 119)
               (:w 125)
               (:h 48)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:lock nil)
               (:lambda nil)
               (:pre-delay 0)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "input")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "input 2")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "output 1") (:reactive nil)))
               (:id 12))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 308)
               (:y 496)
               (:w 88)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 13))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 290)
               (:y 105)
               (:w 101)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 14)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 12 :in 0)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 4 :in 1)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 11 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 7 :in 1)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 5 :in 0)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 13 :in 0)))
              (:connection
               (:from (:box 11 :out 1))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 7 :in 2)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 9 :in 0)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 12 :in 1))))))
           (:group-id nil)
           (:name "subtituicao")
           (:x 236)
           (:y 377)
           (:w 147)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 2")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 4)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 1)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 1)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 0 :in 0))))))
       (:group-id nil)
       (:name "interpolation")
       (:x 1111)
       (:y 1303/3)
       (:w 163)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "conjunto de notas")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "perfil")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 40))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference range-reduce)
       (:group-id nil)
       (:name "range-reduce")
       (:x 1099)
       (:y 163)
       (:w 172)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 4800 7200 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GRAVE")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "AGUDA")
         (:value 7902)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 41))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 1145)
       (:y 128)
       (:w 61)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6700)
       (:id 42))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 1221)
       (:y 127)
       (:w 61)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 7900)
       (:id 43))
      (:box
       (:type :function)
       (:reference om+)
       (:group-id nil)
       (:name "om+")
       (:x 1167)
       (:y 282)
       (:w 85)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda :lambda)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 44))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 1296)
       (:y 320)
       (:w 113)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 45))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 1343)
       (:y 285)
       (:w 200)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list -1200 0 1200 2400))
       (:id 46))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 1341)
       (:y 423)
       (:w 70)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 47))
      (:box
       (:type :function)
       (:reference arithm-ser)
       (:group-id nil)
       (:name "arithm-ser")
       (:x 1403)
       (:y 574)
       (:w 144)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "BEGIN")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "END")
         (:value 10)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "STEP")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 48))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 1381)
       (:y 507)
       (:w 50)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 50)
       (:id 49))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 1437)
       (:y 511)
       (:w 50)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 100)
       (:id 50))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 1492)
       (:y 527)
       (:w 39)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6)
       (:id 51))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 1482)
       (:y 643)
       (:w 100)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 52))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference range-reduce)
       (:group-id nil)
       (:name "range-reduce")
       (:x 906)
       (:y 541)
       (:w 172)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 4800 7200 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GRAVE")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "AGUDA")
         (:value 7902)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 53))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 999)
       (:y 506)
       (:w 61)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 7200)
       (:id 54))
      (:box
       (:type :object)
       (:reference voice)
       (:group-id nil)
       (:name nil)
       (:x 701)
       (:y 845)
       (:w 80)
       (:h 50)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TREE")
         (:value (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list (:list 6000)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEMPO")
         (:value 60)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "TREE") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "TEMPO") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params
        (:time-map
         (:list
          (:list -1000 0)
          (:list 0 7.5)
          (:list 107 10.857142)
          (:list 214 14.214285)
          (:list 321 17.571427)
          (:list 429 20.92857)
          (:list 536 24.285714)
          (:list 643 27.642857)
          (:list 750 31.0)
          (:list 900 34.5)
          (:list 1050 38.0)
          (:list 1200 41.5)
          (:list 1350 45.0)
          (:list 1500 48.5)
          (:list 1625 51.916668)
          (:list 1750 55.333336)
          (:list 1875 58.750004)
          (:list 2000 62.16667)
          (:list 2125 65.58334)
          (:list 2250 69.00001)
          (:list 2357 72.35715)
          (:list 2464 75.71429)
          (:list 2571 79.07143)
          (:list 2679 82.428566)
          (:list 2786 85.785706)
          (:list 2893 89.142845))))
       (:value
        (:object
         (:class voice)
         (:slots
          ((:onset 0)
           (:duration 2999)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:name "VOICE")
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:tree
            (:list
             1
             (:list
              (:list
               (:list 4 4)
               (:list
                (:list 1 (:list 1 1 1 1 1 1 1))
                (:list 1 (:list 1 1 1 1 1))
                (:list 1 (:list 1 1 1 1 1 1))
                (:list 1 (:list 1 1 1 1 1 1 1)))))))
           (:lmidic (:list 6000))
           (:lonset
            (:list
             0
             107
             214
             321
             429
             536
             643
             750
             900
             1050
             1200
             1350
             1500
             1625
             1750
             1875
             2000
             2125
             2250
             2357
             2464
             2571
             2679
             2786
             2893
             3000))
           (:ldur
            (:list
             (:list 106)
             (:list 106)
             (:list 106)
             (:list 107)
             (:list 106)
             (:list 106)
             (:list 106)
             (:list 149)
             (:list 149)
             (:list 149)
             (:list 149)
             (:list 149)
             (:list 124)
             (:list 124)
             (:list 124)
             (:list 124)
             (:list 124)
             (:list 124)
             (:list 106)
             (:list 106)
             (:list 106)
             (:list 107)
             (:list 106)
             (:list 106)
             (:list 106)))
           (:lvel (:list 100))
           (:loffset (:list 0))
           (:lchan (:list 1))
           (:lport (:list nil))
           (:llegato nil)
           (:tempo 80)))))
       (:id 55))
      (:box
       (:type :function)
       (:reference permut-random)
       (:group-id nil)
       (:name "permut-random")
       (:x 1170)
       (:y 582)
       (:w 196)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 56))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 1257)
       (:y 924)
       (:w 70)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 57))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference choose)
       (:group-id nil)
       (:name "choose")
       (:x 216)
       (:y 307)
       (:w 107)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CHORD-N")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 58))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 270)
       (:y 272)
       (:w 32)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 59))
      (:box
       (:type :function)
       (:reference permut-random)
       (:group-id nil)
       (:name "permut-random")
       (:x 1255)
       (:y 671)
       (:w 196)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 60))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 1509)
       (:y 799)
       (:w 130)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 61))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 1571)
       (:y 764)
       (:w 39)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 12)
       (:id 62))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 1557)
       (:y 707)
       (:w 155)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 3)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 63))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 867)
       (:y 605)
       (:w 70)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 64))
      (:box
       (:library "OM-Sieves")
       (:type :function)
       (:reference s-union-l)
       (:group-id nil)
       (:name "s-union-l")
       (:x 1525)
       (:y 146)
       (:w 127)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SIEVE")
         (:value (:list (:list 19 16 64) (:list 11 16 64)))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 65))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 1471)
       (:y 111)
       (:w 224)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list (:list 19 16 64) (:list 11 16 64)))
       (:id 66))
      (:box
       (:library "OM-Sieves")
       (:type :function)
       (:reference revel-sieve)
       (:group-id nil)
       (:name "revel-sieve")
       (:x 1479)
       (:y 198)
       (:w 148)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 67))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference diamond-identity)
       (:group-id nil)
       (:name "diamond-identity")
       (:x 1407)
       (:y 240)
       (:w 209)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "IDENTITY")
         (:value (:list 11 19 97))
         (:reactive nil)))
       (:outputs
        (:output (:name "out0") (:reactive nil))
        (:output (:name "out1") (:reactive nil)))
       (:id 68))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference choose)
       (:group-id nil)
       (:name "choose")
       (:x 1309)
       (:y 233)
       (:w 107)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value 5)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CHORD-N")
         (:value 6)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 69))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference rt->mc)
       (:group-id nil)
       (:name "rt->mc")
       (:x 1351)
       (:y 149)
       (:w 109)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FUNDAMENTAL")
         (:value 6700)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 70))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 881)
       (:y 570)
       (:w 500)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value
        (:list
         (:list 6500)
         (:list 6400)
         (:list 6000)
         (:list 6400)
         (:list 6500)
         (:list 6000)))
       (:id 71)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 0 :out 2)) (:to (:box 57 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 3 :out 1)) (:to (:box 58 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 38 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 14 :in 0)))
      (:connection
       (:from (:box 13 :out 1))
       (:to (:box 16 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection (:from (:box 13 :out 1)) (:to (:box 22 :in 0)))
      (:connection
       (:from (:box 14 :out 0))
       (:to (:box 13 :in 1))
       (:attributes (:color nil :style nil :modif (-47/163 0))))
      (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 1)))
      (:connection (:from (:box 17 :out 1)) (:to (:box 0 :in 1)))
      (:connection (:from (:box 17 :out 2)) (:to (:box 53 :in 0)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 18 :in 2)))
      (:connection (:from (:box 21 :out 0)) (:to (:box 0 :in 3)))
      (:connection (:from (:box 22 :out 1)) (:to (:box 23 :in 0)))
      (:connection (:from (:box 23 :out 0)) (:to (:box 24 :in 0)))
      (:connection (:from (:box 23 :out 0)) (:to (:box 28 :in 0)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 32 :in 0)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 31 :in 0)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 30 :in 0)))
      (:connection
       (:from (:box 25 :out 0))
       (:to (:box 24 :in 1))
       (:attributes (:color nil :style nil :modif (7/37 0))))
      (:connection (:from (:box 26 :out 0)) (:to (:box 25 :in 0)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 25 :in 2)))
      (:connection (:from (:box 28 :out 0)) (:to (:box 25 :in 1)))
      (:connection (:from (:box 29 :out 0)) (:to (:box 33 :in 0)))
      (:connection (:from (:box 30 :out 0)) (:to (:box 29 :in 0)))
      (:connection (:from (:box 31 :out 0)) (:to (:box 29 :in 1)))
      (:connection (:from (:box 32 :out 0)) (:to (:box 33 :in 1)))
      (:connection (:from (:box 33 :out 0)) (:to (:box 55 :in 0)))
      (:connection (:from (:box 34 :out 0)) (:to (:box 11 :in 1)))
      (:connection (:from (:box 35 :out 0)) (:to (:box 12 :in 3)))
      (:connection (:from (:box 38 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 39 :out 0)) (:to (:box 38 :in 1)))
      (:connection (:from (:box 40 :out 0)) (:to (:box 0 :in 2)))
      (:connection (:from (:box 41 :out 0)) (:to (:box 44 :in 1)))
      (:connection (:from (:box 42 :out 0)) (:to (:box 41 :in 1)))
      (:connection (:from (:box 43 :out 0)) (:to (:box 41 :in 2)))
      (:connection (:from (:box 44 :out 0)) (:to (:box 45 :in 0)))
      (:connection (:from (:box 45 :out 0)) (:to (:box 47 :in 0)))
      (:connection (:from (:box 46 :out 0)) (:to (:box 45 :in 1)))
      (:connection (:from (:box 47 :out 0)) (:to (:box 40 :in 1)))
      (:connection (:from (:box 47 :out 0)) (:to (:box 56 :in 0)))
      (:connection (:from (:box 48 :out 0)) (:to (:box 52 :in 0)))
      (:connection (:from (:box 48 :out 0)) (:to (:box 60 :in 0)))
      (:connection (:from (:box 49 :out 0)) (:to (:box 48 :in 0)))
      (:connection (:from (:box 50 :out 0)) (:to (:box 48 :in 1)))
      (:connection (:from (:box 51 :out 0)) (:to (:box 48 :in 2)))
      (:connection (:from (:box 54 :out 0)) (:to (:box 53 :in 2)))
      (:connection (:from (:box 58 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 59 :out 0)) (:to (:box 58 :in 1)))
      (:connection (:from (:box 60 :out 0)) (:to (:box 0 :in 4)))
      (:connection (:from (:box 61 :out 0)) (:to (:box 0 :in 6)))
      (:connection (:from (:box 62 :out 0)) (:to (:box 61 :in 1)))
      (:connection (:from (:box 63 :out 0)) (:to (:box 61 :in 0)))
      (:connection (:from (:box 64 :out 0)) (:to (:box 40 :in 0)))
      (:connection (:from (:box 65 :out 0)) (:to (:box 67 :in 0)))
      (:connection (:from (:box 66 :out 0)) (:to (:box 65 :in 0)))
      (:connection (:from (:box 67 :out 0)) (:to (:box 68 :in 0)))
      (:connection (:from (:box 68 :out 0)) (:to (:box 69 :in 0)))
      (:connection (:from (:box 69 :out 0)) (:to (:box 70 :in 0)))
      (:connection (:from (:box 70 :out 0)) (:to (:box 41 :in 0)))
      (:connection (:from (:box 71 :out 0)) (:to (:box 64 :in 0))))))
   (:group-id nil)
   (:name "Micropolifonia")
   (:x 1360)
   (:y 500)
   (:w 175)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs)
   (:id 50))
  (:box
   (:type :abstraction)
   (:reference
    (:patch-from-file
     (:pathname
      (:directory (:relative))
      (:device nil)
      (:host "C")
      (:name "espectro-Bass-filter")
      (:type "opat"))))
   (:group-id nil)
   (:name "espectro-Bass-filter")
   (:x 1357)
   (:y 572)
   (:w 234)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs)
   (:id 51))
  (:box
   (:type :abstraction)
   (:reference
    (:patch-from-file
     (:pathname
      (:directory (:relative))
      (:device nil)
      (:host "C")
      (:name "Cacador de espectro - v3")
      (:type "opat"))))
   (:group-id nil)
   (:name "Cacador de espectro - v3")
   (:x 1352)
   (:y 716)
   (:w 291)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs)
   (:id 52))
  (:box
   (:type :abstraction)
   (:reference
    (:patch-from-file
     (:pathname
      (:directory (:relative))
      (:device nil)
      (:host "C")
      (:name "Processamento de timbres - atualizado")
      (:type "opat"))))
   (:group-id nil)
   (:name "Processamento de timbres - atualizado")
   (:x 1341)
   (:y 806)
   (:w 431)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs)
   (:id 53))
  (:box
   (:type :function)
   (:reference reverse)
   (:group-id nil)
   (:name "reverse")
   (:x 1043)
   (:y 482)
   (:w 113)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 54))
  (:box
   (:type :object)
   (:reference bpf)
   (:group-id nil)
   (:name nil)
   (:x 908)
   (:y 541)
   (:w 395)
   (:h 140)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 2000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 10000.0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.0S0 0.0S0 0.0S0 1.0))
       (:decimals 2)
       (:x-points (:list 0.0 2000.0 4000.0 6000.0 8000.0 10000.0))
       (:y-points (:list 4.2 3.0 11.0 1.0 7.4 8.2))))
     (:add-slots ((:name "BPF")))))
   (:id 55))
  (:box
   (:type :abstraction)
   (:reference
    (:textfun
     (:name "lispfunction")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:text
      (:list
       ""
       "(lambda (series octave-adj) "
       ""
       ""
       "(let*"
       "("
       "(12tone (flat series))"
       "(seriesint (om::x->dx 12tone))"
       "(invseriesint (loop for x in seriesint collect (* -1 x)))"
       "(invresult (om::dx->x (first 12tone) invseriesint))"
       ")"
       "(reverse (loop for x in invresult collect (+ x octave-adj)))"
       "))"))))
   (:group-id nil)
   (:name "lispfunction")
   (:x 1131)
   (:y 749)
   (:w 152)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "SERIES")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "OCTAVE-ADJ")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 56))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 1224)
   (:y 714)
   (:w 38)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 57))
  (:box
   (:type :object)
   (:reference bpf)
   (:group-id nil)
   (:name nil)
   (:x 865)
   (:y 801)
   (:w 395)
   (:h 140)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 2000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 10000.0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.0S0 0.0S0 0.0S0 1.0))
       (:decimals 2)
       (:x-points (:list 0.0 2000.0 4000.0 6000.0 8000.0 10000.0))
       (:y-points (:list 0.2 1.0 7.4 -2.6 5.4 4.2))))
     (:add-slots ((:name "BPF")))))
   (:id 58))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 474)
   (:y 368)
   (:w 32)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2)
   (:id 59))
  (:box
   (:type :function)
   (:reference n->mc)
   (:group-id nil)
   (:name "n->mc")
   (:x 270)
   (:y 753)
   (:w 105)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SYMB")
     (:value (:list "C3"))
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "middle-c")
     (:value 3)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 60))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 316)
   (:y 718)
   (:w 32)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 61))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 221)
   (:y 685)
   (:w 87)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list "G#5"))
   (:id 62))
  (:box
   (:type :function)
   (:reference om-)
   (:group-id nil)
   (:name "om-")
   (:x 302)
   (:y 839)
   (:w 78)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda :lambda)
   (:inputs
    (:input
     (:type :standard)
     (:name "ARG1")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 63))
  (:box
   (:type :function)
   (:reference mapcar)
   (:group-id nil)
   (:name "mapcar")
   (:x 395)
   (:y 927)
   (:w 113)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FUNCTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 64))
  (:box
   (:type :function)
   (:reference om*)
   (:group-id nil)
   (:name "om*")
   (:x 203)
   (:y 946)
   (:w 82)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ARG1")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 65))
  (:box
   (:type :value)
   (:reference single-float)
   (:group-id nil)
   (:name "value box")
   (:x 241)
   (:y 911)
   (:w 66)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0.01)
   (:id 66))
  (:box
   (:type :function)
   (:reference om-round)
   (:group-id nil)
   (:name "om-round")
   (:x 25)
   (:y 934)
   (:w 136)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 1) (:reactive nil))
    (:input
     (:type :optional)
     (:name "decimals")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 67))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 94)
   (:y 899)
   (:w 32)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 68))
  (:box
   (:type :function)
   (:reference flat)
   (:group-id nil)
   (:name "flat")
   (:x 61)
   (:y 874)
   (:w 70)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 69))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "texturas")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1194 712)) (:position (606 453)))
     (:grid nil)
     (:lock nil)
     (:boxes)
     (:connections)))
   (:group-id nil)
   (:name "texturas")
   (:x 1693)
   (:y 415)
   (:w 159)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs)
   (:id 70))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "new-patch")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1535 713)) (:position (64 64)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :object)
       (:reference voice)
       (:group-id nil)
       (:name nil)
       (:x 479)
       (:y 178)
       (:w 593)
       (:h 235)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TREE")
         (:value (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list (:list 6000)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEMPO")
         (:value 60)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "TREE") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "TEMPO") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params
        (:time-map
         (:list
          (:list -1000 0)
          (:list 0 7.5)
          (:list 562 12.375)
          (:list 750 16.0)
          (:list 1125 19.625)
          (:list 1500 23.875)
          (:list 2250 29.375))))
       (:value
        (:object
         (:class voice)
         (:slots
          ((:onset 0)
           (:duration 2999)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:name "VOICE")
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:tree
            (:list
             1
             (:list
              (:list
               (:list 4 4)
               (:list
                (:list 1 (:list 3 1))
                (:list 1 (:list 1.0 1))
                1
                1)))))
           (:lmidic (:list 6000))
           (:lonset (:list 0 562 1125 1500 2250 3000))
           (:ldur
            (:list
             (:list 561)
             (:list 562)
             (:list 374)
             (:list 749)
             (:list 749)))
           (:lvel (:list 100))
           (:loffset (:list 0))
           (:lchan (:list 1))
           (:lport (:list nil))
           (:llegato nil)
           (:tempo 80)))))
       (:id 0))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 595)
       (:y 142)
       (:w 353)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value
        (:list
         1
         (:list
          (:list
           (:list 4 4)
           (:list
            (:list 1 (:list 3 1))
            (:list 1 (:list 1.0 1))
            1
            1)))))
       (:id 1))
      (:box
       (:type :function)
       (:reference true-durations)
       (:group-id nil)
       (:name "true-durations")
       (:x 476)
       (:y 435)
       (:w 182)
       (:h 41)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "CKN")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 965)
       (:y 143)
       (:w 39)
       (:h 41)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 80)
       (:id 3)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 0 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 0 :in 3))))))
   (:group-id nil)
   (:name "new-patch")
   (:x 1611)
   (:y 300)
   (:w 142)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs)
   (:id 71)))
 (:connections
  (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 0)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 10 :in 0)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 27 :in 0)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 35 :in 1)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 30 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 18 :in 0)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 11 :in 0)))
  (:connection (:from (:box 10 :out 1)) (:to (:box 11 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 0)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 14 :in 0)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 12 :in 1)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 9 :in 0)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 1)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 9 :in 1)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 9 :in 2)))
  (:connection (:from (:box 20 :out 2)) (:to (:box 54 :in 0)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 22 :in 0)))
  (:connection (:from (:box 22 :out 0)) (:to (:box 20 :in 2)))
  (:connection (:from (:box 23 :out 0)) (:to (:box 22 :in 1)))
  (:connection (:from (:box 24 :out 0)) (:to (:box 22 :in 2)))
  (:connection (:from (:box 25 :out 0)) (:to (:box 26 :in 0)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 21 :in 0)))
  (:connection (:from (:box 28 :out 0)) (:to (:box 44 :in 0)))
  (:connection (:from (:box 29 :out 0)) (:to (:box 28 :in 1)))
  (:connection
   (:from (:box 30 :out 1))
   (:to (:box 28 :in 0))
   (:attributes (:color nil :style nil :modif (0 17/81))))
  (:connection (:from (:box 32 :out 0)) (:to (:box 26 :in 1)))
  (:connection (:from (:box 33 :out 0)) (:to (:box 26 :in 2)))
  (:connection (:from (:box 34 :out 0)) (:to (:box 31 :in 0)))
  (:connection (:from (:box 35 :out 1)) (:to (:box 46 :in 0)))
  (:connection (:from (:box 36 :out 0)) (:to (:box 35 :in 0)))
  (:connection
   (:from (:box 39 :out 0))
   (:to (:box 47 :in 0))
   (:attributes (:color nil :style nil :modif (0 -0.10844155))))
  (:connection (:from (:box 39 :out 0)) (:to (:box 49 :in 1)))
  (:connection (:from (:box 40 :out 0)) (:to (:box 39 :in 1)))
  (:connection (:from (:box 41 :out 0)) (:to (:box 48 :in 0)))
  (:connection (:from (:box 42 :out 0)) (:to (:box 41 :in 1)))
  (:connection (:from (:box 43 :out 0)) (:to (:box 38 :in 2)))
  (:connection (:from (:box 44 :out 0)) (:to (:box 41 :in 0)))
  (:connection (:from (:box 45 :out 0)) (:to (:box 44 :in 1)))
  (:connection (:from (:box 46 :out 0)) (:to (:box 39 :in 0)))
  (:connection (:from (:box 47 :out 0)) (:to (:box 38 :in 1)))
  (:connection (:from (:box 47 :out 0)) (:to (:box 64 :in 1)))
  (:connection (:from (:box 48 :out 0)) (:to (:box 38 :in 0)))
  (:connection (:from (:box 54 :out 0)) (:to (:box 55 :in 2)))
  (:connection (:from (:box 55 :out 2)) (:to (:box 56 :in 0)))
  (:connection (:from (:box 56 :out 0)) (:to (:box 58 :in 2)))
  (:connection (:from (:box 57 :out 0)) (:to (:box 56 :in 1)))
  (:connection (:from (:box 59 :out 0)) (:to (:box 46 :in 1)))
  (:connection (:from (:box 60 :out 0)) (:to (:box 63 :in 1)))
  (:connection (:from (:box 61 :out 0)) (:to (:box 60 :in 1)))
  (:connection (:from (:box 62 :out 0)) (:to (:box 60 :in 0)))
  (:connection (:from (:box 63 :out 0)) (:to (:box 64 :in 0)))
  (:connection (:from (:box 64 :out 0)) (:to (:box 65 :in 0)))
  (:connection (:from (:box 65 :out 0)) (:to (:box 67 :in 0)))
  (:connection (:from (:box 66 :out 0)) (:to (:box 65 :in 1)))
  (:connection (:from (:box 67 :out 0)) (:to (:box 69 :in 0)))
  (:connection (:from (:box 68 :out 0)) (:to (:box 67 :in 1)))))