
(:patch
 (:name "WILSON - Hexany triads")
 (:doc "")
 (:info
  (:created "2020/09/11 16:04:29")
  (:modified "2020/12/08 15:45:03")
  (:by "om-sharp")
  (:version 1.01))
 (:window (:size (1400 856)) (:position (0 0)))
 (:grid nil)
 (:lock t)
 (:boxes
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 3")
   (:x 326)
   (:y 367)
   (:w 69)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6500)
   (:id 0))
  (:comment
   (:x 3392/3)
   (:y 409/3)
   (:w 179)
   (:h 56)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Georgia") (:size 16) (:style :plain)))
     (:t-or-nil t)))
   (:align nil)
   (:text "Tríades Harmônicas.")
   (:id 1))
  (:comment
   (:x 3236/3)
   (:y 940/3)
   (:w 173)
   (:h 56)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Georgia") (:size 16) (:style :plain)))
     (:t-or-nil t)))
   (:align nil)
   (:text "Converte razões para midicents.")
   (:id 2))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt->mc)
   (:group-id nil)
   (:name "rt->mc")
   (:x 2879/3)
   (:y 925/3)
   (:w 109)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FUNDAMENTAL")
     (:value 6500)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ 2")
   (:x 2723/3)
   (:y 1198/3)
   (:w 307)
   (:h 86)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 9))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 4000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "CHORD-SEQ 2")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:lmidic
        (:list
         (:list 7349 7517 6754)
         (:list 7349 6571 7008)
         (:list 7517 6571 7176)
         (:list 6754 7008 7176)))
       (:lonset (:list 0 1000 2000 3000 4000))
       (:ldur (:list 1000 1000 1000))
       (:lvel (:list 100 100 100))
       (:loffset (:list 0 0 0))
       (:lchan (:list 9 9 9))
       (:lport (:list nil nil nil))
       (:llegato nil)))))
   (:id 4))
  (:comment
   (:x 1187/3)
   (:y 1168/3)
   (:w 173)
   (:h 56)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Georgia") (:size 16) (:style :plain)))
     (:t-or-nil t)))
   (:align nil)
   (:text "Converte razões para midicents.")
   (:id 5))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt->mc)
   (:group-id nil)
   (:name "rt->mc")
   (:x 842/3)
   (:y 1228/3)
   (:w 109)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FUNDAMENTAL")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 276)
   (:y 462)
   (:w 307)
   (:h 86)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 9))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 4000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "CHORD-SEQ")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:lmidic
        (:list
         (:list 6571 7008 7176)
         (:list 7517 6754 7176)
         (:list 7349 6754 7008)
         (:list 7349 7517 6571)))
       (:lonset (:list 0 1000 2000 3000 4000))
       (:ldur (:list 1000 1000 1000))
       (:lvel (:list 100 100 100))
       (:loffset (:list 0 0 0))
       (:lchan (:list 9 9 9))
       (:lport (:list nil nil nil))
       (:llegato nil)))))
   (:id 7))
  (:comment
   (:x 1982/3)
   (:y 832/3)
   (:w 237)
   (:h 32)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Georgia") (:size 16) (:style :plain)))
     (:t-or-nil t)))
   (:align nil)
   (:text "Tríades sub-harmônicas.")
   (:id 8))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "TEXT-BOX 2")
   (:x 559)
   (:y 128)
   (:w 567)
   (:h 91)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value "untitled")
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     (:list 209/128 1843/1024 37943/32768)
     (:list 209/128 1067/1024 21967/16384)
     (:list 1843/1024 1067/1024 193709/131072)
     (:list 37943/32768 21967/16384 193709/131072)))
   (:id 9))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "TEXT-BOX")
   (:x 92)
   (:y 225)
   (:w 567)
   (:h 134)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value "untitled")
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value
    (:list
     (:list 1067/1024 21967/16384 193709/131072)
     (:list 1843/1024 37943/32768 193709/131072)
     (:list 209/128 37943/32768 21967/16384)
     (:list 209/128 1843/1024 1067/1024)))
   (:id 10))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 2")
   (:x 228)
   (:y 55)
   (:w 184)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 19 11 97 1997))
   (:id 11))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference hexany-triads)
   (:group-id nil)
   (:name "hexany-triads")
   (:x 617/3)
   (:y 319/3)
   (:w 229)
   (:h 41)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "HARMONICOS")
     (:value 1)
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 12))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 1037)
   (:y 252)
   (:w 69)
   (:h 41)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6500)
   (:id 13)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 6 :in 1)))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 4 :in 1))
   (:attributes
    (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 7 :in 1))
   (:attributes
    (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 3 :in 0))
   (:attributes
    (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 10 :out 0))
   (:to (:box 6 :in 0))
   (:attributes
    (:color
     (:color 1.0S0 0.0S0 0.0S0 1.0)
     :style
     nil
     :modif
     (0 -69/238))))
  (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 0)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 10 :in 0))
   (:attributes
    (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 1))
   (:to (:box 9 :in 0))
   (:attributes
    (:color
     (:color 0.0S0 0.0S0 1.0S0 1.0)
     :style
     nil
     :modif
     (-426/1447 0))))
  (:connection (:from (:box 13 :out 0)) (:to (:box 3 :in 1)))))